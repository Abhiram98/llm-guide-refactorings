[
  {
    "source_class": "org.apache.flink.kubernetes.highavailability.KubernetesCheckpointIDCounter",
    "source_method": "getCurrentCounter",
    "target_class": "org.apache.flink.kubernetes.kubeclient.resources.KubernetesConfigMap"
  },
  {
    "source_class": "org.apache.flink.kubernetes.highavailability.KubernetesLeaderElectionDriver",
    "source_method": "updateConfigMapWithLeaderInformation",
    "target_class": "org.apache.flink.runtime.leaderelection.LeaderInformation):java.util.function.Function<org.apache.flink.kubernetes.kubeclient.resources.KubernetesConfigMap,java.util.Optional<org.apache.flink.kubernetes.kubeclient.resources.KubernetesConfigMap>> \t org.apache.flink.kubernetes.kubeclient.resources.KubernetesLeaderElector"
  },
  {
    "source_class": "org.apache.flink.kubernetes.highavailability.KubernetesLeaderElectionDriver",
    "source_method": "extractLeaderInformation",
    "target_class": "org.apache.flink.kubernetes.utils.KubernetesUtils"
  },
  {
    "source_class": "org.apache.flink.kubernetes.highavailability.KubernetesStateHandleStore",
    "source_method": "deserializeStateHandle",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.kubernetes.highavailability.KubernetesStateHandleStore",
    "source_method": "serializeStateHandle",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.kubernetes.highavailability.KubernetesStateHandleStore",
    "source_method": "updateConfigMap",
    "target_class": "org.apache.flink.kubernetes.kubeclient.FlinkKubeClient"
  },
  {
    "source_class": "org.apache.flink.kubernetes.highavailability.KubernetesLeaderRetrievalDriverFactory",
    "source_method": "extractLeaderInformation",
    "target_class": "org.apache.flink.kubernetes.kubeclient.resources.KubernetesConfigMap"
  },
  {
    "source_class": "org.apache.flink.kubernetes.configuration.KubernetesConfigOptions",
    "source_method": "getDefaultFlinkImage",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation"
  },
  {
    "source_class": "org.apache.flink.kubernetes.configuration.KubernetesConfigOptions",
    "source_method": "getDeprecatedKeys",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.decorators.FlinkConfMountDecorator",
    "source_method": "getClusterSidePropertiesMap",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.decorators.FlinkConfMountDecorator",
    "source_method": "getLocalLogConfFiles",
    "target_class": "org.apache.flink.kubernetes.kubeclient.parameters.AbstractKubernetesParameters"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.decorators.CmdTaskManagerDecorator",
    "source_method": "getTaskManagerStartCommand",
    "target_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.decorators.PodTemplateMountDecorator",
    "source_method": "getTaskManagerPodTemplateFile",
    "target_class": "org.apache.flink.kubernetes.kubeclient.parameters.AbstractKubernetesParameters"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.decorators.CmdJobManagerDecorator",
    "source_method": "getJobManagerStartCommand",
    "target_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.factory.KubernetesTaskManagerFactory",
    "source_method": "buildTaskManagerKubernetesPod",
    "target_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters):org.apache.flink.kubernetes.kubeclient.resources.KubernetesPod \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.factory.KubernetesJobManagerFactory",
    "source_method": "buildKubernetesJobManagerSpecification",
    "target_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters):org.apache.flink.kubernetes.kubeclient.KubernetesJobManagerSpecification \t org.apache.flink.kubernetes.kubeclient.decorators.KubernetesStepDecorator"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.factory.KubernetesJobManagerFactory",
    "source_method": "createJobManagerDeployment",
    "target_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters):org.apache.flink.kubernetes.kubeclient.factory.Deployment \t org.apache.flink.kubernetes.utils.KubernetesUtils"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.services.ServiceType",
    "source_method": "classify",
    "target_class": "org.apache.flink.kubernetes.configuration.KubernetesConfigOptions.ServiceExposedType"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.resources.KubernetesConfigMapSharedInformer",
    "source_method": "getInformabaleConfigMaps",
    "target_class": "java.lang.String):org.apache.flink.kubernetes.kubeclient.resources.Informable<org.apache.flink.kubernetes.kubeclient.resources.ConfigMap> \t org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.resources.KubernetesLeaderElector",
    "source_method": "hasLeadership",
    "target_class": "java.lang.String):boolean \t org.apache.flink.kubernetes.kubeclient.resources.KubernetesConfigMap"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.AbstractKubernetesParameters",
    "source_method": "isHostNetworkEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters",
    "source_method": "getTaskManagerMemoryMB",
    "target_class": "org.apache.flink.runtime.clusterframework.ContaineredTaskManagerParameters"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters",
    "source_method": "getTaskManagerCPU",
    "target_class": "org.apache.flink.runtime.clusterframework.ContaineredTaskManagerParameters"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters",
    "source_method": "getTaskManagerCPULimitFactor",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters",
    "source_method": "getTaskManagerMemoryLimitFactor",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters",
    "source_method": "getTaskManagerExternalResources",
    "target_class": "org.apache.flink.runtime.clusterframework.ContaineredTaskManagerParameters"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters",
    "source_method": "getServiceAccount",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters",
    "source_method": "getNodeNameLabel",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters",
    "source_method": "getEntrypointArgs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getPodTemplateFilePath",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getOwnerReference",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getRestServiceAnnotations",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getJobManagerMemoryMB",
    "target_class": "org.apache.flink.client.deployment.ClusterSpecification"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getJobManagerCPU",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getJobManagerCPULimitFactor",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getJobManagerMemoryLimitFactor",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getRestPort",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getRestBindPort",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getRPCPort",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getServiceAccount",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getEntrypointClass",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getRestServiceExposedType",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getReplicas",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters",
    "source_method": "getEntrypointArgs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.taskmanager.KubernetesTaskExecutorRunner",
    "source_method": "runTaskManagerSecurely",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner"
  },
  {
    "source_class": "org.apache.flink.kubernetes.KubernetesWorkerNode",
    "source_method": "getAttempt",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceID"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "checkAndUpdatePortConfigOption",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.String>, int):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "parsePort",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.String>):java.lang.Integer \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "getOnlyConfigMap",
    "target_class": "java.lang.String):org.apache.flink.kubernetes.kubeclient.resources.KubernetesConfigMap \t org.apache.flink.kubernetes.kubeclient.resources.KubernetesConfigMap"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "getLeaderInformationFromConfigMap",
    "target_class": "org.apache.flink.runtime.leaderelection.LeaderInformation"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "createJobGraphStore",
    "target_class": "org.apache.flink.kubernetes.kubeclient.FlinkKubeClient, java.lang.String, java.lang.String):org.apache.flink.runtime.jobmanager.JobGraphStore \t org.apache.flink.kubernetes.highavailability.KubernetesJobGraphStoreUtil"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "createJobGraphStateHandleStore",
    "target_class": "org.apache.flink.kubernetes.kubeclient.FlinkKubeClient, java.lang.String, java.lang.String):org.apache.flink.kubernetes.highavailability.KubernetesStateHandleStore<org.apache.flink.runtime.jobgraph.JobGraph> \t org.apache.flink.runtime.highavailability.HighAvailabilityServicesUtils"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "createCompletedCheckpointStore",
    "target_class": "org.apache.flink.kubernetes.kubeclient.FlinkKubeClient, java.util.concurrent.Executor, java.lang.String, java.lang.String, int, org.apache.flink.runtime.state.SharedStateRegistryFactory, java.util.concurrent.Executor, org.apache.flink.runtime.jobgraph.RestoreMode):org.apache.flink.runtime.checkpoint.CompletedCheckpointStore \t org.apache.flink.runtime.highavailability.HighAvailabilityServicesUtils"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "getResourceRequirements",
    "target_class": "int, double, double, double, java.util.Map<java.lang.String,org.apache.flink.api.common.resources.ExternalResource>, java.util.Map<java.lang.String,java.lang.String>):org.apache.flink.kubernetes.utils.ResourceRequirements \t org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "checkJarFileForApplicationMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "loadPodFromTemplateFile",
    "target_class": "java.io.File, java.lang.String):org.apache.flink.kubernetes.kubeclient.FlinkPod \t org.apache.flink.kubernetes.kubeclient.FlinkKubeClient"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "resolveUserDefinedValue",
    "target_class": "org.apache.flink.configuration.ConfigOption<T>, java.lang.String, java.lang.String, java.lang.String):java.lang.String \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "resolveDNSPolicy",
    "target_class": "boolean):java.lang.String \t org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "getServiceAccount",
    "target_class": "org.apache.flink.kubernetes.kubeclient.FlinkPod"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "isHostNetwork",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "createConfigMapIfItDoesNotExist",
    "target_class": "java.lang.String, java.lang.String):void \t org.apache.flink.kubernetes.kubeclient.FlinkKubeClient"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "encodeLeaderInformation",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.kubernetes.utils.KubernetesUtils",
    "source_method": "parseLeaderInformation",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.kubernetes.KubernetesClusterDescriptor",
    "source_method": "createClusterClientProvider",
    "target_class": "org.apache.flink.kubernetes.kubeclient.FlinkKubeClientFactory"
  },
  {
    "source_class": "org.apache.flink.kubernetes.KubernetesResourceManagerDriver",
    "source_method": "updateKubernetesServiceTargetPortIfNecessary",
    "target_class": "org.apache.flink.kubernetes.kubeclient.FlinkKubeClient"
  },
  {
    "source_class": "org.apache.flink.kubernetes.KubernetesResourceManagerDriver",
    "source_method": "createKubernetesTaskManagerParameters",
    "target_class": "java.util.Set<java.lang.String>):org.apache.flink.kubernetes.kubeclient.parameters.KubernetesTaskManagerParameters \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.KubernetesResourceManagerDriver",
    "source_method": "watchTaskManagerPods",
    "target_class": "org.apache.flink.kubernetes.kubeclient.FlinkKubeClient"
  },
  {
    "source_class": "org.apache.flink.kubernetes.cli.KubernetesSessionCli",
    "source_method": "getEffectiveConfiguration",
    "target_class": "org.apache.flink.client.cli.GenericCLI"
  },
  {
    "source_class": "org.apache.flink.kubernetes.entrypoint.KubernetesWorkerResourceSpecFactory",
    "source_method": "getDefaultCpus",
    "target_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils"
  },
  {
    "source_class": "org.apache.flink.kubernetes.entrypoint.KubernetesApplicationClusterEntrypoint",
    "source_method": "getPackagedProgram",
    "target_class": "org.apache.flink.client.deployment.application.ApplicationConfiguration"
  },
  {
    "source_class": "org.apache.flink.kubernetes.entrypoint.KubernetesApplicationClusterEntrypoint",
    "source_method": "getPackagedProgramRetriever",
    "target_class": "java.lang.String[], java.lang.String):org.apache.flink.client.program.PackagedProgramRetriever \t org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils"
  },
  {
    "source_class": "org.apache.flink.kubernetes.entrypoint.KubernetesEntrypointUtils",
    "source_method": "loadConfiguration",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.FileSourceSplitSerializer",
    "source_method": "deserializeV1",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.PendingSplitsCheckpoint",
    "source_method": "fromCollectionSnapshot",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.PendingSplitsCheckpoint",
    "source_method": "fromCollectionSnapshot",
    "target_class": "java.util.Collection<org.apache.flink.core.fs.Path>):org.apache.flink.connector.file.src.PendingSplitsCheckpoint<T> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.assigners.LocalityAwareSplitAssigner",
    "source_method": "getRemoteSplit",
    "target_class": "org.apache.flink.connector.file.src.assigners.LocalityAwareSplitAssigner.LocatableSplitChooser"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.assigners.LocalityAwareSplitAssigner",
    "source_method": "getNumberOfLocalAssignments",
    "target_class": "org.apache.flink.metrics.SimpleCounter"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.assigners.LocalityAwareSplitAssigner",
    "source_method": "getNumberOfRemoteAssignments",
    "target_class": "org.apache.flink.metrics.SimpleCounter"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.assigners.LocalityAwareSplitAssigner",
    "source_method": "normalizeHostName",
    "target_class": "org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.assigners.LocalityAwareSplitAssigner.LocatableSplitChooser",
    "source_method": "getNextUnassignedMinLocalCountSplit",
    "target_class": "org.apache.flink.connector.file.src.assigners.LocalityAwareSplitAssigner.SplitWithInfo"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.FileSourceSplitState",
    "source_method": "setPosition",
    "target_class": "org.apache.flink.connector.file.src.util.CheckpointedPosition"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.impl.DynamicFileSplitEnumerator",
    "source_method": "getNextUnassignedSplit",
    "target_class": "org.apache.flink.connector.file.src.FileSourceSplit"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.impl.DynamicFileSplitEnumerator",
    "source_method": "createSplitAssigner",
    "target_class": "org.apache.flink.api.connector.source.SplitEnumeratorContext"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.impl.StreamFormatAdapter",
    "source_method": "openStream",
    "target_class": "org.apache.flink.configuration.Configuration, long):org.apache.flink.connector.file.src.impl.StreamFormatAdapter.TrackingFsDataInputStream \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.impl.ContinuousFileSplitEnumerator",
    "source_method": "assignSplits",
    "target_class": "org.apache.flink.connector.file.src.assigners.FileSplitAssigner"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.impl.FileRecordFormatAdapter",
    "source_method": "wrapReader",
    "target_class": "org.apache.flink.configuration.Configuration, long, long):org.apache.flink.connector.file.src.impl.FileRecordFormatAdapter.Reader<T> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.impl.FileRecordFormatAdapter.Reader",
    "source_method": "updateCheckpointablePosition",
    "target_class": "org.apache.flink.connector.file.src.util.CheckpointedPosition"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.FileSource",
    "source_method": "forBulkFileFormat",
    "target_class": "org.apache.flink.core.fs.Path[]):org.apache.flink.connector.file.src.FileSource.FileSourceBuilder<T> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.FileSourceSplit",
    "source_method": "checkNoNullHosts",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.util.RecordMapperWrapperRecordIterator",
    "source_method": "wrapReader",
    "target_class": "org.apache.flink.connector.file.src.util.RecordMapperWrapperRecordIterator.RecordMapper<I,O>):org.apache.flink.connector.file.src.reader.BulkFormat.Reader<O> \t org.apache.flink.connector.file.src.reader.BulkFormat.Reader"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.util.Utils",
    "source_method": "doWithCleanupOnException",
    "target_class": "org.apache.flink.util.function.SupplierWithException<E,java.io.IOException>):E \t org.apache.flink.util.IOUtils"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.util.Utils",
    "source_method": "forEachRemaining",
    "target_class": "java.util.function.Consumer<? super T>):void \t org.apache.flink.connector.file.src.util.RecordAndPosition"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.enumerate.BlockSplittingRecursiveEnumerator",
    "source_method": "isFileSplittable",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.enumerate.BlockSplittingRecursiveEnumerator",
    "source_method": "getBlockLocationsForFile",
    "target_class": "org.apache.flink.core.fs.FileSystem):org.apache.flink.core.fs.BlockLocation[] \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.enumerate.NonSplittingRecursiveEnumerator",
    "source_method": "convertToSourceSplits",
    "target_class": "org.apache.flink.core.fs.FileSystem, java.util.List<org.apache.flink.connector.file.src.FileSourceSplit>):void \t org.apache.flink.core.fs.FileStatus"
  },
  {
    "source_class": "org.apache.flink.connector.file.src.enumerate.NonSplittingRecursiveEnumerator",
    "source_method": "getHostsFromBlockLocations",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.FileSinkCommittableSerializer",
    "source_method": "serializeV2",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.connector.file.sink.FileSinkCommittable"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucket",
    "source_method": "restoreInProgressFile",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.BucketWriter"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucket",
    "source_method": "cacheRecoveredPendingFiles",
    "target_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucketState"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucket",
    "source_method": "snapshotState",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.InProgressFileWriter"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucket",
    "source_method": "assembleNewPartPath",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.OutputFileConfig"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucket",
    "source_method": "closePartFile",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.InProgressFileWriter"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucket",
    "source_method": "disposePartFile",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.InProgressFileWriter"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriter",
    "source_method": "registerNextBucketInspectionTimer",
    "target_class": "org.apache.flink.api.common.operators.ProcessingTimeService"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucketStateSerializer",
    "source_method": "serializeV3",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.connector.file.sink.writer.FileWriterBucketState"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucketStateSerializer",
    "source_method": "internalDeserialize",
    "target_class": "org.apache.flink.util.function.FunctionWithException<org.apache.flink.core.memory.DataInputView,org.apache.flink.streaming.api.functions.sink.filesystem.InProgressFileWriter.InProgressFileRecoverable,java.io.IOException>, org.apache.flink.util.function.BiFunctionWithException<java.lang.Integer,byte[],org.apache.flink.streaming.api.functions.sink.filesystem.InProgressFileWriter.PendingFileRecoverable,java.io.IOException>):org.apache.flink.connector.file.sink.writer.FileWriterBucketState \t org.apache.flink.util.function.FunctionWithException"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucketStateSerializer",
    "source_method": "getResumableSerializer",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.OutputStreamBasedPartFileWriter.OutputStreamBasedInProgressFileRecoverableSerializer"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.writer.FileWriterBucketStateSerializer",
    "source_method": "getCommitableSerializer",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.OutputStreamBasedPartFileWriter.OutputStreamBasedPendingFileRecoverableSerializer"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.InputFormatBasedReader",
    "source_method": "open",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorOperator",
    "source_method": "submitUntil",
    "target_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactService"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorOperator.RemainingRequestsSerializer",
    "source_method": "serializeV1",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer):void \t org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorOperator.RemainingRequestsSerializer",
    "source_method": "deserializeV1",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorRequest",
    "source_method": "addToCompact",
    "target_class": "org.apache.flink.connector.file.sink.FileSinkCommittable"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorRequestSerializer",
    "source_method": "serializeV1",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer):void \t org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorRequestSerializer",
    "source_method": "deserializeV1",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactCoordinator",
    "source_method": "packAndTrigger",
    "target_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorRequest"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactCoordinator.CompactTrigger",
    "source_method": "onElement",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.InProgressFileWriter.PendingFileRecoverable"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorOperatorStateHandler",
    "source_method": "appendCompactingResultsToSummary",
    "target_class": "org.apache.flink.streaming.api.connector.sink2.CommittableSummary"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorOperatorStateHandler",
    "source_method": "isHiddenCommittable",
    "target_class": "org.apache.flink.streaming.api.connector.sink2.CommittableWithLineage"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorOperatorStateHandler",
    "source_method": "handleHiddenCommittable",
    "target_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorRequest"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorOperatorStateHandler",
    "source_method": "submit",
    "target_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactService"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactService",
    "source_method": "compact",
    "target_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorRequest"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactService",
    "source_method": "getCompactingPath",
    "target_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactorRequest"
  },
  {
    "source_class": "org.apache.flink.connector.file.sink.compactor.operator.CompactService",
    "source_method": "assembleCompactedFilePath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSource",
    "source_method": "wrapBulkFormat",
    "target_class": "org.apache.flink.connector.file.src.reader.BulkFormat<org.apache.flink.table.data.RowData,org.apache.flink.connector.file.src.FileSourceSplit>, org.apache.flink.table.types.DataType, java.util.List<org.apache.flink.connector.file.table.FileSystemTableSource.ReadableFileInfo>, java.util.List<java.lang.String>):org.apache.flink.connector.file.src.reader.BulkFormat<org.apache.flink.table.data.RowData,org.apache.flink.connector.file.src.FileSourceSplit> \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSource",
    "source_method": "createSourceProvider",
    "target_class": "org.apache.flink.connector.file.src.FileSource.FileSourceBuilder"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.SerializationSchemaAdapter",
    "source_method": "checkOpened",
    "target_class": "org.apache.flink.api.common.serialization.SerializationSchema"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.RowPartitionComputer",
    "source_method": "restorePartValueFromType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):java.lang.Object \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.DefaultPartTimeExtractor",
    "source_method": "toMills",
    "target_class": "org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.BinPacking",
    "source_method": "findBin",
    "target_class": "long):org.apache.flink.connector.file.table.BinPacking.Bin<T> \t org.apache.flink.connector.file.table.BinPacking.Bin"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionFieldExtractor",
    "source_method": "forFileSystem",
    "target_class": "org.apache.flink.table.utils.PartitionPathUtils"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.StreamingSink",
    "source_method": "writer",
    "target_class": "org.apache.flink.streaming.api.datastream.DataStream<T>, long, org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink.BucketsBuilder<T,java.lang.String,? extends org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink.BucketsBuilder<T,java.lang.String,?>>, int, java.util.List<java.lang.String>, org.apache.flink.configuration.Configuration, boolean):org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.connector.file.table.stream.PartitionCommitInfo> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.StreamingSink",
    "source_method": "compactionWriter",
    "target_class": "org.apache.flink.streaming.api.datastream.DataStream<T>, long, org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink.BucketsBuilder<T,java.lang.String,? extends org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink.BucketsBuilder<T,java.lang.String,?>>, org.apache.flink.connector.file.table.FileSystemFactory, org.apache.flink.core.fs.Path, org.apache.flink.connector.file.table.stream.compact.CompactReader.Factory<T>, long, int, boolean):org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.connector.file.table.stream.PartitionCommitInfo> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.StreamingSink",
    "source_method": "sink",
    "target_class": "org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.connector.file.table.stream.PartitionCommitInfo>, org.apache.flink.core.fs.Path, org.apache.flink.table.catalog.ObjectIdentifier, java.util.List<java.lang.String>, org.apache.flink.connector.file.table.TableMetaStoreFactory, org.apache.flink.connector.file.table.FileSystemFactory, org.apache.flink.configuration.Configuration):org.apache.flink.streaming.api.datastream.DataStreamSink<?> \t org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.PartitionCommitTrigger",
    "source_method": "create",
    "target_class": "org.apache.flink.api.common.state.OperatorStateStore, org.apache.flink.configuration.Configuration, java.lang.ClassLoader, java.util.List<java.lang.String>, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService):org.apache.flink.connector.file.table.stream.PartitionCommitTrigger \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.StreamingFileWriter",
    "source_method": "isPartitionCommitTriggerEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.StreamingFileWriter",
    "source_method": "closePartFileForPartitions",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.Buckets"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.compact.CompactOperator",
    "source_method": "snapshotState",
    "target_class": "org.apache.flink.api.common.state.ListState"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.compact.CompactOperator",
    "source_method": "clearExpiredFiles",
    "target_class": "org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.compact.CompactOperator",
    "source_method": "createCompactedFile",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.compact.CompactOperator",
    "source_method": "convertFromUncompacted",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.stream.AbstractStreamingWriter",
    "source_method": "commitUpToCheckpoint",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSinkHelper"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.batch.BatchSink",
    "source_method": "createBatchNoCompactSink",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink.DataStructureConverter, org.apache.flink.connector.file.table.FileSystemOutputFormat<org.apache.flink.types.Row>, int, boolean):org.apache.flink.streaming.api.datastream.DataStreamSink<org.apache.flink.types.Row> \t org.apache.flink.streaming.api.datastream.DataStream"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.batch.BatchSink",
    "source_method": "createBatchCompactSink",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink.BucketsBuilder<T,java.lang.String,? extends org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink.BucketsBuilder<T,java.lang.String,?>>, org.apache.flink.connector.file.table.stream.compact.CompactReader.Factory<T>, org.apache.flink.connector.file.table.FileSystemFactory, org.apache.flink.connector.file.table.TableMetaStoreFactory, org.apache.flink.connector.file.table.PartitionCommitPolicyFactory, java.lang.String[], java.util.LinkedHashMap<java.lang.String,java.lang.String>, org.apache.flink.core.fs.Path, org.apache.flink.table.catalog.ObjectIdentifier, long, long, boolean, boolean, int, boolean):org.apache.flink.streaming.api.datastream.DataStreamSink<?> \t org.apache.flink.streaming.api.datastream.DataStream"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.batch.compact.BatchCompactCoordinator",
    "source_method": "getFilesSize",
    "target_class": "java.util.List<org.apache.flink.core.fs.Path>):java.util.Map<org.apache.flink.core.fs.Path,java.lang.Long> \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.batch.compact.BatchCompactOperator",
    "source_method": "convertFromUncompacted",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionLoader",
    "source_method": "loadPartition",
    "target_class": "java.util.List<org.apache.flink.core.fs.Path>, boolean):void \t org.apache.flink.connector.file.table.TableMetaStoreFactory.TableMetaStore"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionLoader",
    "source_method": "loadNonPartition",
    "target_class": "boolean):void \t org.apache.flink.connector.file.table.TableMetaStoreFactory.TableMetaStore"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionLoader",
    "source_method": "loadEmptyPartition",
    "target_class": "org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionLoader",
    "source_method": "overwriteAndMoveFiles",
    "target_class": "org.apache.flink.core.fs.Path, boolean):void \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionLoader",
    "source_method": "overwrite",
    "target_class": "org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionLoader",
    "source_method": "moveFiles",
    "target_class": "org.apache.flink.core.fs.Path, boolean):void \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionLoader",
    "source_method": "moveFile",
    "target_class": "org.apache.flink.core.fs.Path):void \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableFactory",
    "source_method": "validate",
    "target_class": "org.apache.flink.table.factories.FactoryUtil.TableFactoryHelper"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSink",
    "source_method": "partitionComputer",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSink",
    "source_method": "createBatchSink",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink.Context, int, boolean):org.apache.flink.streaming.api.datastream.DataStreamSink<org.apache.flink.table.data.RowData> \t org.apache.flink.connector.file.table.FileSystemOutputFormat.Builder"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSink",
    "source_method": "createStreamingSink",
    "target_class": "org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.table.data.RowData>, org.apache.flink.table.connector.sink.DynamicTableSink.Context, int, boolean):org.apache.flink.streaming.api.datastream.DataStreamSink<?> \t org.apache.flink.streaming.api.functions.sink.filesystem.OutputFileConfig.OutputFileConfigBuilder"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSink",
    "source_method": "createCompactReaderFactory",
    "target_class": "org.apache.flink.table.connector.format.DecodingFormat"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSink",
    "source_method": "toStagingPath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSink",
    "source_method": "createWriter",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSink",
    "source_method": "checkConfiguredParallelismAllowed",
    "target_class": "org.apache.flink.table.connector.ChangelogMode"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSink",
    "source_method": "createBulkWriterOutputFormat",
    "target_class": "org.apache.flink.core.fs.Path):org.apache.flink.api.common.io.OutputFormat<org.apache.flink.table.data.RowData> \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemTableSink",
    "source_method": "createEncoderOutputFormat",
    "target_class": "org.apache.flink.core.fs.Path):org.apache.flink.api.common.io.OutputFormat<org.apache.flink.table.data.RowData> \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.DeserializationSchemaAdapter",
    "source_method": "createDeserialization",
    "target_class": "org.apache.flink.api.common.serialization.DeserializationSchema"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.DeserializationSchemaAdapter.Reader",
    "source_method": "seek",
    "target_class": "org.apache.flink.connector.file.table.DeserializationSchemaAdapter.LineBytesInputFormat"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionTempFileManager",
    "source_method": "newFileName",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.OutputFileConfig"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionTempFileManager",
    "source_method": "listTaskTemporaryPaths",
    "target_class": "org.apache.flink.core.fs.Path, java.util.function.BiPredicate<java.lang.Integer,java.lang.Integer>):java.util.List<org.apache.flink.core.fs.Path> \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.PartitionTempFileManager",
    "source_method": "collectPartSpecToPaths",
    "target_class": "java.util.List<org.apache.flink.core.fs.Path>, int):java.util.Map<java.util.LinkedHashMap<java.lang.String,java.lang.String>,java.util.List<org.apache.flink.core.fs.Path>> \t org.apache.flink.table.utils.PartitionPathUtils"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.utils.CompactFileUtils",
    "source_method": "doSingleFileMove",
    "target_class": "org.apache.flink.core.fs.Path, org.apache.flink.core.fs.Path):boolean \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.utils.CompactFileUtils",
    "source_method": "checkExist",
    "target_class": "java.util.List<org.apache.flink.core.fs.Path>):void \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemCommitter",
    "source_method": "commitPartitions",
    "target_class": "org.apache.flink.connector.file.table.PartitionLoader"
  },
  {
    "source_class": "org.apache.flink.connector.file.table.FileSystemCommitter",
    "source_method": "commitPartitionsWithFiles",
    "target_class": "org.apache.flink.connector.file.table.PartitionLoader"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceBuilder",
    "source_method": "buildWithBulkFormat",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceBuilder",
    "source_method": "getProducedRowType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceBuilder",
    "source_method": "validateScanConfigurations",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceBuilder",
    "source_method": "createDefaultBulkFormat",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.FileSystemLookupFunction",
    "source_method": "extractLookupKey",
    "target_class": "org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceSplitSerializer",
    "source_method": "serialize",
    "target_class": "org.apache.flink.connectors.hive.read.HiveSourceSplit):void \t org.apache.flink.connectors.hive.read.HiveSourceSplit"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceSplitSerializer",
    "source_method": "deserializeV1",
    "target_class": "org.apache.flink.connector.file.src.FileSourceSplit"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTableSink",
    "source_method": "validateAutoGatherStatistic",
    "target_class": "org.apache.flink.table.catalog.CatalogTable):void \t org.apache.flink.table.catalog.CatalogTable"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTableSink",
    "source_method": "createBatchSink",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink.DataStructureConverter, org.apache.flink.connectors.hive.write.HiveWriterFactory, org.apache.flink.connector.file.table.TableMetaStoreFactory, org.apache.flink.streaming.api.functions.sink.filesystem.OutputFileConfig.OutputFileConfigBuilder, java.lang.String, org.apache.flink.connectors.hive.StorageDescriptor, java.util.Properties, boolean, boolean, int, boolean):org.apache.flink.streaming.api.datastream.DataStreamSink<?> \t org.apache.flink.streaming.api.functions.sink.filesystem.OutputFileConfig.OutputFileConfigBuilder"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTableSink",
    "source_method": "createBatchNoCompactSink",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink.DataStructureConverter, org.apache.flink.connectors.hive.write.HiveWriterFactory, org.apache.flink.connector.file.table.TableMetaStoreFactory, org.apache.flink.streaming.api.functions.sink.filesystem.OutputFileConfig, java.lang.String, boolean, int, boolean):org.apache.flink.streaming.api.datastream.DataStreamSink<org.apache.flink.types.Row> \t org.apache.flink.connector.file.table.FileSystemOutputFormat.Builder"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTableSink",
    "source_method": "createCompactReaderFactory",
    "target_class": "java.util.Properties):org.apache.flink.connector.file.table.stream.compact.CompactReader.Factory<org.apache.flink.table.data.RowData> \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTableSink",
    "source_method": "msFactory",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTablePartition",
    "source_method": "ofTable",
    "target_class": "java.lang.String, java.lang.String, java.lang.String):org.apache.flink.connectors.hive.HiveTablePartition \t org.apache.flink.table.catalog.hive.client.HiveMetastoreClientWrapper"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTablePartition",
    "source_method": "ofPartition",
    "target_class": "java.lang.String, java.lang.String, java.lang.String, java.util.LinkedHashMap<java.lang.String,java.lang.String>):org.apache.flink.connectors.hive.HiveTablePartition \t org.apache.flink.table.catalog.hive.client.HiveMetastoreClientWrapper"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTablePartition",
    "source_method": "getHiveShim",
    "target_class": "org.apache.flink.table.catalog.hive.client.HiveShimLoader"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.ContinuousHiveSplitEnumerator",
    "source_method": "assignSplits",
    "target_class": "org.apache.flink.connector.file.src.assigners.FileSplitAssigner"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTableMetaStoreFactory.HiveTableMetaStore",
    "source_method": "isStagingDir",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTableMetaStoreFactory",
    "source_method": "accumulate",
    "target_class": "org.apache.flink.table.catalog.stats.CatalogTableStatistics"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.write.HiveWriterFactory",
    "source_method": "getJobConf",
    "target_class": "org.apache.flink.connectors.hive.JobConfWrapper"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.write.HiveWriterFactory",
    "source_method": "createRowConverter",
    "target_class": "org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceDynamicFileEnumerator",
    "source_method": "createRowData",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):org.apache.flink.table.data.RowData \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceFileEnumerator",
    "source_method": "supportSetSplitMaxSize",
    "target_class": "org.apache.flink.connectors.hive.HiveTablePartition"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceFileEnumerator",
    "source_method": "calculateFilesSizeWithOpenCost",
    "target_class": "org.apache.flink.connectors.hive.JobConf, long):long \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceFileEnumerator",
    "source_method": "getNumFiles",
    "target_class": "org.apache.flink.connectors.hive.JobConf):int \t org.apache.flink.connectors.hive.HiveTablePartition"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceFileEnumerator",
    "source_method": "getSplitMaxSize",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceFileEnumerator",
    "source_method": "getFileOpenCost",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSourceFileEnumerator",
    "source_method": "getThreadNumToSplitHiveFile",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTableSource",
    "source_method": "toDataStreamSource",
    "target_class": "org.apache.flink.connectors.hive.HiveSource<org.apache.flink.table.data.RowData>):org.apache.flink.streaming.api.datastream.DataStreamSource<org.apache.flink.table.data.RowData> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveTableSource",
    "source_method": "isStreamingSource",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.util.JobConfUtils",
    "source_method": "getDefaultPartitionName",
    "target_class": "org.apache.flink.connectors.hive.JobConfWrapper"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.util.JobConfUtils",
    "source_method": "addCredentialsIntoJobConf",
    "target_class": "org.apache.flink.api.java.hadoop.common.HadoopInputFormatCommonBase"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.util.HivePartitionUtils",
    "source_method": "parsePartitionValues",
    "target_class": "java.lang.String[], org.apache.flink.table.types.DataType[], java.lang.String, org.apache.flink.table.catalog.hive.client.HiveShim):java.util.Map<java.lang.String,java.lang.Object> \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.util.HivePartitionUtils",
    "source_method": "restorePartitionValueFromType",
    "target_class": "java.lang.String, org.apache.flink.table.types.logical.LogicalType, java.lang.String):java.lang.Object \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.util.HivePartitionUtils",
    "source_method": "getAllPartitions",
    "target_class": "java.lang.String, org.apache.flink.table.catalog.ObjectPath, java.util.List<java.lang.String>, java.util.List<java.util.Map<java.lang.String,java.lang.String>>):java.util.List<org.apache.flink.connectors.hive.HiveTablePartition> \t org.apache.flink.table.catalog.ObjectPath"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.util.HivePartitionUtils",
    "source_method": "createPartitionSpec",
    "target_class": "java.lang.String):org.apache.flink.table.catalog.CatalogPartitionSpec \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.util.HivePartitionUtils",
    "source_method": "partitionSpecToValues",
    "target_class": "java.util.List<java.lang.String>):java.util.List<java.lang.String> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.util.HivePartitionUtils",
    "source_method": "serializeHiveTablePartition",
    "target_class": "org.apache.flink.connectors.hive.HiveTablePartitionSerializer"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.util.HivePartitionUtils",
    "source_method": "deserializeHiveTablePartition",
    "target_class": "org.apache.flink.connectors.hive.HiveTablePartitionSerializer"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.read.HiveCompactReaderFactory",
    "source_method": "createSplit",
    "target_class": "org.apache.flink.core.fs.FileSystem):org.apache.flink.connectors.hive.read.HiveSourceSplit \t org.apache.flink.core.fs.FileStatus"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.read.HiveInputFormat",
    "source_method": "tableRowType",
    "target_class": "org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.read.HiveInputFormat",
    "source_method": "createOrcFormat",
    "target_class": "org.apache.flink.connectors.hive.JobConfWrapper"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.read.HiveInputFormat",
    "source_method": "isVectorizationUnsupported",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.read.HiveInputFormat",
    "source_method": "computeSelectedFields",
    "target_class": "org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.read.HiveTableInputFormat",
    "source_method": "getJobConf",
    "target_class": "org.apache.flink.connectors.hive.JobConfWrapper"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.read.HiveTableInputFormat",
    "source_method": "isVectorizationUnsupported",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.read.HiveTableInputFormat",
    "source_method": "createInputSplits",
    "target_class": "java.util.List<org.apache.flink.connectors.hive.HiveTablePartition>, int, org.apache.flink.connectors.hive.read.JobConf):org.apache.flink.connectors.hive.read.HiveTableInputSplit[] \t org.apache.flink.connectors.hive.MRSplitsGetter"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSource",
    "source_method": "createContinuousSplitEnumerator",
    "target_class": "java.lang.Comparable<?>, java.util.Collection<java.util.List<java.lang.String>>, java.util.Collection<org.apache.flink.connectors.hive.read.HiveSourceSplit>):org.apache.flink.api.connector.source.SplitEnumerator<org.apache.flink.connectors.hive.read.HiveSourceSplit,org.apache.flink.connector.file.src.PendingSplitsCheckpoint<org.apache.flink.connectors.hive.read.HiveSourceSplit>> \t org.apache.flink.connectors.hive.JobConfWrapper"
  },
  {
    "source_class": "org.apache.flink.connectors.hive.HiveSource",
    "source_method": "createDynamicSplitEnumerator",
    "target_class": "org.apache.flink.table.catalog.ObjectPath"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.conversion.HiveInspectors",
    "source_method": "getArgInspectors",
    "target_class": "org.apache.flink.table.functions.hive.HiveFunctionArguments):org.apache.flink.table.functions.hive.conversion.ObjectInspector[] \t org.apache.flink.table.catalog.hive.util.HiveTypeUtil"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.conversion.HiveInspectors",
    "source_method": "toInspectors",
    "target_class": "java.lang.Object[], org.apache.flink.table.types.DataType[]):org.apache.flink.table.functions.hive.conversion.ObjectInspector[] \t org.apache.flink.table.catalog.hive.util.HiveTypeUtil"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.conversion.HiveInspectors",
    "source_method": "getConversion",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.catalog.hive.client.HiveShim):org.apache.flink.table.functions.hive.conversion.HiveObjectConversion \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.conversion.HiveInspectors",
    "source_method": "toFlinkObject",
    "target_class": "java.lang.Object, org.apache.flink.table.catalog.hive.client.HiveShim):java.lang.Object \t org.apache.flink.table.catalog.hive.client.HiveShim"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.conversion.HiveInspectors",
    "source_method": "getObjectInspector",
    "target_class": "org.apache.flink.table.catalog.hive.util.HiveTypeUtil"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.conversion.HiveInspectors",
    "source_method": "getObjectInspectorForPrimitiveConstant",
    "target_class": "java.lang.Object, org.apache.flink.table.catalog.hive.client.HiveShim):org.apache.flink.table.functions.hive.conversion.ObjectInspector \t org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.HiveFunction",
    "source_method": "createTypeInference",
    "target_class": "org.apache.flink.table.types.inference.TypeInference.Builder"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.HiveDeclarativeAggregateFunction",
    "source_method": "checkMinMaxArgumentType",
    "target_class": "java.lang.String):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.HiveDeclarativeAggregateFunction",
    "source_method": "adjustedPlus",
    "target_class": "org.apache.flink.table.expressions.Expression, org.apache.flink.table.expressions.Expression):org.apache.flink.table.expressions.UnresolvedCallExpression \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.HiveFunctionArguments",
    "source_method": "create",
    "target_class": "org.apache.flink.table.types.inference.CallContext"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.HiveSumAggFunction",
    "source_method": "initResultType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.HiveSumAggFunction",
    "source_method": "defaultValue",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.util.HiveFunctionUtil",
    "source_method": "isSingleBoxedArray",
    "target_class": "org.apache.flink.table.functions.hive.HiveFunctionArguments"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.util.HiveFunctionUtil",
    "source_method": "isArrayType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.functions.hive.HiveAverageAggFunction",
    "source_method": "initBufferedSumType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.module.hive.udf.generic.HiveGenericUDFInternalInterval",
    "source_method": "getProcessorMap",
    "target_class": "org.apache.flink.table.module.hive.udf.generic.HiveGenericUDFInternalInterval.IntervalProcessor"
  },
  {
    "source_class": "org.apache.flink.table.module.hive.HiveModule",
    "source_method": "isNativeAggFunctionEnabled",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.OrderSpec",
    "source_method": "prefixBy",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitionSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitionedTableFunctionSpec",
    "source_method": "getPartition",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitioningSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitionedTableFunctionSpec",
    "source_method": "getOrder",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitioningSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBSubQuery.SubQueryType",
    "source_method": "get",
    "target_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getTypeStringFromAST",
    "target_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getObjectIdentifier",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):org.apache.flink.table.catalog.ObjectIdentifier \t org.apache.flink.table.catalog.CatalogRegistry"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "parseCompoundName",
    "target_class": "java.lang.String):org.apache.flink.table.catalog.ObjectIdentifier \t org.apache.flink.table.catalog.UnresolvedIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getQualifiedTableName",
    "target_class": "org.apache.flink.table.catalog.UnresolvedIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getUnescapedOriginTableName",
    "target_class": "org.apache.flink.table.catalog.UnresolvedIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getPartExprNodeDesc",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf, java.util.Map<org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode,org.apache.flink.table.planner.delegation.hive.copy.ExprNodeDesc>, org.apache.flink.table.planner.delegation.hive.copy.FrameworkConfig, org.apache.flink.table.planner.delegation.hive.copy.RelOptCluster):boolean \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "unparseExprForValuesClause",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getGroupingSets",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBParseInfo, java.lang.String):java.util.List<java.lang.Integer> \t org.apache.flink.table.planner.delegation.hive.HiveParserUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getGroupByForClause",
    "target_class": "java.lang.String):java.util.List<org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode> \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBParseInfo"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getAliasId",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB):java.lang.String \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getBound",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.RelOptCluster):org.apache.flink.table.planner.delegation.hive.copy.RexWindowBound \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec.BoundarySpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "handleQueryWindowClauses",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.Phase1Ctx, org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "processPositionAlias",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "processPartitionSpec",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitionExpression"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "processOrderSpec",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitionExpression"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "processWindowFunction",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec.WindowFunctionSpec \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec.WindowFunctionSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "processQueryWindowClause",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):void \t org.apache.flink.table.planner.delegation.hive.HiveParserUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "processBoundary",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec.BoundarySpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "removeOBInSubQuery",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBExpr"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "buildHiveColNameToInputPosMap",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver):java.util.Map<java.lang.String,java.lang.Integer> \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserExprNodeDescUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "buildHiveToCalciteColumnMap",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "validateNoHavingReferenceToAlias",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode, org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver, org.apache.flink.table.planner.delegation.hive.copy.HiveParserSemanticAnalyzer):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBParseInfo"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getPartitionKeys",
    "target_class": "org.apache.flink.table.planner.delegation.hive.HiveParserRexNodeConverter, org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver, org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeCheckCtx, org.apache.flink.table.planner.delegation.hive.copy.HiveParserSemanticAnalyzer):java.util.List<org.apache.flink.table.planner.delegation.hive.copy.RexNode> \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeCheckCtx"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getOrderKeys",
    "target_class": "org.apache.flink.table.planner.delegation.hive.HiveParserRexNodeConverter, org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver, org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeCheckCtx, org.apache.flink.table.planner.delegation.hive.copy.HiveParserSemanticAnalyzer):java.util.List<org.apache.flink.table.planner.delegation.hive.copy.RexFieldCollation> \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeCheckCtx"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getHiveAggInfo",
    "target_class": "int, org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver, org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec.WindowFunctionSpec, org.apache.flink.table.planner.delegation.hive.copy.HiveParserSemanticAnalyzer, org.apache.flink.table.planner.delegation.hive.copy.FrameworkConfig, org.apache.flink.table.planner.delegation.hive.copy.RelOptCluster):org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.AggInfo \t org.apache.flink.table.planner.delegation.hive.HiveParserUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "genValues",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable, org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver, org.apache.flink.table.planner.delegation.hive.copy.RelOptCluster, java.util.List<java.util.List<java.lang.String>>):org.apache.flink.table.planner.delegation.hive.copy.RelNode \t org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "validatePartColumnType",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>, org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode, org.apache.hadoop.hive.conf.HiveConf, org.apache.flink.table.planner.delegation.hive.copy.FrameworkConfig, org.apache.flink.table.planner.delegation.hive.copy.RelOptCluster):void \t org.apache.flink.table.catalog.hive.util.HiveTypeUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer",
    "source_method": "getResolvedCatalogBaseTable",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier):org.apache.flink.table.catalog.ResolvedCatalogBaseTable<?> \t org.apache.flink.table.catalog.CatalogRegistry"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.SerDeClassProps",
    "source_method": "analyzeSerDeInfo",
    "target_class": "java.lang.String, java.lang.String, boolean):org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.SerDeClassProps \t org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveASTParseUtils",
    "source_method": "processSetColsNode",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveASTParseUtils.ASTSearcher):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveASTParseUtils",
    "source_method": "createChildColumnRef",
    "target_class": "java.lang.String, java.util.List<org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode>, java.util.HashSet<java.lang.String>):boolean \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveASTParseUtils",
    "source_method": "createConversionCast",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.PrimitiveTypeInfo):org.apache.flink.table.planner.delegation.hive.copy.ExprNodeDesc \t org.apache.flink.table.planner.delegation.hive.HiveParserTypeCheckProcFactory.DefaultExprProcessor"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver",
    "source_method": "putExpression",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.ColumnInfo):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver",
    "source_method": "getExpression",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver",
    "source_method": "getExpressionSource",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserIntervalYearMonth",
    "source_method": "valueOf",
    "target_class": "org.apache.flink.table.planner.delegation.hive.HiveParserIntervalUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserAuthorizationParseUtils",
    "source_method": "getPrincipalDesc",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserUnparseTranslator",
    "source_method": "addCopyTranslation",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserSubQueryUtils",
    "source_method": "buildSQOperator",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBSubQuery.SubQueryType"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserSubQueryUtils",
    "source_method": "checkAggOrWindowing",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserSubQueryDiagnostic",
    "source_method": "getRewrite",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.TokenRewriteStream, org.apache.flink.table.planner.delegation.hive.copy.HiveParserContext):org.apache.flink.table.planner.delegation.hive.copy.HiveParserSubQueryDiagnostic.QBSubQueryRewrite \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTBuilder",
    "source_method": "createAST",
    "target_class": "java.lang.String):org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode \t org.apache.flink.table.planner.delegation.hive.copy.HiveASTParseDriver"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveSetProcessor",
    "source_method": "setConf",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>, java.lang.String, java.lang.String, java.lang.String):void \t org.apache.hadoop.hive.conf.HiveConf.ConfVars"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveSetProcessor",
    "source_method": "dumpOption",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf, java.util.Map<java.lang.String,java.lang.String>, java.lang.String):java.lang.String \t org.apache.hadoop.hive.conf.HiveConf"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeConverter",
    "source_method": "convert",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.RelDataTypeFactory):org.apache.flink.table.planner.delegation.hive.copy.RelDataType \t org.apache.flink.table.planner.delegation.hive.HiveParserUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeConverter",
    "source_method": "convertPrimitiveType",
    "target_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBExpr",
    "source_method": "isSimpleSelectQuery",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBExpr",
    "source_method": "containsQueryWithoutSourceTable",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBParseInfo",
    "source_method": "addWindowingExprToClause",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserIntervalDayTime",
    "source_method": "valueOf",
    "target_class": "org.apache.flink.table.planner.delegation.hive.HiveParserIntervalUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec",
    "source_method": "setAndValidateOrderSpec",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec.WindowFrameSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec",
    "source_method": "validateWindowFrame",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec.WindowSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec",
    "source_method": "applyConstantPartition",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitionExpression"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec.WindowSpec",
    "source_method": "getPartition",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitioningSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserWindowingSpec.WindowSpec",
    "source_method": "getOrder",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserPTFInvocationSpec.PartitioningSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserSemanticAnalyzer",
    "source_method": "findCTEFromName",
    "target_class": "java.lang.String):org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.CTEClause \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserSemanticAnalyzer",
    "source_method": "addCTEAsSubQuery",
    "target_class": "java.lang.String, java.lang.String):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.CTEClause"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserSemanticAnalyzer",
    "source_method": "getCatalogBaseTable",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB, boolean):org.apache.flink.table.catalog.CatalogBaseTable \t org.apache.flink.table.catalog.CatalogRegistry"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserSemanticAnalyzer",
    "source_method": "genExprNodeDesc",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver, org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver, java.util.Map<org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode,org.apache.flink.table.planner.delegation.hive.copy.RelNode>, boolean, boolean):org.apache.flink.table.planner.delegation.hive.copy.ExprNodeDesc \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeCheckCtx"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB",
    "source_method": "isSimpleSelectQuery",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQBParseInfo"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserExprNodeDescUtils",
    "source_method": "getExprNodeColumnDesc",
    "target_class": "java.util.Map<java.lang.Integer,org.apache.flink.table.planner.delegation.hive.copy.ExprNodeDesc>):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserExprNodeSubQueryDesc"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserJoinCondTypeCheckProcFactory.JoinCondColumnExprProcessor",
    "source_method": "hasTableAlias",
    "target_class": "java.lang.String, org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):boolean \t org.apache.flink.table.planner.delegation.hive.parse.HiveParserErrorMsg"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserJoinCondTypeCheckProcFactory.JoinCondColumnExprProcessor",
    "source_method": "getColInfo",
    "target_class": "java.lang.String, org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):org.apache.flink.table.planner.delegation.hive.copy.ColumnInfo \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserJoinTypeCheckCtx"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserJoinCondTypeCheckProcFactory.JoinCondDefaultExprProcessor",
    "source_method": "getColInfo",
    "target_class": "java.lang.String, java.lang.String, org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):org.apache.flink.table.planner.delegation.hive.copy.ColumnInfo \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "getTypeName",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveASTParseUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "convertCreateTable",
    "target_class": "boolean, boolean, boolean, java.util.List<org.apache.flink.table.planner.delegation.hive.parse.FieldSchema>, java.util.List<org.apache.flink.table.planner.delegation.hive.parse.FieldSchema>, java.lang.String, java.lang.String, java.util.Map<java.lang.String,java.lang.String>, org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.HiveParserRowFormatParams, org.apache.flink.table.planner.delegation.hive.copy.HiveParserStorageFormat, java.util.List<org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.PrimaryKey>, java.util.List<org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.NotNullConstraint>):org.apache.flink.table.operations.ddl.CreateTableOperation \t org.apache.flink.table.api.constraints.UniqueConstraint"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "encodeRowFormat",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.HiveParserRowFormatParams"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "encodeStorageFormat",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserStorageFormat"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "convertAlterTableProps",
    "target_class": "java.lang.String, java.util.Map<java.lang.String,java.lang.String>, java.util.Map<java.lang.String,java.lang.String>):org.apache.flink.table.operations.Operation \t org.apache.flink.table.catalog.CatalogBaseTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "getProps",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer.QualifiedNameUtil",
    "source_method": "getPartitionSpec",
    "target_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "getPartition",
    "target_class": "org.apache.flink.table.catalog.CatalogPartitionSpec):org.apache.flink.table.catalog.CatalogPartition \t org.apache.flink.table.catalog.CatalogPartitionSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "getPartSpec",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "convertAlterViewProps",
    "target_class": "java.lang.String, java.util.Map<java.lang.String,java.lang.String>):org.apache.flink.table.operations.Operation \t org.apache.flink.table.catalog.ResolvedCatalogView"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "parseObjectIdentifier",
    "target_class": "org.apache.flink.table.planner.delegation.hive.HiveParser"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "getDatabase",
    "target_class": "org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "getResolvedCatalogBaseTable",
    "target_class": "boolean):org.apache.flink.table.catalog.ResolvedCatalogBaseTable<?> \t org.apache.flink.table.catalog.CatalogRegistry"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserDDLSemanticAnalyzer",
    "source_method": "addDefaultProperties",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.FlinkExtendedParser",
    "source_method": "parseFlinkExtendedCommand",
    "target_class": "org.apache.flink.table.planner.delegation.hive.parse.FlinkExtendedParser.ExtendedParseStrategy"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.FlinkExtendedParser",
    "source_method": "parseSet",
    "target_class": "org.apache.flink.table.planner.delegation.hive.parse.FlinkExtendedParser.SetOperationParseStrategy"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserErrorMsg",
    "source_method": "renderOrigin",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNodeOrigin):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveOperationExecutor",
    "source_method": "executeHiveSetOperation",
    "target_class": "org.apache.flink.table.operations.HiveSetOperation"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveOperationExecutor",
    "source_method": "executeHiveLoadDataOperation",
    "target_class": "org.apache.flink.table.planner.delegation.hive.operations.HiveLoadDataOperation"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveOperationExecutor",
    "source_method": "explainHiveLoadDataOperation",
    "target_class": "org.apache.flink.table.planner.delegation.hive.operations.HiveLoadDataOperation"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserRexNodeConverter",
    "source_method": "convertConstant",
    "target_class": "org.apache.flink.table.planner.delegation.hive.RelOptCluster):org.apache.flink.table.planner.delegation.hive.RexNode \t org.apache.flink.table.planner.delegation.hive.HiveParserUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveSessionState",
    "source_method": "startSessionState",
    "target_class": "org.apache.flink.table.catalog.CatalogRegistry):void \t org.apache.flink.table.catalog.CatalogRegistry"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "removeASTChild",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "toRelDataType",
    "target_class": "org.apache.flink.table.planner.delegation.hive.RelDataTypeFactory):org.apache.flink.table.planner.delegation.hive.RelDataType \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeConverter"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "makeOver",
    "target_class": "org.apache.flink.table.planner.delegation.hive.RelDataType, org.apache.flink.table.planner.delegation.hive.SqlAggFunction, java.util.List<org.apache.flink.table.planner.delegation.hive.RexNode>, java.util.List<org.apache.flink.table.planner.delegation.hive.RexNode>, java.util.List<org.apache.flink.table.planner.delegation.hive.RexFieldCollation>, org.apache.flink.table.planner.delegation.hive.RexWindowBound, org.apache.flink.table.planner.delegation.hive.RexWindowBound, boolean, boolean, boolean, boolean, boolean):org.apache.flink.table.planner.delegation.hive.RexNode \t org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "toImmutableList",
    "target_class": "org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "toImmutableSet",
    "target_class": "org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "genValuesRelNode",
    "target_class": "org.apache.flink.table.planner.delegation.hive.RelDataType, java.util.List<java.util.List<org.apache.flink.table.planner.delegation.hive.RexLiteral>>):org.apache.flink.table.planner.delegation.hive.RelNode \t org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "genFilterRelNode",
    "target_class": "org.apache.flink.table.planner.delegation.hive.RexNode, java.util.Collection<org.apache.flink.table.planner.delegation.hive.CorrelationId>):org.apache.flink.table.planner.delegation.hive.RelNode \t org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "rexSubQueryIn",
    "target_class": "java.util.Collection<org.apache.flink.table.planner.delegation.hive.RexNode>):org.apache.flink.table.planner.delegation.hive.RexSubQuery \t org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "buildSelExprSubTree",
    "target_class": "java.lang.String):org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "genSelectDIAST",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "isSkewedCol",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB, java.lang.String):boolean \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "getBridgingSqlFunctionDefinition",
    "target_class": "org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "isRegex",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf):boolean \t org.apache.hadoop.hive.conf.HiveConf"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "getColAlias",
    "target_class": "java.lang.String, org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver, boolean, int):java.lang.String[] \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "rewriteGroupingFunctionAST",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode, boolean):org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode \t org.apache.flink.table.planner.delegation.hive.copy.HiveASTParseDriver"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "convertToLegacyGroupingId",
    "target_class": "int):org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "convertGrouping",
    "target_class": "java.util.List<org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode>, boolean, boolean):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "legacyGrouping",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "toDataType",
    "target_class": "org.apache.flink.table.catalog.hive.util.HiveTypeUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "extractLateralViewInfo",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver, org.apache.flink.table.planner.delegation.hive.copy.HiveParserSemanticAnalyzer, org.apache.flink.table.planner.delegation.hive.FrameworkConfig, org.apache.flink.table.planner.delegation.hive.RelOptCluster):org.apache.flink.table.planner.delegation.hive.HiveParserUtils.LateralViewInfo \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "isUDTF",
    "target_class": "org.apache.flink.table.functions.FunctionKind"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "getFunctionInfo",
    "target_class": "org.apache.flink.table.catalog.hive.client.HiveShim"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "convertRowSchemaToResultSetSchema",
    "target_class": "boolean):java.util.List<org.apache.flink.table.planner.delegation.hive.FieldSchema> \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "saveViewDefinition",
    "target_class": "org.apache.flink.table.planner.delegation.hive.parse.HiveParserCreateViewInfo, org.apache.flink.table.planner.delegation.hive.TokenRewriteStream, org.apache.flink.table.planner.delegation.hive.copy.HiveParserUnparseTranslator, org.apache.hadoop.hive.conf.HiveConf):void \t org.apache.flink.table.planner.delegation.hive.parse.HiveParserCreateViewInfo"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "getSessionHiveShim",
    "target_class": "org.apache.flink.table.catalog.hive.client.HiveShimLoader"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "verifyCanHandleAst",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB, org.apache.flink.table.planner.delegation.hive.QueryProperties):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserQB"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserUtils",
    "source_method": "toAggCall",
    "target_class": "org.apache.flink.table.planner.delegation.hive.HiveParserRexNodeConverter, java.util.Map<java.lang.String,java.lang.Integer>, int, org.apache.flink.table.planner.delegation.hive.RelNode, org.apache.flink.table.planner.delegation.hive.RelOptCluster, org.apache.flink.table.planner.delegation.hive.SqlFunctionConverter):org.apache.flink.table.planner.delegation.hive.AggregateCall \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer.AggInfo"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserTypeCheckProcFactory",
    "source_method": "processGByExpr",
    "target_class": "java.lang.Object):org.apache.flink.table.planner.delegation.hive.ExprNodeDesc \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeCheckCtx"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserTypeCheckProcFactory.DefaultExprProcessor",
    "source_method": "getFunctionText",
    "target_class": "boolean):java.lang.String \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserBaseSemanticAnalyzer"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserTypeCheckProcFactory.DefaultExprProcessor",
    "source_method": "getFuncExprNodeDescWithUdfData",
    "target_class": "org.apache.flink.table.planner.delegation.hive.TypeInfo, org.apache.flink.table.planner.delegation.hive.ExprNodeDesc[]):org.apache.flink.table.planner.delegation.hive.ExprNodeDesc \t org.apache.flink.table.planner.delegation.hive.HiveParserUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserTypeCheckProcFactory.DefaultExprProcessor",
    "source_method": "getReferenceableColumnAliases",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserTypeCheckCtx"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.expressions.ExpressionBuilder",
    "source_method": "literal",
    "target_class": "org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.expressions.ExpressionBuilder",
    "source_method": "literal",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.expressions.ValueLiteralExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.expressions.ExpressionBuilder",
    "source_method": "call",
    "target_class": "org.apache.flink.table.expressions.Expression[]):org.apache.flink.table.expressions.UnresolvedCallExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.expressions.ExpressionBuilder",
    "source_method": "call",
    "target_class": "java.util.List<org.apache.flink.table.expressions.Expression>):org.apache.flink.table.expressions.UnresolvedCallExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserDMLHelper",
    "source_method": "createInsertOperation",
    "target_class": "org.apache.flink.table.planner.delegation.hive.RelNode):org.apache.flink.table.operations.Operation \t org.apache.flink.table.planner.delegation.hive.HiveParserQBMetaData"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserDMLHelper",
    "source_method": "getContextResolvedTable",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserDMLHelper",
    "source_method": "getTableOrError",
    "target_class": "org.apache.flink.table.catalog.CatalogRegistry"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserDMLHelper",
    "source_method": "createDummyTableForInsertDirectory",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):org.apache.flink.table.catalog.ContextResolvedTable \t org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserDMLHelper",
    "source_method": "createConversionCast",
    "target_class": "org.apache.flink.table.planner.delegation.hive.RexNode, org.apache.flink.table.planner.delegation.hive.TypeInfo, org.apache.flink.table.planner.delegation.hive.RelDataType, org.apache.flink.table.planner.delegation.hive.SqlFunctionConverter):org.apache.flink.table.planner.delegation.hive.RexNode \t org.apache.flink.table.planner.delegation.hive.HiveParserUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserDMLHelper",
    "source_method": "isTypeConversionNeeded",
    "target_class": "java.util.List<org.apache.flink.table.planner.delegation.hive.RelDataType>):boolean \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParser",
    "source_method": "createCalcitePlanner",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserQueryState):org.apache.flink.table.planner.delegation.hive.HiveParserCalcitePlanner \t org.apache.flink.table.planner.delegation.hive.HiveParserCalcitePlanner"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParser",
    "source_method": "analyzeCreateView",
    "target_class": "org.apache.flink.table.planner.delegation.hive.copy.HiveParserContext, org.apache.flink.table.planner.delegation.hive.copy.HiveParserQueryState):void \t org.apache.flink.table.planner.delegation.hive.parse.HiveParserCreateViewInfo"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParser",
    "source_method": "analyzeSql",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf, org.apache.flink.table.catalog.hive.client.HiveShim, org.apache.flink.table.planner.delegation.hive.copy.HiveParserASTNode):org.apache.flink.table.operations.Operation \t org.apache.flink.table.planner.delegation.hive.HiveParserDMLHelper"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.hive.HiveParserProjectWindowTrimmer",
    "source_method": "trimProjectWindow",
    "target_class": "org.apache.flink.table.planner.delegation.hive.Project, java.util.Map<org.apache.flink.table.planner.delegation.hive.RelNode,org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver>, java.util.Map<org.apache.flink.table.planner.delegation.hive.RelNode,java.util.Map<java.lang.String,java.lang.Integer>>):org.apache.flink.table.planner.delegation.hive.RelNode \t org.apache.flink.table.planner.delegation.hive.copy.HiveParserRowResolver"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.TableSchemaUtils",
    "source_method": "resolvedSchema",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.TableSchemaUtils",
    "source_method": "buildModifyColumnChange",
    "target_class": "org.apache.flink.table.catalog.Column, org.apache.flink.table.catalog.TableChange.ColumnPosition):java.util.List<org.apache.flink.table.catalog.TableChange> \t org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.TableSchemaUtils",
    "source_method": "changeColumn",
    "target_class": "java.lang.String, org.apache.flink.table.catalog.Column, boolean, java.lang.String):org.apache.flink.table.catalog.ResolvedSchema \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.FlinkTypeUtils",
    "source_method": "toLogicalType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.HiveCatalogUtils",
    "source_method": "getHiveConf",
    "target_class": "org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.HiveCatalogUtils",
    "source_method": "getHiveVersion",
    "target_class": "org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.HiveCatalogUtils",
    "source_method": "getTable",
    "target_class": "org.apache.flink.table.catalog.ObjectPath):org.apache.flink.table.planner.utils.Table \t org.apache.flink.table.catalog.hive.util.HiveReflectionUtils"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.HiveServer2Endpoint",
    "source_method": "waitUntilOperationIsTerminated",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle):void \t org.apache.flink.table.gateway.api.SqlGatewayService"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.OperationExecutorFactory",
    "source_method": "createGetTableTypesExecutor",
    "target_class": "org.apache.flink.table.catalog.CatalogBaseTable.TableKind"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.OperationExecutorFactory",
    "source_method": "wrap",
    "target_class": "org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.OperationExecutorFactory",
    "source_method": "buildResultSet",
    "target_class": "java.util.List<org.apache.flink.table.data.RowData>):org.apache.flink.table.gateway.api.results.ResultSet \t org.apache.flink.table.api.ResultKind"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.OperationExecutorFactory",
    "source_method": "getFunctionName",
    "target_class": "org.apache.flink.table.functions.hive.HiveFunctionWrapper"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.OperationExecutorFactory",
    "source_method": "getColumnSize",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.OperationExecutorFactory",
    "source_method": "getDecimalDigits",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.HiveJdbcParameterUtils",
    "source_method": "setVariables",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>, java.util.Map<java.lang.String,java.lang.String>):void \t org.apache.flink.table.planner.delegation.hive.copy.HiveSetProcessor"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "toTSessionHandle",
    "target_class": "org.apache.flink.table.gateway.api.session.SessionHandle"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "toTOperationHandle",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle, org.apache.flink.table.endpoint.hive.util.TOperationType):org.apache.flink.table.endpoint.hive.util.TOperationHandle \t org.apache.flink.table.gateway.api.session.SessionHandle"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "toTTableSchema",
    "target_class": "org.apache.flink.table.catalog.hive.util.HiveTypeUtil"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "toTRowSet",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema, java.util.List<org.apache.flink.table.data.RowData>):org.apache.flink.table.endpoint.hive.util.TRowSet \t org.apache.flink.table.endpoint.hive.HiveServer2EndpointVersion"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "toFlinkTableKinds",
    "target_class": "org.apache.flink.table.catalog.CatalogBaseTable.TableKind"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "toTColumn",
    "target_class": "org.apache.flink.table.data.RowData.FieldGetter, java.util.function.Function<java.lang.Object,java.lang.String>, java.util.List<org.apache.flink.table.data.RowData>):org.apache.flink.table.endpoint.hive.util.TColumn \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "toTColumnValue",
    "target_class": "java.lang.Object, java.util.function.Function<java.lang.Object,java.lang.String>):org.apache.flink.table.endpoint.hive.util.TColumnValue \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "hasTypeQualifiers",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "toTTypeQualifiers",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.endpoint.hive.util.ThriftObjectConversions",
    "source_method": "buildTableTypeMapping",
    "target_class": "org.apache.flink.table.catalog.CatalogBaseTable.TableKind"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.client.HiveMetastoreClientFactory",
    "source_method": "create",
    "target_class": "java.lang.String):org.apache.flink.table.catalog.hive.client.HiveMetastoreClientWrapper \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.client.HiveMetastoreClientWrapper",
    "source_method": "createMetastoreClient",
    "target_class": "org.apache.flink.table.catalog.hive.client.HiveShim"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.client.HiveMetastoreClientWrapper",
    "source_method": "alter_table",
    "target_class": "java.lang.String, org.apache.flink.table.catalog.hive.client.Table):void \t org.apache.flink.table.catalog.hive.client.HiveShim"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.client.HiveMetastoreClientWrapper",
    "source_method": "alter_partition",
    "target_class": "java.lang.String, org.apache.flink.table.catalog.hive.client.Partition):void \t org.apache.flink.table.catalog.hive.client.HiveShim"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.factories.HiveFunctionDefinitionFactory",
    "source_method": "createFunctionDefinitionFromFlinkFunction",
    "target_class": "org.apache.flink.table.catalog.CatalogFunction, org.apache.flink.table.factories.FunctionDefinitionFactory.Context):org.apache.flink.table.functions.FunctionDefinition \t org.apache.flink.table.factories.FunctionDefinitionFactory.Context"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.factories.HiveFunctionDefinitionFactory",
    "source_method": "isFlinkFunction",
    "target_class": "java.lang.ClassLoader):boolean \t org.apache.flink.table.catalog.CatalogFunction"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "createSchema",
    "target_class": "java.util.List<org.apache.flink.table.catalog.hive.util.FieldSchema>, java.util.Set<java.lang.String>, org.apache.flink.table.api.constraints.UniqueConstraint):org.apache.flink.table.api.Schema \t org.apache.flink.table.api.Schema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "createResolvedSchema",
    "target_class": "java.util.List<org.apache.flink.table.catalog.hive.util.FieldSchema>, java.util.Set<java.lang.String>, org.apache.flink.table.api.constraints.UniqueConstraint):org.apache.flink.table.catalog.ResolvedSchema \t org.apache.flink.table.api.constraints.AbstractConstraint"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "extractRowType",
    "target_class": "org.apache.flink.table.catalog.hive.util.Table, org.apache.flink.table.catalog.hive.client.HiveMetastoreClientWrapper, org.apache.flink.table.catalog.hive.client.HiveShim):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "getColumnInformation",
    "target_class": "java.util.List<org.apache.flink.table.catalog.hive.util.FieldSchema>, java.util.Set<java.lang.String>, org.apache.flink.table.api.constraints.UniqueConstraint):org.apache.flink.api.java.tuple.Tuple2<java.lang.String[],org.apache.flink.table.types.DataType[]> \t org.apache.flink.table.api.constraints.UniqueConstraint"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "extractHiveTableInfo",
    "target_class": "org.apache.flink.table.catalog.hive.util.Table, org.apache.flink.table.catalog.hive.client.HiveMetastoreClientWrapper, org.apache.flink.table.catalog.hive.client.HiveShim):org.apache.flink.api.java.tuple.Tuple4<java.util.List<org.apache.flink.table.catalog.hive.util.FieldSchema>,java.util.List<org.apache.flink.table.catalog.hive.util.FieldSchema>,java.util.Set<java.lang.String>,java.util.Optional<org.apache.flink.table.api.constraints.UniqueConstraint>> \t org.apache.flink.table.catalog.hive.client.HiveMetastoreClientWrapper"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "extractColumnInformation",
    "target_class": "java.util.Set<java.lang.String>):org.apache.flink.api.java.tuple.Tuple2<java.lang.String[],org.apache.flink.table.types.DataType[]> \t org.apache.flink.table.catalog.hive.util.HiveTypeUtil"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "createHiveColumns",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "makePartitionFilter",
    "target_class": "java.util.List<java.lang.String>, java.util.List<org.apache.flink.table.expressions.Expression>, org.apache.flink.table.catalog.hive.client.HiveShim):java.util.Optional<java.lang.String> \t org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "setStorageFormat",
    "target_class": "java.lang.String, org.apache.hadoop.hive.conf.HiveConf):void \t org.apache.hadoop.hive.conf.HiveConf"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "setDefaultStorageFormat",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf):void \t org.apache.hadoop.hive.conf.HiveConf"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "alterColumns",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable):void \t org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "extractAlterTableOp",
    "target_class": "org.apache.flink.table.catalog.hive.util.AlterTableOp"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "instantiateHiveTable",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogBaseTable, org.apache.hadoop.hive.conf.HiveConf, boolean):org.apache.flink.table.catalog.hive.util.Table \t org.apache.flink.table.catalog.CatalogView"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "maskFlinkProperties",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTableUtil",
    "source_method": "getNonPartitionFields",
    "target_class": "org.apache.flink.table.catalog.hive.util.Table, org.apache.flink.table.catalog.hive.client.HiveShim):java.util.List<org.apache.flink.table.catalog.hive.util.FieldSchema> \t org.apache.flink.table.catalog.hive.client.HiveShim"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTypeUtil",
    "source_method": "toHiveTypeInfo",
    "target_class": "boolean):org.apache.flink.table.catalog.hive.util.TypeInfo \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTypeUtil",
    "source_method": "toHiveTypeInfo",
    "target_class": "boolean):org.apache.flink.table.catalog.hive.util.TypeInfo \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTypeUtil",
    "source_method": "toFlinkType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveTypeUtil",
    "source_method": "toFlinkPrimitiveType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveStatsUtil",
    "source_method": "createCatalogColumnStats",
    "target_class": "java.lang.String):java.util.Map<java.lang.String,org.apache.flink.table.catalog.stats.CatalogColumnStatisticsDataBase> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveStatsUtil",
    "source_method": "getCatalogPartitionColumnStats",
    "target_class": "org.apache.flink.table.catalog.hive.client.HiveShim, org.apache.flink.table.catalog.hive.util.Table, java.lang.String, java.util.List<org.apache.flink.table.catalog.hive.util.FieldSchema>, java.lang.String):java.util.Map<java.lang.String,org.apache.flink.table.catalog.stats.CatalogColumnStatisticsDataBase> \t org.apache.flink.connectors.hive.util.HivePartitionUtils"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveStatsUtil",
    "source_method": "getPartitionColumnStats",
    "target_class": "org.apache.flink.table.catalog.hive.util.Table, org.apache.flink.table.types.logical.LogicalType, java.lang.Object, int, java.lang.String):org.apache.flink.table.catalog.stats.CatalogColumnStatisticsDataBase \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveStatsUtil",
    "source_method": "getPartitionColumnNullCount",
    "target_class": "org.apache.flink.table.catalog.hive.util.Table, int, java.lang.String):java.lang.Long \t org.apache.flink.table.plan.stats.TableStats"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveStatsUtil",
    "source_method": "statsChanged",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):boolean \t org.apache.flink.table.catalog.stats.CatalogTableStatistics"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveStatsUtil",
    "source_method": "updateStats",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):void \t org.apache.flink.table.catalog.stats.CatalogTableStatistics"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveStatsUtil",
    "source_method": "createHiveColumnStatistics",
    "target_class": "org.apache.flink.table.catalog.hive.util.StorageDescriptor, org.apache.flink.table.catalog.hive.util.ColumnStatisticsDesc, java.lang.String):org.apache.flink.table.catalog.hive.util.ColumnStatistics \t org.apache.flink.table.catalog.hive.util.HiveTypeUtil"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveStatsUtil",
    "source_method": "createTableColumnStats",
    "target_class": "org.apache.flink.table.catalog.hive.util.ColumnStatisticsData, java.lang.String):org.apache.flink.table.catalog.stats.CatalogColumnStatisticsDataBase \t org.apache.flink.table.catalog.hive.client.HiveShimLoader"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveStatsUtil",
    "source_method": "getColumnStatisticsData",
    "target_class": "org.apache.flink.table.catalog.stats.CatalogColumnStatisticsDataBase, java.lang.String):org.apache.flink.table.catalog.hive.util.ColumnStatisticsData \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveReflectionUtils",
    "source_method": "getTableMetadata",
    "target_class": "org.apache.flink.table.catalog.hive.util.Table):java.util.Properties \t org.apache.flink.table.catalog.hive.client.HiveShim"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.util.HiveReflectionUtils",
    "source_method": "getPvals",
    "target_class": "java.util.List<org.apache.flink.table.catalog.hive.util.FieldSchema>, java.util.Map<java.lang.String,java.lang.String>):java.util.List<java.lang.String> \t org.apache.flink.table.catalog.hive.client.HiveShim"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.HiveCatalog",
    "source_method": "createHiveConf",
    "target_class": "java.lang.String):org.apache.hadoop.hive.conf.HiveConf \t org.apache.flink.table.catalog.hive.util.HiveTableUtil"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.HiveCatalog",
    "source_method": "instantiateHiveFunction",
    "target_class": "org.apache.flink.table.catalog.CatalogFunction):org.apache.flink.table.catalog.hive.Function \t org.apache.flink.table.resource.ResourceUri"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.HiveCatalog",
    "source_method": "isHiveTable",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.HiveCatalog",
    "source_method": "isHiveTable",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.HiveCatalog",
    "source_method": "loadTable",
    "target_class": "org.apache.flink.table.catalog.ObjectPath, boolean, boolean):void \t org.apache.flink.table.catalog.ObjectPath"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.HiveCatalog",
    "source_method": "disallowChangeCatalogTableType",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.HiveCatalog",
    "source_method": "getCatalogTableType",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.HiveCatalog",
    "source_method": "isEmbeddedMetastore",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.table.catalog.hive.HiveCatalog",
    "source_method": "alterDatabase",
    "target_class": "org.apache.flink.table.catalog.CatalogDatabase):org.apache.flink.table.catalog.hive.Database \t org.apache.flink.table.catalog.hive.util.AlterHiveDatabaseOp"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.hive.script.HiveScriptTransformOperator",
    "source_method": "initScriptInputSerDe",
    "target_class": "org.apache.flink.table.runtime.script.ScriptTransformIOInfo"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.hive.script.HiveScriptTransformOperator",
    "source_method": "initOutputSerDe",
    "target_class": "org.apache.flink.table.runtime.script.ScriptTransformIOInfo"
  },
  {
    "source_class": "org.apache.hadoop.hive.conf.HiveConf",
    "source_method": "populateLlapDaemonVarsSet",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf.ConfVars"
  },
  {
    "source_class": "org.apache.hadoop.hive.conf.HiveConf",
    "source_method": "getVar",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf.ConfVars, org.apache.hadoop.hive.conf.HiveConf.EncoderDecoder<java.lang.String,java.lang.String>):java.lang.String \t org.apache.hadoop.hive.conf.HiveConf.EncoderDecoder"
  },
  {
    "source_class": "org.apache.hadoop.hive.conf.HiveConf",
    "source_method": "setVar",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf.ConfVars, java.lang.String, org.apache.hadoop.hive.conf.HiveConf.EncoderDecoder<java.lang.String,java.lang.String>):void \t org.apache.hadoop.hive.conf.HiveConf.EncoderDecoder"
  },
  {
    "source_class": "org.apache.hadoop.hive.conf.HiveConf",
    "source_method": "getConfSystemProperties",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf.ConfVars"
  },
  {
    "source_class": "org.apache.hadoop.hive.conf.HiveConf",
    "source_method": "applyDefaultNonNullConfVars",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf.ConfVars"
  },
  {
    "source_class": "org.apache.hadoop.hive.conf.HiveConf.StrictChecks",
    "source_method": "isAllowed",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf.ConfVars):boolean \t org.apache.hadoop.hive.conf.HiveConf"
  },
  {
    "source_class": "org.apache.hadoop.hive.conf.HiveConf",
    "source_method": "getNonMrEngines",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf.ConfVars"
  },
  {
    "source_class": "org.apache.hadoop.hive.conf.HiveConf",
    "source_method": "getOrCreateReverseMap",
    "target_class": "org.apache.hadoop.hive.conf.HiveConf.ConfVars"
  },
  {
    "source_class": "org.apache.flink.hadoopcompatibility.HadoopUtils",
    "source_method": "paramsFromGenericOptionsParser",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.api.java.hadoop.mapred.utils.HadoopUtils",
    "source_method": "mergeHadoopConf",
    "target_class": "org.apache.flink.configuration.GlobalConfiguration"
  },
  {
    "source_class": "org.apache.flink.api.java.hadoop.mapred.utils.HadoopUtils",
    "source_method": "getHadoopConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.java.hadoop.mapred.utils.HadoopUtils",
    "source_method": "possibleHadoopConfPaths",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.java.hadoop.mapreduce.utils.HadoopUtils",
    "source_method": "mergeHadoopConf",
    "target_class": "org.apache.flink.configuration.GlobalConfiguration"
  },
  {
    "source_class": "org.apache.flink.connector.base.source.reader.SourceReaderBase",
    "source_method": "finishedOrAvailableLater",
    "target_class": "org.apache.flink.connector.base.source.reader.synchronization.FutureCompletingBlockingQueue"
  },
  {
    "source_class": "org.apache.flink.connector.base.source.hybrid.HybridSourceSplitEnumerator",
    "source_method": "checkAndSignalNoMoreSplits",
    "target_class": "int, int, int):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connector.base.source.hybrid.HybridSource",
    "source_method": "builder",
    "target_class": "org.apache.flink.connector.base.source.hybrid.HybridSource.HybridSourceBuilder"
  },
  {
    "source_class": "org.apache.flink.connector.base.source.hybrid.HybridSourceSplit",
    "source_method": "wrapSplit",
    "target_class": "int, org.apache.flink.connector.base.source.hybrid.SwitchedSources):org.apache.flink.connector.base.source.hybrid.HybridSourceSplit \t org.apache.flink.connector.base.source.hybrid.SwitchedSources"
  },
  {
    "source_class": "org.apache.flink.connector.base.source.utils.SerdeUtils",
    "source_method": "serializeSplitAssignments",
    "target_class": "org.apache.flink.core.io.SimpleVersionedSerializer<SplitT>):byte[] \t org.apache.flink.core.io.SimpleVersionedSerializer"
  },
  {
    "source_class": "org.apache.flink.connector.base.source.utils.SerdeUtils",
    "source_method": "deserializeSplitAssignments",
    "target_class": "org.apache.flink.core.io.SimpleVersionedSerializer<SplitT>, java.util.function.Function<java.lang.Integer,C>):java.util.Map<java.lang.Integer,C> \t org.apache.flink.core.io.SimpleVersionedSerializer"
  },
  {
    "source_class": "org.apache.flink.connector.base.sink.throwable.FatalExceptionClassifier",
    "source_method": "withRootCauseOfType",
    "target_class": "extends java.lang.Throwable>, java.util.function.Function<java.lang.Throwable,java.lang.Exception>):org.apache.flink.connector.base.sink.throwable.FatalExceptionClassifier \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.connector.base.sink.writer.AsyncSinkFatalExceptionClassifiers",
    "source_method": "getInterruptedExceptionClassifier",
    "target_class": "org.apache.flink.connector.base.sink.throwable.FatalExceptionClassifier"
  },
  {
    "source_class": "org.apache.flink.connector.base.sink.writer.AsyncSinkWriter",
    "source_method": "registerCallback",
    "target_class": "org.apache.flink.api.common.operators.ProcessingTimeService"
  },
  {
    "source_class": "org.apache.flink.connector.base.sink.writer.AsyncSinkWriter",
    "source_method": "nonBlockingFlush",
    "target_class": "org.apache.flink.connector.base.sink.writer.strategy.RateLimitingStrategy"
  },
  {
    "source_class": "org.apache.flink.connector.base.sink.writer.AsyncSinkWriter",
    "source_method": "yieldIfThereExistsInFlightRequests",
    "target_class": "org.apache.flink.api.common.operators.MailboxExecutor"
  },
  {
    "source_class": "org.apache.flink.connector.base.sink.writer.AsyncSinkWriter",
    "source_method": "getNextBatchSizeLimit",
    "target_class": "org.apache.flink.connector.base.sink.writer.strategy.RateLimitingStrategy"
  },
  {
    "source_class": "org.apache.flink.connector.base.table.sink.options.AsyncSinkConfigurationValidator",
    "source_method": "validatePositiveLongValue",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.connector.base.table.sink.options.AsyncSinkConfigurationValidator",
    "source_method": "validateOptionValue",
    "target_class": "java.util.function.Predicate<T>, java.lang.String):void \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.rollingpolicies.DefaultRollingPolicy.PolicyBuilder",
    "source_method": "withMaxPartSize",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.OutputStreamBasedPartFileWriter.OutputStreamBasedInProgressFileRecoverableSerializer",
    "source_method": "serializeV2",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.streaming.api.functions.sink.filesystem.OutputStreamBasedPartFileWriter.OutputStreamBasedInProgressFileRecoverable"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.OutputStreamBasedPartFileWriter.OutputStreamBasedPendingFileRecoverableSerializer",
    "source_method": "serializeV2",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.streaming.api.functions.sink.filesystem.OutputStreamBasedPartFileWriter.OutputStreamBasedPendingFileRecoverable"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap",
    "source_method": "allocateSpace",
    "target_class": "org.apache.flink.runtime.state.heap.space.Allocator"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap",
    "source_method": "deleteNodeMeta",
    "target_class": "long, long):long \t org.apache.flink.runtime.state.heap.space.Allocator"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap",
    "source_method": "getRandomIndexLevel",
    "target_class": "org.apache.flink.runtime.state.heap.LevelIndexHeader"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap",
    "source_method": "getFirstNodeWithNamespace",
    "target_class": "int, int):long \t org.apache.flink.runtime.state.heap.LevelIndexHeader"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap",
    "source_method": "releaseAllResource",
    "target_class": "org.apache.flink.runtime.state.heap.space.Allocator"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap",
    "source_method": "getValueForSnapshot",
    "target_class": "int):long \t org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap.ValueVersionIterator"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap",
    "source_method": "getAndPruneValueForSnapshot",
    "target_class": "int):long \t org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap.ValueVersionIterator"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap",
    "source_method": "helpGetBytesForState",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap",
    "source_method": "getNodeSegmentAndOffset",
    "target_class": "org.apache.flink.runtime.state.heap.space.Chunk"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListKeyComparator",
    "source_method": "compareTo",
    "target_class": "int, org.apache.flink.core.memory.MemorySegment, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListKeyComparator",
    "source_method": "compareNamespaceAndNode",
    "target_class": "int, int, org.apache.flink.core.memory.MemorySegment, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListKeySerializer",
    "source_method": "getSerializedKeyAndNamespace",
    "target_class": "int):org.apache.flink.api.java.tuple.Tuple2<byte[],byte[]> \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getLevel",
    "target_class": "int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getNodeStatus",
    "target_class": "int):org.apache.flink.runtime.state.heap.NodeStatus \t org.apache.flink.runtime.state.heap.NodeStatus"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putLevelAndNodeStatus",
    "target_class": "int, int, org.apache.flink.runtime.state.heap.NodeStatus):void \t org.apache.flink.runtime.state.heap.NodeStatus"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getKeyLen",
    "target_class": "int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putKeyLen",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getValuePointer",
    "target_class": "int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putValuePointer",
    "target_class": "int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getNextKeyPointer",
    "target_class": "int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putNextKeyPointer",
    "target_class": "int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getNextIndexNode",
    "target_class": "int, int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putNextIndexNode",
    "target_class": "int, int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getPrevIndexNode",
    "target_class": "int, int, int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putPrevIndexNode",
    "target_class": "int, int, int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getKeyMetaLen",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putKeyData",
    "target_class": "int, org.apache.flink.core.memory.MemorySegment, int, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getValueVersion",
    "target_class": "int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putValueVersion",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getKeyPointer",
    "target_class": "int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putKeyPointer",
    "target_class": "int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getNextValuePointer",
    "target_class": "int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putNextValuePointer",
    "target_class": "int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "getValueLen",
    "target_class": "int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putValueLen",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "putValueData",
    "target_class": "int, byte[]):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpSetNextNode",
    "target_class": "long, int, org.apache.flink.runtime.state.heap.LevelIndexHeader, org.apache.flink.runtime.state.heap.space.Allocator):void \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpGetNextNode",
    "target_class": "int, org.apache.flink.runtime.state.heap.LevelIndexHeader, org.apache.flink.runtime.state.heap.space.Allocator):long \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpSetPrevNode",
    "target_class": "long, int, org.apache.flink.runtime.state.heap.space.Allocator):void \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpSetPrevAndNextNode",
    "target_class": "long, long, int, org.apache.flink.runtime.state.heap.space.Allocator):void \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "isNodeRemoved",
    "target_class": "org.apache.flink.runtime.state.heap.space.Allocator):boolean \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "compareSegmentAndNode",
    "target_class": "int, long, org.apache.flink.runtime.state.heap.space.Allocator):int \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "findPredecessor",
    "target_class": "int, org.apache.flink.runtime.state.heap.LevelIndexHeader, org.apache.flink.runtime.state.heap.space.Allocator):long \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpGetNextValuePointer",
    "target_class": "org.apache.flink.runtime.state.heap.space.Allocator):long \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpSetNextValuePointer",
    "target_class": "long, org.apache.flink.runtime.state.heap.space.Allocator):void \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "removeLevelIndex",
    "target_class": "org.apache.flink.runtime.state.heap.space.Allocator, org.apache.flink.runtime.state.heap.LevelIndexHeader):void \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpGetValuePointer",
    "target_class": "org.apache.flink.runtime.state.heap.space.Allocator):long \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpGetValueVersion",
    "target_class": "org.apache.flink.runtime.state.heap.space.Allocator):int \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpGetValueLen",
    "target_class": "org.apache.flink.runtime.state.heap.space.Allocator):int \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.SkipListUtils",
    "source_method": "helpGetNodeLatestVersion",
    "target_class": "org.apache.flink.runtime.state.heap.space.Allocator):int \t org.apache.flink.runtime.state.heap.space.SpaceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMapSnapshot",
    "source_method": "writeKeyAndNamespace",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMapSnapshot",
    "source_method": "writeValue",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.runtime.state.heap.CopyOnWriteSkipListStateMap"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBMapState",
    "source_method": "deserializeUserKey",
    "target_class": "int, byte[], org.apache.flink.api.common.typeutils.TypeSerializer<UK>):UK \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBMapState",
    "source_method": "deserializeUserValue",
    "target_class": "byte[], org.apache.flink.api.common.typeutils.TypeSerializer<UV>):UV \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBMapState",
    "source_method": "startWithKeyPrefix",
    "target_class": "byte[]):boolean \t org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBMapState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend<K>):IS \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBMapState",
    "source_method": "update",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, IS):IS \t org.apache.flink.contrib.streaming.state.AbstractRocksDBState"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBMapState.StateSnapshotTransformerWrapper",
    "source_method": "isNull",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBPriorityQueueConfig",
    "source_method": "buildWithPriorityQueueType",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBResourceContainer",
    "source_method": "getWriteBufferManagerCapacity",
    "target_class": "org.apache.flink.runtime.memory.OpaqueMemoryResource"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBResourceContainer",
    "source_method": "getReadOptions",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBOptionsFactory"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBResourceContainer",
    "source_method": "getMemoryWatcherOptions",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBOptionsFactory"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBResourceContainer",
    "source_method": "internalGetOption",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBStateUploader",
    "source_method": "uploadLocalFileToCheckpointFs",
    "target_class": "org.apache.flink.runtime.state.CheckpointStreamFactory, org.apache.flink.runtime.state.CheckpointedStateScope, org.apache.flink.core.fs.CloseableRegistry, org.apache.flink.core.fs.CloseableRegistry):org.apache.flink.runtime.state.IncrementalKeyedStateHandle.HandleAndLocalPath \t org.apache.flink.runtime.state.CheckpointStateOutputStream"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.DefaultConfigurableOptionsFactory",
    "source_method": "isOptionConfigured",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.DefaultConfigurableOptionsFactory",
    "source_method": "checkArgumentValid",
    "target_class": "java.lang.Object):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBConfigurableOptions",
    "source_method": "checkArgumentValid",
    "target_class": "java.lang.Object):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBAggregatingState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend<K>):IS \t org.apache.flink.api.common.state.AggregatingStateDescriptor"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBAggregatingState",
    "source_method": "update",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, IS):IS \t org.apache.flink.api.common.state.AggregatingStateDescriptor"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend",
    "source_method": "tryRegisterKvStateInformation",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.runtime.state.StateSnapshotTransformer.StateSnapshotTransformFactory<SEV>, boolean):org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>> \t org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend",
    "source_method": "updateRestoredStateMetaInfo",
    "target_class": "org.apache.flink.api.common.state.StateDescriptor<S,SV>, org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.api.common.typeutils.TypeSerializer<SV>):org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV> \t org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend",
    "source_method": "checkMapStateKeySchemaCompatibility",
    "target_class": "org.apache.flink.api.common.typeutils.base.MapSerializer<?,?>):boolean \t org.apache.flink.api.common.typeutils.base.MapSerializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBValueState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend<K>):IS \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBValueState",
    "source_method": "update",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, IS):IS \t org.apache.flink.contrib.streaming.state.AbstractRocksDBState"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBStateBackend",
    "source_method": "createOptionsAndResourceContainer",
    "target_class": "org.apache.flink.contrib.streaming.state.EmbeddedRocksDBStateBackend"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBCachingPriorityQueueSet",
    "source_method": "flushWriteBatch",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBWriteBatchWrapper"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBCachingPriorityQueueSet",
    "source_method": "addToRocksDB",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBWriteBatchWrapper"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBCachingPriorityQueueSet",
    "source_method": "removeFromRocksDB",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBWriteBatchWrapper"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBCachingPriorityQueueSet",
    "source_method": "checkRefillCacheFromStore",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBCachingPriorityQueueSet.OrderedByteArraySetCache"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBCachingPriorityQueueSet",
    "source_method": "createKeyGroupBytes",
    "target_class": "int):byte[] \t org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBSnapshotTransformFactoryAdaptor",
    "source_method": "wrapStateSnapshotTransformFactory",
    "target_class": "org.apache.flink.runtime.state.StateSnapshotTransformer.StateSnapshotTransformFactory<SEV>, org.apache.flink.api.common.typeutils.TypeSerializer<SV>):org.apache.flink.runtime.state.StateSnapshotTransformer.StateSnapshotTransformFactory<SV> \t org.apache.flink.api.common.typeutils.base.ListSerializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.AbstractRocksDBState",
    "source_method": "serializeCurrentKeyWithGroupAndNamespacePlusUserKey",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<UK>):byte[] \t org.apache.flink.runtime.state.SerializedCompositeKeyBuilder"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.AbstractRocksDBState",
    "source_method": "serializeValueInternal",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):byte[] \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.AbstractRocksDBState",
    "source_method": "serializeCurrentKeyWithGroupAndNamespace",
    "target_class": "org.apache.flink.runtime.state.SerializedCompositeKeyBuilder"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.AbstractRocksDBState",
    "source_method": "serializeValueNullSensitive",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):byte[] \t org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.AbstractRocksDBState",
    "source_method": "serializeValue",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):byte[] \t org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBIncrementalCheckpointUtils",
    "source_method": "stateHandleEvaluator",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange, double):org.apache.flink.contrib.streaming.state.RocksDBIncrementalCheckpointUtils.Score \t org.apache.flink.runtime.state.KeyGroupRange"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBIncrementalCheckpointUtils",
    "source_method": "clipDBWithKeyGroupRange",
    "target_class": "java.util.List<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle>, org.apache.flink.runtime.state.KeyGroupRange, org.apache.flink.runtime.state.KeyGroupRange, int):void \t org.apache.flink.runtime.state.CompositeKeySerializationUtils"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBPriorityQueueSetFactory",
    "source_method": "tryRegisterPriorityQueueMetaInfo",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>, boolean):org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend.RocksDbKvStateInfo \t org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBReducingState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend<K>):IS \t org.apache.flink.api.common.state.ReducingStateDescriptor"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBReducingState",
    "source_method": "update",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, IS):IS \t org.apache.flink.contrib.streaming.state.AbstractRocksDBState"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.snapshot.RocksIncrementalSnapshotStrategy.RocksDBIncrementalSnapshotOperation",
    "source_method": "createUploadFilePaths",
    "target_class": "java.util.List<org.apache.flink.runtime.state.IncrementalKeyedStateHandle.HandleAndLocalPath>, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>):void \t org.apache.flink.contrib.streaming.state.snapshot.RocksDBSnapshotStrategyBase.PreviousSnapshot"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.snapshot.RocksDBSnapshotStrategyBase",
    "source_method": "prepareLocalSnapshotDirectory",
    "target_class": "org.apache.flink.runtime.state.LocalRecoveryConfig"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.snapshot.RocksDBSnapshotStrategyBase.PreviousSnapshot",
    "source_method": "getUploaded",
    "target_class": "org.apache.flink.runtime.state.StreamStateHandle"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.snapshot.RocksDBFullSnapshotResources",
    "source_method": "create",
    "target_class": "java.util.Map<java.lang.String,org.apache.flink.runtime.state.heap.HeapPriorityQueueSnapshotRestoreWrapper<?>>, org.apache.flink.contrib.streaming.state.snapshot.RocksDB, org.apache.flink.util.ResourceGuard, org.apache.flink.runtime.state.KeyGroupRange, org.apache.flink.api.common.typeutils.TypeSerializer<K>, int, org.apache.flink.runtime.state.StreamCompressionDecorator):org.apache.flink.contrib.streaming.state.snapshot.RocksDBFullSnapshotResources<K> \t org.apache.flink.runtime.state.RegisteredStateMetaInfoBase"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.PredefinedOptions",
    "source_method": "getValue",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBSharedResourcesFactory",
    "source_method": "getTmSharedMemorySize",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBSharedResourcesFactory",
    "source_method": "createAllocator",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBMemoryControllerUtils.RocksDBMemoryFactory):org.apache.flink.util.function.LongFunctionWithException<org.apache.flink.contrib.streaming.state.RocksDBSharedResources,java.lang.Exception> \t org.apache.flink.contrib.streaming.state.RocksDBMemoryControllerUtils"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBNativeMetricMonitor",
    "source_method": "registerColumnFamily",
    "target_class": "org.apache.flink.contrib.streaming.state.ColumnFamilyHandle):void \t org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.EmbeddedRocksDBStateBackend",
    "source_method": "setPriorityQueueStateType",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBPriorityQueueConfig"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.EmbeddedRocksDBStateBackend",
    "source_method": "ensureRocksDBIsLoaded",
    "target_class": "java.util.function.Supplier<org.apache.flink.contrib.streaming.state.NativeLibraryLoader>):void \t org.apache.flink.util.FileUtils"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.iterator.RocksStatesPerKeyGroupMergeIterator",
    "source_method": "buildIteratorHeap",
    "target_class": "java.util.List<org.apache.flink.contrib.streaming.state.iterator.SingleStateIterator>):java.util.PriorityQueue<org.apache.flink.contrib.streaming.state.iterator.SingleStateIterator> \t org.apache.flink.contrib.streaming.state.RocksIteratorWrapper"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.iterator.RocksQueueIterator",
    "source_method": "writeKeyGroupId",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.StateHandleDownloadSpec",
    "source_method": "createLocalStateHandleForDownloadedState",
    "target_class": "org.apache.flink.runtime.state.IncrementalRemoteKeyedStateHandle"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.restore.RocksDBIncrementalRestoreOperation",
    "source_method": "restorePreviousIncrementalFilesStatus",
    "target_class": "org.apache.flink.runtime.state.IncrementalKeyedStateHandle"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.restore.RocksDBIncrementalRestoreOperation",
    "source_method": "restoreBaseDBFromRemoteState",
    "target_class": "org.apache.flink.contrib.streaming.state.StateHandleDownloadSpec"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.restore.RocksDBIncrementalRestoreOperation",
    "source_method": "transferRemoteStateToLocalDirectory",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBStateDownloader"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.restore.RocksDBHeapTimersFullRestoreOperation",
    "source_method": "restoreQueueElement",
    "target_class": "org.apache.flink.runtime.state.restore.KeyGroupEntry):void \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.restore.RocksDBHeapTimersFullRestoreOperation",
    "source_method": "createInternal",
    "target_class": "org.apache.flink.runtime.state.heap.HeapPriorityQueueSetFactory"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.restore.RocksDBHandle",
    "source_method": "getOrRegisterStateColumnFamilyHandle",
    "target_class": "org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot):org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend.RocksDbKvStateInfo \t org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBListState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend<K>):IS \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBListState",
    "source_method": "update",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle,org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo<N,SV>>, IS):IS \t org.apache.flink.contrib.streaming.state.AbstractRocksDBState"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBOperationUtils",
    "source_method": "openDB",
    "target_class": "java.util.List<org.apache.flink.contrib.streaming.state.ColumnFamilyDescriptor>, java.util.List<org.apache.flink.contrib.streaming.state.ColumnFamilyHandle>, org.apache.flink.contrib.streaming.state.ColumnFamilyOptions, org.apache.flink.contrib.streaming.state.DBOptions):org.apache.flink.contrib.streaming.state.RocksDB \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBOperationUtils",
    "source_method": "registerKvStateInformation",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDBNativeMetricMonitor, java.lang.String, org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend.RocksDbKvStateInfo):void \t org.apache.flink.contrib.streaming.state.RocksDBNativeMetricMonitor"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBOperationUtils",
    "source_method": "createColumnFamilyDescriptor",
    "target_class": "java.util.function.Function<java.lang.String,org.apache.flink.contrib.streaming.state.ColumnFamilyOptions>, org.apache.flink.contrib.streaming.state.ttl.RocksDbTtlCompactFiltersManager, java.lang.Long):org.apache.flink.contrib.streaming.state.ColumnFamilyDescriptor \t org.apache.flink.runtime.state.RegisteredStateMetaInfoBase"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBOperationUtils",
    "source_method": "sanityCheckArenaBlockSize",
    "target_class": "long, long):boolean \t org.apache.flink.contrib.streaming.state.RocksDBMemoryControllerUtils"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBOperationUtils",
    "source_method": "createColumnFamily",
    "target_class": "org.apache.flink.contrib.streaming.state.RocksDB):org.apache.flink.contrib.streaming.state.ColumnFamilyHandle \t org.apache.flink.util.IOUtils"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBOperationUtils",
    "source_method": "allocateSharedCachesIfConfigured",
    "target_class": "org.apache.flink.runtime.execution.Environment, double, org.apache.flink.contrib.streaming.state.Logger, org.apache.flink.contrib.streaming.state.RocksDBMemoryControllerUtils.RocksDBMemoryFactory):org.apache.flink.runtime.memory.OpaqueMemoryResource<org.apache.flink.contrib.streaming.state.RocksDBSharedResources> \t org.apache.flink.contrib.streaming.state.RocksDBSharedResourcesFactory"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBOperationUtils",
    "source_method": "throwExceptionIfPathLengthExceededOnWindows",
    "target_class": "java.lang.Exception):void \t org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBStateDownloader",
    "source_method": "transferAllStateDataToDirectory",
    "target_class": "org.apache.flink.core.fs.CloseableRegistry):void \t org.apache.flink.runtime.state.StateBackend.CustomInitializationMetrics"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBStateDownloader",
    "source_method": "downloadDataForStateHandle",
    "target_class": "org.apache.flink.runtime.state.StreamStateHandle, org.apache.flink.core.fs.CloseableRegistry):void \t org.apache.flink.runtime.state.StreamStateHandle"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.ttl.RocksDbTtlCompactFiltersManager",
    "source_method": "setAndRegisterCompactFilterIfStateTtl",
    "target_class": "org.apache.flink.contrib.streaming.state.ttl.ColumnFamilyOptions):void \t org.apache.flink.runtime.state.RegisteredStateMetaInfoBase"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.ttl.RocksDbTtlCompactFiltersManager.ListElementFilter",
    "source_method": "nextElementLastAccessTimestamp",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBMemoryConfiguration",
    "source_method": "setFixedMemoryPerSlot",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBMemoryConfiguration",
    "source_method": "setFixedMemoryPerSlot",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.contrib.streaming.state.RocksDBMemoryConfiguration",
    "source_method": "fromOtherAndConfiguration",
    "target_class": "org.apache.flink.configuration.ReadableConfig):org.apache.flink.contrib.streaming.state.RocksDBMemoryConfiguration \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.state.changelog.ChangelogKeyedStateBackend",
    "source_method": "buildSnapshotResult",
    "target_class": "org.apache.flink.runtime.state.SnapshotResult<? extends org.apache.flink.runtime.state.changelog.ChangelogStateHandle>, org.apache.flink.state.changelog.ChangelogKeyedStateBackend<K>.ChangelogSnapshotState):org.apache.flink.runtime.state.SnapshotResult<org.apache.flink.runtime.state.changelog.ChangelogStateBackendHandle> \t org.apache.flink.runtime.state.SnapshotResult"
  },
  {
    "source_class": "org.apache.flink.state.changelog.ChangelogKeyedStateBackend",
    "source_method": "completeRestore",
    "target_class": "org.apache.flink.runtime.state.changelog.ChangelogStateBackendLocalHandle"
  },
  {
    "source_class": "org.apache.flink.state.changelog.ChangelogKeyedStateBackend",
    "source_method": "getMaterializedResult",
    "target_class": "org.apache.flink.runtime.state.SnapshotResult"
  },
  {
    "source_class": "org.apache.flink.state.changelog.ChangelogKeyedStateBackend",
    "source_method": "getLocalMaterializedResult",
    "target_class": "org.apache.flink.runtime.state.SnapshotResult"
  },
  {
    "source_class": "org.apache.flink.state.changelog.ChangelogKeyedStateBackend.ChangelogSnapshotState",
    "source_method": "getMaterializedSnapshot",
    "target_class": "org.apache.flink.runtime.state.SnapshotResult"
  },
  {
    "source_class": "org.apache.flink.state.changelog.ChangelogKeyedStateBackend.ChangelogSnapshotState",
    "source_method": "getLocalMaterializedSnapshot",
    "target_class": "org.apache.flink.runtime.state.SnapshotResult"
  },
  {
    "source_class": "org.apache.flink.state.changelog.ChangelogKeyedStateBackend.ChangelogSnapshotState",
    "source_method": "getRestoredNonMaterialized",
    "target_class": "org.apache.flink.runtime.state.SnapshotResult"
  },
  {
    "source_class": "org.apache.flink.state.changelog.ChangelogKeyedStateBackend.ChangelogSnapshotState",
    "source_method": "getLocalRestoredNonMaterialized",
    "target_class": "org.apache.flink.runtime.state.SnapshotResult"
  },
  {
    "source_class": "org.apache.flink.state.changelog.AbstractStateChangeLogger",
    "source_method": "logMetaIfNeeded",
    "target_class": "org.apache.flink.runtime.state.changelog.StateChangelogWriter"
  },
  {
    "source_class": "org.apache.flink.state.changelog.AbstractStateChangeLogger",
    "source_method": "serializeRaw",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.state.changelog.DeactivatedChangelogStateBackend",
    "source_method": "reboundCheckpoint",
    "target_class": "org.apache.flink.runtime.state.changelog.ChangelogStateBackendHandle"
  },
  {
    "source_class": "org.apache.flink.state.changelog.ChangelogStateFactory",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.state.internal.InternalKvState<K,N,V>, org.apache.flink.state.changelog.KvStateChangeLogger<V,N>, org.apache.flink.runtime.state.InternalKeyContext<K>):org.apache.flink.state.changelog.ChangelogState \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendLogApplier",
    "source_method": "apply",
    "target_class": "org.apache.flink.state.changelog.restore.ChangelogRestoreTarget<?>, java.lang.ClassLoader, java.util.Map<java.lang.Short,org.apache.flink.state.changelog.restore.StateID>):void \t org.apache.flink.state.changelog.StateChangeOperation"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendLogApplier",
    "source_method": "applyMetaDataChange",
    "target_class": "org.apache.flink.state.changelog.restore.ChangelogRestoreTarget<?>, java.lang.ClassLoader, java.util.Map<java.lang.Short,org.apache.flink.state.changelog.restore.StateID>):void \t org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendLogApplier",
    "source_method": "readTtlConfig",
    "target_class": "org.apache.flink.api.common.state.StateTtlConfig"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendLogApplier",
    "source_method": "readDefaultValue",
    "target_class": "org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo):java.lang.Object \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendLogApplier",
    "source_method": "toStateDescriptor",
    "target_class": "java.lang.Object):org.apache.flink.api.common.state.StateDescriptor \t org.apache.flink.runtime.state.RegisteredKeyValueStateBackendMetaInfo"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendLogApplier",
    "source_method": "restorePqMetaData",
    "target_class": "org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot):org.apache.flink.runtime.state.RegisteredPriorityQueueStateBackendMetaInfo \t org.apache.flink.runtime.state.RegisteredStateMetaInfoBase"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendLogApplier",
    "source_method": "readStateMetaInfoSnapshot",
    "target_class": "java.lang.ClassLoader):org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot \t org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshotReadersWriters"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendLogApplier",
    "source_method": "applyDataChange",
    "target_class": "org.apache.flink.state.changelog.restore.ChangelogApplierFactory, org.apache.flink.state.changelog.restore.ChangelogRestoreTarget<?>, org.apache.flink.state.changelog.StateChangeOperation, java.util.Map<java.lang.Short,org.apache.flink.state.changelog.restore.StateID>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.FunctionDelegationHelper",
    "source_method": "tryGetFunction",
    "target_class": "org.apache.flink.api.common.state.AggregatingStateDescriptor"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.KvStateChangeApplier",
    "source_method": "applyMergeNamespaces",
    "target_class": "org.apache.flink.core.memory.DataInputView):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendRestoreOperation",
    "source_method": "readBackendHandle",
    "target_class": "org.apache.flink.runtime.state.TaskStateManager, org.apache.flink.state.changelog.restore.ChangelogRestoreTarget<?>, org.apache.flink.runtime.state.changelog.ChangelogStateBackendHandle, java.lang.ClassLoader):void \t org.apache.flink.state.changelog.restore.ChangelogBackendLogApplier"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogBackendRestoreOperation",
    "source_method": "extractBaseState",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.changelog.restore.ChangelogMigrationRestoreTarget",
    "source_method": "wrapKeyedStateBackend",
    "target_class": "org.apache.flink.state.changelog.ChangelogStateFactory, org.apache.flink.state.changelog.restore.FunctionDelegationHelper):org.apache.flink.runtime.state.AbstractKeyedStateBackend<K> \t org.apache.flink.runtime.state.AbstractKeyedStateBackend"
  },
  {
    "source_class": "org.apache.flink.state.changelog.StateChangeOperation",
    "source_method": "byCode",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.common.ChangelogMaterializationMetricGroup",
    "source_method": "reportStartedMaterialization",
    "target_class": "org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.state.common.ChangelogMaterializationMetricGroup",
    "source_method": "reportCompletedMaterialization",
    "target_class": "org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.state.common.ChangelogMaterializationMetricGroup",
    "source_method": "reportFailedMaterialization",
    "target_class": "org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.state.common.PeriodicMaterializationManager",
    "source_method": "notifyFailureOrCancellation",
    "target_class": "org.apache.flink.runtime.state.changelog.SequenceNumber, java.lang.Throwable):void \t org.apache.flink.api.common.operators.MailboxExecutor"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnTaskExecutorRunner",
    "source_method": "runTaskManagerSecurely",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnTaskExecutorRunner",
    "source_method": "setupAndModifyConfiguration",
    "target_class": "java.lang.String, java.util.Map<java.lang.String,java.lang.String>):void \t org.apache.flink.runtime.clusterframework.BootstrapTools"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnTaskExecutorRunner",
    "source_method": "setupConfigurationFromVariables",
    "target_class": "java.lang.String, java.util.Map<java.lang.String,java.lang.String>):void \t org.apache.flink.yarn.Utils"
  },
  {
    "source_class": "org.apache.flink.yarn.Utils",
    "source_method": "deleteApplicationFiles",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.yarn.Utils",
    "source_method": "isRemotePath",
    "target_class": "org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.yarn.Utils",
    "source_method": "decodeYarnLocalResourceDescriptorListFromString",
    "target_class": "org.apache.flink.yarn.YarnLocalResourceDescriptor"
  },
  {
    "source_class": "org.apache.flink.yarn.Utils",
    "source_method": "getRemoteSharedLibPaths",
    "target_class": "org.apache.flink.util.function.FunctionWithException<java.lang.String,org.apache.flink.yarn.Path,java.io.IOException>):java.util.List<org.apache.flink.yarn.Path> \t org.apache.flink.configuration.ConfigUtils"
  },
  {
    "source_class": "org.apache.flink.yarn.Utils",
    "source_method": "getQualifiedRemoteProvidedUsrLib",
    "target_class": "org.apache.flink.yarn.YarnConfiguration):java.util.Optional<org.apache.flink.yarn.Path> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.yarn.Utils",
    "source_method": "getYarnAndHadoopConfiguration",
    "target_class": "org.apache.flink.runtime.util.HadoopUtils"
  },
  {
    "source_class": "org.apache.flink.yarn.Utils",
    "source_method": "getYarnConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.yarn.Utils",
    "source_method": "setAclsFor",
    "target_class": "org.apache.flink.configuration.Configuration):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnApplicationFileUploader",
    "source_method": "getApplicationDirPath",
    "target_class": "org.apache.flink.yarn.ApplicationId):org.apache.flink.yarn.Path \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnClusterDescriptor",
    "source_method": "adaptEnvSetting",
    "target_class": "org.apache.flink.configuration.ConfigOption<T>, java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnClusterDescriptor",
    "source_method": "isArchiveOnlyIncludedInShipArchiveFiles",
    "target_class": "org.apache.flink.yarn.YarnConfiguration):boolean \t org.apache.flink.util.function.FunctionUtils"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnClusterDescriptor",
    "source_method": "activateHighAvailabilitySupport",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnClusterDescriptor",
    "source_method": "setApplicationTags",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnClusterDescriptor",
    "source_method": "setApplicationNodeLabel",
    "target_class": "org.apache.flink.yarn.YarnClusterDescriptor.ApplicationSubmissionContextReflector"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnClusterDescriptor",
    "source_method": "getUserJarInclusionMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnClusterDescriptor",
    "source_method": "isUsrLibDirIncludedInShipFiles",
    "target_class": "org.apache.flink.yarn.YarnConfiguration):boolean \t org.apache.flink.util.function.FunctionUtils"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnLocalResourceDescriptor",
    "source_method": "fromFileStatus",
    "target_class": "org.apache.flink.yarn.FileStatus, org.apache.flink.yarn.LocalResourceVisibility, org.apache.flink.yarn.LocalResourceType):org.apache.flink.yarn.YarnLocalResourceDescriptor \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.yarn.YarnResourceManagerDriver",
    "source_method": "getContainerResource",
    "target_class": "org.apache.flink.yarn.TaskExecutorProcessSpecContainerResourcePriorityAdapter"
  },
  {
    "source_class": "org.apache.flink.yarn.cli.FlinkYarnSessionCli",
    "source_method": "applyYarnProperties",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.yarn.cli.FlinkYarnSessionCli",
    "source_method": "runInteractiveCli",
    "target_class": "boolean):void \t org.apache.flink.yarn.cli.YarnApplicationStatusMonitor"
  },
  {
    "source_class": "org.apache.flink.yarn.entrypoint.YarnApplicationClusterEntryPoint",
    "source_method": "getPackagedProgram",
    "target_class": "org.apache.flink.client.deployment.application.ApplicationConfiguration"
  },
  {
    "source_class": "org.apache.flink.yarn.entrypoint.YarnApplicationClusterEntryPoint",
    "source_method": "getPackagedProgramRetriever",
    "target_class": "java.lang.String[], java.lang.String):org.apache.flink.client.program.PackagedProgramRetriever \t org.apache.flink.yarn.entrypoint.YarnEntrypointUtils"
  },
  {
    "source_class": "org.apache.flink.yarn.entrypoint.YarnApplicationClusterEntryPoint",
    "source_method": "getUserApplicationJar",
    "target_class": "org.apache.flink.configuration.Configuration):java.io.File \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.yarn.entrypoint.YarnWorkerResourceSpecFactory",
    "source_method": "getDefaultCpus",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.yarn.entrypoint.YarnEntrypointUtils",
    "source_method": "loadConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration, java.util.Map<java.lang.String,java.lang.String>):org.apache.flink.configuration.Configuration \t org.apache.flink.configuration.GlobalConfiguration"
  },
  {
    "source_class": "org.apache.flink.yarn.entrypoint.YarnEntrypointUtils",
    "source_method": "logYarnEnvironmentInformation",
    "target_class": "org.apache.flink.yarn.entrypoint.Logger):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.yarn.entrypoint.YarnEntrypointUtils",
    "source_method": "getUsrLibDir",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.ClientUtils",
    "source_method": "buildUserCodeClassLoader",
    "target_class": "java.util.List<java.net.URL>, java.lang.ClassLoader, org.apache.flink.configuration.Configuration):java.net.URLClassLoader \t org.apache.flink.util.FlinkUserCodeClassLoaders"
  },
  {
    "source_class": "org.apache.flink.client.ClientUtils",
    "source_method": "executeProgram",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.client.program.PackagedProgram, boolean, boolean):void \t org.apache.flink.client.program.PackagedProgram"
  },
  {
    "source_class": "org.apache.flink.client.ClientUtils",
    "source_method": "waitUntilJobInitializationFinished",
    "target_class": "org.apache.flink.util.function.SupplierWithException<org.apache.flink.runtime.jobmaster.JobResult,java.lang.Exception>, java.lang.ClassLoader):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.client.ClientUtils",
    "source_method": "reportHeartbeatPeriodically",
    "target_class": "long, long):java.util.concurrent.ScheduledExecutorService \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.client.PlanTranslator",
    "source_method": "compilePlan",
    "target_class": "org.apache.flink.configuration.Configuration):org.apache.flink.runtime.jobgraph.JobGraph \t org.apache.flink.api.common.Plan"
  },
  {
    "source_class": "org.apache.flink.client.program.PackagedProgramUtils",
    "source_method": "createJobGraph",
    "target_class": "org.apache.flink.configuration.Configuration, int, org.apache.flink.api.common.JobID, boolean):org.apache.flink.runtime.jobgraph.JobGraph \t org.apache.flink.client.program.PackagedProgram"
  },
  {
    "source_class": "org.apache.flink.client.program.PackagedProgramUtils",
    "source_method": "getPipelineFromProgram",
    "target_class": "org.apache.flink.configuration.Configuration, int, boolean):org.apache.flink.api.dag.Pipeline \t org.apache.flink.client.program.StreamPlanEnvironment"
  },
  {
    "source_class": "org.apache.flink.client.program.PackagedProgramUtils",
    "source_method": "generateException",
    "target_class": "java.lang.String, java.lang.Throwable, java.io.ByteArrayOutputStream, java.io.ByteArrayOutputStream):org.apache.flink.client.program.ProgramInvocationException \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.client.program.StreamContextEnvironment",
    "source_method": "setAsContext",
    "target_class": "org.apache.flink.configuration.Configuration, java.lang.ClassLoader, boolean, boolean):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.program.StreamContextEnvironment",
    "source_method": "removeProgramConfigWildcards",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.program.PackagedProgram",
    "source_method": "getJobJarAndDependencies",
    "target_class": "java.lang.String):java.util.List<java.net.URL> \t org.apache.flink.client.program.PackagedProgramUtils"
  },
  {
    "source_class": "org.apache.flink.client.program.DefaultPackagedProgramRetriever",
    "source_method": "createEntryClassInformationProvider",
    "target_class": "java.io.File, java.lang.String, java.lang.String[]):org.apache.flink.client.deployment.application.EntryClassInformationProvider \t org.apache.flink.client.program.PackagedProgramUtils"
  },
  {
    "source_class": "org.apache.flink.client.program.DefaultPackagedProgramRetriever",
    "source_method": "fromSystemClasspath",
    "target_class": "org.apache.flink.client.deployment.application.FromClasspathEntryClassInformationProvider"
  },
  {
    "source_class": "org.apache.flink.client.program.DefaultPackagedProgramRetriever",
    "source_method": "fromUserClasspath",
    "target_class": "java.lang.Iterable<java.net.URL>):org.apache.flink.client.deployment.application.EntryClassInformationProvider \t org.apache.flink.client.deployment.application.FromClasspathEntryClassInformationProvider"
  },
  {
    "source_class": "org.apache.flink.client.program.DefaultPackagedProgramRetriever",
    "source_method": "getClasspathsFromUserLibDir",
    "target_class": "org.apache.flink.util.FileUtils"
  },
  {
    "source_class": "org.apache.flink.client.program.DefaultPackagedProgramRetriever",
    "source_method": "getClasspathsFromConfiguration",
    "target_class": "org.apache.flink.configuration.ConfigUtils"
  },
  {
    "source_class": "org.apache.flink.client.program.PerJobMiniClusterFactory",
    "source_method": "submitJob",
    "target_class": "java.lang.ClassLoader):java.util.concurrent.CompletableFuture<org.apache.flink.core.execution.JobClient> \t org.apache.flink.runtime.minicluster.MiniCluster"
  },
  {
    "source_class": "org.apache.flink.client.program.PerJobMiniClusterFactory",
    "source_method": "getMiniClusterConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.program.PerJobMiniClusterFactory",
    "source_method": "shutDownCluster",
    "target_class": "org.apache.flink.runtime.minicluster.MiniCluster"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClientConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "startLeaderRetrievers",
    "target_class": "org.apache.flink.runtime.leaderretrieval.LeaderRetrievalService"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "getJobDetails",
    "target_class": "org.apache.flink.runtime.rest.messages.job.JobDetailsHeaders"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "stopWithSavepoint",
    "target_class": "boolean, java.lang.String, org.apache.flink.core.execution.SavepointFormatType, boolean):java.util.concurrent.CompletableFuture<java.lang.String> \t org.apache.flink.runtime.rest.messages.job.savepoints.stop.StopWithSavepointTriggerHeaders"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "triggerSavepoint",
    "target_class": "java.lang.String, boolean, org.apache.flink.core.execution.SavepointFormatType, boolean):java.util.concurrent.CompletableFuture<java.lang.String> \t org.apache.flink.runtime.rest.messages.job.savepoints.SavepointTriggerHeaders"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "pollSavepointAsync",
    "target_class": "org.apache.flink.runtime.rest.messages.TriggerId):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.rest.messages.job.savepoints.SavepointInfo> \t org.apache.flink.runtime.rest.messages.job.savepoints.SavepointStatusHeaders"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "pollCheckpointAsync",
    "target_class": "org.apache.flink.runtime.rest.messages.TriggerId):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.rest.messages.checkpoints.CheckpointInfo> \t org.apache.flink.runtime.rest.messages.checkpoints.CheckpointStatusMessageParameters"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "pollResourceAsync",
    "target_class": "java.util.concurrent.CompletableFuture<R>, long):java.util.concurrent.CompletableFuture<R> \t org.apache.flink.client.program.rest.retry.WaitStrategy"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "requestJobStatus",
    "target_class": "org.apache.flink.runtime.rest.messages.job.JobStatusInfoHeaders"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "requestJobResultInternal",
    "target_class": "org.apache.flink.runtime.jobmaster.JobResult"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "sendRetriableRequest",
    "target_class": "U, R, java.util.Collection<org.apache.flink.runtime.rest.FileUpload>, java.util.function.Predicate<java.lang.Throwable>, java.util.function.BiConsumer<java.lang.String,java.lang.Throwable>):java.util.concurrent.CompletableFuture<P> \t org.apache.flink.runtime.rest.RestClient"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "retry",
    "target_class": "java.util.function.Predicate<java.lang.Throwable>):java.util.concurrent.CompletableFuture<C> \t org.apache.flink.client.program.rest.RestClusterClientConfiguration"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "isConnectionProblemException",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "httpExceptionCodePredicate",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.client.program.rest.RestClusterClient",
    "source_method": "getWebMonitorBaseUrl",
    "target_class": "org.apache.flink.runtime.webmonitor.retriever.LeaderRetriever"
  },
  {
    "source_class": "org.apache.flink.client.FlinkPipelineTranslationUtil",
    "source_method": "getJobGraph",
    "target_class": "org.apache.flink.api.dag.Pipeline, org.apache.flink.configuration.Configuration, int):org.apache.flink.runtime.jobgraph.JobGraph \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.FlinkPipelineTranslationUtil",
    "source_method": "getPipelineTranslator",
    "target_class": "org.apache.flink.api.dag.Pipeline):org.apache.flink.client.FlinkPipelineTranslator \t org.apache.flink.client.PlanTranslator"
  },
  {
    "source_class": "org.apache.flink.client.deployment.ClusterClientJobClientAdapter",
    "source_method": "bridgeClientRequest",
    "target_class": "java.util.function.Function<org.apache.flink.client.program.ClusterClient<?>,java.util.concurrent.CompletableFuture<T>>):java.util.concurrent.CompletableFuture<T> \t org.apache.flink.util.concurrent.FutureUtils"
  },
  {
    "source_class": "org.apache.flink.client.deployment.executors.LocalExecutor",
    "source_method": "getJobGraph",
    "target_class": "org.apache.flink.configuration.Configuration, java.lang.ClassLoader):org.apache.flink.runtime.jobgraph.JobGraph \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.deployment.executors.PipelineExecutorUtils",
    "source_method": "getJobGraph",
    "target_class": "org.apache.flink.configuration.Configuration, java.lang.ClassLoader):org.apache.flink.runtime.jobgraph.JobGraph \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationClusterEntryPoint",
    "source_method": "configureExecution",
    "target_class": "org.apache.flink.client.program.PackagedProgram):void \t org.apache.flink.client.program.PackagedProgramUtils"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationClusterEntryPoint",
    "source_method": "getClasspath",
    "target_class": "org.apache.flink.client.program.PackagedProgram):java.util.List<java.net.URL> \t org.apache.flink.configuration.ConfigUtils"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.JobStatusPollingUtils",
    "source_method": "pollJobResultAsync",
    "target_class": "java.util.function.Supplier<java.util.concurrent.CompletableFuture<org.apache.flink.runtime.jobmaster.JobResult>>, org.apache.flink.util.concurrent.ScheduledExecutor, java.util.concurrent.CompletableFuture<org.apache.flink.runtime.jobmaster.JobResult>, long, long):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.jobmaster.JobResult> \t org.apache.flink.api.common.JobStatus"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.executors.EmbeddedExecutor",
    "source_method": "submitJob",
    "target_class": "org.apache.flink.runtime.dispatcher.DispatcherGateway, org.apache.flink.runtime.jobgraph.JobGraph, org.apache.flink.api.common.time.Time):java.util.concurrent.CompletableFuture<org.apache.flink.api.common.JobID> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.FromJarEntryClassInformationProvider",
    "source_method": "createFromPythonJar",
    "target_class": "org.apache.flink.client.program.PackagedProgramUtils"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationDispatcherBootstrap",
    "source_method": "isCanceledOrFailed",
    "target_class": "org.apache.flink.runtime.clusterframework.ApplicationStatus"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationDispatcherBootstrap",
    "source_method": "finish",
    "target_class": "org.apache.flink.runtime.clusterframework.ApplicationStatus):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.messages.Acknowledge> \t org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationDispatcherBootstrap",
    "source_method": "fixJobIdAndRunApplicationAsync",
    "target_class": "org.apache.flink.util.concurrent.ScheduledExecutor):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationDispatcherBootstrap",
    "source_method": "runApplicationAsync",
    "target_class": "org.apache.flink.util.concurrent.ScheduledExecutor, boolean, boolean):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.util.concurrent.ScheduledExecutor"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationDispatcherBootstrap",
    "source_method": "runApplicationEntryPoint",
    "target_class": "java.util.Set<org.apache.flink.api.common.JobID>, org.apache.flink.runtime.dispatcher.DispatcherGateway, org.apache.flink.util.concurrent.ScheduledExecutor, boolean, boolean):void \t org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationDispatcherBootstrap",
    "source_method": "getJobResult",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.util.concurrent.ScheduledExecutor, boolean):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.jobmaster.JobResult> \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationDispatcherBootstrap",
    "source_method": "unwrapJobResultException",
    "target_class": "org.apache.flink.client.program.PackagedProgram"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.FromClasspathEntryClassInformationProvider",
    "source_method": "create",
    "target_class": "java.lang.Iterable<java.net.URL>):org.apache.flink.client.deployment.application.FromClasspathEntryClassInformationProvider \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.FromClasspathEntryClassInformationProvider",
    "source_method": "extractSystemClasspath",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.FromClasspathEntryClassInformationProvider",
    "source_method": "extractJobClassNameFromFileClasspath",
    "target_class": "org.apache.flink.client.deployment.application.JarManifestParser.JarFileWithEntryClass"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.UnsuccessfulExecutionException",
    "source_method": "fromJobResult",
    "target_class": "java.lang.ClassLoader):org.apache.flink.client.deployment.application.UnsuccessfulExecutionException \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationConfiguration",
    "source_method": "applyToConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.deployment.application.ApplicationConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "getConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "getJobJarAndDependencies",
    "target_class": "org.apache.flink.client.cli.ProgramOptions"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "getEffectiveConfiguration",
    "target_class": "org.apache.flink.client.cli.CommandLine):org.apache.flink.configuration.Configuration \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "stopWithSavepoint",
    "target_class": "org.apache.flink.api.common.JobID, boolean, java.lang.String, org.apache.flink.core.execution.SavepointFormatType, java.time.Duration):void \t org.apache.flink.client.program.ClusterClient"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "stopWithDetachedSavepoint",
    "target_class": "org.apache.flink.api.common.JobID, boolean, java.lang.String, org.apache.flink.core.execution.SavepointFormatType, java.time.Duration):void \t org.apache.flink.client.program.ClusterClient"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "triggerSavepoint",
    "target_class": "org.apache.flink.api.common.JobID, java.lang.String, org.apache.flink.core.execution.SavepointFormatType, java.time.Duration):void \t org.apache.flink.client.program.ClusterClient"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "triggerDetachedSavepoint",
    "target_class": "org.apache.flink.api.common.JobID, java.lang.String, org.apache.flink.core.execution.SavepointFormatType, java.time.Duration):void \t org.apache.flink.client.program.ClusterClient"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "disposeSavepoint",
    "target_class": "java.lang.String, java.time.Duration):void \t org.apache.flink.client.program.ClusterClient"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "triggerCheckpoint",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.core.execution.CheckpointType, java.time.Duration):void \t org.apache.flink.client.program.ClusterClient"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "buildProgram",
    "target_class": "org.apache.flink.configuration.Configuration):org.apache.flink.client.program.PackagedProgram \t org.apache.flink.client.cli.ProgramOptions"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "mainInternal",
    "target_class": "org.apache.flink.runtime.security.SecurityUtils"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "setJobManagerAddressInConfig",
    "target_class": "java.net.InetSocketAddress):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "loadCustomCommandLine",
    "target_class": "java.lang.Object[]):org.apache.flink.client.cli.CustomCommandLine \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "getClientTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontend",
    "source_method": "getDefaultParallelism",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.ProgramOptions",
    "source_method": "create",
    "target_class": "org.apache.flink.client.cli.ProgramOptionsUtils"
  },
  {
    "source_class": "org.apache.flink.client.cli.DynamicPropertiesUtil",
    "source_method": "encodeDynamicProperties",
    "target_class": "org.apache.flink.configuration.Configuration):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.GenericCLI",
    "source_method": "getExecutorFactoryNames",
    "target_class": "org.apache.flink.core.execution.DefaultExecutorServiceLoader"
  },
  {
    "source_class": "org.apache.flink.client.cli.ExecutionConfigAccessor",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.client.cli.ExecutionConfigAccessor",
    "source_method": "fromProgramOptions",
    "target_class": "java.util.List<T>):org.apache.flink.client.cli.ExecutionConfigAccessor \t org.apache.flink.configuration.ConfigUtils"
  },
  {
    "source_class": "org.apache.flink.client.cli.ExecutionConfigAccessor",
    "source_method": "applyToConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.ExecutionConfigAccessor",
    "source_method": "getParallelism",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.ExecutionConfigAccessor",
    "source_method": "getDetachedMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.ExecutionConfigAccessor",
    "source_method": "isShutdownOnAttachedExit",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.client.cli.CliFrontendParser",
    "source_method": "createSavepointRestoreSettings",
    "target_class": "org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.client.cli.ProgramOptionsUtils",
    "source_method": "getPythonClassLoader",
    "target_class": "org.apache.flink.client.program.PackagedProgramUtils"
  },
  {
    "source_class": "org.apache.flink.client.cli.ProgramOptionsUtils",
    "source_method": "configurePythonExecution",
    "target_class": "org.apache.flink.client.program.PackagedProgram):void \t org.apache.flink.client.program.PackagedProgram"
  },
  {
    "source_class": "org.apache.flink.api.java.DataSet",
    "source_method": "clean",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionPlanUtil",
    "source_method": "getExecutionPlanAsJSON",
    "target_class": "org.apache.flink.api.java.ExecutionPlanUtil.ExecutionPlanJSONGenerator"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple2<T0,T1>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple3<T0,T1,T2>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple4<T0,T1,T2,T3>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple5<T0,T1,T2,T3,T4>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple6<T0,T1,T2,T3,T4,T5>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple7<T0,T1,T2,T3,T4,T5,T6>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple8<T0,T1,T2,T3,T4,T5,T6,T7>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple9<T0,T1,T2,T3,T4,T5,T6,T7,T8>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple10<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple11<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple12<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple13<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple14<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple15<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple16<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>, java.lang.Class<T16>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple17<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>, java.lang.Class<T16>, java.lang.Class<T17>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple18<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>, java.lang.Class<T16>, java.lang.Class<T17>, java.lang.Class<T18>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple19<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>, java.lang.Class<T16>, java.lang.Class<T17>, java.lang.Class<T18>, java.lang.Class<T19>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple20<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>, java.lang.Class<T16>, java.lang.Class<T17>, java.lang.Class<T18>, java.lang.Class<T19>, java.lang.Class<T20>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple21<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>, java.lang.Class<T16>, java.lang.Class<T17>, java.lang.Class<T18>, java.lang.Class<T19>, java.lang.Class<T20>, java.lang.Class<T21>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple22<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>, java.lang.Class<T16>, java.lang.Class<T17>, java.lang.Class<T18>, java.lang.Class<T19>, java.lang.Class<T20>, java.lang.Class<T21>, java.lang.Class<T22>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple23<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>, java.lang.Class<T16>, java.lang.Class<T17>, java.lang.Class<T18>, java.lang.Class<T19>, java.lang.Class<T20>, java.lang.Class<T21>, java.lang.Class<T22>, java.lang.Class<T23>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple24<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvReader",
    "source_method": "types",
    "target_class": "java.lang.Class<T1>, java.lang.Class<T2>, java.lang.Class<T3>, java.lang.Class<T4>, java.lang.Class<T5>, java.lang.Class<T6>, java.lang.Class<T7>, java.lang.Class<T8>, java.lang.Class<T9>, java.lang.Class<T10>, java.lang.Class<T11>, java.lang.Class<T12>, java.lang.Class<T13>, java.lang.Class<T14>, java.lang.Class<T15>, java.lang.Class<T16>, java.lang.Class<T17>, java.lang.Class<T18>, java.lang.Class<T19>, java.lang.Class<T20>, java.lang.Class<T21>, java.lang.Class<T22>, java.lang.Class<T23>, java.lang.Class<T24>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple25<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24>> \t org.apache.flink.api.java.typeutils.TupleTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.RowCsvInputFormat",
    "source_method": "extractTypeClasses",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.io.CsvInputFormat",
    "source_method": "toBooleanMask",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.io.PojoCsvInputFormat",
    "source_method": "setOrderOfPOJOFields",
    "target_class": "org.apache.flink.api.java.typeutils.PojoTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.io.BlockingShuffleOutputFormat",
    "source_method": "createOutputFormat",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.RemoteEnvironment",
    "source_method": "getEffectiveConfiguration",
    "target_class": "java.lang.String, int, java.lang.String[], java.util.List<java.net.URL>):org.apache.flink.configuration.Configuration \t org.apache.flink.configuration.ConfigUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "createProjectionPropertiesSingle",
    "target_class": "org.apache.flink.api.common.typeutils.CompositeType<?>):org.apache.flink.api.common.operators.SingleInputSemanticProperties \t org.apache.flink.api.common.operators.SingleInputSemanticProperties"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "createProjectionPropertiesDual",
    "target_class": "boolean[], org.apache.flink.api.common.typeinfo.TypeInformation<?>, org.apache.flink.api.common.typeinfo.TypeInformation<?>):org.apache.flink.api.common.operators.DualInputSemanticProperties \t org.apache.flink.api.java.typeutils.TupleTypeInfoBase"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "addSourceFieldOffset",
    "target_class": "int, int):org.apache.flink.api.common.operators.SingleInputSemanticProperties \t org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "addSourceFieldOffsets",
    "target_class": "int, int, int, int):org.apache.flink.api.common.operators.DualInputSemanticProperties \t org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "parseForwardedFields",
    "target_class": "java.lang.String[], org.apache.flink.api.common.typeinfo.TypeInformation<?>, org.apache.flink.api.common.typeinfo.TypeInformation<?>, int, boolean):void \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "parseNonForwardedFields",
    "target_class": "java.lang.String[], org.apache.flink.api.common.typeinfo.TypeInformation<?>, org.apache.flink.api.common.typeinfo.TypeInformation<?>, int, boolean):void \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "parseReadFields",
    "target_class": "java.lang.String[], org.apache.flink.api.common.typeinfo.TypeInformation<?>, int):void \t org.apache.flink.api.common.operators.SingleInputSemanticProperties"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "areFieldsCompatible",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>, java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation<?>, boolean):boolean \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "getExpressionTypeInformation",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):org.apache.flink.api.common.typeinfo.TypeInformation<?> \t org.apache.flink.api.common.typeutils.CompositeType"
  },
  {
    "source_class": "org.apache.flink.api.java.functions.SemanticPropUtil",
    "source_method": "getFlatFields",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):java.util.List<org.apache.flink.api.common.typeutils.CompositeType.FlatFieldDescriptor> \t org.apache.flink.api.common.typeutils.CompositeType"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.GroupReduceOperator",
    "source_method": "translateSelectorFunctionReducer",
    "target_class": "org.apache.flink.api.common.functions.GroupReduceFunction<IN,OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>, java.lang.String, org.apache.flink.api.common.operators.Operator<IN>, boolean):org.apache.flink.api.java.operators.translation.PlanUnwrappingReduceGroupOperator<IN,OUT,K> \t org.apache.flink.api.common.operators.SingleInputOperator"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.GroupReduceOperator",
    "source_method": "translateSelectorFunctionSortedReducer",
    "target_class": "org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys<IN,?>, org.apache.flink.api.common.operators.Ordering, org.apache.flink.api.common.functions.GroupReduceFunction<IN,OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>, java.lang.String, org.apache.flink.api.common.operators.Operator<IN>, boolean):org.apache.flink.api.java.operators.translation.PlanUnwrappingSortedReduceGroupOperator<IN,OUT,K1,K2> \t org.apache.flink.api.common.operators.base.GroupReduceOperatorBase"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.DistinctOperator",
    "source_method": "translateSelectorFunctionDistinct",
    "target_class": "org.apache.flink.api.common.functions.ReduceFunction<IN>, org.apache.flink.api.common.typeinfo.TypeInformation<IN>, java.lang.String, org.apache.flink.api.common.operators.Operator<IN>, int, org.apache.flink.api.common.operators.base.ReduceOperatorBase.CombineHint):org.apache.flink.api.common.operators.SingleInputOperator<?,IN,?> \t org.apache.flink.api.common.operators.base.ReduceOperatorBase"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.GroupCombineOperator",
    "source_method": "translateSelectorFunctionReducer",
    "target_class": "org.apache.flink.api.common.functions.GroupCombineFunction<IN,OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>, java.lang.String, org.apache.flink.api.common.operators.Operator<IN>):org.apache.flink.api.java.operators.translation.PlanUnwrappingGroupCombineOperator<IN,OUT,K> \t org.apache.flink.api.common.operators.SingleInputOperator"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.GroupCombineOperator",
    "source_method": "translateSelectorFunctionSortedReducer",
    "target_class": "org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys<IN,?>, org.apache.flink.api.common.operators.Ordering, org.apache.flink.api.common.functions.GroupCombineFunction<IN,OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>, java.lang.String, org.apache.flink.api.common.operators.Operator<IN>):org.apache.flink.api.java.operators.translation.PlanUnwrappingSortedGroupCombineOperator<IN,OUT,K1,K2> \t org.apache.flink.api.common.operators.base.GroupCombineOperatorBase"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.OperatorTranslation",
    "source_method": "translate",
    "target_class": "org.apache.flink.api.java.operators.DataSink"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.OperatorTranslation",
    "source_method": "translateSingleInputOperator",
    "target_class": "org.apache.flink.api.java.operators.SingleInputUdfOperator"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.OperatorTranslation",
    "source_method": "translateTwoInputOperator",
    "target_class": "org.apache.flink.api.java.operators.TwoInputOperator"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.OperatorTranslation",
    "source_method": "translateBulkIteration",
    "target_class": "org.apache.flink.api.java.operators.IterativeDataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.OperatorTranslation",
    "source_method": "translateDeltaIteration",
    "target_class": "org.apache.flink.api.java.operators.DeltaIterationResultSet"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.OperatorTranslation",
    "source_method": "translateBcVariables",
    "target_class": "org.apache.flink.api.common.operators.Operator<?>):void \t org.apache.flink.api.common.operators.AbstractUdfOperator"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.JoinOperator.JoinProjection",
    "source_method": "extractFieldTypes",
    "target_class": "org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.PartitionOperator",
    "source_method": "computeOrdering",
    "target_class": "org.apache.flink.api.common.operators.Order[]):org.apache.flink.api.common.operators.Ordering \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.PartitionOperator",
    "source_method": "translateSelectorFunctionPartitioner",
    "target_class": "org.apache.flink.api.common.operators.base.PartitionOperatorBase.PartitionMethod, java.lang.String, org.apache.flink.api.common.operators.Operator<T>, int, org.apache.flink.api.common.functions.Partitioner<?>, org.apache.flink.api.common.operators.Order[]):org.apache.flink.api.common.operators.SingleInputOperator<?,T,?> \t org.apache.flink.api.common.operators.base.PartitionOperatorBase"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.CoGroupOperator",
    "source_method": "translateSelectorFunctionCoGroup",
    "target_class": "org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys<I2,?>, org.apache.flink.api.common.functions.CoGroupFunction<I1,I2,OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>, java.lang.String, org.apache.flink.api.common.operators.Operator<I1>, org.apache.flink.api.common.operators.Operator<I2>):org.apache.flink.api.java.operators.translation.PlanBothUnwrappingCoGroupOperator<I1,I2,OUT,K> \t org.apache.flink.api.common.operators.DualInputOperator"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.CoGroupOperator",
    "source_method": "translateSelectorFunctionCoGroupRight",
    "target_class": "org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys<I2,?>, org.apache.flink.api.common.functions.CoGroupFunction<I1,I2,OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<I1>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>, java.lang.String, org.apache.flink.api.common.operators.Operator<I1>, org.apache.flink.api.common.operators.Operator<I2>):org.apache.flink.api.java.operators.translation.PlanRightUnwrappingCoGroupOperator<I1,I2,OUT,K> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.CoGroupOperator",
    "source_method": "translateSelectorFunctionCoGroupLeft",
    "target_class": "int[], org.apache.flink.api.common.functions.CoGroupFunction<I1,I2,OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<I2>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>, java.lang.String, org.apache.flink.api.common.operators.Operator<I1>, org.apache.flink.api.common.operators.Operator<I2>):org.apache.flink.api.java.operators.translation.PlanLeftUnwrappingCoGroupOperator<I1,I2,OUT,K> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.CoGroupOperator.CoGroupOperatorSets",
    "source_method": "where",
    "target_class": "org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.CoGroupOperator.CoGroupOperatorSets",
    "source_method": "where",
    "target_class": "org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.KeyFunctions",
    "source_method": "appendKeyExtractor",
    "target_class": "org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys<T,K>):org.apache.flink.api.common.operators.Operator<org.apache.flink.api.java.tuple.Tuple2<K,T>> \t org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.KeyFunctions",
    "source_method": "appendKeyExtractor",
    "target_class": "org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys<T,K1>, org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys<T,K2>):org.apache.flink.api.common.operators.Operator<org.apache.flink.api.java.tuple.Tuple3<K1,K2,T>> \t org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.KeyFunctions",
    "source_method": "createTypeWithKey",
    "target_class": "org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.KeyFunctions",
    "source_method": "createTypeWithKey",
    "target_class": "org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys<T,K2>):org.apache.flink.api.common.typeinfo.TypeInformation<org.apache.flink.api.java.tuple.Tuple3<K1,K2,T>> \t org.apache.flink.api.common.operators.Keys.SelectorFunctionKeys"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.CrossOperator.CrossProjection",
    "source_method": "extractFieldTypes",
    "target_class": "org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.DeltaIterationResultSet",
    "source_method": "getKeyPositions",
    "target_class": "org.apache.flink.api.common.operators.Keys"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.join.JoinOperatorSetsBase",
    "source_method": "where",
    "target_class": "org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.join.JoinOperatorSetsBase",
    "source_method": "where",
    "target_class": "org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.operators.ReduceOperator",
    "source_method": "translateSelectorFunctionReducer",
    "target_class": "org.apache.flink.api.common.functions.ReduceFunction<T>, org.apache.flink.api.common.typeinfo.TypeInformation<T>, java.lang.String, org.apache.flink.api.common.operators.Operator<T>, int, org.apache.flink.api.common.operators.base.ReduceOperatorBase.CombineHint):org.apache.flink.api.common.operators.SingleInputOperator<?,T,?> \t org.apache.flink.api.common.operators.Operator"
  },
  {
    "source_class": "org.apache.flink.api.java.LocalEnvironment",
    "source_method": "validateAndGetConfiguration",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.Utils",
    "source_method": "getSerializerTree",
    "target_class": "int):java.lang.String \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "registerType",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "configure",
    "target_class": "java.lang.ClassLoader):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "readTextFile",
    "target_class": "java.lang.String):org.apache.flink.api.java.operators.DataSource<java.lang.String> \t org.apache.flink.api.java.io.TextInputFormat"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "readTextFileWithValue",
    "target_class": "java.lang.String, boolean):org.apache.flink.api.java.operators.DataSource<org.apache.flink.types.StringValue> \t org.apache.flink.api.java.io.TextValueInputFormat"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "fromCollection",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "fromCollection",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<X>, java.lang.String):org.apache.flink.api.java.operators.DataSource<X> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "execute",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "executeAsync",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "createProgramPlan",
    "target_class": "boolean):org.apache.flink.api.common.Plan \t org.apache.flink.api.java.utils.PlanGenerator"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "getJobName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "getExecutionEnvironment",
    "target_class": "org.apache.flink.api.java.Utils"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "createLocalEnvironmentWithWebUI",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.java.ExecutionEnvironment",
    "source_method": "initializeContextEnvironment",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.ParameterTool",
    "source_method": "fromArgs",
    "target_class": "org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.ParameterTool",
    "source_method": "fromMap",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.ParameterTool",
    "source_method": "getConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "countElementsPerPartition",
    "target_class": "org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "zipWithIndex",
    "target_class": "org.apache.flink.api.common.functions.AbstractRichFunction"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "zipWithUniqueId",
    "target_class": "org.apache.flink.api.common.functions.AbstractRichFunction"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "sample",
    "target_class": "boolean, double):org.apache.flink.api.java.operators.MapPartitionOperator<T,T> \t org.apache.flink.api.java.Utils"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "sample",
    "target_class": "boolean, double, long):org.apache.flink.api.java.operators.MapPartitionOperator<T,T> \t org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "sampleWithSize",
    "target_class": "boolean, int):org.apache.flink.api.java.DataSet<T> \t org.apache.flink.api.java.Utils"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "sampleWithSize",
    "target_class": "boolean, int, long):org.apache.flink.api.java.DataSet<T> \t org.apache.flink.api.java.Utils"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "partitionByRange",
    "target_class": "org.apache.flink.api.common.distributions.DataDistribution, int[]):org.apache.flink.api.java.operators.PartitionOperator<T> \t org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "partitionByRange",
    "target_class": "org.apache.flink.api.common.distributions.DataDistribution, java.lang.String[]):org.apache.flink.api.java.operators.PartitionOperator<T> \t org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "partitionByRange",
    "target_class": "org.apache.flink.api.common.distributions.DataDistribution, org.apache.flink.api.java.functions.KeySelector<T,K>):org.apache.flink.api.java.operators.PartitionOperator<T> \t org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "summarize",
    "target_class": "org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.DataSetUtils",
    "source_method": "checksumHashCode",
    "target_class": "org.apache.flink.api.java.operators.DataSink"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.MultipleParameterTool",
    "source_method": "fromArgs",
    "target_class": "org.apache.flink.api.java.Utils"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.MultipleParameterTool",
    "source_method": "fromMultiMap",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.PlanGenerator",
    "source_method": "createPlan",
    "target_class": "org.apache.flink.api.java.operators.OperatorTranslation"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.PlanGenerator",
    "source_method": "registerGenericTypeInfoIfConfigured",
    "target_class": "org.apache.flink.api.common.Plan"
  },
  {
    "source_class": "org.apache.flink.api.java.utils.PlanGenerator",
    "source_method": "registerCachedFilesWithPlan",
    "target_class": "org.apache.flink.api.common.Plan"
  },
  {
    "source_class": "org.apache.flink.api.java.RemoteEnvironmentConfigUtils",
    "source_method": "validate",
    "target_class": "int):void \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.api.java.RemoteEnvironmentConfigUtils",
    "source_method": "setJobManagerAddressToConfig",
    "target_class": "int, org.apache.flink.configuration.Configuration):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.java.RemoteEnvironmentConfigUtils",
    "source_method": "setJarURLsToConfig",
    "target_class": "org.apache.flink.configuration.Configuration):void \t org.apache.flink.configuration.ConfigUtils"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.OptimizerNode",
    "source_method": "setBroadcastInputs",
    "target_class": "org.apache.flink.api.common.ExecutionMode):void \t org.apache.flink.api.common.operators.AbstractUdfOperator"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.OptimizerNode",
    "source_method": "prunePlanAlternatives",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.OptimizerNode",
    "source_method": "prunePlanAlternativesWithCommonBranching",
    "target_class": "org.apache.flink.optimizer.dataproperties.InterestingProperties"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.OptimizerNode",
    "source_method": "areBranchCompatible",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode):boolean \t org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.DagConnection",
    "source_method": "isOnDynamicPath",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.DagConnection",
    "source_method": "getCostWeight",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.DataSourceNode",
    "source_method": "setDataPropertiesFromSplitProperties",
    "target_class": "org.apache.flink.api.common.operators.GenericDataSourceBase.SplitDataProperties"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.DataSinkNode",
    "source_method": "getPredecessorNode",
    "target_class": "org.apache.flink.optimizer.dag.DagConnection"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.TwoInputNode",
    "source_method": "getFirstPredecessorNode",
    "target_class": "org.apache.flink.optimizer.dag.DagConnection"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.TwoInputNode",
    "source_method": "getSecondPredecessorNode",
    "target_class": "org.apache.flink.optimizer.dag.DagConnection"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.TwoInputNode",
    "source_method": "addLocalCandidates",
    "target_class": "org.apache.flink.optimizer.plan.Channel, java.util.List<java.util.Set<? extends org.apache.flink.optimizer.plan.NamedChannel>>, org.apache.flink.optimizer.dataproperties.RequestedGlobalProperties, org.apache.flink.optimizer.dataproperties.RequestedGlobalProperties, java.util.List<org.apache.flink.optimizer.plan.PlanNode>, org.apache.flink.optimizer.operators.OperatorDescriptorDual.LocalPropertiesPair[], org.apache.flink.optimizer.costs.CostEstimator):void \t org.apache.flink.optimizer.plan.Channel"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.SingleInputNode",
    "source_method": "getPredecessorNode",
    "target_class": "org.apache.flink.optimizer.dag.DagConnection"
  },
  {
    "source_class": "org.apache.flink.optimizer.dag.SingleInputNode",
    "source_method": "addLocalCandidates",
    "target_class": "java.util.List<java.util.Set<? extends org.apache.flink.optimizer.plan.NamedChannel>>, org.apache.flink.optimizer.dataproperties.RequestedGlobalProperties, java.util.List<org.apache.flink.optimizer.plan.PlanNode>, org.apache.flink.optimizer.costs.CostEstimator):void \t org.apache.flink.optimizer.plan.Channel"
  },
  {
    "source_class": "org.apache.flink.optimizer.postpass.JavaApiPostPass",
    "source_method": "traverseChannel",
    "target_class": "org.apache.flink.optimizer.plan.Channel"
  },
  {
    "source_class": "org.apache.flink.optimizer.postpass.JavaApiPostPass",
    "source_method": "getTypeInfoFromSource",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.postpass.JavaApiPostPass",
    "source_method": "getSortOrders",
    "target_class": "boolean[]):boolean[] \t org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.SingleInputPlanNode",
    "source_method": "getPredecessor",
    "target_class": "org.apache.flink.optimizer.plan.Channel"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.Channel",
    "source_method": "isOnDynamicPath",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.Channel",
    "source_method": "getCostWeight",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.Channel",
    "source_method": "getGlobalProperties",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.Channel",
    "source_method": "getMaxDepth",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "mergeBranchPlanMaps",
    "target_class": "java.util.Map<org.apache.flink.optimizer.dag.OptimizerNode,org.apache.flink.optimizer.plan.PlanNode>):void \t org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "getProgramOperator",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "getCumulativeCostsShare",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "setCosts",
    "target_class": "org.apache.flink.optimizer.costs.Costs"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "getMinResources",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "getPreferredResources",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "getGuaranteedAvailableMemory",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "setBroadcastInputs",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "updatePropertiesWithUniqueSets",
    "target_class": "org.apache.flink.optimizer.dataproperties.GlobalProperties"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "isOnDynamicPath",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plan.PlanNode",
    "source_method": "getCostWeight",
    "target_class": "org.apache.flink.optimizer.dag.OptimizerNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.Optimizer",
    "source_method": "createPreOptimizedPlan",
    "target_class": "org.apache.flink.optimizer.traversals.GraphCreatingVisitor"
  },
  {
    "source_class": "org.apache.flink.optimizer.Optimizer",
    "source_method": "getPostPassFromPlan",
    "target_class": "org.apache.flink.api.common.Plan"
  },
  {
    "source_class": "org.apache.flink.optimizer.plandump.PlanJSONDumpGenerator",
    "source_method": "dumpOptimizerPlanAsJSON",
    "target_class": "java.io.PrintWriter):void \t org.apache.flink.optimizer.plan.OptimizedPlan"
  },
  {
    "source_class": "org.apache.flink.optimizer.util.Utils",
    "source_method": "createOrderedFromSet",
    "target_class": "org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.optimizer.util.Utils",
    "source_method": "createOrdering",
    "target_class": "boolean[]):org.apache.flink.api.common.operators.Ordering \t org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.optimizer.util.Utils",
    "source_method": "createOrdering",
    "target_class": "org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.optimizer.util.Utils",
    "source_method": "getDirections",
    "target_class": "int):boolean[] \t org.apache.flink.api.common.operators.Ordering"
  },
  {
    "source_class": "org.apache.flink.optimizer.util.Utils",
    "source_method": "createComparator",
    "target_class": "org.apache.flink.api.common.operators.util.FieldList, boolean[], org.apache.flink.api.common.ExecutionConfig):org.apache.flink.api.common.typeutils.TypeComparatorFactory<?> \t org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.optimizer.util.Utils",
    "source_method": "getSortOrders",
    "target_class": "boolean[]):boolean[] \t org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JsonMapper",
    "source_method": "getOptimizerPropertiesJson",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode):java.lang.String \t org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "compileJobGraph",
    "target_class": "org.apache.flink.api.common.JobID):org.apache.flink.runtime.jobgraph.JobGraph \t org.apache.flink.optimizer.plan.OptimizedPlan"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "createSingleInputVertex",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "createDualInputVertex",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "createDataSourceVertex",
    "target_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatVertex"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "createDataSinkVertex",
    "target_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatVertex"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "createBulkIterationHead",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "createWorksetIterationHead",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "assignDriverResources",
    "target_class": "org.apache.flink.runtime.operators.util.TaskConfig):void \t org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "assignLocalStrategyResources",
    "target_class": "org.apache.flink.runtime.operators.util.TaskConfig, int):void \t org.apache.flink.runtime.operators.util.TaskConfig"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "checkAndConfigurePersistentIntermediateResult",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "connectJobVertices",
    "target_class": "int, org.apache.flink.runtime.jobgraph.JobVertex, org.apache.flink.runtime.operators.util.TaskConfig, org.apache.flink.runtime.jobgraph.JobVertex, org.apache.flink.runtime.operators.util.TaskConfig, boolean):org.apache.flink.runtime.jobgraph.DistributionPattern \t org.apache.flink.runtime.operators.util.TaskConfig"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "addLocalInfoFromChannelToConfig",
    "target_class": "org.apache.flink.runtime.operators.util.TaskConfig, int, boolean):void \t org.apache.flink.runtime.operators.util.TaskConfig"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "finalizeBulkIteration",
    "target_class": "org.apache.flink.optimizer.plan.BulkIterationPlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "finalizeWorksetIteration",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.optimizer.plantranslate.JobGraphGenerator",
    "source_method": "attachOperatorNamesAndDescriptions",
    "target_class": "org.apache.flink.optimizer.plan.PlanNode"
  },
  {
    "source_class": "org.apache.flink.optimizer.dataproperties.RequestedLocalProperties",
    "source_method": "filterBySemanticProperties",
    "target_class": "int):org.apache.flink.optimizer.dataproperties.RequestedLocalProperties \t org.apache.flink.api.common.operators.SemanticProperties"
  },
  {
    "source_class": "org.apache.flink.optimizer.dataproperties.RequestedLocalProperties",
    "source_method": "isMetBy",
    "target_class": "org.apache.flink.optimizer.dataproperties.LocalProperties"
  },
  {
    "source_class": "org.apache.flink.optimizer.dataproperties.RequestedLocalProperties",
    "source_method": "parameterizeChannel",
    "target_class": "org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.optimizer.dataproperties.GlobalProperties",
    "source_method": "isPartitionedOnFields",
    "target_class": "org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.optimizer.dataproperties.GlobalProperties",
    "source_method": "isExactlyPartitionedOnFields",
    "target_class": "org.apache.flink.api.common.operators.util.FieldList"
  },
  {
    "source_class": "org.apache.flink.optimizer.dataproperties.GlobalProperties",
    "source_method": "matchesOrderedPartitioning",
    "target_class": "org.apache.flink.api.common.operators.Ordering"
  },
  {
    "source_class": "org.apache.flink.optimizer.dataproperties.GlobalProperties",
    "source_method": "parameterizeChannel",
    "target_class": "boolean, org.apache.flink.api.common.ExecutionMode, boolean):void \t org.apache.flink.optimizer.plan.Channel"
  },
  {
    "source_class": "org.apache.flink.optimizer.dataproperties.RequestedGlobalProperties",
    "source_method": "filterBySemanticProperties",
    "target_class": "int):org.apache.flink.optimizer.dataproperties.RequestedGlobalProperties \t org.apache.flink.api.common.operators.SemanticProperties"
  },
  {
    "source_class": "org.apache.flink.optimizer.dataproperties.RequestedGlobalProperties",
    "source_method": "checkCompatiblePartitioningFields",
    "target_class": "org.apache.flink.optimizer.dataproperties.GlobalProperties"
  },
  {
    "source_class": "org.apache.flink.optimizer.traversals.BinaryUnionReplacer",
    "source_method": "collect",
    "target_class": "java.util.List<org.apache.flink.optimizer.plan.Channel>):void \t org.apache.flink.optimizer.plan.Channel"
  },
  {
    "source_class": "org.apache.flink.optimizer.traversals.RangePartitionRewriter",
    "source_method": "rewriteRangePartitionChannel",
    "target_class": "org.apache.flink.optimizer.plan.Channel"
  },
  {
    "source_class": "org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory.WrappedSdkHarnessClient",
    "source_method": "wrapping",
    "target_class": "org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory.ServerInfo):org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory.WrappedSdkHarnessClient \t org.apache.beam.runners.fnexecution.control.DefaultJobBundleFactory.ServerInfo"
  },
  {
    "source_class": "org.apache.beam.sdk.fn.server.ServerFactory",
    "source_method": "createWithPortSupplier",
    "target_class": "org.apache.beam.sdk.fn.server.ServerFactory.UrlFactory"
  },
  {
    "source_class": "org.apache.flink.formats.csv.PythonCsvUtils",
    "source_method": "createCsvReaderFormat",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.formats.csv.CsvReaderFormat<java.lang.Object> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.formats.csv.PythonCsvUtils",
    "source_method": "createCsvBulkWriterFactory",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.api.common.serialization.BulkWriter.Factory<org.apache.flink.table.data.RowData> \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.AbstractPythonFunctionOperator",
    "source_method": "getFlinkMetricContainer",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.timer.TimerUtils",
    "source_method": "createTimerDataTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.timer.TimerUtils",
    "source_method": "createTimerDataCoderInfoDescriptorProto",
    "target_class": "org.apache.flink.python.util.ProtoUtils"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.timer.TimerRegistration",
    "source_method": "setTimer",
    "target_class": "long, org.apache.flink.types.Row, java.lang.Object):void \t org.apache.flink.streaming.api.operators.InternalTimerService"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.timer.TimerHandler",
    "source_method": "buildTimerData",
    "target_class": "long, long, org.apache.flink.types.Row, byte[]):org.apache.flink.types.Row \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.collector.RunnerOutputCollector",
    "source_method": "collect",
    "target_class": "org.apache.flink.types.Row):void \t org.apache.flink.streaming.api.operators.TimestampedCollector"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.collector.RunnerOutputCollector",
    "source_method": "getRunnerOutputTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.AbstractExternalOneInputPythonFunctionOperator",
    "source_method": "processElement",
    "target_class": "long, java.lang.Object):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.AbstractExternalOneInputPythonFunctionOperator.RunnerInputHandler",
    "source_method": "buildRunnerInputData",
    "target_class": "long, java.lang.Object):org.apache.flink.types.Row \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.AbstractExternalOneInputPythonFunctionOperator.RunnerInputHandler",
    "source_method": "getRunnerInputTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.AbstractExternalTwoInputPythonFunctionOperator",
    "source_method": "processElement",
    "target_class": "long, long, java.lang.Object):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.AbstractExternalTwoInputPythonFunctionOperator.RunnerInputHandler",
    "source_method": "buildRunnerInputData",
    "target_class": "long, long, java.lang.Object):org.apache.flink.types.Row \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.AbstractExternalTwoInputPythonFunctionOperator.RunnerInputHandler",
    "source_method": "getRunnerInputTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):org.apache.flink.api.common.typeinfo.TypeInformation<org.apache.flink.types.Row> \t org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.ExternalPythonKeyedCoProcessOperator",
    "source_method": "processTimer",
    "target_class": "org.apache.flink.streaming.api.operators.InternalTimer<org.apache.flink.types.Row,org.apache.flink.runtime.state.VoidNamespace>):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.ExternalPythonKeyedProcessOperator",
    "source_method": "processTimer",
    "target_class": "org.apache.flink.streaming.api.operators.InternalTimer<org.apache.flink.types.Row,java.lang.Object>):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.process.AbstractExternalDataStreamPythonFunctionOperator",
    "source_method": "getSideOutputTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.embedded.EmbeddedPythonKeyedCoProcessOperator.OnTimerContextImpl",
    "source_method": "timestamp",
    "target_class": "org.apache.flink.streaming.api.operators.InternalTimer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.embedded.EmbeddedPythonKeyedProcessOperator.OnTimerContextImpl",
    "source_method": "timestamp",
    "target_class": "org.apache.flink.streaming.api.operators.InternalTimer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.python.embedded.EmbeddedPythonWindowOperator.WindowTimerContextImpl",
    "source_method": "timestamp",
    "target_class": "org.apache.flink.streaming.api.operators.InternalTimer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.runners.python.beam.BeamPythonFunctionRunner",
    "source_method": "getStateRequestHandler",
    "target_class": "org.apache.flink.runtime.state.OperatorStateBackend, org.apache.flink.api.common.typeutils.TypeSerializer<?>, org.apache.flink.api.common.typeutils.TypeSerializer<?>, org.apache.flink.configuration.ReadableConfig):org.apache.flink.streaming.api.runners.python.beam.StateRequestHandler \t org.apache.flink.streaming.api.runners.python.beam.state.BeamStateRequestHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.runners.python.beam.state.BeamStateRequestHandler",
    "source_method": "of",
    "target_class": "org.apache.flink.runtime.state.OperatorStateBackend, org.apache.flink.api.common.typeutils.TypeSerializer<?>, org.apache.flink.api.common.typeutils.TypeSerializer<?>, org.apache.flink.configuration.ReadableConfig):org.apache.flink.streaming.api.runners.python.beam.state.BeamStateRequestHandler \t org.apache.flink.streaming.api.runners.python.beam.state.BeamStateStore"
  },
  {
    "source_class": "org.apache.flink.streaming.api.runners.python.beam.state.BeamMapStateHandler",
    "source_method": "handleCheckEmpty",
    "target_class": "org.apache.flink.api.common.state.MapState"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonOperatorUtils",
    "source_method": "setCurrentKeyForTimerService",
    "target_class": "K):void \t org.apache.flink.streaming.api.operators.sorted.state.BatchExecutionInternalTimeService"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildBasicTypeProto",
    "target_class": "org.apache.flink.api.common.typeinfo.BasicTypeInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildSqlTimeTypeProto",
    "target_class": "org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildPrimitiveArrayTypeProto",
    "target_class": "java.lang.ClassLoader):FlinkFnApi.TypeInfo \t org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildBasicArrayTypeProto",
    "target_class": "java.lang.ClassLoader):FlinkFnApi.TypeInfo \t org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildRowTypeProto",
    "target_class": "java.lang.ClassLoader):FlinkFnApi.TypeInfo \t org.apache.flink.api.java.typeutils.TupleTypeInfoBase"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildTupleTypeProto",
    "target_class": "java.lang.ClassLoader):FlinkFnApi.TypeInfo \t org.apache.flink.api.java.typeutils.TupleTypeInfoBase"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildMapTypeProto",
    "target_class": "java.lang.ClassLoader):FlinkFnApi.TypeInfo \t org.apache.flink.api.java.typeutils.MapTypeInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildTableArrayTypeProto",
    "target_class": "java.lang.ClassLoader):FlinkFnApi.TypeInfo \t org.apache.flink.table.runtime.typeutils.InternalTypeInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildTableMapTypeProto",
    "target_class": "java.lang.ClassLoader):FlinkFnApi.TypeInfo \t org.apache.flink.table.runtime.typeutils.InternalTypeInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "buildTableRowTypeProto",
    "target_class": "java.lang.ClassLoader):FlinkFnApi.TypeInfo \t org.apache.flink.table.runtime.typeutils.InternalTypeInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter",
    "source_method": "getTypeName",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToSerializerConverter",
    "source_method": "typeInfoSerializerConverter",
    "target_class": "org.apache.flink.api.java.tuple.Tuple"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToDataConverter",
    "source_method": "typeInfoDataConverter",
    "target_class": "org.apache.flink.api.java.typeutils.TupleTypeInfoBase"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils",
    "source_method": "arrayConstructor",
    "target_class": "boolean):java.util.function.BiFunction<java.lang.Integer,java.util.function.Function<java.lang.Integer,java.lang.Object>,java.lang.Object> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.utils.PythonTypeUtils",
    "source_method": "converter",
    "target_class": "org.apache.flink.api.common.ExecutionConfig):java.util.function.Function<java.lang.Object,java.lang.Object> \t org.apache.flink.api.java.tuple.Tuple"
  },
  {
    "source_class": "org.apache.flink.client.python.PythonEnvUtils",
    "source_method": "preparePythonEnvironment",
    "target_class": "java.lang.String, java.lang.String):org.apache.flink.client.python.PythonEnvUtils.PythonEnvironment \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.client.python.PythonEnvUtils",
    "source_method": "addToPythonPath",
    "target_class": "java.util.List<org.apache.flink.core.fs.Path>):void \t org.apache.flink.util.FileUtils"
  },
  {
    "source_class": "org.apache.flink.client.python.PythonEnvUtils",
    "source_method": "startGatewayServer",
    "target_class": "org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.client.python.PythonEnvUtils",
    "source_method": "setGatewayServer",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.client.python.PythonEnvUtils",
    "source_method": "setPythonException",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.client.python.PythonDriver",
    "source_method": "constructPythonCommands",
    "target_class": "org.apache.flink.client.python.PythonDriverOptions"
  },
  {
    "source_class": "org.apache.flink.client.python.PythonFunctionFactory",
    "source_method": "getPythonFunction",
    "target_class": "org.apache.flink.configuration.ReadableConfig, java.lang.ClassLoader):org.apache.flink.table.functions.python.PythonFunction \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.client.python.PythonFunctionFactory",
    "source_method": "createPythonFunctionFactory",
    "target_class": "org.apache.flink.client.python.PythonEnvUtils"
  },
  {
    "source_class": "org.apache.flink.python.PythonConfig",
    "source_method": "getLocalTimeZone",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.python.chain.PythonOperatorChainingOptimizer",
    "source_method": "buildOutputMap",
    "target_class": "org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.python.chain.PythonOperatorChainingOptimizer",
    "source_method": "createChainedTransformation",
    "target_class": "org.apache.flink.api.dag.Transformation<?>):org.apache.flink.api.dag.Transformation<?> \t org.apache.flink.streaming.api.transformations.TwoInputTransformation"
  },
  {
    "source_class": "org.apache.flink.python.chain.PythonOperatorChainingOptimizer",
    "source_method": "areOperatorsChainableByChainingStrategy",
    "target_class": "org.apache.flink.api.dag.Transformation<?>):boolean \t org.apache.flink.python.util.PythonConfigUtil"
  },
  {
    "source_class": "org.apache.flink.python.chain.PythonOperatorChainingOptimizer",
    "source_method": "replaceInput",
    "target_class": "org.apache.flink.api.dag.Transformation<?>, org.apache.flink.api.dag.Transformation<?>):void \t org.apache.flink.streaming.api.transformations.TwoInputTransformation"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonEnvironmentManagerUtils",
    "source_method": "getPythonUdfRunnerScript",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):java.lang.String \t org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createRowTypeCoderInfoDescriptorProto",
    "target_class": "FlinkFnApi.CoderInfoDescriptor.Mode, boolean):FlinkFnApi.CoderInfoDescriptor \t org.apache.flink.table.runtime.typeutils.PythonTypeUtils"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createFlattenRowTypeCoderInfoDescriptorProto",
    "target_class": "FlinkFnApi.CoderInfoDescriptor.Mode, boolean):FlinkFnApi.CoderInfoDescriptor \t org.apache.flink.table.runtime.typeutils.PythonTypeUtils"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createArrowTypeCoderInfoDescriptorProto",
    "target_class": "FlinkFnApi.CoderInfoDescriptor.Mode, boolean):FlinkFnApi.CoderInfoDescriptor \t org.apache.flink.table.runtime.typeutils.PythonTypeUtils"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createOverWindowArrowTypeCoderInfoDescriptorProto",
    "target_class": "FlinkFnApi.CoderInfoDescriptor.Mode, boolean):FlinkFnApi.CoderInfoDescriptor \t org.apache.flink.table.runtime.typeutils.PythonTypeUtils"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createUserDefinedFunctionProto",
    "target_class": "org.apache.flink.table.functions.python.PythonFunction"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createUserDefinedAggregateFunctionProto",
    "target_class": "org.apache.flink.table.runtime.dataview.DataViewSpec[]):FlinkFnApi.UserDefinedAggregateFunction \t org.apache.flink.table.runtime.typeutils.PythonTypeUtils"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createUserDefinedDataStreamFunctionProto",
    "target_class": "org.apache.flink.api.common.functions.RuntimeContext, java.util.Map<java.lang.String,java.lang.String>, boolean, boolean, boolean, boolean, int, int, int):FlinkFnApi.UserDefinedDataStreamFunction \t org.apache.flink.api.common.functions.RuntimeContext"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createUserDefinedDataStreamFunctionProtos",
    "target_class": "org.apache.flink.api.common.functions.RuntimeContext, java.util.Map<java.lang.String,java.lang.String>, boolean, boolean, boolean, boolean, int, int, int):java.util.List<FlinkFnApi.UserDefinedDataStreamFunction> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createUserDefinedDataStreamStatefulFunctionProtos",
    "target_class": "org.apache.flink.api.common.functions.RuntimeContext, java.util.Map<java.lang.String,java.lang.String>, org.apache.flink.api.common.typeinfo.TypeInformation<?>, boolean, boolean, boolean, boolean, int, int, int):java.util.List<FlinkFnApi.UserDefinedDataStreamFunction> \t org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "createRawTypeCoderInfoDescriptorProto",
    "target_class": "FlinkFnApi.CoderInfoDescriptor.Mode, boolean, java.lang.ClassLoader):FlinkFnApi.CoderInfoDescriptor \t org.apache.flink.streaming.api.utils.PythonTypeUtils.TypeInfoToProtoConverter"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "parseStateTtlConfigFromProto",
    "target_class": "org.apache.flink.api.common.state.StateTtlConfig.Builder"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "parseStateVisibilityFromProto",
    "target_class": "org.apache.flink.api.common.state.StateTtlConfig.StateVisibility"
  },
  {
    "source_class": "org.apache.flink.python.util.ProtoUtils",
    "source_method": "parseTtlTimeCharacteristicFromProto",
    "target_class": "org.apache.flink.api.common.state.StateTtlConfig.TtlTimeCharacteristic"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonDependencyUtils",
    "source_method": "configurePythonDependencies",
    "target_class": "org.apache.flink.configuration.ReadableConfig):org.apache.flink.configuration.Configuration \t org.apache.flink.python.util.PythonDependencyUtils.PythonDependencyManager"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonDependencyUtils",
    "source_method": "parsePythonDependencyConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonDependencyUtils",
    "source_method": "merge",
    "target_class": "org.apache.flink.configuration.Configuration):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonDependencyUtils.PythonDependencyManager",
    "source_method": "addPythonFile",
    "target_class": "java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonDependencyUtils.PythonDependencyManager",
    "source_method": "addPythonArchive",
    "target_class": "java.lang.String, java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonDependencyUtils.PythonDependencyManager",
    "source_method": "applyToConfiguration",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonDependencyUtils.PythonDependencyManager",
    "source_method": "removeCachedFilesByPrefix",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.python.util.CompressionUtils",
    "source_method": "unpackEntry",
    "target_class": "org.apache.flink.python.util.TarArchiveEntry, java.io.File):void \t org.apache.flink.util.IOUtils"
  },
  {
    "source_class": "org.apache.flink.python.util.CompressionUtils",
    "source_method": "isUnix",
    "target_class": "org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "getEnvironmentConfig",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "extractPythonConfiguration",
    "target_class": "org.apache.flink.configuration.ReadableConfig):org.apache.flink.configuration.Configuration \t org.apache.flink.python.util.PythonDependencyUtils"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "processSideOutput",
    "target_class": "org.apache.flink.streaming.api.transformations.SideOutputTransformation"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "getOperatorFactory",
    "target_class": "org.apache.flink.streaming.api.transformations.AbstractMultipleInputTransformation"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "chainTransformation",
    "target_class": "org.apache.flink.api.dag.Transformation<?>):void \t org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "getPythonOperator",
    "target_class": "org.apache.flink.streaming.api.transformations.AbstractMultipleInputTransformation"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "isPythonOperator",
    "target_class": "org.apache.flink.streaming.api.transformations.AbstractMultipleInputTransformation"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "isPythonOperator",
    "target_class": "org.apache.flink.streaming.api.operators.SimpleOperatorFactory"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "isPythonDataStreamOperator",
    "target_class": "org.apache.flink.streaming.api.transformations.OneInputTransformation"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "isPythonDataStreamOperator",
    "target_class": "org.apache.flink.streaming.api.operators.SimpleOperatorFactory"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "getNonPartitionTransformationInput",
    "target_class": "org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.python.util.PythonConfigUtil",
    "source_method": "convertStateNamesToStateDescriptors",
    "target_class": "org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo"
  },
  {
    "source_class": "org.apache.flink.python.env.PythonDependencyInfo",
    "source_method": "create",
    "target_class": "org.apache.flink.api.common.cache.DistributedCache):org.apache.flink.python.env.PythonDependencyInfo \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.python.env.AbstractPythonEnvironmentManager.PythonEnvResources",
    "source_method": "release",
    "target_class": "org.apache.flink.python.env.AbstractPythonEnvironmentManager.PythonLeasedResource"
  },
  {
    "source_class": "org.apache.flink.api.common.python.PythonBridgeUtils",
    "source_method": "getPickledBytesFromJavaObject",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):java.lang.Object \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.api.common.python.PythonBridgeUtils",
    "source_method": "getPickledBytesFromJavaObject",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):java.lang.Object \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.api.common.python.PythonBridgeUtils",
    "source_method": "primitiveArrayConverter",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):java.lang.Object[] \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.PythonTypeUtils",
    "source_method": "toProtoType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.PythonTypeUtils",
    "source_method": "toInternalSerializer",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.PythonTypeUtils",
    "source_method": "toDataConverter",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.serializers.python.MapDataSerializer",
    "source_method": "deserializeInternal",
    "target_class": "org.apache.flink.table.data.binary.BinaryArrayData, org.apache.flink.table.data.binary.BinaryArrayData):org.apache.flink.table.data.MapData \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.serializers.python.ArrayDataSerializer",
    "source_method": "deserializeInternal",
    "target_class": "org.apache.flink.table.data.binary.BinaryArrayData):org.apache.flink.table.data.ArrayData \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.serializers.python.RowDataSerializer",
    "source_method": "fillMask",
    "target_class": "org.apache.flink.table.data.RowData, boolean[]):void \t org.apache.flink.types.RowKind"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.serializers.python.RowDataSerializer",
    "source_method": "readKindFromMask",
    "target_class": "org.apache.flink.types.RowKind"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.python.scalar.arrow.ArrowPythonScalarFunctionOperator",
    "source_method": "invokeCurrentBatch",
    "target_class": "org.apache.flink.table.runtime.arrow.serializers.ArrowSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.python.aggregate.arrow.stream.StreamArrowPythonGroupWindowAggregateFunctionOperator",
    "source_method": "hasRetractData",
    "target_class": "java.lang.Iterable<org.apache.flink.table.data.RowData>):boolean \t org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.python.aggregate.arrow.stream.AbstractStreamArrowPythonBoundedRangeOperator",
    "source_method": "registerCleanupTimer",
    "target_class": "org.apache.flink.streaming.api.TimeDomain):void \t org.apache.flink.streaming.api.TimerService"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.python.aggregate.arrow.stream.AbstractStreamArrowPythonOverWindowAggregateFunctionOperator",
    "source_method": "invokeCurrentBatch",
    "target_class": "org.apache.flink.core.memory.ByteArrayOutputStreamWithPos"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.python.aggregate.arrow.batch.BatchArrowPythonOverWindowAggregateFunctionOperator",
    "source_method": "isInCurrentOverWindow",
    "target_class": "long, boolean):boolean \t org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.python.aggregate.arrow.batch.BatchArrowPythonGroupWindowAggregateFunctionOperator",
    "source_method": "setWindowProperty",
    "target_class": "org.apache.flink.table.runtime.operators.window.TimeWindow"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.sources.ArrowSourceFunction",
    "source_method": "createArrowReader",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.ArrowReader",
    "source_method": "read",
    "target_class": "org.apache.flink.table.data.columnar.ColumnarRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.ArrowUtils",
    "source_method": "toArrowSchema",
    "target_class": "org.apache.flink.table.types.logical.RowType.RowField"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.ArrowUtils",
    "source_method": "toArrowField",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.runtime.arrow.Field \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.ArrowUtils",
    "source_method": "createColumnVector",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.data.columnar.vector.ColumnVector \t org.apache.flink.table.types.logical.MapType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.ArrowUtils",
    "source_method": "readNextBatch",
    "target_class": "org.apache.flink.core.memory.ByteArrayOutputStreamWithPos"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.ArrowUtils",
    "source_method": "collectAsPandasDataFrame",
    "target_class": "int):org.apache.flink.table.runtime.arrow.ArrowUtils.CustomIterator<byte[]> \t org.apache.flink.table.runtime.arrow.ArrowWriter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.ArrowUtils",
    "source_method": "filterOutRetractRows",
    "target_class": "org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.ArrowUtils",
    "source_method": "isStreamingMode",
    "target_class": "org.apache.flink.table.api.internal.TableImpl"
  },
  {
    "source_class": "org.apache.flink.table.runtime.arrow.ArrowUtils",
    "source_method": "isAppendOnlyTable",
    "target_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl"
  },
  {
    "source_class": "org.apache.flink.table.utils.python.PythonTableUtils",
    "source_method": "createTableFromElement",
    "target_class": "java.lang.String, org.apache.flink.table.types.DataType, boolean):org.apache.flink.table.api.Table \t org.apache.flink.table.api.TableDescriptor.Builder"
  },
  {
    "source_class": "org.apache.flink.tests.util.AutoClosableProcess.AutoClosableProcessBuilder",
    "source_method": "runBlockingWithRetry",
    "target_class": "java.time.Duration, java.time.Duration):void \t org.apache.flink.api.common.time.Deadline"
  },
  {
    "source_class": "org.apache.flink.tests.util.flink.FlinkDistribution",
    "source_method": "submitSQLJob",
    "target_class": "java.time.Duration):void \t org.apache.flink.tests.util.flink.FlinkDistribution.TestSqlGatewayRestClient"
  },
  {
    "source_class": "org.apache.flink.tests.util.flink.FlinkDistribution",
    "source_method": "appendConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.tests.util.flink.FlinkResource",
    "source_method": "get",
    "target_class": "org.apache.flink.tests.util.flink.FlinkResourceSetup.FlinkResourceSetupBuilder"
  },
  {
    "source_class": "org.apache.flink.tests.util.flink.FlinkResource",
    "source_method": "get",
    "target_class": "org.apache.flink.tests.util.util.FactoryUtils"
  },
  {
    "source_class": "org.apache.flink.tests.util.cache.DownloadCache",
    "source_method": "get",
    "target_class": "org.apache.flink.tests.util.util.FactoryUtils"
  },
  {
    "source_class": "org.apache.flink.tests.util.activation.OperatingSystemRestriction",
    "source_method": "restrictTo",
    "target_class": "org.apache.flink.util.OperatingSystem[]):void \t org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.tests.util.activation.OperatingSystemRestriction",
    "source_method": "forbid",
    "target_class": "org.apache.flink.util.OperatingSystem[]):void \t org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.queryablestate.QsStateClient",
    "source_method": "getMapState",
    "target_class": "org.apache.flink.queryablestate.client.QueryableStateClient, org.apache.flink.api.common.state.MapStateDescriptor<org.apache.flink.streaming.tests.queryablestate.EmailId,org.apache.flink.streaming.tests.queryablestate.EmailInformation>):org.apache.flink.api.common.state.MapState<org.apache.flink.streaming.tests.queryablestate.EmailId,org.apache.flink.streaming.tests.queryablestate.EmailInformation> \t org.apache.flink.queryablestate.client.QueryableStateClient"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.SlidingWindowCheckMapper",
    "source_method": "updateLastSeenSequenceNumber",
    "target_class": "java.lang.Long, org.apache.flink.util.Collector<java.lang.String>):void \t org.apache.flink.streaming.tests.Event"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.SlidingWindowCheckMapper",
    "source_method": "failWithSequenceNumberDecreased",
    "target_class": "java.lang.Long, org.apache.flink.util.Collector<java.lang.String>):void \t org.apache.flink.util.Collector"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.SlidingWindowCheckMapper",
    "source_method": "failWithEventSeenTooManyTimesMessage",
    "target_class": "org.apache.flink.util.Collector<java.lang.String>):void \t org.apache.flink.util.Collector"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.SlidingWindowCheckMapper",
    "source_method": "preserveOrDiscardIfSeenSlideFactorTimes",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.streaming.tests.Event,java.lang.Integer>):void \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.SlidingWindowCheckMapper",
    "source_method": "failWithEventNotSeenAlertMessage",
    "target_class": "java.util.List<org.apache.flink.streaming.tests.Event>, org.apache.flink.util.Collector<java.lang.String>):void \t org.apache.flink.util.Collector"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.SlidingWindowCheckMapper",
    "source_method": "verifyWindowContiguity",
    "target_class": "org.apache.flink.util.Collector<java.lang.String>):java.util.Optional<org.apache.flink.streaming.tests.Event> \t org.apache.flink.streaming.tests.Event"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.SequenceGeneratorSource",
    "source_method": "runActive",
    "target_class": "org.apache.flink.streaming.api.functions.source.SourceFunction.SourceContext"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "setupCheckpointing",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):void \t org.apache.flink.streaming.api.environment.CheckpointConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "setupParallelism",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "setupRestartStrategy",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):void \t org.apache.flink.api.java.utils.AbstractParameterTool"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "setupStateBackend",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):void \t org.apache.flink.api.java.utils.AbstractParameterTool"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "createEventSource",
    "target_class": "org.apache.flink.api.java.utils.AbstractParameterTool"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "createTimestampExtractor",
    "target_class": "org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "applyTumblingWindows",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):org.apache.flink.streaming.api.datastream.WindowedStream<org.apache.flink.streaming.tests.Event,java.lang.Integer,org.apache.flink.streaming.api.windowing.windows.TimeWindow> \t org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "createSemanticsCheckMapper",
    "target_class": "org.apache.flink.api.java.utils.AbstractParameterTool"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "isSimulateFailures",
    "target_class": "org.apache.flink.api.java.utils.AbstractParameterTool"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "createFailureMapper",
    "target_class": "org.apache.flink.api.java.utils.AbstractParameterTool"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "createValueStateBuilder",
    "target_class": "org.apache.flink.api.common.state.ValueStateDescriptor<STATE>):org.apache.flink.streaming.tests.artificialstate.builder.ArtificialStateBuilder<IN> \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "createListStateBuilder",
    "target_class": "org.apache.flink.api.common.state.ListStateDescriptor<STATE>):org.apache.flink.streaming.tests.artificialstate.builder.ArtificialStateBuilder<IN> \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "createSlidingWindow",
    "target_class": "org.apache.flink.streaming.api.windowing.assigners.SlidingEventTimeWindows"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "createSlidingWindowCheckMapper",
    "target_class": "org.apache.flink.api.java.utils.AbstractParameterTool"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory",
    "source_method": "verifyCustomStatefulTypeSerializer",
    "target_class": "org.apache.flink.streaming.tests.TestOperatorEnum"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.verify.AbstractTtlStateVerifier",
    "source_method": "randomString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.TtlVerifyUpdateFunction",
    "source_method": "performUpdate",
    "target_class": "java.lang.Object):org.apache.flink.streaming.tests.verify.TtlUpdateContext<?,?> \t org.apache.flink.streaming.tests.verify.TtlStateVerifier"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.DataStreamStateTTLTestProgram",
    "source_method": "setBackendWithCustomTTLTimeProvider",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.TtlTestConfig",
    "source_method": "fromArgs",
    "target_class": "org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram",
    "source_method": "executeOriginalVariant",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):void \t org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram",
    "source_method": "executeUpgradedVariant",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):void \t org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram",
    "source_method": "isOriginalJobVariant",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram",
    "source_method": "applyTestStatefulOperator",
    "target_class": "org.apache.flink.api.common.functions.JoinFunction<org.apache.flink.streaming.tests.Event,org.apache.flink.streaming.tests.artificialstate.ComplexPayload,org.apache.flink.streaming.tests.artificialstate.ComplexPayload>, org.apache.flink.streaming.api.datastream.KeyedStream<org.apache.flink.streaming.tests.Event,java.lang.Integer>, java.util.List<org.apache.flink.api.common.typeutils.TypeSerializer<org.apache.flink.streaming.tests.artificialstate.ComplexPayload>>, java.util.List<java.lang.Class<org.apache.flink.streaming.tests.artificialstate.ComplexPayload>>):org.apache.flink.streaming.api.datastream.KeyedStream<org.apache.flink.streaming.tests.Event,java.lang.Integer> \t org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram",
    "source_method": "applyUpgradedTestStatefulOperator",
    "target_class": "org.apache.flink.api.common.functions.JoinFunction<org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram.UpgradedEvent,org.apache.flink.streaming.tests.artificialstate.ComplexPayload,org.apache.flink.streaming.tests.artificialstate.ComplexPayload>, org.apache.flink.streaming.api.datastream.KeyedStream<org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram.UpgradedEvent,java.lang.Integer>, java.util.List<org.apache.flink.api.common.typeutils.TypeSerializer<org.apache.flink.streaming.tests.artificialstate.ComplexPayload>>, java.util.List<java.lang.Class<org.apache.flink.streaming.tests.artificialstate.ComplexPayload>>):org.apache.flink.streaming.api.datastream.KeyedStream<org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram.UpgradedEvent,java.lang.Integer> \t org.apache.flink.streaming.tests.DataStreamAllroundTestJobFactory"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram",
    "source_method": "simpleUpgradedStateUpdate",
    "target_class": "org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram.UpgradedEvent"
  },
  {
    "source_class": "org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram",
    "source_method": "lastUpgradedStateUpdate",
    "target_class": "org.apache.flink.streaming.tests.StatefulStreamJobUpgradeTestProgram.UpgradedEvent"
  },
  {
    "source_class": "org.apache.flink.table.tpcds.stats.TpcdsStatsProvider",
    "source_method": "registerTpcdsStats",
    "target_class": "org.apache.flink.table.tpcds.stats.CatalogTableStats"
  },
  {
    "source_class": "org.apache.flink.table.tpcds.stats.CatalogTableStats",
    "source_method": "register2Catalog",
    "target_class": "java.lang.String):void \t org.apache.flink.table.api.TableEnvironment"
  },
  {
    "source_class": "org.apache.flink.table.tpcds.schema.TpcdsSchemaProvider",
    "source_method": "createTableSchemas",
    "target_class": "org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.table.tpcds.TpcdsTestProgram",
    "source_method": "prepareTableEnv",
    "target_class": "java.lang.Boolean):org.apache.flink.table.api.TableEnvironment \t org.apache.flink.table.sources.CsvTableSource.Builder"
  },
  {
    "source_class": "org.apache.flink.fs.dummy.DummyFSFileSystem",
    "source_method": "getDataByPath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.fs.anotherdummy.AnotherDummyFSFileSystem",
    "source_method": "getDataByPath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.ImmutableAggregatingState",
    "source_method": "createState",
    "target_class": "byte[]):S \t org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer",
    "source_method": "serializeKeyAndNamespace",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<K>, N, org.apache.flink.api.common.typeutils.TypeSerializer<N>):byte[] \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer",
    "source_method": "deserializeKeyAndNamespace",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<K>, org.apache.flink.api.common.typeutils.TypeSerializer<N>):org.apache.flink.api.java.tuple.Tuple2<K,N> \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer",
    "source_method": "serializeValue",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):byte[] \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer",
    "source_method": "deserializeValue",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):T \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer",
    "source_method": "deserializeList",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):java.util.List<T> \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer",
    "source_method": "serializeMap",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<UK>, org.apache.flink.api.common.typeutils.TypeSerializer<UV>):byte[] \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer",
    "source_method": "deserializeMap",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<UK>, org.apache.flink.api.common.typeutils.TypeSerializer<UV>):java.util.Map<UK,UV> \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.ImmutableMapState",
    "source_method": "createState",
    "target_class": "byte[]):S \t org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.ImmutableListState",
    "source_method": "createState",
    "target_class": "byte[]):S \t org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.ImmutableReducingState",
    "source_method": "createState",
    "target_class": "byte[]):S \t org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.state.ImmutableValueState",
    "source_method": "createState",
    "target_class": "byte[]):S \t org.apache.flink.queryablestate.client.state.serialization.KvStateSerializer"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.QueryableStateClient",
    "source_method": "shutdownAndHandle",
    "target_class": "org.apache.flink.queryablestate.network.Client"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.QueryableStateClient",
    "source_method": "getKvState",
    "target_class": "java.lang.String, K, org.apache.flink.api.common.typeinfo.TypeHint<K>, org.apache.flink.api.common.state.StateDescriptor<S,V>):java.util.concurrent.CompletableFuture<S> \t org.apache.flink.api.common.typeinfo.TypeHint"
  },
  {
    "source_class": "org.apache.flink.queryablestate.network.AbstractServerHandler",
    "source_method": "getServerName",
    "target_class": "org.apache.flink.queryablestate.network.AbstractServerBase"
  },
  {
    "source_class": "org.apache.flink.queryablestate.network.messages.MessageSerializer",
    "source_method": "serializeRequest",
    "target_class": "long, REQ):org.apache.flink.queryablestate.network.messages.ByteBuf \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.queryablestate.network.messages.MessageSerializer",
    "source_method": "serializeResponse",
    "target_class": "long, RESP):org.apache.flink.queryablestate.network.messages.ByteBuf \t org.apache.flink.queryablestate.network.messages.MessageBody"
  },
  {
    "source_class": "org.apache.flink.queryablestate.network.messages.MessageSerializer",
    "source_method": "serializeRequestFailure",
    "target_class": "long, java.lang.Throwable):org.apache.flink.queryablestate.network.messages.ByteBuf \t org.apache.flink.queryablestate.network.messages.MessageType"
  },
  {
    "source_class": "org.apache.flink.queryablestate.network.messages.MessageSerializer",
    "source_method": "deserializeHeader",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.queryablestate.network.ServerConnection",
    "source_method": "establishConnection",
    "target_class": "org.apache.flink.queryablestate.network.ServerConnection.InternalConnection"
  },
  {
    "source_class": "org.apache.flink.queryablestate.network.ServerConnection",
    "source_method": "close",
    "target_class": "org.apache.flink.queryablestate.network.ServerConnection.InternalConnection"
  },
  {
    "source_class": "org.apache.flink.queryablestate.client.proxy.KvStateClientProxyHandler",
    "source_method": "getState",
    "target_class": "boolean):java.util.concurrent.CompletableFuture<org.apache.flink.queryablestate.messages.KvStateResponse> \t org.apache.flink.queryablestate.messages.KvStateRequest"
  },
  {
    "source_class": "org.apache.flink.queryablestate.server.KvStateServerHandler",
    "source_method": "getSerializedValue",
    "target_class": "byte[]):byte[] \t org.apache.flink.util.LambdaUtil"
  },
  {
    "source_class": "org.apache.flink.architecture.rules.ConnectorRules",
    "source_method": "areFlinkClassesThatResideOutsideOfConnectorPackagesAndArePublic",
    "target_class": "org.apache.flink.architecture.common.Predicates"
  },
  {
    "source_class": "org.apache.flink.architecture.rules.ConnectorRules",
    "source_method": "areEnclosedInPublicClasses",
    "target_class": "org.apache.flink.architecture.common.Predicates"
  },
  {
    "source_class": "org.apache.flink.architecture.rules.ITCaseRules",
    "source_method": "miniClusterWithClientResourceClassRule",
    "target_class": "org.apache.flink.architecture.common.Predicates"
  },
  {
    "source_class": "org.apache.flink.architecture.rules.ITCaseRules",
    "source_method": "miniClusterWithClientResourceRule",
    "target_class": "org.apache.flink.architecture.common.Predicates"
  },
  {
    "source_class": "org.apache.flink.architecture.rules.ITCaseRules",
    "source_method": "isAnnotatedWithExtendWithUsingExtension",
    "target_class": "org.apache.flink.architecture.common.Predicates"
  },
  {
    "source_class": "org.apache.flink.architecture.common.JavaFieldPredicates",
    "source_method": "ofType",
    "target_class": "org.apache.flink.architecture.common.Predicates"
  },
  {
    "source_class": "org.apache.flink.architecture.common.Predicates",
    "source_method": "arePublicFinalOfType",
    "target_class": "org.apache.flink.architecture.common.JavaFieldPredicates"
  },
  {
    "source_class": "org.apache.flink.architecture.common.Predicates",
    "source_method": "arePublicStaticFinalAssignableTo",
    "target_class": "org.apache.flink.architecture.common.JavaFieldPredicates"
  },
  {
    "source_class": "org.apache.flink.architecture.common.GivenJavaClasses",
    "source_method": "javaClassesThat",
    "target_class": "org.apache.flink.architecture.common.SourcePredicates"
  },
  {
    "source_class": "org.apache.flink.architecture.common.GivenJavaClasses",
    "source_method": "javaClassesThat",
    "target_class": "org.apache.flink.architecture.common.SourcePredicates"
  },
  {
    "source_class": "org.apache.flink.architecture.common.GivenJavaClasses",
    "source_method": "noJavaClassesThat",
    "target_class": "org.apache.flink.architecture.common.SourcePredicates"
  },
  {
    "source_class": "org.apache.flink.architecture.common.GivenJavaClasses",
    "source_method": "noJavaClassesThat",
    "target_class": "org.apache.flink.architecture.common.SourcePredicates"
  },
  {
    "source_class": "org.apache.flink.architecture.common.Conditions",
    "source_method": "haveLeafArgumentTypes",
    "target_class": "org.apache.flink.architecture.common.SourcePredicates"
  },
  {
    "source_class": "org.apache.flink.architecture.common.Conditions",
    "source_method": "haveLeafExceptionTypes",
    "target_class": "org.apache.flink.architecture.common.SourcePredicates"
  },
  {
    "source_class": "org.apache.flink.runtime.history.FsJobArchivist",
    "source_method": "archiveJob",
    "target_class": "org.apache.flink.api.common.JobID, java.util.Collection<org.apache.flink.runtime.webmonitor.history.ArchivedJson>):org.apache.flink.core.fs.Path \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.history.FsJobArchivist",
    "source_method": "getArchivedJsons",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.zookeeper.ZooKeeperLeaderElectionHaServices",
    "source_method": "deleteZNode",
    "target_class": "org.apache.flink.runtime.highavailability.zookeeper.CuratorFrameworkWithUnhandledErrorListener"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.AbstractThreadsafeJobResultStore",
    "source_method": "withWriteLock",
    "target_class": "org.apache.flink.util.function.ThrowingRunnable"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.AbstractThreadsafeJobResultStore",
    "source_method": "withReadLock",
    "target_class": "org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.FileSystemJobResultStore",
    "source_method": "fromConfiguration",
    "target_class": "java.util.concurrent.Executor):org.apache.flink.runtime.highavailability.FileSystemJobResultStore \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService",
    "source_method": "addContender",
    "target_class": "org.apache.flink.runtime.leaderelection.LeaderContender):void \t org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService.EmbeddedLeaderElection"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService",
    "source_method": "removeContender",
    "target_class": "org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService.EmbeddedLeaderElection"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService",
    "source_method": "addListener",
    "target_class": "org.apache.flink.runtime.leaderretrieval.LeaderRetrievalListener):void \t org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService.EmbeddedLeaderRetrievalService"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService",
    "source_method": "removeListener",
    "target_class": "org.apache.flink.runtime.highavailability.nonha.embedded.EmbeddedLeaderService.EmbeddedLeaderRetrievalService"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServicesUtils",
    "source_method": "createZooKeeperHaServices",
    "target_class": "java.util.concurrent.Executor, org.apache.flink.runtime.rpc.FatalErrorHandler):org.apache.flink.runtime.highavailability.HighAvailabilityServices \t org.apache.flink.runtime.blob.BlobUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServicesUtils",
    "source_method": "getJobManagerAddress",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServicesUtils",
    "source_method": "getWebMonitorAddress",
    "target_class": "org.apache.flink.runtime.rpc.AddressResolution):java.lang.String \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServicesUtils",
    "source_method": "getClusterHighAvailableStoragePath",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServicesUtils",
    "source_method": "loadCustomHighAvailabilityServicesFactory",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultVertexParallelismInfo",
    "source_method": "normalizeAndCheckMaxParallelism",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRangeAssignment"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultVertexParallelismInfo",
    "source_method": "checkBounds",
    "target_class": "int):int \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.VertexEndOfDataListener",
    "source_method": "recordTaskEndOfData",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionAttemptID"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.VertexEndOfDataListener",
    "source_method": "areAllTasksOfJobVertexEndOfData",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.VertexEndOfDataListener",
    "source_method": "areAllTasksEndOfData",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultScheduler",
    "source_method": "notifyCoordinatorsAboutTaskFailure",
    "target_class": "java.lang.Throwable):void \t org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultScheduler",
    "source_method": "cancelExecution",
    "target_class": "org.apache.flink.runtime.scheduler.ExecutionOperations"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultScheduler",
    "source_method": "notifyCoordinatorOfCancellation",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl",
    "source_method": "terminateExceptionally",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointScheduling"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandlerImpl",
    "source_method": "terminateSuccessfully",
    "target_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationManager",
    "source_method": "stopWithSavepoint",
    "target_class": "java.util.concurrent.CompletableFuture<java.util.Collection<org.apache.flink.runtime.execution.ExecutionState>>, org.apache.flink.runtime.concurrent.ComponentMainThreadExecutor):java.util.concurrent.CompletableFuture<java.lang.String> \t org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationHandler"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.stopwithsavepoint.StopWithSavepointTerminationManager",
    "source_method": "checkSavepointActionPreconditions",
    "target_class": "java.lang.String, org.apache.flink.api.common.JobID, org.apache.flink.runtime.scheduler.stopwithsavepoint.Logger):void \t org.apache.flink.runtime.state.CheckpointStorageCoordinatorView"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SharedSlot",
    "source_method": "getLogicalSlotString",
    "target_class": "org.apache.flink.runtime.util.DualKeyLinkedMap"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SharedSlot",
    "source_method": "getLogicalSlotString",
    "target_class": "org.apache.flink.runtime.util.DualKeyLinkedMap"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SharedSlot",
    "source_method": "isEmpty",
    "target_class": "org.apache.flink.runtime.util.DualKeyLinkedMap"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultExecutionDeployer",
    "source_method": "validateExecutionStates",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultExecutionDeployer",
    "source_method": "transitionToScheduled",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultExecutionDeployer",
    "source_method": "maybeWrapWithNoResourceAvailableException",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultExecutionDeployer",
    "source_method": "registerProducedPartitions",
    "target_class": "org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultExecutionDeployer",
    "source_method": "deployTaskSafe",
    "target_class": "org.apache.flink.runtime.scheduler.ExecutionOperations"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultExecutionDeployer",
    "source_method": "handleTaskDeploymentFailure",
    "target_class": "java.lang.Throwable):void \t org.apache.flink.runtime.scheduler.ExecutionOperations"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultExecutionDeployer.ExecutionDeploymentHandle",
    "source_method": "getExecutionAttemptId",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SimpleExecutionSlotAllocator",
    "source_method": "allocatePhysicalSlotsFor",
    "target_class": "java.util.List<org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotRequest>):java.util.Map<org.apache.flink.runtime.executiongraph.ExecutionAttemptID,org.apache.flink.runtime.scheduler.ExecutionSlotAssignment> \t org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotProvider"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SimpleExecutionSlotAllocator",
    "source_method": "releaseSlot",
    "target_class": "java.lang.Throwable):void \t org.apache.flink.runtime.jobmaster.LogicalSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SimpleExecutionSlotAllocator",
    "source_method": "allocateLogicalSlotFromPhysicalSlot",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlot, boolean):org.apache.flink.runtime.jobmaster.LogicalSlot \t org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.CreatingExecutionGraph.AssignmentResult",
    "source_method": "success",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.DefaultSlotAssigner",
    "source_method": "createExecutionSlotSharingGroups",
    "target_class": "org.apache.flink.runtime.jobmanager.scheduler.SlotSharingGroup):java.util.List<org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator.ExecutionSlotSharingGroup> \t org.apache.flink.runtime.jobmanager.scheduler.SlotSharingGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.StateLocalitySlotAssigner",
    "source_method": "getParallelism",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator.ExecutionSlotSharingGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.StateLocalitySlotAssigner",
    "source_method": "calculateScore",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,java.lang.Integer>, org.apache.flink.runtime.scheduler.adaptive.allocator.JobInformation, org.apache.flink.runtime.scheduler.adaptive.allocator.JobAllocationsInformation):java.util.Collection<org.apache.flink.runtime.scheduler.adaptive.allocator.StateLocalitySlotAssigner.AllocationScore> \t org.apache.flink.runtime.scheduler.adaptive.allocator.JobAllocationsInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator",
    "source_method": "determineSlotsPerSharingGroup",
    "target_class": "int, int, java.util.Map<org.apache.flink.runtime.instance.SlotSharingGroupId,org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator.SlotSharingGroupMetaInfo>):java.util.Map<org.apache.flink.runtime.instance.SlotSharingGroupId,java.lang.Integer> \t org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator.SlotSharingGroupMetaInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator",
    "source_method": "sortSlotSharingGroupsByHighestParallelismRange",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator.SlotSharingGroupMetaInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator",
    "source_method": "areAllExpectedSlotsAvailableAndFree",
    "target_class": "extends org.apache.flink.runtime.clusterframework.types.AllocationID>):boolean \t org.apache.flink.runtime.scheduler.adaptive.allocator.IsSlotAvailableAndFreeFunction"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator",
    "source_method": "reserveSharedSlot",
    "target_class": "org.apache.flink.runtime.jobmaster.SlotInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator.SlotSharingGroupMetaInfo",
    "source_method": "getPerSlotSharingGroups",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.scheduler.adaptive.allocator.JobInformation.VertexInformation,T>, java.util.function.BiFunction<T,T,T>):java.util.Map<org.apache.flink.runtime.instance.SlotSharingGroupId,T> \t org.apache.flink.runtime.jobmanager.scheduler.SlotSharingGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.JobAllocationsInformation",
    "source_method": "calculateAllocations",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "assertPreconditions",
    "target_class": "org.apache.flink.runtime.jobgraph.IntermediateDataSet"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "computeReactiveModeVertexParallelismStore",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.jobgraph.JobVertex,java.lang.Integer>, boolean):org.apache.flink.runtime.scheduler.VertexParallelismStore \t org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "computeVertexParallelismStore",
    "target_class": "org.apache.flink.configuration.SchedulerExecutionMode):org.apache.flink.runtime.scheduler.VertexParallelismStore \t org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "computeVertexParallelismStoreForExecution",
    "target_class": "org.apache.flink.configuration.SchedulerExecutionMode, java.util.function.Function<org.apache.flink.runtime.jobgraph.JobVertex,java.lang.Integer>):org.apache.flink.runtime.scheduler.VertexParallelismStore \t org.apache.flink.runtime.scheduler.SchedulerBase"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "newResourcesAvailable",
    "target_class": "extends org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlot>):void \t org.apache.flink.runtime.scheduler.adaptive.State"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "labelFailure",
    "target_class": "org.apache.flink.runtime.executiongraph.TaskExecutionStateTransition"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "hasDesiredResources",
    "target_class": "java.util.Collection<? extends org.apache.flink.runtime.jobmaster.SlotInfo>):boolean \t org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "determineParallelism",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph):org.apache.flink.runtime.scheduler.adaptive.JobSchedulingPlan \t org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPool"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "declareDesiredResources",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPool"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "calculateDesiredResources",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.JobGraphJobInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "createExecutionGraphWithAvailableResourcesAsync",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.JobSchedulingPlan"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "assignSlotsToExecutionGraph",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.ReservedSlots):org.apache.flink.runtime.executiongraph.ExecutionGraph \t org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "createExecutionGraphAndRestoreState",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.JobGraphJobInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveScheduler",
    "source_method": "checkIdleSlotTimeout",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.State"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.BackgroundTask",
    "source_method": "initialBackgroundTask",
    "target_class": "extends V,? extends java.lang.Exception>, java.util.concurrent.Executor):org.apache.flink.runtime.scheduler.adaptive.BackgroundTask<V> \t org.apache.flink.util.concurrent.FutureUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.StateWithExecutionGraph",
    "source_method": "notifyEndOfData",
    "target_class": "org.apache.flink.runtime.jobgraph.tasks.CheckpointCoordinatorConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.StateWithExecutionGraph",
    "source_method": "updateTaskExecutionState",
    "target_class": "java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String,java.lang.String>>):boolean \t org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.StateWithExecutionGraph",
    "source_method": "convertFailures",
    "target_class": "org.apache.flink.runtime.scheduler.exceptionhistory.RootExceptionHistoryEntry"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.WaitingForResources",
    "source_method": "checkDesiredOrSufficientResourcesAvailable",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.WaitingForResources.Context"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.FailureResultUtil",
    "source_method": "restartOrFail",
    "target_class": "T, org.apache.flink.runtime.scheduler.adaptive.StateWithExecutionGraph):void \t org.apache.flink.runtime.scheduler.adaptive.StateWithExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.Executing",
    "source_method": "handleDeploymentFailure",
    "target_class": "org.apache.flink.runtime.JobException):void \t org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptive.AdaptiveSchedulerFactory",
    "source_method": "createSlotSharingSlotAllocator",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.SlotSharingSlotAllocator"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "getDefaultMaxParallelism",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "computeVertexParallelismStore",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.jobgraph.JobVertex,java.lang.Integer>, java.util.function.Function<java.lang.Integer,java.lang.Integer>):org.apache.flink.runtime.scheduler.VertexParallelismStore \t org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "computeVertexParallelismStore",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "createAndRestoreExecutionGraph",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointsCleaner, org.apache.flink.runtime.checkpoint.CheckpointIDCounter, long, org.apache.flink.runtime.concurrent.ComponentMainThreadExecutor, org.apache.flink.runtime.executiongraph.JobStatusListener, org.apache.flink.runtime.scheduler.VertexParallelismStore):org.apache.flink.runtime.executiongraph.ExecutionGraph \t org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "notifyCoordinatorsOfSubtaskRestore",
    "target_class": "long):void \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "notifyCoordinatorsOfEmptyGlobalRestore",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "getInvolvedExecutionJobVertices",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "getInvolvedExecutionJobVerticesAndSubtasks",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "setGlobalFailureCause",
    "target_class": "long):void \t org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "getExecutionVertex",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "getExecutionJobVertex",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "incrementVersionsOfAllVertices",
    "target_class": "org.apache.flink.runtime.scheduler.ExecutionVertexVersioner"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "transitionExecutionGraphState",
    "target_class": "org.apache.flink.api.common.JobStatus):void \t org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "registerJobMetrics",
    "target_class": "org.apache.flink.runtime.executiongraph.JobStatusProvider, org.apache.flink.metrics.Gauge<java.lang.Long>, org.apache.flink.runtime.scheduler.metrics.DeploymentStateTimeMetrics, java.util.function.Consumer<org.apache.flink.runtime.executiongraph.JobStatusListener>, long, org.apache.flink.configuration.MetricOptions.JobStatusMetricsSettings):void \t org.apache.flink.runtime.scheduler.metrics.JobStatusMetrics"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "archiveGlobalFailure",
    "target_class": "java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String,java.lang.String>>):void \t org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "onTaskExecutionStateUpdate",
    "target_class": "org.apache.flink.runtime.executiongraph.TaskExecutionStateTransition):void \t org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "getExceptionHistory",
    "target_class": "org.apache.flink.runtime.util.BoundedFIFOQueue"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "getCombinedExecutionTerminationFuture",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerBase",
    "source_method": "getJobId",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SsgNetworkMemoryCalculationUtils",
    "source_method": "enrichNetworkMemory",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.jobgraph.JobVertexID,org.apache.flink.runtime.executiongraph.ExecutionJobVertex>, org.apache.flink.runtime.shuffle.ShuffleMaster<?>):void \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SsgNetworkMemoryCalculationUtils",
    "source_method": "getPartitionReuseCount",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SsgNetworkMemoryCalculationUtils",
    "source_method": "getMaxInputChannelInfo",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,java.lang.Integer>, java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,org.apache.flink.runtime.io.network.partition.ResultPartitionType>):void \t org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SsgNetworkMemoryCalculationUtils",
    "source_method": "getMaxSubpartitionInfo",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,java.lang.Integer>, java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,org.apache.flink.runtime.io.network.partition.ResultPartitionType>, java.util.function.Function<org.apache.flink.runtime.jobgraph.JobVertexID,org.apache.flink.runtime.executiongraph.ExecutionJobVertex>):void \t org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SsgNetworkMemoryCalculationUtils",
    "source_method": "getMaxInputChannelInfoForDynamicGraph",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,java.lang.Integer>, java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,org.apache.flink.runtime.io.network.partition.ResultPartitionType>):void \t org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SsgNetworkMemoryCalculationUtils",
    "source_method": "getMaxSubpartitionInfoForDynamicGraph",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,java.lang.Integer>, java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,org.apache.flink.runtime.io.network.partition.ResultPartitionType>):void \t org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.ExecutionGraphToInputsLocationsRetrieverAdapter",
    "source_method": "getExecutionVertex",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultSchedulerComponents",
    "source_method": "createPipelinedRegionSchedulerComponents",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.runtime.jobmaster.slotpool.SlotPool, org.apache.flink.api.common.time.Time):org.apache.flink.runtime.scheduler.DefaultSchedulerComponents \t org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotRequestBulkCheckerImpl"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.SchedulingStrategyUtils",
    "source_method": "sortExecutionVerticesInTopologicalOrder",
    "target_class": "java.util.Set<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID>):java.util.List<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID> \t org.apache.flink.util.IterableUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.SchedulingStrategyUtils",
    "source_method": "sortPipelinedRegionsInTopologicalOrder",
    "target_class": "java.util.Set<org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion>):java.util.List<org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion> \t org.apache.flink.util.IterableUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.DefaultInputConsumableDecider",
    "source_method": "isConsumedPartitionGroupConsumable",
    "target_class": "java.util.Set<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID>):boolean \t org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "getProducerRegion",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.SchedulingTopology"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "getBlockingDownstreamRegionsOfVertex",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "isSourceRegion",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "addSchedulableAndGetNextRegions",
    "target_class": "java.util.Set<org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion>):java.util.Set<org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion> \t org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "scheduleRegion",
    "target_class": "org.apache.flink.runtime.scheduler.SchedulerOperations"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "areRegionInputsAllConsumable",
    "target_class": "java.util.Map<org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup,java.lang.Boolean>, java.util.Set<org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion>):boolean \t org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "isDownstreamConsumedPartitionGroupSchedulable",
    "target_class": "java.util.Set<org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion>):boolean \t org.apache.flink.runtime.scheduler.strategy.SchedulingTopology"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "isDownstreamOfCrossRegionConsumedPartitionSchedulable",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion, java.util.Set<org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion>):boolean \t org.apache.flink.runtime.scheduler.strategy.SchedulingTopology"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "isExternalConsumedPartitionGroup",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion):boolean \t org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.PipelinedRegionSchedulingStrategy",
    "source_method": "isExternalConsumedPartition",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion):boolean \t org.apache.flink.runtime.scheduler.strategy.SchedulingTopology"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.VertexwiseSchedulingStrategy",
    "source_method": "addToScheduleAndGetVertices",
    "target_class": "java.util.Set<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID>):java.util.Set<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID> \t org.apache.flink.runtime.scheduler.strategy.ConsumerVertexGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.VertexwiseSchedulingStrategy",
    "source_method": "isVertexSchedulable",
    "target_class": "java.util.Map<org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup,java.lang.Boolean>, java.util.Set<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID>):boolean \t org.apache.flink.runtime.scheduler.strategy.InputConsumableDecider"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.strategy.VertexwiseSchedulingStrategy",
    "source_method": "scheduleVerticesOneByOne",
    "target_class": "org.apache.flink.runtime.scheduler.SchedulerOperations"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchScheduler",
    "source_method": "enrichInputBytesForExecutionVertices",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchScheduler",
    "source_method": "computeVertexParallelismStoreForDynamicGraph",
    "target_class": "int):org.apache.flink.runtime.scheduler.VertexParallelismStore \t org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchScheduler",
    "source_method": "createFromIntermediateResult",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchSchedulerFactory",
    "source_method": "loadInputConsumableDeciderFactory",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.AllFinishedInputConsumableDecider.Factory"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchSchedulerFactory",
    "source_method": "getOrDecideHybridPartitionDataConsumeConstraint",
    "target_class": "boolean):org.apache.flink.configuration.JobManagerOptions.HybridPartitionDataConsumeConstraint \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchSchedulerFactory",
    "source_method": "createExecutionSlotAllocatorFactory",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.SlotPool):org.apache.flink.runtime.scheduler.ExecutionSlotAllocatorFactory \t org.apache.flink.runtime.util.SlotSelectionStrategyUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchSchedulerFactory",
    "source_method": "checkAllExchangesAreSupported",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchSchedulerFactory",
    "source_method": "getDefaultMaxParallelism",
    "target_class": "org.apache.flink.api.common.ExecutionConfig):int \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismAndInputInfosDecider",
    "source_method": "checkAndGetSubpartitionNum",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismAndInputInfosDecider",
    "source_method": "adjustToClosestLegalParallelism",
    "target_class": "int, int, int, long, long, java.util.function.Function<java.lang.Long,java.lang.Integer>, java.util.function.Function<java.lang.Long,java.util.List<org.apache.flink.runtime.executiongraph.IndexRange>>):java.util.Optional<java.util.List<org.apache.flink.runtime.executiongraph.IndexRange>> \t org.apache.flink.runtime.scheduler.adaptivebatch.BisectionSearchUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismAndInputInfosDecider",
    "source_method": "getMaxNumPartitions",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismAndInputInfosDecider",
    "source_method": "getMaxNumSubpartitions",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismAndInputInfosDecider",
    "source_method": "from",
    "target_class": "org.apache.flink.configuration.Configuration):org.apache.flink.runtime.scheduler.adaptivebatch.DefaultVertexParallelismAndInputInfosDecider \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.SpeculativeScheduler",
    "source_method": "registerMetrics",
    "target_class": "org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.SpeculativeScheduler",
    "source_method": "isOriginalAttempt",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.SpeculativeScheduler",
    "source_method": "isExecutionVertexPossibleToFinish",
    "target_class": "org.apache.flink.runtime.executiongraph.SpeculativeExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.SpeculativeScheduler",
    "source_method": "blockSlowNodes",
    "target_class": "long):void \t org.apache.flink.runtime.blocklist.BlocklistOperations"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.SpeculativeScheduler",
    "source_method": "setupSubtaskGatewayForAttempts",
    "target_class": "java.util.Collection<org.apache.flink.runtime.executiongraph.Execution>):void \t org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adaptivebatch.SpeculativeScheduler",
    "source_method": "getNumEffectiveSpeculativeExecutions",
    "target_class": "org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultVertexParallelismStore",
    "source_method": "applyJobResourceRequirements",
    "target_class": "org.apache.flink.runtime.jobgraph.JobResourceRequirements):java.util.Optional<org.apache.flink.runtime.scheduler.VertexParallelismStore> \t org.apache.flink.runtime.jobgraph.JobVertexResourceRequirements.Parallelism"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultPreferredLocationsRetriever",
    "source_method": "getPreferredLocationsBasedOnState",
    "target_class": "org.apache.flink.runtime.scheduler.StateLocationRetriever"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultPreferredLocationsRetriever",
    "source_method": "getPreferredLocationsBasedOnInputs",
    "target_class": "java.util.Set<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID>):java.util.concurrent.CompletableFuture<java.util.Collection<org.apache.flink.runtime.taskmanager.TaskManagerLocation>> \t org.apache.flink.runtime.scheduler.InputsLocationsRetriever"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultPreferredLocationsRetriever",
    "source_method": "getInputLocationFutures",
    "target_class": "java.util.Collection<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID>):java.util.Collection<java.util.concurrent.CompletableFuture<org.apache.flink.runtime.taskmanager.TaskManagerLocation>> \t org.apache.flink.runtime.scheduler.InputsLocationsRetriever"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultExecutionGraphFactory",
    "source_method": "tryRestoreExecutionGraphFromSavepoint",
    "target_class": "org.apache.flink.runtime.jobgraph.SavepointRestoreSettings):void \t org.apache.flink.runtime.checkpoint.CheckpointCoordinator"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector",
    "source_method": "getJobVerticesToCheck",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector",
    "source_method": "getFinishedRatio",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector",
    "source_method": "getBaseline",
    "target_class": "long):org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector.ExecutionTimeWithInputBytes \t org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector.ExecutionTimeWithInputBytes"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector",
    "source_method": "calculateFinishedTaskExecutionTimeMedian",
    "target_class": "long):org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector.ExecutionTimeWithInputBytes \t org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector",
    "source_method": "findExecutionsExceedingBaseline",
    "target_class": "org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector.ExecutionTimeWithInputBytes, long):java.util.List<org.apache.flink.runtime.executiongraph.ExecutionAttemptID> \t org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector.ExecutionTimeWithInputBytes"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector",
    "source_method": "getExecutionTime",
    "target_class": "long):long \t org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.slowtaskdetector.ExecutionTimeBasedSlowTaskDetector",
    "source_method": "getExecutionInputBytes",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.ExecutionGraphHandler",
    "source_method": "declineCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.ExecutionGraphHandler",
    "source_method": "retrieveTaskManagerLocation",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.ExecutionGraphHandler",
    "source_method": "requestPartitionState",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionID):org.apache.flink.runtime.execution.ExecutionState \t org.apache.flink.runtime.executiongraph.ExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology",
    "source_method": "computeLogicalPipelinedRegionsByJobVertexId",
    "target_class": "org.apache.flink.runtime.jobgraph.topology.DefaultLogicalTopology"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology",
    "source_method": "fromExecutionGraph",
    "target_class": "org.apache.flink.util.IterableUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology",
    "source_method": "generateNewExecutionVerticesAndResultPartitions",
    "target_class": "org.apache.flink.runtime.executiongraph.EdgeManager"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology",
    "source_method": "generateProducedSchedulingResultPartition",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.jobgraph.IntermediateResultPartitionID,java.util.List<org.apache.flink.runtime.scheduler.strategy.ConsumerVertexGroup>>):java.util.List<org.apache.flink.runtime.scheduler.adapter.DefaultResultPartition> \t org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology",
    "source_method": "generateSchedulingExecutionVertex",
    "target_class": "java.util.List<org.apache.flink.runtime.scheduler.adapter.DefaultResultPartition>, java.util.List<org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup>, java.util.function.Function<org.apache.flink.runtime.jobgraph.IntermediateResultPartitionID,org.apache.flink.runtime.scheduler.adapter.DefaultResultPartition>):org.apache.flink.runtime.scheduler.adapter.DefaultExecutionVertex \t org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology",
    "source_method": "containsIntraRegionAllToAllEdge",
    "target_class": "org.apache.flink.runtime.jobgraph.topology.DefaultLogicalPipelinedRegion"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology",
    "source_method": "ensureCoLocatedVerticesInSameRegion",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph):void \t org.apache.flink.runtime.scheduler.adapter.DefaultSchedulingPipelinedRegion"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.adapter.DefaultExecutionTopology",
    "source_method": "getCoLocationConstraint",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionGraph):org.apache.flink.runtime.jobmanager.scheduler.CoLocationConstraint \t org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.DefaultOperatorCoordinatorHandler",
    "source_method": "createCoordinatorMap",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SlotSharingExecutionSlotAllocator",
    "source_method": "allocateLogicalSlotsFromSharedSlots",
    "target_class": "java.util.Map<org.apache.flink.runtime.scheduler.ExecutionSlotSharingGroup,java.util.List<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID>>):java.util.Map<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID,org.apache.flink.runtime.scheduler.SlotSharingExecutionSlotAllocator.SlotExecutionVertexAssignment> \t org.apache.flink.runtime.scheduler.SharedSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SlotSharingExecutionSlotAllocator",
    "source_method": "allocateSharedSlots",
    "target_class": "org.apache.flink.runtime.scheduler.SharedSlotProfileRetriever):java.util.Map<org.apache.flink.runtime.scheduler.ExecutionSlotSharingGroup,org.apache.flink.runtime.scheduler.SharedSlot> \t org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotProvider"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SlotSharingExecutionSlotAllocator",
    "source_method": "releaseSharedSlot",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotProvider"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SlotSharingExecutionSlotAllocator",
    "source_method": "getPhysicalSlotResourceProfile",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SlotSharingExecutionSlotAllocator",
    "source_method": "registerPhysicalSlotRequestBulkCallbacks",
    "target_class": "java.lang.Iterable<org.apache.flink.runtime.scheduler.ExecutionSlotSharingGroup>, org.apache.flink.runtime.scheduler.SharingPhysicalSlotRequestBulk):void \t org.apache.flink.runtime.scheduler.SharedSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.LocalInputPreferredSlotSharingStrategy.ExecutionSlotSharingGroupBuilder",
    "source_method": "tryFindAvailableCoLocatedExecutionSlotSharingGroupFor",
    "target_class": "org.apache.flink.runtime.jobmanager.scheduler.CoLocationGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.LocalInputPreferredSlotSharingStrategy.ExecutionSlotSharingGroupBuilder",
    "source_method": "tryFindAvailableProducerExecutionSlotSharingGroupFor",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.SchedulingExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.LocalInputPreferredSlotSharingStrategy.ExecutionSlotSharingGroupBuilder",
    "source_method": "isExecutionSlotSharingGroupAvailableForVertex",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID):boolean \t org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.LocalInputPreferredSlotSharingStrategy.ExecutionSlotSharingGroupBuilder",
    "source_method": "addVertexToExecutionSlotSharingGroup",
    "target_class": "org.apache.flink.runtime.scheduler.ExecutionSlotSharingGroup):void \t org.apache.flink.runtime.scheduler.ExecutionSlotSharingGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.LocalInputPreferredSlotSharingStrategy.ExecutionSlotSharingGroupBuilder",
    "source_method": "createNewExecutionSlotSharingGroup",
    "target_class": "org.apache.flink.runtime.jobmanager.scheduler.SlotSharingGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.LocalInputPreferredSlotSharingStrategy.ExecutionSlotSharingGroupBuilder",
    "source_method": "updateConstraintToExecutionSlotSharingGroupMap",
    "target_class": "org.apache.flink.runtime.jobmanager.scheduler.CoLocationGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.LocalInputPreferredSlotSharingStrategy.ExecutionSlotSharingGroupBuilder",
    "source_method": "computeAllCandidateGroupsForConsumedPartitionGroup",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup):java.util.LinkedHashSet<org.apache.flink.runtime.scheduler.ExecutionSlotSharingGroup> \t org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.exceptionhistory.FailureHandlingResultSnapshot",
    "source_method": "create",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID,java.util.Collection<org.apache.flink.runtime.executiongraph.Execution>>):org.apache.flink.runtime.scheduler.exceptionhistory.FailureHandlingResultSnapshot \t org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.exceptionhistory.RootExceptionHistoryEntry",
    "source_method": "fromFailureHandlingResultSnapshot",
    "target_class": "org.apache.flink.runtime.scheduler.exceptionhistory.FailureHandlingResultSnapshot"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.exceptionhistory.ExceptionHistoryEntry",
    "source_method": "create",
    "target_class": "java.lang.String, java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String,java.lang.String>>):org.apache.flink.runtime.scheduler.exceptionhistory.ExceptionHistoryEntry \t org.apache.flink.runtime.executiongraph.AccessExecution"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.exceptionhistory.ExceptionHistoryEntry.ArchivedTaskManagerLocation",
    "source_method": "fromTaskManagerLocation",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.metrics.StateTimeMetric",
    "source_method": "register",
    "target_class": "org.apache.flink.metrics.MetricGroup, org.apache.flink.runtime.scheduler.metrics.StateTimeMetric, java.lang.String):void \t org.apache.flink.configuration.MetricOptions.JobStatusMetricsSettings"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.metrics.DeploymentStateTimeMetrics",
    "source_method": "markDeploymentStart",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.metrics.DeploymentStateTimeMetrics",
    "source_method": "markDeploymentEnd",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.metrics.JobStatusMetrics",
    "source_method": "createTimeMetric",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerUtils",
    "source_method": "createCompletedCheckpointStoreIfCheckpointingIsEnabled",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.runtime.checkpoint.CheckpointRecoveryFactory, java.util.concurrent.Executor, org.apache.flink.runtime.scheduler.Logger):org.apache.flink.runtime.checkpoint.CompletedCheckpointStore \t org.apache.flink.runtime.executiongraph.DefaultExecutionGraphBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerUtils",
    "source_method": "createCompletedCheckpointStore",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointRecoveryFactory, java.util.concurrent.Executor, org.apache.flink.runtime.scheduler.Logger, org.apache.flink.api.common.JobID, org.apache.flink.runtime.jobgraph.RestoreMode):org.apache.flink.runtime.checkpoint.CompletedCheckpointStore \t org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.SchedulerUtils",
    "source_method": "createCheckpointIDCounterIfCheckpointingIsEnabled",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointRecoveryFactory):org.apache.flink.runtime.checkpoint.CheckpointIDCounter \t org.apache.flink.runtime.executiongraph.DefaultExecutionGraphBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.scheduler.ExecutionGraphInfo",
    "source_method": "getJobId",
    "target_class": "org.apache.flink.runtime.executiongraph.ArchivedExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.iterative.task.IterationSynchronizationSinkTask",
    "source_method": "readHeadEventChannel",
    "target_class": "org.apache.flink.runtime.iterative.task.SyncEventHandler"
  },
  {
    "source_class": "org.apache.flink.runtime.iterative.task.IterationHeadTask",
    "source_method": "initBackChannel",
    "target_class": "org.apache.flink.runtime.operators.util.TaskConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.iterative.task.SyncEventHandler",
    "source_method": "onWorkerDoneEvent",
    "target_class": "org.apache.flink.api.common.aggregators.Aggregator"
  },
  {
    "source_class": "org.apache.flink.runtime.iterative.task.AbstractIterativeTask",
    "source_method": "verifyEndOfSuperstepState",
    "target_class": "org.apache.flink.util.MutableObjectIterator"
  },
  {
    "source_class": "org.apache.flink.runtime.iterative.concurrent.BlockingBackChannel",
    "source_method": "getReadEndAfterSuperstepEnded",
    "target_class": "org.apache.flink.runtime.iterative.io.SerializedUpdateBuffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.compression.BlockCompressionFactory",
    "source_method": "createBlockCompressionFactory",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.NettyShuffleEnvironment",
    "source_method": "registerLegacyNetworkMetrics",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter[], org.apache.flink.runtime.io.network.partition.consumer.InputGate[]):void \t org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder",
    "source_method": "createBufferConsumer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.SettablePositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder",
    "source_method": "createBufferConsumer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder",
    "source_method": "append",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.SettablePositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder",
    "source_method": "finish",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.SettablePositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder",
    "source_method": "isFull",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.SettablePositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder",
    "source_method": "getWritableBytes",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.SettablePositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder",
    "source_method": "getCommittedBytes",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.SettablePositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder",
    "source_method": "trim",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.SettablePositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumerWithPartialRecordLength",
    "source_method": "cleanupPartialRecord",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer",
    "source_method": "build",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer.CachedPositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer",
    "source_method": "skip",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer.CachedPositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer",
    "source_method": "copy",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer",
    "source_method": "copyWithReaderPosition",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer",
    "source_method": "getWrittenBytes",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer.CachedPositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer",
    "source_method": "isStartOfDataBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer",
    "source_method": "getBufferSize",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer",
    "source_method": "isDataAvailable",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer.CachedPositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer.CachedPositionMarker",
    "source_method": "getCached",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.PositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer.CachedPositionMarker",
    "source_method": "getLatest",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.PositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer.CachedPositionMarker",
    "source_method": "update",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder.PositionMarker"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferDecompressor",
    "source_method": "decompress",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.NetworkBufferPool",
    "source_method": "internalRequestMemorySegment",
    "target_class": "org.apache.flink.runtime.io.AvailabilityProvider.AvailabilityHelper"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.NetworkBufferPool",
    "source_method": "destroy",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.CompositeBuffer",
    "source_method": "addPartialBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferCompressor",
    "source_method": "compressToOriginalBuffer",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.BufferCompressor",
    "source_method": "compress",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.LocalBufferPool",
    "source_method": "requestPooledMemorySegment",
    "target_class": "org.apache.flink.runtime.io.network.buffer.NetworkBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.LocalBufferPool",
    "source_method": "requestMemorySegmentFromGlobalWhenAvailable",
    "target_class": "org.apache.flink.runtime.io.network.buffer.NetworkBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.LocalBufferPool",
    "source_method": "checkAndUpdateAvailability",
    "target_class": "org.apache.flink.runtime.io.AvailabilityProvider.AvailabilityHelper"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.LocalBufferPool",
    "source_method": "fireBufferAvailableNotification",
    "target_class": "org.apache.flink.core.memory.MemorySegment):boolean \t org.apache.flink.runtime.io.network.buffer.BufferListener"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.LocalBufferPool",
    "source_method": "returnMemorySegment",
    "target_class": "org.apache.flink.runtime.io.network.buffer.NetworkBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.LocalBufferPool.AvailabilityStatus",
    "source_method": "from",
    "target_class": "boolean):org.apache.flink.runtime.io.network.buffer.LocalBufferPool.AvailabilityStatus \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.buffer.Buffer.DataType",
    "source_method": "getDataType",
    "target_class": "boolean):org.apache.flink.runtime.io.network.buffer.Buffer.DataType \t org.apache.flink.runtime.checkpoint.CheckpointOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.TaskEventDispatcher",
    "source_method": "subscribeToEvent",
    "target_class": "org.apache.flink.runtime.util.event.EventListener<org.apache.flink.runtime.event.TaskEvent>, java.lang.Class<? extends org.apache.flink.runtime.event.TaskEvent>):void \t org.apache.flink.runtime.io.network.api.TaskEventHandler"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferReaderWriterUtil",
    "source_method": "sliceNextBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.FreeingBufferRecycler"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferReaderWriterUtil",
    "source_method": "setByteChannelBufferHeader",
    "target_class": "java.nio.ByteBuffer):void \t org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferReaderWriterUtil",
    "source_method": "generateDataTypeHeader",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer.DataType"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferReaderWriterUtil",
    "source_method": "parseDataTypeHeader",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer.DataType"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.MemoryMappedBoundedData",
    "source_method": "throwTooLargeBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.MemoryMappedBoundedData",
    "source_method": "alignSize",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "addBuffer",
    "target_class": "int):boolean \t org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "needNotifyPriorityEvent",
    "target_class": "org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "parseAndCheckTimeoutableCheckpointBarrier",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "makeBarrierToPriority",
    "target_class": "org.apache.flink.runtime.io.network.api.CheckpointBarrier):void \t org.apache.flink.runtime.io.network.api.CheckpointBarrier"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "pollBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "acknowledgeAllDataProcessed",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ResultSubpartitionInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "getNextBufferTypeUnsafe",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumerWithPartialRecordLength"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "updateStatistics",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "increaseBuffersInBacklog",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "notifyDataAvailable",
    "target_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartitionView"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "notifyPriorityEvent",
    "target_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartitionView"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "getNumberOfFinishedBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "buildSliceBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumerWithPartialRecordLength"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedSubpartition",
    "source_method": "getNextBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BoundedBlockingSubpartitionDirectTransferReader",
    "source_method": "updateStatistics",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferWritingResultPartition",
    "source_method": "append",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder):int \t org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferWritingResultPartition",
    "source_method": "addToSubpartition",
    "target_class": "int, int, int):void \t org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferWritingResultPartition",
    "source_method": "addToSubpartition",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer, int):int \t org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferWritingResultPartition",
    "source_method": "resizeBuffer",
    "target_class": "int, int):void \t org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferWritingResultPartition",
    "source_method": "createBroadcastBufferConsumers",
    "target_class": "int, int):void \t org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferWritingResultPartition",
    "source_method": "requestNewBufferBuilderFromPool",
    "target_class": "org.apache.flink.runtime.metrics.TimerGauge"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferWritingResultPartition",
    "source_method": "finishUnicastBufferBuilder",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BufferWritingResultPartition",
    "source_method": "finishBroadcastBufferBuilder",
    "target_class": "org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResultPartition",
    "source_method": "closeBufferPool",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResultPartition",
    "source_method": "canBeCompressed",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PipelinedResultPartition",
    "source_method": "checkResultPartitionType",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PartitionedFileWriter",
    "source_method": "setBufferWithHeader",
    "target_class": "java.nio.ByteBuffer[], int):int \t org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BoundedBlockingResultPartition",
    "source_method": "checkResultPartitionType",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PartitionRequestListenerManager",
    "source_method": "registerListener",
    "target_class": "org.apache.flink.runtime.io.network.partition.PartitionRequestListener"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PartitionRequestListenerManager",
    "source_method": "removeExpiration",
    "target_class": "long, java.util.Collection<org.apache.flink.runtime.io.network.partition.PartitionRequestListener>):void \t org.apache.flink.runtime.io.network.partition.PartitionRequestListener"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataManager",
    "source_method": "close",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataSpiller"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataManager",
    "source_method": "spillAndReleaseAllData",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingStrategy"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataManager",
    "source_method": "handleDecision",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingStrategy.Decision"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataManager",
    "source_method": "spillBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataSpiller"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataManager",
    "source_method": "callWithLock",
    "target_class": "org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl",
    "source_method": "checkAndGetFirstBufferIndexOrError",
    "target_class": "java.util.Collection<org.apache.flink.runtime.io.network.buffer.Buffer>):java.util.Optional<org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl.BufferIndexOrError> \t org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl.BufferIndexOrError"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl",
    "source_method": "tryIncreaseBacklog",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl",
    "source_method": "tryDecreaseBacklog",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl",
    "source_method": "moveFileOffsetToBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl.CachedRegionManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl",
    "source_method": "getNextOffsetToLoad",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl.BufferIndexManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl.BufferIndexOrError",
    "source_method": "newError",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl.BufferIndexOrError",
    "source_method": "newBuffer",
    "target_class": "int):org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl.BufferIndexOrError \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReaderImpl.CachedRegionManager",
    "source_method": "updateCachedRegionIfNeeded",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndex"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingStrategyUtils",
    "source_method": "getBuffersByConsumptionPriorityInOrder",
    "target_class": "java.util.TreeMap<java.lang.Integer,java.util.Deque<org.apache.flink.runtime.io.network.partition.hybrid.BufferIndexAndChannel>>, int):java.util.TreeMap<java.lang.Integer,java.util.List<org.apache.flink.runtime.io.network.partition.hybrid.BufferIndexAndChannel>> \t org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingStrategyUtils.BufferConsumptionPriorityIterator"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionConsumerMemoryDataManager",
    "source_method": "tryIncreaseBacklog",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionConsumerMemoryDataManager",
    "source_method": "tryDecreaseBacklog",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionConsumerMemoryDataManager",
    "source_method": "callWithLock",
    "target_class": "org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsBufferContext",
    "source_method": "consumed",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageMemoryManagerImpl",
    "source_method": "requestBufferBlockingFromPool",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageMemoryManagerImpl",
    "source_method": "shouldReclaimBuffersBeforeRequesting",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageMemoryManagerImpl",
    "source_method": "recycleBuffer",
    "target_class": "org.apache.flink.core.memory.MemorySegment):void \t org.apache.flink.runtime.io.network.buffer.BufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.SortBufferAccumulator",
    "source_method": "flushBuffer",
    "target_class": "int):void \t org.apache.flink.util.function.TriConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.SortBufferAccumulator",
    "source_method": "requestBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageMemoryManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.SortBufferAccumulator",
    "source_method": "recycleBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferRecycler"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.HashSubpartitionBufferAccumulator",
    "source_method": "ensureCapacityForRecord",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.HashSubpartitionBufferAccumulator",
    "source_method": "writeRecord",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.HashSubpartitionBufferAccumulator",
    "source_method": "finishCurrentWritingBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.HashSubpartitionBufferAccumulator",
    "source_method": "flushFinishedBuffer",
    "target_class": "int):void \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.HashSubpartitionBufferAccumulatorContext"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.HashBufferAccumulator",
    "source_method": "getSubpartitionAccumulator",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageProducerClient",
    "source_method": "write",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId, org.apache.flink.runtime.io.network.buffer.Buffer.DataType, boolean):void \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.BufferAccumulator"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageProducerClient",
    "source_method": "close",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.BufferAccumulator"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageProducerClient",
    "source_method": "chooseStorageTierToStartSegment",
    "target_class": "int):void \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageProducerClient",
    "source_method": "compressBufferIfPossible",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferCompressor"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageProducerClient",
    "source_method": "canBeCompressed",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.shuffle.TieredResultPartition",
    "source_method": "emit",
    "target_class": "int, org.apache.flink.runtime.io.network.buffer.Buffer.DataType, boolean):void \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageProducerClient"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.shuffle.TieredResultPartition",
    "source_method": "updateProducerMetricStatistics",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageProducerMetricUpdate"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.shuffle.TieredResultPartitionFactory",
    "source_method": "createTieredResultPartition",
    "target_class": "int, org.apache.flink.runtime.io.network.partition.ResultPartitionID, org.apache.flink.runtime.io.network.partition.ResultPartitionType, int, int, java.lang.Boolean, org.apache.flink.runtime.io.network.partition.ResultPartitionManager, org.apache.flink.runtime.io.network.buffer.BufferCompressor, org.apache.flink.util.function.SupplierWithException<org.apache.flink.runtime.io.network.buffer.BufferPool,java.io.IOException>, org.apache.flink.runtime.io.disk.FileChannelManager, org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool, java.util.concurrent.ScheduledExecutorService, boolean):org.apache.flink.runtime.io.network.partition.hybrid.tiered.shuffle.TieredResultPartition \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.shuffle.TieredResultPartitionFactory",
    "source_method": "createBufferAccumulator",
    "target_class": "int, org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageMemoryManager, boolean):org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.BufferAccumulator \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageIdMappingUtils",
    "source_method": "convertId",
    "target_class": "org.apache.flink.util.AbstractID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageIdMappingUtils",
    "source_method": "convertId",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageBytesBasedDataIdentifier"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageIdMappingUtils",
    "source_method": "convertId",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStoragePartitionId"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageIdMappingUtils",
    "source_method": "convertId",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageUtils",
    "source_method": "setBufferWithHeader",
    "target_class": "java.nio.ByteBuffer[], int):void \t org.apache.flink.runtime.io.network.partition.BufferReaderWriterUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageConfiguration",
    "source_method": "builder",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageConfiguration.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageConfiguration",
    "source_method": "builder",
    "target_class": "java.lang.String):org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageConfiguration.Builder \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageConfiguration.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.SegmentPartitionFileReader",
    "source_method": "openNewChannel",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId, int):java.nio.channels.ReadableByteChannel \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileIndex",
    "source_method": "getRegion",
    "target_class": "int):java.util.Optional<org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileIndex.FixedSizeRegion> \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileIndex",
    "source_method": "release",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexCache"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileIndex",
    "source_method": "addRegionToMap",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileIndex.FlushedBuffer, java.util.Map<java.lang.Integer,java.util.List<org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileIndex.FixedSizeRegion>>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.SegmentPartitionFile",
    "source_method": "getPartitionPath",
    "target_class": "java.lang.String):java.lang.String \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageIdMappingUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.SegmentPartitionFile",
    "source_method": "getSubpartitionPath",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStoragePartitionId, int):java.lang.String \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageIdMappingUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.SegmentPartitionFile",
    "source_method": "writeBuffers",
    "target_class": "long, java.nio.ByteBuffer[]):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.SegmentPartitionFile",
    "source_method": "writeSegmentFinishFile",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStoragePartitionId, int, int):void \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.SegmentPartitionFile",
    "source_method": "deletePathQuietly",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileWriter",
    "source_method": "calculateSizeAndFlushBuffers",
    "target_class": "java.util.List<org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileIndex.FlushedBuffer>):void \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.SegmentPartitionFileWriter",
    "source_method": "getTotalBytes",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.SegmentPartitionFileWriter",
    "source_method": "getOrInitSubpartitionChannel",
    "target_class": "int, int):java.nio.channels.WritableByteChannel \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileReader",
    "source_method": "getReadBufferResult",
    "target_class": "long, long, int, int, int):org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.PartitionFileReader.ReadBufferResult \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileReader",
    "source_method": "readFileDataToBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferRecycler, java.nio.ByteBuffer):void \t org.apache.flink.runtime.io.network.buffer.BufferRecycler"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileReader",
    "source_method": "getPartialBufferReadBytes",
    "target_class": "org.apache.flink.runtime.io.network.buffer.CompositeBuffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileReader",
    "source_method": "convertToCurrentReadProgress",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.SubpartitionRemoteCacheManager",
    "source_method": "finishSegment",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.PartitionFileWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.SubpartitionRemoteCacheManager",
    "source_method": "release",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.PartitionFileWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.SubpartitionRemoteCacheManager",
    "source_method": "flushBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.PartitionFileWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.RemoteTierProducerAgent",
    "source_method": "releaseAllResources",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.RemoteCacheManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.RemoteStorageScanner",
    "source_method": "watchSegment",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId, int):void \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.RemoteStorageScanner",
    "source_method": "scanMaxSegmentId",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId):void \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.RemoteStorageScanner",
    "source_method": "checkSegmentExist",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId, int):boolean \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.memory.MemoryTierSubpartitionProducerAgent",
    "source_method": "numQueuedBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyConnectionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.memory.MemoryTierSubpartitionProducerAgent",
    "source_method": "release",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyConnectionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.memory.MemoryTierSubpartitionProducerAgent",
    "source_method": "addFinishedBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyConnectionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskTierProducerAgent",
    "source_method": "emitEndOfSegmentEvent",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskCacheManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskTierProducerAgent",
    "source_method": "emitBuffer",
    "target_class": "int, boolean):void \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskCacheManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskTierProducerAgent",
    "source_method": "releaseResources",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskIOScheduler"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskCacheManager",
    "source_method": "release",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.PartitionFileWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.SubpartitionDiskCacheManager",
    "source_method": "writeEvent",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer.DataType):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskIOScheduler",
    "source_method": "release",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.PartitionFileReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskIOScheduler",
    "source_method": "releaseBuffers",
    "target_class": "org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskIOScheduler",
    "source_method": "getBufferRequestTimeoutTime",
    "target_class": "org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskIOScheduler.ScheduledSubpartitionReader",
    "source_method": "writeNettyBufferAndUpdateSegmentId",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskIOScheduler.ScheduledSubpartitionReader",
    "source_method": "writeToNettyConnectionWriter",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyConnectionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskIOScheduler.ScheduledSubpartitionReader",
    "source_method": "failReader",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyConnectionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.disk.DiskIOScheduler.ScheduledSubpartitionReader",
    "source_method": "getId",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyConnectionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayloadManager",
    "source_method": "add",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayload"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayloadManager",
    "source_method": "poll",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayload"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageNettyServiceImpl",
    "source_method": "createResultSubpartitionView",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId, org.apache.flink.runtime.io.network.partition.BufferAvailabilityListener):org.apache.flink.runtime.io.network.partition.ResultSubpartitionView \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyConnectionWriterImpl"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageNettyServiceImpl",
    "source_method": "setupInputChannel",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStoragePartitionId, org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageSubpartitionId, java.util.function.Supplier<org.apache.flink.runtime.io.network.partition.consumer.InputChannel>):void \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageNettyServiceImpl.NettyConnectionReaderRegistration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayload",
    "source_method": "newBuffer",
    "target_class": "int, int):org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayload \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayload",
    "source_method": "newError",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayload",
    "source_method": "newSegment",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageResultSubpartitionView",
    "source_method": "readNettyPayload",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayloadManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageResultSubpartitionView",
    "source_method": "isEventOrError",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayloadManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageResultSubpartitionView",
    "source_method": "getDataType",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayload"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageResultSubpartitionView",
    "source_method": "releaseQueue",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyServiceProducer, org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyConnectionId):void \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayloadManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageResultSubpartitionView",
    "source_method": "findCurrentNettyPayloadQueue",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.NettyPayload"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsResultPartition",
    "source_method": "broadcast",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer.DataType):void \t org.apache.flink.runtime.io.network.metrics.ResultPartitionBytesCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsResultPartition",
    "source_method": "getSpillingStrategy",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HybridShuffleConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsResultPartition",
    "source_method": "checkMultipleConsumerIsAllowed",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HybridShuffleConfiguration):void \t org.apache.flink.runtime.io.network.partition.hybrid.HybridShuffleConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFullSpillingStrategy",
    "source_method": "checkSpill",
    "target_class": "int, org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingStrategy.Decision.Builder):void \t org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingStrategy.Decision.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFullSpillingStrategy",
    "source_method": "checkRelease",
    "target_class": "int, org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingStrategy.Decision.Builder):void \t org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingStrategy.Decision.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataSpiller",
    "source_method": "createSpilledBuffersAndGetTotalBytes",
    "target_class": "java.util.List<org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndex.SpilledBuffer>):long \t org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataSpiller",
    "source_method": "setBufferWithHeader",
    "target_class": "java.nio.ByteBuffer[], int):void \t org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionConsumer",
    "source_method": "getSubpartitionBacklog",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsDataView"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionConsumer",
    "source_method": "tryReadFromDisk",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsDataView"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionConsumer",
    "source_method": "releaseInternal",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsDataView"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "registerNewConsumer",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionConsumerMemoryDataManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "writeEvent",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer.DataType):void \t org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataManagerOperation"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "ensureCapacityForRecord",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "writeRecord",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "finishCurrentWritingBufferIfNotEmpty",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "finishCurrentWritingBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "compressBuffersIfPossible",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferCompressor"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "canBeCompressed",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "addFinishedBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsMemoryDataManagerOperation"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "startSpillingBuffer",
    "target_class": "java.util.concurrent.CompletableFuture<java.lang.Void>):java.util.Optional<org.apache.flink.runtime.io.network.partition.hybrid.HsBufferContext> \t org.apache.flink.runtime.io.network.partition.hybrid.HsBufferContext"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "checkAndMarkBufferReadable",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsBufferContext"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "isBufferSatisfyStatus",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingInfoProvider.SpillStatus, org.apache.flink.runtime.io.network.partition.hybrid.HsSpillingInfoProvider.ConsumeStatusWithId):boolean \t org.apache.flink.runtime.io.network.partition.hybrid.HsBufferContext"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "updateStatistics",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "runWithLock",
    "target_class": "org.apache.flink.util.function.ThrowingRunnable"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionMemoryDataManager",
    "source_method": "callWithLock",
    "target_class": "org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexCache",
    "source_method": "close",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexSpilledRegionManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.index.FileRegionWriteReadUtils",
    "source_method": "writeHsInternalRegionToFile",
    "target_class": "java.nio.ByteBuffer, org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndexImpl.InternalRegion):void \t org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndexImpl.InternalRegion"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.index.FileRegionWriteReadUtils",
    "source_method": "writeFixedSizeRegionToFile",
    "target_class": "java.nio.ByteBuffer, org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexRegionHelper.Region):void \t org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexRegionHelper.Region"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.index.FileRegionWriteReadUtils",
    "source_method": "readFixedSizeRegionFromFile",
    "target_class": "java.nio.ByteBuffer, long):org.apache.flink.runtime.io.network.partition.hybrid.tiered.file.ProducerMergedPartitionFileIndex.FixedSizeRegion \t org.apache.flink.runtime.io.network.partition.BufferReaderWriterUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexSpilledRegionManagerImpl",
    "source_method": "findRegionInRegionGroup",
    "target_class": "int, org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexSpilledRegionManagerImpl.RegionGroup, boolean):long \t org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexSpilledRegionManagerImpl.RegionGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexSpilledRegionManagerImpl",
    "source_method": "startNewRegionGroup",
    "target_class": "int):void \t org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexSpilledRegionManagerImpl.RegionGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndexImpl",
    "source_method": "getInternalRegion",
    "target_class": "int):java.util.Optional<org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndexImpl.InternalRegion> \t org.apache.flink.runtime.io.network.partition.hybrid.index.FileDataIndexCache"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndexImpl",
    "source_method": "addInternalRegionToMap",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndex.SpilledBuffer, java.util.Map<java.lang.Integer,java.util.List<org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndexImpl.InternalRegion>>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataManager",
    "source_method": "setup",
    "target_class": "org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataManager",
    "source_method": "registerNewConsumer",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsConsumerId, org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionConsumerInternalOperations):org.apache.flink.runtime.io.network.partition.hybrid.HsDataView \t org.apache.flink.runtime.io.network.partition.hybrid.HsSubpartitionFileReader.Factory"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataManager",
    "source_method": "closeDataIndexAndDeleteShuffleFile",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataIndex"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataManager",
    "source_method": "getBufferRequestTimeoutTime",
    "target_class": "org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.hybrid.HsFileDataManager",
    "source_method": "releaseBuffers",
    "target_class": "org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionManager",
    "source_method": "checkRequestPartitionListeners",
    "target_class": "org.apache.flink.runtime.io.network.partition.PartitionRequestListenerManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.HashBasedDataBuffer",
    "source_method": "writeEvent",
    "target_class": "int, org.apache.flink.runtime.io.network.buffer.Buffer.DataType):void \t org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.HashBasedDataBuffer",
    "source_method": "writeRecord",
    "target_class": "int):void \t org.apache.flink.runtime.io.network.buffer.BufferBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.InputGateSpecUtils",
    "source_method": "getEffectiveMaxRequiredBuffersPerGate",
    "target_class": "java.util.Optional<java.lang.Integer>, boolean):int \t org.apache.flink.runtime.io.network.partition.ResultPartitionType"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.InputGateSpecUtils",
    "source_method": "getExclusiveBuffersPerChannel",
    "target_class": "int, int):int \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGateFactory",
    "source_method": "maybeCreateBufferDebloater",
    "target_class": "int, org.apache.flink.metrics.MetricGroup):org.apache.flink.runtime.throughput.BufferDebloater \t org.apache.flink.runtime.throughput.BufferDebloatConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGateFactory",
    "source_method": "calculateNumChannels",
    "target_class": "int, boolean):int \t org.apache.flink.util.MathUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGateFactory",
    "source_method": "createKnownInputChannel",
    "target_class": "int, int, org.apache.flink.runtime.shuffle.NettyShuffleDescriptor, org.apache.flink.runtime.io.network.partition.ResultSubpartitionIndexSet, org.apache.flink.runtime.io.network.partition.consumer.SingleInputGateFactory.ChannelStatistics, org.apache.flink.runtime.io.network.metrics.InputChannelMetrics):org.apache.flink.runtime.io.network.partition.consumer.InputChannel \t org.apache.flink.runtime.shuffle.NettyShuffleDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.InputGate",
    "source_method": "getPriorityEventAvailableFuture",
    "target_class": "org.apache.flink.runtime.io.AvailabilityProvider.AvailabilityHelper"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteChannelStateChecker",
    "source_method": "isConsumerStateValidForConsumption",
    "target_class": "org.apache.flink.runtime.execution.ExecutionState"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteChannelStateChecker",
    "source_method": "getProducerState",
    "target_class": "org.apache.flink.types.Either"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister",
    "source_method": "startPersisting",
    "target_class": "java.util.List<org.apache.flink.runtime.io.network.buffer.Buffer>):void \t org.apache.flink.runtime.checkpoint.channel.ChannelStateWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister",
    "source_method": "maybePersist",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel",
    "source_method": "peekDataTypeUnsafe",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RecoveredInputChannel",
    "source_method": "requestBufferBlocking",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager",
    "source_method": "requestBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager.AvailableBufferQueue"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager",
    "source_method": "shouldContinueRequest",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager",
    "source_method": "requestExclusiveBuffers",
    "target_class": "org.apache.flink.core.memory.MemorySegmentProvider"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager",
    "source_method": "requestFloatingBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannel"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager",
    "source_method": "tryRequestBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager.AvailableBufferQueue"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager",
    "source_method": "releaseFloatingBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager.AvailableBufferQueue"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager",
    "source_method": "getNumberOfAvailableBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager.AvailableBufferQueue"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager",
    "source_method": "unsynchronizedGetFloatingBuffersAvailable",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager.AvailableBufferQueue"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager.AvailableBufferQueue",
    "source_method": "releaseAll",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.UnionInputGate",
    "source_method": "markAvailable",
    "target_class": "org.apache.flink.runtime.io.AvailabilityProvider.AvailabilityHelper"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "retriggerSubpartitionRequest",
    "target_class": "org.apache.flink.runtime.io.network.PartitionRequestClient"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "isWaitingForFloatingBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "getNextReceivedBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "onBlockingUpstream",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "getNumberOfQueuedBuffers",
    "target_class": "org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "unsynchronizedGetExclusiveBuffersUsed",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "getBufferProvider",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "addPriorityBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "checkAnnouncedOnlyOnce",
    "target_class": "org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "shouldBeSpilled",
    "target_class": "org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel",
    "source_method": "onFailedPartitionRequest",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "getLastEstimatedTimeToConsume",
    "target_class": "org.apache.flink.runtime.throughput.BufferDebloater"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "setupChannels",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "setTieredStorageService",
    "target_class": "org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageConsumerClient, org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageNettyServiceImpl):void \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageConsumerClient"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "getNextBufferOrEvent",
    "target_class": "org.apache.flink.runtime.throughput.ThroughputCalculator"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "waitAndGetNextData",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannel"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "readBufferFromTieredStore",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannel"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "checkUnavailability",
    "target_class": "org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "transformToBufferOrEvent",
    "target_class": "boolean, org.apache.flink.runtime.io.network.partition.consumer.InputChannel, boolean):org.apache.flink.runtime.io.network.partition.consumer.BufferOrEvent \t org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "transformBuffer",
    "target_class": "boolean, org.apache.flink.runtime.io.network.partition.consumer.InputChannel, boolean):org.apache.flink.runtime.io.network.partition.consumer.BufferOrEvent \t org.apache.flink.runtime.io.network.partition.consumer.InputChannel"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "decompressBufferIfNeeded",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferDecompressor"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "markAvailable",
    "target_class": "org.apache.flink.runtime.io.AvailabilityProvider.AvailabilityHelper"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "notifyChannelNonEmpty",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannel"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "triggerPartitionStateCheck",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.InputChannelInfo):void \t org.apache.flink.runtime.io.network.partition.PartitionProducerStateProvider"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "queueChannel",
    "target_class": "java.lang.Integer, boolean):void \t org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "queueChannelUnsafe",
    "target_class": "boolean):boolean \t org.apache.flink.runtime.io.network.partition.PrioritizedDeque"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate",
    "source_method": "setupTieredStorageNettyService",
    "target_class": "java.util.List<org.apache.flink.runtime.io.network.partition.hybrid.tiered.storage.TieredStorageConsumerSpec>):void \t org.apache.flink.runtime.io.network.partition.hybrid.tiered.netty.TieredStorageNettyServiceImpl"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannel",
    "source_method": "getChannelIndex",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.InputChannelInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannel.BufferAndAvailability",
    "source_method": "hasPriority",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.consumer.GateNotificationHelper",
    "source_method": "notifyPriority",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputGate"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.DataSetMetaInfo",
    "source_method": "withNumRegisteredPartitions",
    "target_class": "int):org.apache.flink.runtime.io.network.partition.DataSetMetaInfo \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.TaskExecutorPartitionTrackerImpl.DataSetEntry",
    "source_method": "addPartition",
    "target_class": "org.apache.flink.runtime.shuffle.ShuffleDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PageSizeUtil",
    "source_method": "getSystemPageSize",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BoundedBlockingSubpartition",
    "source_method": "writeAndCloseBufferConsumer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BoundedBlockingSubpartition",
    "source_method": "createWithFileChannel",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartition, java.io.File, int, boolean):org.apache.flink.runtime.io.network.partition.BoundedBlockingSubpartition \t org.apache.flink.runtime.io.network.partition.FileChannelBoundedData"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BoundedBlockingSubpartition",
    "source_method": "createWithMemoryMappedFile",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartition, java.io.File):org.apache.flink.runtime.io.network.partition.BoundedBlockingSubpartition \t org.apache.flink.runtime.io.network.partition.MemoryMappedBoundedData"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.BoundedBlockingSubpartition",
    "source_method": "createWithFileAndMemoryMappedReader",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartition, java.io.File):org.apache.flink.runtime.io.network.partition.BoundedBlockingSubpartition \t org.apache.flink.runtime.io.network.partition.FileChannelMemoryMappedBoundedData"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.TaskExecutorPartitionInfo",
    "source_method": "getResultPartitionId",
    "target_class": "org.apache.flink.runtime.shuffle.ShuffleDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.TaskExecutorPartitionInfo",
    "source_method": "from",
    "target_class": "org.apache.flink.runtime.deployment.ResultPartitionDeploymentDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResourceManagerPartitionTrackerImpl",
    "source_method": "setHostedDataSetsAndCheckCorruption",
    "target_class": "java.util.Collection<org.apache.flink.runtime.taskexecutor.partition.ClusterPartitionReport.ClusterPartitionReportEntry>):java.util.Set<org.apache.flink.runtime.jobgraph.IntermediateDataSetID> \t org.apache.flink.runtime.taskexecutor.partition.ClusterPartitionReport.ClusterPartitionReportEntry"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResourceManagerPartitionTrackerImpl",
    "source_method": "updateDataSetMetaData",
    "target_class": "org.apache.flink.runtime.taskexecutor.partition.ClusterPartitionReport"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortMergeResultPartition",
    "source_method": "releaseDataBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.DataBuffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortMergeResultPartition",
    "source_method": "requestGuaranteedBuffers",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortMergeResultPartition",
    "source_method": "requestNetworkBuffers",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortMergeResultPartition",
    "source_method": "updateStatistics",
    "target_class": "boolean):void \t org.apache.flink.runtime.io.network.metrics.ResultPartitionBytesCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortMergeResultPartition",
    "source_method": "writeLargeRecord",
    "target_class": "int, org.apache.flink.runtime.io.network.buffer.Buffer.DataType, boolean):void \t org.apache.flink.runtime.io.network.partition.PartitionedFileWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.FileChannelMemoryMappedBoundedData",
    "source_method": "throwTooLargeBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.FileChannelMemoryMappedBoundedData",
    "source_method": "createWithRegionSize",
    "target_class": "int):org.apache.flink.runtime.io.network.partition.FileChannelMemoryMappedBoundedData \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortMergeSubpartitionReader",
    "source_method": "readBuffers",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferRecycler):boolean \t org.apache.flink.runtime.io.network.partition.PartitionedFileReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortMergeResultPartitionReadScheduler",
    "source_method": "getBufferRequestTimeoutTime",
    "target_class": "org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortMergeResultPartitionReadScheduler",
    "source_method": "releaseBuffers",
    "target_class": "org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortMergeResultPartitionReadScheduler",
    "source_method": "createFileReader",
    "target_class": "int):org.apache.flink.runtime.io.network.partition.PartitionedFileReader \t org.apache.flink.runtime.io.network.partition.PartitionedFileReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortBuffer",
    "source_method": "writeRecord",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortBuffer",
    "source_method": "addBuffer",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.SortBuffer",
    "source_method": "copyRecordOrEvent",
    "target_class": "int, int, int, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PartitionedFileReader",
    "source_method": "moveToNextReadableRegion",
    "target_class": "org.apache.flink.runtime.io.network.partition.PartitionedFile"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PartitionedFileReader",
    "source_method": "readCurrentRegion",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferRecycler, java.util.function.Consumer<org.apache.flink.runtime.io.network.buffer.Buffer>):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.PartitionedFileReader",
    "source_method": "processBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer, org.apache.flink.runtime.io.network.partition.PartitionedFileReader.BufferAndHeader, java.util.function.Consumer<org.apache.flink.runtime.io.network.buffer.Buffer>):org.apache.flink.runtime.io.network.partition.PartitionedFileReader.BufferAndHeader \t org.apache.flink.runtime.io.network.buffer.BufferHeader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.JobMasterPartitionTrackerImpl",
    "source_method": "internalPromotePartitionsOnTaskExecutor",
    "target_class": "java.util.Collection<org.apache.flink.runtime.deployment.ResultPartitionDeploymentDescriptor>):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.messages.Acknowledge> \t org.apache.flink.runtime.taskexecutor.TaskExecutorGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.JobMasterPartitionTrackerImpl",
    "source_method": "internalReleasePartitionsOnTaskExecutor",
    "target_class": "java.util.Collection<org.apache.flink.runtime.deployment.ResultPartitionDeploymentDescriptor>):void \t org.apache.flink.runtime.taskexecutor.TaskExecutorGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.JobMasterPartitionTrackerImpl",
    "source_method": "isPartitionWithLocalResources",
    "target_class": "org.apache.flink.runtime.deployment.ResultPartitionDeploymentDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.JobMasterPartitionTrackerImpl",
    "source_method": "getResultPartitionId",
    "target_class": "org.apache.flink.runtime.deployment.ResultPartitionDeploymentDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionFactory",
    "source_method": "initializeBoundedBlockingPartitions",
    "target_class": "org.apache.flink.runtime.io.network.partition.BoundedBlockingResultPartition, org.apache.flink.runtime.io.network.partition.BoundedBlockingSubpartitionType, int, org.apache.flink.runtime.io.disk.FileChannelManager, boolean):void \t org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionFactory",
    "source_method": "releasePartitionsQuietly",
    "target_class": "int):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionFactory",
    "source_method": "isOverdraftBufferNeeded",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionType"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionFactory",
    "source_method": "getBoundedBlockingType",
    "target_class": "org.apache.flink.util.ProcessorArchitecture"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.partition.ResultSubpartition",
    "source_method": "getSubPartitionIndex",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ResultSubpartitionInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.NettyShuffleServiceFactory",
    "source_method": "createNettyShuffleEnvironment",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceID, org.apache.flink.runtime.io.network.TaskEventPublisher, org.apache.flink.runtime.io.network.partition.ResultPartitionManager, org.apache.flink.metrics.MetricGroup, java.util.concurrent.Executor, int, java.lang.String[]):org.apache.flink.runtime.io.network.NettyShuffleEnvironment \t org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.NettyShuffleServiceFactory",
    "source_method": "createNettyShuffleEnvironment",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceID, org.apache.flink.runtime.io.network.TaskEventPublisher, org.apache.flink.runtime.io.network.partition.ResultPartitionManager, org.apache.flink.runtime.io.network.ConnectionManager, org.apache.flink.metrics.MetricGroup, java.util.concurrent.Executor, int, java.lang.String[]):org.apache.flink.runtime.io.network.NettyShuffleEnvironment \t org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.CheckpointBarrier",
    "source_method": "isCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.reader.AbstractReader",
    "source_method": "incrementEndOfSuperstepEventAndCheck",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputGate"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.reader.AbstractRecordReader",
    "source_method": "clearBuffers",
    "target_class": "org.apache.flink.runtime.io.network.api.serialization.RecordDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "copyIntoFile",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "copyIntoBuffer",
    "target_class": "int, int):void \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "readLength",
    "target_class": "int, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "createSpilledDataIterator",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "copyDataBuffer",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "transferLeftOverTo",
    "target_class": "org.apache.flink.runtime.io.network.api.serialization.NonSpanningWrapper"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "clear",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "randomString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "spill",
    "target_class": "org.apache.flink.runtime.io.network.api.serialization.NonSpanningWrapper"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.SpanningWrapper",
    "source_method": "toSingleBufferIterator",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.NonSpanningWrapper",
    "source_method": "readInto",
    "target_class": "org.apache.flink.core.io.IOReadableWritable"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.NonSpanningWrapper",
    "source_method": "singleBufferIterator",
    "target_class": "org.apache.flink.runtime.io.network.buffer.FreeingBufferRecycler"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.EventSerializer",
    "source_method": "toSerializedEvent",
    "target_class": "org.apache.flink.runtime.io.network.api.EventAnnouncement"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.EventSerializer",
    "source_method": "fromSerializedEvent",
    "target_class": "java.lang.ClassLoader):org.apache.flink.runtime.event.AbstractEvent \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.EventSerializer",
    "source_method": "serializeCheckpointBarrier",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.EventSerializer",
    "source_method": "encodeSavepointType",
    "target_class": "java.nio.ByteBuffer):void \t org.apache.flink.runtime.checkpoint.SavepointType"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.EventSerializer",
    "source_method": "deserializeCheckpointBarrier",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorageLocationReference"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.EventSerializer",
    "source_method": "decodeSavepointType",
    "target_class": "java.nio.ByteBuffer):org.apache.flink.runtime.checkpoint.SavepointType \t org.apache.flink.runtime.checkpoint.SavepointType"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.EventSerializer",
    "source_method": "toBuffer",
    "target_class": "boolean):org.apache.flink.runtime.io.network.buffer.Buffer \t org.apache.flink.core.memory.MemorySegmentFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.serialization.EventSerializer",
    "source_method": "toBufferConsumer",
    "target_class": "boolean):org.apache.flink.runtime.io.network.buffer.BufferConsumer \t org.apache.flink.runtime.io.network.buffer.FreeingBufferRecycler"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter",
    "source_method": "emit",
    "target_class": "int):void \t org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter",
    "source_method": "broadcastEvent",
    "target_class": "boolean):void \t org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter",
    "source_method": "alignedBarrierTimeout",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter",
    "source_method": "abortCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointException):void \t org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter",
    "source_method": "serializeRecord",
    "target_class": "org.apache.flink.core.io.IOReadableWritable):java.nio.ByteBuffer \t org.apache.flink.core.io.IOReadableWritable"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter",
    "source_method": "flushAll",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter",
    "source_method": "setMetricGroup",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter",
    "source_method": "close",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter.OutputFlusher"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter",
    "source_method": "setMaxOverdraftBuffersPerGate",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.logger.NetworkActionsLogger",
    "source_method": "traceInput",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer, java.lang.String, org.apache.flink.runtime.checkpoint.channel.InputChannelInfo, org.apache.flink.runtime.io.network.partition.consumer.ChannelStatePersister, int):void \t org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.logger.NetworkActionsLogger",
    "source_method": "traceOutput",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer, java.lang.String, org.apache.flink.runtime.checkpoint.channel.ResultSubpartitionInfo):void \t org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.logger.NetworkActionsLogger",
    "source_method": "traceRecover",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer, java.lang.String, org.apache.flink.runtime.checkpoint.channel.InputChannelInfo):void \t org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.logger.NetworkActionsLogger",
    "source_method": "traceRecover",
    "target_class": "org.apache.flink.runtime.io.network.buffer.BufferConsumer, java.lang.String, org.apache.flink.runtime.checkpoint.channel.ResultSubpartitionInfo):void \t org.apache.flink.runtime.io.network.buffer.BufferConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.logger.NetworkActionsLogger",
    "source_method": "tracePersist",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer, java.lang.Object, long):void \t org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.ResultPartitionMetrics",
    "source_method": "refreshAndGetTotal",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.ResultPartitionMetrics",
    "source_method": "refreshAndGetMin",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.ResultPartitionMetrics",
    "source_method": "refreshAndGetMax",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.ResultPartitionMetrics",
    "source_method": "refreshAndGetAvg",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.NettyShuffleMetricFactory",
    "source_method": "registerShuffleMetrics",
    "target_class": "org.apache.flink.runtime.io.network.buffer.NetworkBufferPool):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.NettyShuffleMetricFactory",
    "source_method": "createShuffleIOOwnerMetricGroup",
    "target_class": "org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.NettyShuffleMetricFactory",
    "source_method": "registerLegacyNetworkMetrics",
    "target_class": "org.apache.flink.metrics.MetricGroup, org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter[], org.apache.flink.runtime.io.network.partition.consumer.InputGate[]):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.NettyShuffleMetricFactory",
    "source_method": "registerOutputMetrics",
    "target_class": "org.apache.flink.metrics.MetricGroup, org.apache.flink.metrics.MetricGroup, org.apache.flink.runtime.io.network.partition.ResultPartition[]):void \t org.apache.flink.runtime.io.network.metrics.ResultPartitionMetrics"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.NettyShuffleMetricFactory",
    "source_method": "registerInputMetrics",
    "target_class": "org.apache.flink.metrics.MetricGroup, org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate[]):void \t org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.NettyShuffleMetricFactory",
    "source_method": "registerInputMetrics",
    "target_class": "org.apache.flink.metrics.MetricGroup, org.apache.flink.metrics.MetricGroup, org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate[]):void \t org.apache.flink.runtime.io.network.metrics.InputGateMetrics"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.NettyShuffleMetricFactory",
    "source_method": "registerDebloatingTaskMetrics",
    "target_class": "org.apache.flink.metrics.MetricGroup):void \t org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.ResultPartitionBytesCounter",
    "source_method": "incAll",
    "target_class": "org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.InputGateMetrics",
    "source_method": "refreshAndGetTotal",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.InputGateMetrics",
    "source_method": "refreshAndGetMin",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.InputGateMetrics",
    "source_method": "refreshAndGetMax",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.metrics.InputGateMetrics",
    "source_method": "refreshAndGetAvg",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.CreditBasedSequenceNumberingViewReader",
    "source_method": "getNextDataType",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultSubpartition.BufferAndBacklog"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.CreditBasedSequenceNumberingViewReader",
    "source_method": "hasBuffersAvailable",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultSubpartitionView"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getServerConnectBacklog",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getNumberOfArenas",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getServerNumThreads",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getClientNumThreads",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getClientConnectTimeoutSeconds",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getNetworkRetries",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getSendAndReceiveBufferSize",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getTransportType",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getTcpKeepIdleInSeconds",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getTcpKeepInternalInSeconds",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getTcpKeepCount",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyConfig",
    "source_method": "getSSLEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.PartitionRequestClientFactory",
    "source_method": "createPartitionRequestClient",
    "target_class": "org.apache.flink.runtime.io.network.netty.NettyPartitionRequestClient"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.PartitionRequestClientFactory",
    "source_method": "closeOpenChannelConnections",
    "target_class": "org.apache.flink.runtime.io.network.netty.NettyPartitionRequestClient"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.CreditBasedPartitionRequestClientHandler",
    "source_method": "decodeBufferOrEvent",
    "target_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.BufferResponse):void \t org.apache.flink.runtime.io.network.netty.NettyMessage.BufferResponse"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.PartitionRequestQueue",
    "source_method": "notifyReaderCreated",
    "target_class": "org.apache.flink.runtime.io.network.NetworkSequenceViewReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.PartitionRequestQueue",
    "source_method": "notifyNewBufferSize",
    "target_class": "int):void \t org.apache.flink.runtime.io.network.NetworkSequenceViewReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.PartitionRequestQueue",
    "source_method": "notifyRequiredSegmentId",
    "target_class": "int, int):void \t org.apache.flink.runtime.io.network.NetworkSequenceViewReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.PartitionRequestQueue",
    "source_method": "registerAvailableReader",
    "target_class": "org.apache.flink.runtime.io.network.NetworkSequenceViewReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.PartitionRequestQueue",
    "source_method": "pollAvailableReader",
    "target_class": "org.apache.flink.runtime.io.network.NetworkSequenceViewReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.PartitionRequestQueue",
    "source_method": "releaseViewReader",
    "target_class": "org.apache.flink.runtime.io.network.NetworkSequenceViewReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage",
    "source_method": "allocateBuffer",
    "target_class": "byte, int, int, boolean):org.apache.flink.runtime.io.network.netty.ByteBuf \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.BufferResponse",
    "source_method": "releaseBuffer",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.BufferResponse",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.netty.NetworkBufferAllocator):org.apache.flink.runtime.io.network.netty.NettyMessage.BufferResponse \t org.apache.flink.runtime.io.network.buffer.Buffer.DataType"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.ErrorResponse",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannelID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.PartitionRequest",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultSubpartitionIndexSet"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.TaskEventRequest",
    "source_method": "readFrom",
    "target_class": "java.lang.ClassLoader):org.apache.flink.runtime.io.network.netty.NettyMessage.TaskEventRequest \t org.apache.flink.runtime.io.network.api.serialization.EventSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.CancelPartitionRequest",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannelID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.AddCredit",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannelID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.ResumeConsumption",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannelID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.AckAllUserRecordsProcessed",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannelID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.BacklogAnnouncement",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannelID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.NewBufferSize",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannelID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyMessage.SegmentId",
    "source_method": "readFrom",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputChannelID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NetworkBufferAllocator",
    "source_method": "allocatePooledNetworkBuffer",
    "target_class": "org.apache.flink.runtime.io.network.NetworkClientHandler"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyPartitionRequestClient",
    "source_method": "validateClientAndIncrementReferenceCounter",
    "target_class": "org.apache.flink.runtime.io.network.NetworkClientHandler"
  },
  {
    "source_class": "org.apache.flink.runtime.io.network.netty.NettyPartitionRequestClient",
    "source_method": "canBeReused",
    "target_class": "org.apache.flink.runtime.io.network.netty.PartitionRequestClientFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.FileChannelManagerImpl",
    "source_method": "getFileCloser",
    "target_class": "org.apache.flink.util.FileUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.ChannelReaderInputView",
    "source_method": "sendReadRequest",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.BlockChannelReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID",
    "source_method": "randomString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.IOManagerAsync",
    "source_method": "getWriterThreadCloser",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.IOManagerAsync.WriterThread"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.IOManagerAsync",
    "source_method": "getReaderThreadCloser",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.IOManagerAsync.ReaderThread"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.IOManagerAsync",
    "source_method": "getReadRequestQueue",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.IOManagerAsync",
    "source_method": "getWriteRequestQueue",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.BufferFileChannelReader",
    "source_method": "readBufferFromFileChannel",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.IOManager",
    "source_method": "deleteChannel",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.IOManager",
    "source_method": "getSpillingDirectories",
    "target_class": "org.apache.flink.runtime.io.disk.FileChannelManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.iomanager.IOManager",
    "source_method": "getSpillingDirectoriesPaths",
    "target_class": "org.apache.flink.runtime.io.disk.FileChannelManager"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.SeekableFileChannelInputView",
    "source_method": "sendReadRequest",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.BlockChannelReader"
  },
  {
    "source_class": "org.apache.flink.runtime.io.disk.FileChannelInputView",
    "source_method": "sendReadRequest",
    "target_class": "org.apache.flink.runtime.memory.MemoryManager"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.PartitionDescriptor",
    "source_method": "from",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.ProducerDescriptor",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionAttemptID):org.apache.flink.runtime.shuffle.ProducerDescriptor \t org.apache.flink.runtime.taskmanager.TaskManagerLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.NettyShuffleDescriptor",
    "source_method": "getConnectionId",
    "target_class": "org.apache.flink.runtime.shuffle.NettyShuffleDescriptor.PartitionConnectionInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.NettyShuffleDescriptor",
    "source_method": "isLocalTo",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceID"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.NettyShuffleDescriptor.NetworkPartitionConnectionInfo",
    "source_method": "fromProducerDescriptor",
    "target_class": "int):org.apache.flink.runtime.shuffle.NettyShuffleDescriptor.NetworkPartitionConnectionInfo \t org.apache.flink.runtime.shuffle.ProducerDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.NettyShuffleMaster",
    "source_method": "createConnectionInfo",
    "target_class": "int):org.apache.flink.runtime.shuffle.NettyShuffleDescriptor.PartitionConnectionInfo \t org.apache.flink.runtime.shuffle.NettyShuffleDescriptor.NetworkPartitionConnectionInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.NettyShuffleMaster",
    "source_method": "isHybridShuffleNewModeEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.NettyShuffleUtils",
    "source_method": "getMinMaxNetworkBuffersPerResultPartition",
    "target_class": "int, int, int, int, boolean, int, org.apache.flink.runtime.io.network.partition.ResultPartitionType):org.apache.flink.runtime.shuffle.Pair<java.lang.Integer,java.lang.Integer> \t org.apache.flink.runtime.io.network.partition.ResultPartitionType"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.NettyShuffleUtils",
    "source_method": "getNumBuffersToAnnounceForInputGate",
    "target_class": "int, int, java.util.Optional<java.lang.Integer>, int):int \t org.apache.flink.runtime.io.network.partition.consumer.InputGateSpecUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.ShuffleServiceLoader",
    "source_method": "loadShuffleServiceFactory",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.shuffle.ShuffleUtils",
    "source_method": "applyWithShuffleTypeCheck",
    "target_class": "org.apache.flink.runtime.shuffle.ShuffleDescriptor, java.util.function.Function<org.apache.flink.runtime.shuffle.UnknownShuffleDescriptor,T>, java.util.function.Function<SD,T>):T \t org.apache.flink.runtime.shuffle.ShuffleDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ArchivedExecutionGraph",
    "source_method": "createFrom",
    "target_class": "org.apache.flink.api.common.JobStatus):org.apache.flink.runtime.executiongraph.ArchivedExecutionGraph \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ArchivedExecutionGraph",
    "source_method": "createSparseArchivedExecutionGraphWithJobVertices",
    "target_class": "java.lang.String, org.apache.flink.api.common.JobStatus, java.lang.Throwable, org.apache.flink.runtime.jobgraph.tasks.JobCheckpointingSettings, long, java.lang.Iterable<org.apache.flink.runtime.jobgraph.JobVertex>, org.apache.flink.runtime.scheduler.VertexParallelismStore):org.apache.flink.runtime.executiongraph.ArchivedExecutionGraph \t org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ArchivedExecutionGraph",
    "source_method": "createSparseArchivedExecutionGraph",
    "target_class": "java.lang.String, org.apache.flink.api.common.JobStatus, java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,org.apache.flink.runtime.executiongraph.ArchivedExecutionJobVertex>, java.util.List<org.apache.flink.runtime.executiongraph.ArchivedExecutionJobVertex>, java.lang.Throwable, org.apache.flink.runtime.jobgraph.tasks.JobCheckpointingSettings, long):org.apache.flink.runtime.executiongraph.ArchivedExecutionGraph \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ErrorInfo",
    "source_method": "getExceptionAsString",
    "target_class": "org.apache.flink.util.SerializedThrowable"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.EdgeManagerBuildUtil",
    "source_method": "connectVertexToResult",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult):void \t org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.EdgeManagerBuildUtil",
    "source_method": "connectAllToAll",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult, org.apache.flink.runtime.executiongraph.JobVertexInputInfo):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.EdgeManagerBuildUtil",
    "source_method": "connectPointwise",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult, org.apache.flink.runtime.executiongraph.JobVertexInputInfo):void \t org.apache.flink.runtime.executiongraph.IndexRange"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.EdgeManagerBuildUtil",
    "source_method": "connectInternal",
    "target_class": "java.util.List<org.apache.flink.runtime.executiongraph.IntermediateResultPartition>, org.apache.flink.runtime.io.network.partition.ResultPartitionType, org.apache.flink.runtime.executiongraph.EdgeManager):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.EdgeManagerBuildUtil",
    "source_method": "createAndRegisterConsumedPartitionGroupToEdgeManager",
    "target_class": "java.util.List<org.apache.flink.runtime.executiongraph.IntermediateResultPartition>, org.apache.flink.runtime.io.network.partition.ResultPartitionType, org.apache.flink.runtime.executiongraph.EdgeManager):org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup \t org.apache.flink.runtime.executiongraph.EdgeManager"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.EdgeManagerBuildUtil",
    "source_method": "finishAllDataProducedPartitions",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup):void \t org.apache.flink.runtime.executiongraph.IntermediateResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "serializeAccumulator",
    "target_class": "org.apache.flink.util.OptionalFailure<org.apache.flink.api.common.accumulators.Accumulator<?,?>>):org.apache.flink.util.SerializedValue<org.apache.flink.util.OptionalFailure<java.lang.Object>> \t org.apache.flink.util.OptionalFailure"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "attachJobVertices",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex.Factory"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "areJobVerticesAllInitialized",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "waitForAllExecutionsTermination",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "updateStateInternal",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution):boolean \t org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "maybeReleasePartitionGroupsFor",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "releasePartitionGroups",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "createResultPartitionId",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "registerExecutionVerticesAndResultPartitionsFor",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraph",
    "source_method": "assertRunningInJobMasterMainThread",
    "target_class": "org.apache.flink.runtime.concurrent.ComponentMainThreadExecutor"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ArchivedExecutionVertex",
    "source_method": "getCopyOfExecutionHistory",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.VertexInputInfoComputationUtils",
    "source_method": "computeVertexInputInfos",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,org.apache.flink.runtime.executiongraph.IntermediateResult>):java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateDataSetID,org.apache.flink.runtime.executiongraph.JobVertexInputInfo> \t org.apache.flink.runtime.executiongraph.InternalExecutionGraphAccessor"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.VertexInputInfoComputationUtils",
    "source_method": "computeConsumedSubpartitionRange",
    "target_class": "int, java.util.function.Supplier<java.lang.Integer>, boolean, boolean):org.apache.flink.runtime.executiongraph.IndexRange \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResultPartition",
    "source_method": "canBeReleased",
    "target_class": "org.apache.flink.runtime.executiongraph.EdgeManager"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResultPartition",
    "source_method": "getConsumerVertexGroups",
    "target_class": "org.apache.flink.runtime.executiongraph.EdgeManager"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResultPartition",
    "source_method": "getConsumedPartitionGroups",
    "target_class": "org.apache.flink.runtime.executiongraph.EdgeManager"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResultPartition",
    "source_method": "computeNumberOfMaxPossiblePartitionConsumers",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResultPartition",
    "source_method": "resetForNewExecution",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraphBuilder",
    "source_method": "buildGraph",
    "target_class": "org.apache.flink.configuration.Configuration, java.util.concurrent.ScheduledExecutorService, java.util.concurrent.Executor, java.lang.ClassLoader, org.apache.flink.runtime.checkpoint.CompletedCheckpointStore, org.apache.flink.runtime.checkpoint.CheckpointsCleaner, org.apache.flink.runtime.checkpoint.CheckpointIDCounter, org.apache.flink.api.common.time.Time, org.apache.flink.runtime.blob.BlobWriter, org.apache.flink.runtime.executiongraph.Logger, org.apache.flink.runtime.shuffle.ShuffleMaster<?>, org.apache.flink.runtime.io.network.partition.JobMasterPartitionTracker, org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory.PartitionLocationConstraint, org.apache.flink.runtime.executiongraph.ExecutionDeploymentListener, org.apache.flink.runtime.executiongraph.ExecutionStateUpdateListener, long, org.apache.flink.runtime.executiongraph.VertexAttemptNumberStore, org.apache.flink.runtime.scheduler.VertexParallelismStore, java.util.function.Supplier<org.apache.flink.runtime.checkpoint.CheckpointStatsTracker>, boolean, org.apache.flink.runtime.executiongraph.ExecutionJobVertex.Factory, org.apache.flink.runtime.executiongraph.MarkPartitionFinishedStrategy, boolean, org.apache.flink.runtime.metrics.groups.JobManagerJobMetricGroup):org.apache.flink.runtime.executiongraph.DefaultExecutionGraph \t org.apache.flink.runtime.executiongraph.DefaultExecutionGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.DefaultExecutionGraphBuilder",
    "source_method": "isCheckpointingEnabled",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getJobId",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getJobvertexId",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getTaskName",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getTotalNumberOfParallelSubtasks",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getMaxParallelism",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getResourceProfile",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getNextInputSplit",
    "target_class": "int):java.util.Optional<org.apache.flink.core.io.InputSplit> \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getCurrentExecution",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getCurrentTaskManagerLocationFuture",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getCurrentAssignedResource",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getExecutionGraphAccessor",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getTerminationFuture",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "getPreferredLocationBasedOnState",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "resetForNewExecutionInternal",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "resetExecution",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "deployToSlot",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "cachePartitionInfo",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "finishPartitionsIfNeeded",
    "target_class": "org.apache.flink.runtime.executiongraph.MarkPartitionFinishedStrategy"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "executionFinished",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "notifyPendingDeployment",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex",
    "source_method": "notifyCompletedDeployment",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "tryAssignResource",
    "target_class": "org.apache.flink.runtime.jobmaster.LogicalSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "getNextInputSplit",
    "target_class": "org.apache.flink.runtime.jobmaster.LogicalSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "registerProducedPartitions",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation, org.apache.flink.runtime.executiongraph.ExecutionAttemptID):java.util.concurrent.CompletableFuture<java.util.Map<org.apache.flink.runtime.jobgraph.IntermediateResultPartitionID,org.apache.flink.runtime.deployment.ResultPartitionDeploymentDescriptor>> \t org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "getPartitionMaxParallelism",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "updatePartitionConsumers",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "createFinishedPartitionInfo",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "sendOperatorEvent",
    "target_class": "org.apache.flink.util.SerializedValue<org.apache.flink.runtime.operators.coordination.OperatorEvent>):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.messages.Acknowledge> \t org.apache.flink.runtime.jobmaster.LogicalSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "finishPartitionsAndUpdateConsumers",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "finishCancellation",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "sendCancelRpcCall",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "startTrackingPartitions",
    "target_class": "java.util.Collection<org.apache.flink.runtime.deployment.ResultPartitionDeploymentDescriptor>):void \t org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "sendUpdatePartitionInfoRpcCall",
    "target_class": "org.apache.flink.runtime.jobmaster.LogicalSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "releaseAssignedResource",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "getLocationInformation",
    "target_class": "org.apache.flink.runtime.jobmaster.LogicalSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "getVertexWithAttempt",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.Execution",
    "source_method": "assertRunningInJobMasterMainThread",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.FailoverStrategyFactoryLoader",
    "source_method": "loadFailoverStrategyFactory",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.PipelinedRegionComputeUtil",
    "source_method": "buildRawRegions",
    "target_class": "extends V>, java.util.function.Function<V,java.lang.Iterable<R>>):java.util.Map<V,java.util.Set<V>> \t org.apache.flink.runtime.executiongraph.VertexGroupComputeUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.SchedulingPipelinedRegionComputeUtil",
    "source_method": "computePipelinedRegions",
    "target_class": "extends org.apache.flink.runtime.scheduler.strategy.SchedulingExecutionVertex>, java.util.function.Function<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID,? extends org.apache.flink.runtime.scheduler.strategy.SchedulingExecutionVertex>, java.util.function.Function<org.apache.flink.runtime.jobgraph.IntermediateResultPartitionID,? extends org.apache.flink.runtime.scheduler.strategy.SchedulingResultPartition>):java.util.Set<java.util.Set<org.apache.flink.runtime.scheduler.strategy.SchedulingExecutionVertex>> \t org.apache.flink.runtime.executiongraph.failover.PipelinedRegionComputeUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.SchedulingPipelinedRegionComputeUtil",
    "source_method": "mergeRegionsOnCycles",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID,? extends org.apache.flink.runtime.scheduler.strategy.SchedulingExecutionVertex>):java.util.Set<java.util.Set<org.apache.flink.runtime.scheduler.strategy.SchedulingExecutionVertex>> \t org.apache.flink.runtime.executiongraph.VertexGroupComputeUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.SchedulingPipelinedRegionComputeUtil",
    "source_method": "buildOutEdgesDesc",
    "target_class": "java.util.List<java.util.Set<org.apache.flink.runtime.scheduler.strategy.SchedulingExecutionVertex>>, java.util.function.Function<org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID,? extends org.apache.flink.runtime.scheduler.strategy.SchedulingExecutionVertex>):java.util.List<java.util.List<java.lang.Integer>> \t org.apache.flink.runtime.io.network.partition.ResultPartitionType"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.SchedulingPipelinedRegionComputeUtil",
    "source_method": "getMustBePipelinedConsumedResults",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.jobgraph.IntermediateResultPartitionID,? extends org.apache.flink.runtime.scheduler.strategy.SchedulingResultPartition>):java.lang.Iterable<org.apache.flink.runtime.scheduler.strategy.SchedulingResultPartition> \t org.apache.flink.runtime.io.network.partition.ResultPartitionType"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.partitionrelease.PartitionGroupReleaseStrategyFactoryLoader",
    "source_method": "loadPartitionGroupReleaseStrategyFactory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.partitionrelease.RegionPartitionGroupReleaseStrategy",
    "source_method": "initPartitionGroupConsumerRegions",
    "target_class": "extends org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion>):java.lang.Iterable<org.apache.flink.runtime.executiongraph.failover.partitionrelease.ConsumerRegionGroupExecutionView> \t org.apache.flink.runtime.executiongraph.failover.partitionrelease.ConsumerRegionGroupExecutionView"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.partitionrelease.RegionPartitionGroupReleaseStrategy",
    "source_method": "filterReleasablePartitionGroups",
    "target_class": "org.apache.flink.runtime.executiongraph.failover.partitionrelease.ConsumerRegionGroupExecutionView"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.partitionrelease.RegionPartitionGroupReleaseStrategy",
    "source_method": "notifySchedulingTopologyUpdatedInternal",
    "target_class": "extends org.apache.flink.runtime.scheduler.strategy.SchedulingPipelinedRegion>):void \t org.apache.flink.runtime.executiongraph.failover.partitionrelease.ConsumerRegionGroupExecutionViewMaintainer"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.partitionrelease.RegionPartitionGroupReleaseStrategy",
    "source_method": "isRegionOfVertexFinished",
    "target_class": "org.apache.flink.runtime.executiongraph.failover.partitionrelease.PipelinedRegionExecutionView"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.ExecutionFailureHandler",
    "source_method": "getFailureHandlingResult",
    "target_class": "java.lang.Throwable, long):org.apache.flink.runtime.executiongraph.failover.FailureHandlingResult \t org.apache.flink.runtime.executiongraph.failover.FailoverStrategy"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.ExecutionFailureHandler",
    "source_method": "isUnrecoverableError",
    "target_class": "org.apache.flink.runtime.throwable.ThrowableClassifier"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.ExponentialDelayRestartBackoffTimeStrategy",
    "source_method": "createFactory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.RestartPipelinedRegionFailoverStrategy",
    "source_method": "getRegionsToRestart",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.SchedulingTopology"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.RestartBackoffTimeStrategyFactoryLoader",
    "source_method": "getJobRestartStrategyFactory",
    "target_class": "org.apache.flink.api.common.restartstrategy.RestartStrategies.FixedDelayRestartStrategyConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.RestartBackoffTimeStrategyFactoryLoader",
    "source_method": "getRestartStrategyFactoryFromConfig",
    "target_class": "org.apache.flink.runtime.executiongraph.failover.FixedDelayRestartBackoffTimeStrategy"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.RestartBackoffTimeStrategyFactoryLoader",
    "source_method": "getDefaultRestartStrategyFactory",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.FixedDelayRestartBackoffTimeStrategy",
    "source_method": "createFactory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.LogicalPipelinedRegionComputeUtil",
    "source_method": "computePipelinedRegions",
    "target_class": "extends org.apache.flink.runtime.jobgraph.topology.LogicalVertex>):java.util.Set<java.util.Set<org.apache.flink.runtime.jobgraph.topology.LogicalVertex>> \t org.apache.flink.runtime.executiongraph.failover.PipelinedRegionComputeUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.LogicalPipelinedRegionComputeUtil",
    "source_method": "getMustBePipelinedConsumedResults",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionType"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.failover.FailureRateRestartBackoffTimeStrategy",
    "source_method": "createFactory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResult",
    "source_method": "setPartition",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResultPartition):void \t org.apache.flink.runtime.executiongraph.IntermediateResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResult",
    "source_method": "getConsumersParallelism",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResult",
    "source_method": "getConsumersMaxParallelism",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResult",
    "source_method": "getConsumingDistributionPattern",
    "target_class": "org.apache.flink.runtime.jobgraph.IntermediateDataSet"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResult",
    "source_method": "markPartitionFinished",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResultPartition):void \t org.apache.flink.runtime.executiongraph.IntermediateResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.IntermediateResult",
    "source_method": "clearCachedInformationForPartitionGroup",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex",
    "source_method": "initialize",
    "target_class": "org.apache.flink.api.common.time.Time, long, org.apache.flink.runtime.executiongraph.SubtaskAttemptNumberStore, org.apache.flink.runtime.operators.coordination.CoordinatorStore, org.apache.flink.runtime.metrics.groups.JobManagerJobMetricGroup):void \t org.apache.flink.runtime.executiongraph.InternalExecutionGraphAccessor"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex",
    "source_method": "isParallelismDecided",
    "target_class": "org.apache.flink.runtime.scheduler.VertexParallelismInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex",
    "source_method": "getJobId",
    "target_class": "org.apache.flink.runtime.executiongraph.InternalExecutionGraphAccessor"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex",
    "source_method": "getTaskInformationOrBlobKey",
    "target_class": "org.apache.flink.runtime.executiongraph.InternalExecutionGraphAccessor"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex",
    "source_method": "getTaskInformation",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex",
    "source_method": "executionVertexFinished",
    "target_class": "org.apache.flink.runtime.executiongraph.InternalExecutionGraphAccessor"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex",
    "source_method": "executionVertexUnFinished",
    "target_class": "org.apache.flink.runtime.executiongraph.InternalExecutionGraphAccessor"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex",
    "source_method": "isFinished",
    "target_class": "org.apache.flink.runtime.scheduler.VertexParallelismInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex",
    "source_method": "getAggregateJobVertexState",
    "target_class": "int):org.apache.flink.runtime.execution.ExecutionState \t org.apache.flink.runtime.execution.ExecutionState"
  },
  {
    "source_class": "org.apache.flink.runtime.executiongraph.ExecutionHistory",
    "source_method": "add",
    "target_class": "org.apache.flink.runtime.executiongraph.ArchivedExecution"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "sendEventToSourceOperator",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorEvent):void \t org.apache.flink.runtime.operators.coordination.OperatorCoordinator.SubtaskGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "sendEventToSourceOperatorIfTaskReady",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorEvent):void \t org.apache.flink.runtime.operators.coordination.OperatorCoordinator.SubtaskGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "attemptReady",
    "target_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorProvider.CoordinatorExecutorThreadFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "attemptFailed",
    "target_class": "int):void \t org.apache.flink.runtime.source.coordinator.SourceCoordinatorProvider.CoordinatorExecutorThreadFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "subtaskReset",
    "target_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorProvider.CoordinatorExecutorThreadFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "failJob",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinator.Context"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "onCheckpoint",
    "target_class": "org.apache.flink.runtime.source.coordinator.SplitAssignmentTracker"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "onCheckpointComplete",
    "target_class": "org.apache.flink.runtime.source.coordinator.SplitAssignmentTracker"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "checkSubtaskIndex",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinator.Context"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext",
    "source_method": "signalNoMoreSplitsToAttempt",
    "target_class": "int):void \t org.apache.flink.runtime.operators.coordination.OperatorCoordinator.SubtaskGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinatorContext.SubtaskGateways",
    "source_method": "registerSubtaskGateway",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinator.SubtaskGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.source.coordinator.SourceCoordinator",
    "source_method": "writeCheckpointBytes",
    "target_class": "org.apache.flink.core.io.SimpleVersionedSerializer<EnumChkT>):byte[] \t org.apache.flink.runtime.source.coordinator.SourceCoordinatorSerdeUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniClusterConfiguration",
    "source_method": "generateConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniClusterConfiguration.Builder",
    "source_method": "build",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "getRestAddress",
    "target_class": "org.apache.flink.runtime.webmonitor.retriever.LeaderRetriever"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "getClusterInformation",
    "target_class": "org.apache.flink.runtime.blob.BlobServer"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "createDispatcherResourceManagerComponents",
    "target_class": "org.apache.flink.runtime.minicluster.MiniCluster.RpcServiceFactory, org.apache.flink.runtime.blob.BlobServer, org.apache.flink.runtime.heartbeat.HeartbeatServices, org.apache.flink.runtime.security.token.DelegationTokenManager, org.apache.flink.runtime.metrics.MetricRegistry, org.apache.flink.runtime.webmonitor.retriever.MetricQueryServiceRetriever, org.apache.flink.runtime.rpc.FatalErrorHandler):java.util.Collection<? extends org.apache.flink.runtime.entrypoint.component.DispatcherResourceManagerComponent> \t org.apache.flink.runtime.entrypoint.component.DispatcherResourceManagerComponent"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "createHighAvailabilityServicesFactory",
    "target_class": "org.apache.flink.runtime.minicluster.MiniClusterConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "createHighAvailabilityServices",
    "target_class": "java.util.concurrent.Executor):org.apache.flink.runtime.highavailability.HighAvailabilityServices \t org.apache.flink.runtime.highavailability.HighAvailabilityServicesFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "startTaskManager",
    "target_class": "org.apache.flink.runtime.minicluster.MiniClusterConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "useLocalCommunication",
    "target_class": "org.apache.flink.runtime.minicluster.MiniClusterConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "listJobs",
    "target_class": "org.apache.flink.runtime.messages.webmonitor.JobDetails"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "triggerSavepoint",
    "target_class": "java.lang.String, boolean, org.apache.flink.core.execution.SavepointFormatType):java.util.concurrent.CompletableFuture<java.lang.String> \t org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "triggerDetachedSavepoint",
    "target_class": "java.lang.String, boolean, org.apache.flink.core.execution.SavepointFormatType):java.util.concurrent.CompletableFuture<java.lang.String> \t org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "triggerCheckpoint",
    "target_class": "org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "stopWithSavepoint",
    "target_class": "java.lang.String, boolean, org.apache.flink.core.execution.SavepointFormatType):java.util.concurrent.CompletableFuture<java.lang.String> \t org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "stopWithDetachedSavepoint",
    "target_class": "java.lang.String, boolean, org.apache.flink.core.execution.SavepointFormatType):java.util.concurrent.CompletableFuture<java.lang.String> \t org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "getResourceOverview",
    "target_class": "org.apache.flink.runtime.resourcemanager.ResourceManagerGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "runDetached",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "executeJobBlocking",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "checkRestoreModeForChangelogStateBackend",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "uploadAndSetJobFiles",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.runtime.minicluster.MiniClusterConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "createBlobServerAddress",
    "target_class": "org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "createMetricRegistry",
    "target_class": "long):org.apache.flink.runtime.metrics.MetricRegistryImpl \t org.apache.flink.runtime.minicluster.MiniClusterConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "createRemoteRpcService",
    "target_class": "java.lang.String, int, org.apache.flink.runtime.rpc.RpcSystem):org.apache.flink.runtime.rpc.RpcService \t org.apache.flink.runtime.rpc.RpcSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "createRemoteRpcService",
    "target_class": "java.lang.String, java.lang.String, java.lang.String, org.apache.flink.runtime.rpc.RpcSystem):org.apache.flink.runtime.rpc.RpcService \t org.apache.flink.runtime.rpc.RpcSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "createLocalRpcService",
    "target_class": "org.apache.flink.runtime.rpc.RpcSystem):org.apache.flink.runtime.rpc.RpcService \t org.apache.flink.runtime.rpc.RpcSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "terminateMiniClusterServices",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniCluster",
    "source_method": "deleteDirectories",
    "target_class": "org.apache.flink.runtime.entrypoint.WorkingDirectory"
  },
  {
    "source_class": "org.apache.flink.runtime.minicluster.MiniClusterJobClient",
    "source_method": "shutDownCluster",
    "target_class": "org.apache.flink.runtime.minicluster.MiniCluster"
  },
  {
    "source_class": "org.apache.flink.runtime.externalresource.ExternalResourceUtils",
    "source_method": "getExternalResourceSet",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.externalresource.ExternalResourceUtils",
    "source_method": "getExternalResourceConfigurationKeys",
    "target_class": "java.lang.String):java.util.Map<java.lang.String,java.lang.String> \t org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.externalresource.ExternalResourceUtils",
    "source_method": "getExternalResourceAmountMap",
    "target_class": "org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.externalresource.ExternalResourceUtils",
    "source_method": "generateExternalResourcesString",
    "target_class": "org.apache.flink.api.common.resources.Resource"
  },
  {
    "source_class": "org.apache.flink.runtime.externalresource.ExternalResourceUtils",
    "source_method": "externalResourceDriversFromConfig",
    "target_class": "org.apache.flink.core.plugin.PluginManager):java.util.Map<java.lang.String,org.apache.flink.api.common.externalresource.ExternalResourceDriver> \t org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.messages.webmonitor.JobDetails",
    "source_method": "createDetailsForJob",
    "target_class": "org.apache.flink.runtime.execution.ExecutionState"
  },
  {
    "source_class": "org.apache.flink.runtime.messages.webmonitor.JobDetails",
    "source_method": "extractNumTasksPerState",
    "target_class": "org.apache.flink.runtime.execution.ExecutionState"
  },
  {
    "source_class": "org.apache.flink.runtime.messages.webmonitor.JobIdsWithStatusOverview",
    "source_method": "combine",
    "target_class": "java.util.Collection<org.apache.flink.runtime.messages.webmonitor.JobIdsWithStatusOverview.JobIdWithStatus>):java.util.Collection<org.apache.flink.runtime.messages.webmonitor.JobIdsWithStatusOverview.JobIdWithStatus> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.messages.webmonitor.JobsOverview",
    "source_method": "create",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.messages.FlinkJobTerminatedWithoutCancellationException",
    "source_method": "assertNotCanceled",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService",
    "source_method": "getLeaderSessionID",
    "target_class": "org.apache.flink.runtime.leaderelection.LeaderInformationRegister"
  },
  {
    "source_class": "org.apache.flink.runtime.leaderelection.DefaultLeaderElectionService",
    "source_method": "forwardErrorToLeaderContender",
    "target_class": "org.apache.flink.runtime.rpc.FatalErrorHandler"
  },
  {
    "source_class": "org.apache.flink.runtime.leaderelection.LeaderElectionUtils",
    "source_method": "convertToString",
    "target_class": "java.lang.String):java.lang.String \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.leaderelection.LeaderInformation",
    "source_method": "known",
    "target_class": "java.lang.String):org.apache.flink.runtime.leaderelection.LeaderInformation \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.registration.RetryingRegistration",
    "source_method": "startRegistrationLater",
    "target_class": "org.apache.flink.runtime.rpc.RpcService"
  },
  {
    "source_class": "org.apache.flink.runtime.registration.RegisteredRpcConnection",
    "source_method": "close",
    "target_class": "org.apache.flink.runtime.registration.RetryingRegistration"
  },
  {
    "source_class": "org.apache.flink.runtime.registration.RetryingRegistrationConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMasterServiceProcess",
    "source_method": "waitingForLeadership",
    "target_class": "org.apache.flink.runtime.jobmaster.JobMasterServiceProcess.WaitingForLeadership"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner",
    "source_method": "createExecutionGraphInfoWithJobStatus",
    "target_class": "org.apache.flink.runtime.jobmaster.factories.JobMasterServiceProcessFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner",
    "source_method": "handleJobMasterServiceLeadershipRunnerError",
    "target_class": "org.apache.flink.runtime.rpc.FatalErrorHandler"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMasterServiceLeadershipRunner",
    "source_method": "isValidLeader",
    "target_class": "org.apache.flink.runtime.leaderelection.LeaderElection"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobManagerSharedServices",
    "source_method": "shutdown",
    "target_class": "org.apache.flink.runtime.shuffle.ShuffleMaster"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobManagerSharedServices",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.blob.BlobServer, org.apache.flink.runtime.rpc.FatalErrorHandler):org.apache.flink.runtime.jobmaster.JobManagerSharedServices \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMasterConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.factories.DefaultJobMasterServiceFactory",
    "source_method": "internalCreateJobMasterService",
    "target_class": "org.apache.flink.runtime.jobmanager.OnCompletionActions):org.apache.flink.runtime.jobmaster.JobMasterService \t org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobResult",
    "source_method": "toJobExecutionResult",
    "target_class": "org.apache.flink.util.SerializedThrowable"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobResult",
    "source_method": "createFrom",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.LocationPreferenceSlotSelectionStrategy",
    "source_method": "selectWithLocationPreference",
    "target_class": "java.util.Collection<org.apache.flink.runtime.taskmanager.TaskManagerLocation>, org.apache.flink.runtime.clusterframework.types.ResourceProfile):java.util.Optional<org.apache.flink.runtime.jobmaster.slotpool.SlotSelectionStrategy.SlotInfoAndLocality> \t org.apache.flink.runtime.jobmaster.SlotInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool",
    "source_method": "matchWithOutstandingRequirement",
    "target_class": "org.apache.flink.runtime.slots.RequirementMatcher"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool",
    "source_method": "calculateUnfulfilledResources",
    "target_class": "org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool",
    "source_method": "createAllocatedSlot",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation, org.apache.flink.runtime.jobmanager.slots.TaskManagerGateway):org.apache.flink.runtime.jobmaster.slotpool.AllocatedSlot \t org.apache.flink.runtime.taskexecutor.slot.SlotOffer"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool",
    "source_method": "increaseAvailableResources",
    "target_class": "org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool",
    "source_method": "updateSlotToRequirementProfileMapping",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile):void \t org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultDeclarativeSlotPool",
    "source_method": "getFulfilledRequirements",
    "target_class": "extends org.apache.flink.runtime.jobmaster.slotpool.AllocatedSlot>):org.apache.flink.runtime.util.ResourceCounter \t org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolService",
    "source_method": "getRelativeTimeMillis",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolService",
    "source_method": "getSlotServiceStatus",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPool"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge",
    "source_method": "internalRequestNewSlot",
    "target_class": "org.apache.flink.api.common.time.Time):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlot> \t org.apache.flink.runtime.jobmaster.slotpool.PendingRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DeclarativeSlotPoolBridge",
    "source_method": "canBeFulfilledWithAnySlot",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.PendingRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.AllocatedSlot",
    "source_method": "releasePayload",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlot.Payload"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool",
    "source_method": "addSlot",
    "target_class": "long):void \t org.apache.flink.runtime.jobmaster.slotpool.AllocatedSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool",
    "source_method": "addSlotInternal",
    "target_class": "long):void \t org.apache.flink.runtime.jobmaster.slotpool.AllocatedSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool",
    "source_method": "removeSlotInternal",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.AllocatedSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool",
    "source_method": "getTaskExecutorUtilization",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool.FreeSlots"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool",
    "source_method": "getFreeSlotInfo",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool.FreeSlots"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool.DefaultFreeSlotInfo",
    "source_method": "create",
    "target_class": "long):org.apache.flink.runtime.jobmaster.slotpool.DefaultAllocatedSlotPool.DefaultFreeSlotInfo \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotRequestBulkCheckerImpl",
    "source_method": "checkPhysicalSlotRequestBulkTimeout",
    "target_class": "org.apache.flink.api.common.time.Time):org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotRequestBulkCheckerImpl.TimeoutCheckResult \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotRequestBulkCheckerImpl",
    "source_method": "findMatchingSlotForRequest",
    "target_class": "java.util.Collection<org.apache.flink.runtime.jobmaster.SlotInfo>):java.util.Optional<org.apache.flink.runtime.jobmaster.SlotInfo> \t org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.PreviousAllocationSlotSelectionStrategy",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.LocationPreferenceSlotSelectionStrategy"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotProviderImpl",
    "source_method": "tryAllocateFromAvailable",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.SlotPool"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlotProviderImpl",
    "source_method": "requestNewSlot",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile, java.util.Collection<org.apache.flink.runtime.clusterframework.types.AllocationID>, boolean):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlot> \t org.apache.flink.runtime.jobmaster.slotpool.SlotPool"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.SingleLogicalSlot",
    "source_method": "allocateFromPhysicalSlot",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlot, org.apache.flink.runtime.jobmanager.scheduler.Locality, org.apache.flink.runtime.jobmaster.SlotOwner, boolean):org.apache.flink.runtime.jobmaster.slotpool.SingleLogicalSlot \t org.apache.flink.runtime.jobmaster.slotpool.PhysicalSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.SingleLogicalSlot",
    "source_method": "signalPayloadRelease",
    "target_class": "org.apache.flink.runtime.jobmaster.LogicalSlot.Payload"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.slotpool.SingleLogicalSlot",
    "source_method": "returnSlotToOwner",
    "target_class": "org.apache.flink.runtime.jobmaster.SlotOwner"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.DefaultSlotPoolServiceSchedulerFactory",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.jobgraph.JobType, boolean):org.apache.flink.runtime.jobmaster.DefaultSlotPoolServiceSchedulerFactory \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.DefaultSlotPoolServiceSchedulerFactory",
    "source_method": "getSchedulerType",
    "target_class": "org.apache.flink.runtime.jobgraph.JobType, boolean):org.apache.flink.configuration.JobManagerOptions.SchedulerType \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.DefaultSlotPoolServiceSchedulerFactory",
    "source_method": "getRequestSlotMatchingStrategy",
    "target_class": "org.apache.flink.runtime.jobgraph.JobType):org.apache.flink.runtime.jobmaster.slotpool.RequestSlotMatchingStrategy \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.DefaultSlotPoolServiceSchedulerFactory",
    "source_method": "getAdaptiveSchedulerFactoryFromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMaster",
    "source_method": "internalFailAllocation",
    "target_class": "org.apache.flink.runtime.clusterframework.types.AllocationID, java.lang.Exception):void \t org.apache.flink.runtime.jobmaster.slotpool.SlotPoolService"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMaster",
    "source_method": "isConnectingToResourceManager",
    "target_class": "org.apache.flink.runtime.jobmaster.ResourceManagerAddress"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMaster",
    "source_method": "stopJobMasterServices",
    "target_class": "org.apache.flink.runtime.jobmaster.slotpool.SlotPoolService"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMaster",
    "source_method": "stopHeartbeatServices",
    "target_class": "org.apache.flink.runtime.heartbeat.HeartbeatManager"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmaster.JobMaster",
    "source_method": "stopScheduling",
    "target_class": "org.apache.flink.runtime.jobmaster.JobMaster.JobManagerJobStatusListener"
  },
  {
    "source_class": "org.apache.flink.runtime.failure.FailureEnricherUtils",
    "source_method": "getFailureEnrichers",
    "target_class": "org.apache.flink.core.plugin.PluginUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.failure.FailureEnricherUtils",
    "source_method": "getIncludedFailureEnrichers",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.failure.FailureEnricherUtils",
    "source_method": "labelFailure",
    "target_class": "org.apache.flink.core.failure.FailureEnricher.Context, java.util.concurrent.Executor, java.util.Collection<org.apache.flink.core.failure.FailureEnricher>):java.util.concurrent.CompletableFuture<java.util.Map<java.lang.String,java.lang.String>> \t org.apache.flink.util.concurrent.FutureUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.client.ClientUtils",
    "source_method": "extractAndUploadJobGraphFiles",
    "target_class": "org.apache.flink.util.function.SupplierWithException<org.apache.flink.runtime.blob.BlobClient,java.io.IOException>):void \t org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.client.ClientUtils",
    "source_method": "uploadUserJars",
    "target_class": "java.util.Collection<org.apache.flink.core.fs.Path>, org.apache.flink.runtime.blob.BlobClient):java.util.Collection<org.apache.flink.runtime.blob.PermanentBlobKey> \t org.apache.flink.runtime.blob.BlobClient"
  },
  {
    "source_class": "org.apache.flink.runtime.client.ClientUtils",
    "source_method": "uploadUserArtifacts",
    "target_class": "java.util.Collection<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,org.apache.flink.core.fs.Path>>, org.apache.flink.runtime.blob.BlobClient):java.util.Collection<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,org.apache.flink.runtime.blob.PermanentBlobKey>> \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.client.ClientUtils",
    "source_method": "setUserArtifactBlobKeys",
    "target_class": "java.util.Collection<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,org.apache.flink.runtime.blob.PermanentBlobKey>>):void \t org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.query.TaskKvStateRegistry",
    "source_method": "registerKvState",
    "target_class": "java.lang.String, org.apache.flink.runtime.state.internal.InternalKvState<?,?,?>, java.lang.ClassLoader):void \t org.apache.flink.runtime.query.KvStateRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.query.TaskKvStateRegistry",
    "source_method": "unregisterAll",
    "target_class": "org.apache.flink.runtime.query.KvStateRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.query.QueryableStateUtils",
    "source_method": "createKvStateClientProxy",
    "target_class": "java.util.Iterator<java.lang.Integer>, int, int, org.apache.flink.queryablestate.network.stats.KvStateRequestStats):org.apache.flink.runtime.query.KvStateClientProxy \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.query.QueryableStateUtils",
    "source_method": "createKvStateServer",
    "target_class": "java.util.Iterator<java.lang.Integer>, int, int, org.apache.flink.runtime.query.KvStateRegistry, org.apache.flink.queryablestate.network.stats.KvStateRequestStats):org.apache.flink.runtime.query.KvStateServer \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.query.KvStateLocation",
    "source_method": "registerKvState",
    "target_class": "org.apache.flink.queryablestate.KvStateID, java.net.InetSocketAddress):void \t org.apache.flink.runtime.state.KeyGroupRange"
  },
  {
    "source_class": "org.apache.flink.runtime.query.KvStateLocation",
    "source_method": "unregisterKvState",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange"
  },
  {
    "source_class": "org.apache.flink.runtime.query.KvStateLocationRegistry",
    "source_method": "notifyKvStateRegistered",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange, java.lang.String, org.apache.flink.queryablestate.KvStateID, java.net.InetSocketAddress):void \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.query.KvStateLocationRegistry",
    "source_method": "notifyKvStateUnregistered",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange, java.lang.String):void \t org.apache.flink.runtime.query.KvStateLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.net.ConnectionUtils",
    "source_method": "findConnectingAddress",
    "target_class": "long, long):java.net.InetAddress \t org.apache.flink.runtime.net.ConnectionUtils.AddressDetectionState"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "createInternalServerSSLEngineFactory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "createInternalClientSSLEngineFactory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "createRestServerSSLEngineFactory",
    "target_class": "org.apache.flink.configuration.SecurityOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "createRestClientSSLEngineFactory",
    "target_class": "org.apache.flink.configuration.SecurityOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "getEnabledProtocols",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "getEnabledCipherSuites",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "getSSLProvider",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "getTrustManagerFactory",
    "target_class": "boolean):java.util.Optional<javax.net.ssl.TrustManagerFactory> \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "getKeyManagerFactory",
    "target_class": "boolean, org.apache.flink.runtime.net.SslProvider):javax.net.ssl.KeyManagerFactory \t org.apache.flink.configuration.SecurityOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.net.SSLUtils",
    "source_method": "getAndCheckOption",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.String>, org.apache.flink.configuration.ConfigOption<java.lang.String>):java.lang.String \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "initLocalStrategies",
    "target_class": "org.apache.flink.runtime.operators.util.TaskConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "resetAllInputs",
    "target_class": "org.apache.flink.runtime.operators.TempBarrier"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "createInputIterator",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerFactory<?>):org.apache.flink.util.MutableObjectIterator<?> \t org.apache.flink.api.common.typeutils.TypeSerializerFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "getNumTaskInputs",
    "target_class": "org.apache.flink.runtime.operators.Driver"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "constructLogString",
    "target_class": "java.lang.String, org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable):java.lang.String \t org.apache.flink.api.common.TaskInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "logAndThrowException",
    "target_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable):void \t org.apache.flink.api.common.TaskInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "getOutputCollector",
    "target_class": "org.apache.flink.runtime.operators.util.TaskConfig, java.lang.ClassLoader, java.util.List<org.apache.flink.runtime.io.network.api.writer.RecordWriter<?>>, int, int):org.apache.flink.util.Collector<T> \t org.apache.flink.runtime.operators.util.TaskConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "initOutputs",
    "target_class": "org.apache.flink.util.UserCodeClassLoader, org.apache.flink.runtime.operators.util.TaskConfig, java.util.List<org.apache.flink.runtime.operators.chaining.ChainedDriver<?,?>>, java.util.List<org.apache.flink.runtime.io.network.api.writer.RecordWriter<?>>, org.apache.flink.api.common.ExecutionConfig, java.util.Map<java.lang.String,org.apache.flink.api.common.accumulators.Accumulator<?,?>>):org.apache.flink.util.Collector<T> \t org.apache.flink.runtime.operators.util.TaskConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "openUserCode",
    "target_class": "org.apache.flink.configuration.Configuration):void \t org.apache.flink.api.common.functions.util.FunctionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "closeUserCode",
    "target_class": "org.apache.flink.api.common.functions.util.FunctionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "openChainedTasks",
    "target_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable):void \t org.apache.flink.runtime.operators.chaining.ChainedDriver"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "closeChainedTasks",
    "target_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable):void \t org.apache.flink.runtime.operators.chaining.ChainedDriver"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "cancelChainedTasks",
    "target_class": "org.apache.flink.runtime.operators.chaining.ChainedDriver"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "instantiateUserCode",
    "target_class": "java.lang.ClassLoader, java.lang.Class<? super T>):T \t org.apache.flink.runtime.operators.util.TaskConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "clearWriters",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.BatchTask",
    "source_method": "clearReaders",
    "target_class": "org.apache.flink.runtime.io.network.api.reader.MutableReader"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.chaining.ChainedReduceCombineDriver",
    "source_method": "dispose",
    "target_class": "org.apache.flink.runtime.operators.sort.InMemorySorter"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.chaining.SynchronousChainedCombineDriver",
    "source_method": "dispose",
    "target_class": "org.apache.flink.runtime.operators.sort.InMemorySorter"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.chaining.ChainedDriver",
    "source_method": "getIOMetrics",
    "target_class": "org.apache.flink.runtime.metrics.groups.InternalOperatorMetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.sort.SpillingThread",
    "source_method": "openSpillingBehaviour",
    "target_class": "org.apache.flink.runtime.operators.sort.SpillingThread.SpillingBehaviour"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.sort.SorterInputGateway",
    "source_method": "signalSpillingIfNecessary",
    "target_class": "org.apache.flink.runtime.operators.sort.StageRunner.StageMessageDispatcher"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.sort.ExternalSorter",
    "source_method": "startThreads",
    "target_class": "org.apache.flink.runtime.operators.sort.StageRunner"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.sort.ExternalSorter",
    "source_method": "newBuilder",
    "target_class": "org.apache.flink.runtime.jobgraph.tasks.TaskInvokable, org.apache.flink.api.common.typeutils.TypeSerializer<E>, org.apache.flink.api.common.typeutils.TypeComparator<E>, org.apache.flink.api.common.ExecutionConfig):org.apache.flink.runtime.operators.sort.ExternalSorterBuilder<E> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.sort.ExternalSorter",
    "source_method": "newBuilder",
    "target_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable, org.apache.flink.api.common.typeutils.TypeSerializer<E>, org.apache.flink.api.common.typeutils.TypeComparator<E>):org.apache.flink.runtime.operators.sort.ExternalSorterBuilder<E> \t org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.sort.NormalizedKeySorter",
    "source_method": "readPointer",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.sort.NormalizedKeySorter",
    "source_method": "compareRecords",
    "target_class": "long):int \t org.apache.flink.runtime.io.disk.RandomAccessInputView"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.sort.LargeRecordHandler",
    "source_method": "createSerializer",
    "target_class": "int):org.apache.flink.api.common.typeutils.TypeSerializer<java.lang.Object> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.ExecutionSubtaskAccess.ExecutionJobVertexSubtaskAccess",
    "source_method": "checkSubtaskIndex",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.RecreateOnResetOperatorCoordinator",
    "source_method": "waitForAllAsyncCallsFinish",
    "target_class": "org.apache.flink.runtime.operators.coordination.RecreateOnResetOperatorCoordinator.DeferrableCoordinator"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.RecreateOnResetOperatorCoordinator.DeferrableCoordinator",
    "source_method": "cleanAndFailJob",
    "target_class": "org.apache.flink.runtime.operators.coordination.RecreateOnResetOperatorCoordinator.QuiesceableContext"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.SubtaskGatewayImpl",
    "source_method": "isReady",
    "target_class": "org.apache.flink.runtime.operators.coordination.SubtaskAccess"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.SubtaskGatewayImpl",
    "source_method": "checkRunsInMainThread",
    "target_class": "org.apache.flink.runtime.concurrent.ComponentMainThreadExecutor"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.ComponentClosingUtils",
    "source_method": "closeAsyncWithTimeout",
    "target_class": "org.apache.flink.util.function.ThrowingRunnable<java.lang.Exception>, java.time.Duration):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.util.concurrent.FutureUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.ComponentClosingUtils",
    "source_method": "shutdownExecutorForcefully",
    "target_class": "java.time.Duration, boolean):boolean \t org.apache.flink.api.common.time.Deadline"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "start",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder.LazyInitializedCoordinatorContext"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "handleEventFromOperator",
    "target_class": "int, org.apache.flink.runtime.operators.coordination.OperatorEvent):void \t org.apache.flink.runtime.operators.coordination.OperatorCoordinator"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "executionAttemptFailed",
    "target_class": "int, java.lang.Throwable):void \t org.apache.flink.runtime.operators.coordination.OperatorCoordinator"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "checkpointCoordinatorInternal",
    "target_class": "java.util.concurrent.CompletableFuture<byte[]>):void \t org.apache.flink.runtime.concurrent.ComponentMainThreadExecutor"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "setupSubtaskGateway",
    "target_class": "org.apache.flink.runtime.operators.coordination.SubtaskAccess.SubtaskAccessFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "setupSubtaskGatewayForAttempts",
    "target_class": "java.util.Set<java.lang.Integer>):void \t org.apache.flink.runtime.operators.coordination.SubtaskAccess.SubtaskAccessFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "setupSubtaskGateway",
    "target_class": "org.apache.flink.runtime.operators.coordination.SubtaskGatewayImpl"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "notifySubtaskReady",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinator"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex, java.lang.ClassLoader, org.apache.flink.runtime.operators.coordination.CoordinatorStore, boolean, org.apache.flink.runtime.executiongraph.TaskInformation, org.apache.flink.runtime.metrics.groups.JobManagerJobMetricGroup):org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorCoordinator.Provider, org.apache.flink.runtime.operators.coordination.CoordinatorStore, java.lang.String, java.lang.ClassLoader, int, int, org.apache.flink.runtime.operators.coordination.SubtaskAccess.SubtaskAccessFactory, boolean, org.apache.flink.runtime.executiongraph.TaskInformation, org.apache.flink.runtime.metrics.groups.JobManagerJobMetricGroup):org.apache.flink.runtime.operators.coordination.OperatorCoordinatorHolder \t org.apache.flink.runtime.metrics.groups.JobManagerJobMetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setTaskName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getTaskName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "hasStubWrapper",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setStubParameters",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setStubParameter",
    "target_class": "java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getStubParameter",
    "target_class": "java.lang.String):java.lang.String \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setDriver",
    "target_class": "extends org.apache.flink.runtime.operators.Driver>):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getDriver",
    "target_class": "extends org.apache.flink.runtime.operators.Driver<S,OT>> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setDriverStrategy",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getDriverStrategy",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getPairComparatorFactory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setInputLocalStrategy",
    "target_class": "org.apache.flink.runtime.operators.util.LocalStrategy):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getInputLocalStrategy",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getNumInputs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getNumBroadcastInputs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getGroupSize",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getBroadcastGroupSize",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "addInputToGroup",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "addBroadcastInputToGroup",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setInputAsynchronouslyMaterialized",
    "target_class": "boolean):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "isInputAsynchronouslyMaterialized",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setInputCached",
    "target_class": "boolean):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "isInputCached",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setRelativeInputMaterializationMemory",
    "target_class": "double):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getRelativeInputMaterializationMemory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setBroadcastInputName",
    "target_class": "int):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getBroadcastInputName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "addOutputShipStrategy",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getNumOutputs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getOutputShipStrategy",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getOutputDataDistribution",
    "target_class": "java.lang.ClassLoader):org.apache.flink.api.common.distributions.DataDistribution \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setRelativeMemoryDriver",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getRelativeMemoryDriver",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setRelativeMemoryInput",
    "target_class": "double):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getRelativeMemoryInput",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setFilehandlesDriver",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getFilehandlesDriver",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setFilehandlesInput",
    "target_class": "int):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getFilehandlesInput",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setSpillingThresholdDriver",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getSpillingThresholdDriver",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setSpillingThresholdInput",
    "target_class": "float):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getSpillingThresholdInput",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setUseLargeRecordHandler",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getUseLargeRecordHandler",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getNumberOfChainedStubs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "addChainedTask",
    "target_class": "extends org.apache.flink.runtime.operators.chaining.ChainedDriver>, org.apache.flink.runtime.operators.util.TaskConfig, java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getChainedTask",
    "target_class": "extends org.apache.flink.runtime.operators.chaining.ChainedDriver<?,?>> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getChainedTaskName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setNumberOfIterations",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getNumberOfIterations",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setIterationHeadPartialSolutionOrWorksetInputIndex",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getIterationHeadPartialSolutionOrWorksetInputIndex",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setIterationHeadSolutionSetInputIndex",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getIterationHeadSolutionSetInputIndex",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setRelativeBackChannelMemory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getRelativeBackChannelMemory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setRelativeSolutionSetMemory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getRelativeSolutionSetMemory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setGateIterativeWithNumberOfEventsUntilInterrupt",
    "target_class": "int):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getNumberOfEventsUntilInterruptInIterativeGate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setBroadcastGateIterativeWithNumberOfEventsUntilInterrupt",
    "target_class": "int):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getNumberOfEventsUntilInterruptInIterativeBroadcastGate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setIterationId",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getIterationId",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setIsWorksetIteration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getIsWorksetIteration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setIterationHeadIndexOfSyncOutput",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getIterationHeadIndexOfSyncOutput",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setIterationHeadFinalOutputConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "addIterationAggregator",
    "target_class": "org.apache.flink.api.common.aggregators.Aggregator<?>):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "addIterationAggregators",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getIterationAggregators",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setConvergenceCriterion",
    "target_class": "org.apache.flink.api.common.aggregators.ConvergenceCriterion<?>):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setImplicitConvergenceCriterion",
    "target_class": "org.apache.flink.api.common.aggregators.ConvergenceCriterion<?>):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "usesConvergenceCriterion",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getConvergenceCriterionAggregatorName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "usesImplicitConvergenceCriterion",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getImplicitConvergenceCriterionAggregatorName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setIsSolutionSetUpdate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getIsSolutionSetUpdate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setIsSolutionSetUpdateWithoutReprobe",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getIsSolutionSetUpdateWithoutReprobe",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setWaitForSolutionSetUpdate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getWaitForSolutionSetUpdate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setIsWorksetUpdate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getIsWorksetUpdate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getTypeSerializerFactory",
    "target_class": "java.lang.String, java.lang.ClassLoader):org.apache.flink.api.common.typeutils.TypeSerializerFactory<T> \t org.apache.flink.api.common.typeutils.TypeSerializerFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "getTypeComparatorFactory",
    "target_class": "java.lang.String, java.lang.ClassLoader):org.apache.flink.api.common.typeutils.TypeComparatorFactory<T> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "setSolutionSetUnmanaged",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.TaskConfig",
    "source_method": "isSolutionSetUnmanaged",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.BitSet",
    "source_method": "set",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.BitSet",
    "source_method": "toBytes",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.BitSet",
    "source_method": "clear",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.BloomFilter",
    "source_method": "setBitsLocation",
    "target_class": "int):void \t org.apache.flink.runtime.operators.util.BitSet"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.BloomFilter",
    "source_method": "addHash",
    "target_class": "org.apache.flink.runtime.operators.util.BitSet"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.BloomFilter",
    "source_method": "testHash",
    "target_class": "org.apache.flink.runtime.operators.util.BitSet"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.BloomFilter",
    "source_method": "reset",
    "target_class": "org.apache.flink.runtime.operators.util.BitSet"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.util.BloomFilter",
    "source_method": "fromBytes",
    "target_class": "org.apache.flink.runtime.operators.util.BitSet"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.HashPartition",
    "source_method": "getNumOccupiedMemorySegments",
    "target_class": "org.apache.flink.runtime.operators.hash.HashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.HashPartition",
    "source_method": "getBuildSideBlockCount",
    "target_class": "org.apache.flink.runtime.operators.hash.HashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.HashPartition",
    "source_method": "getProbeSideBlockCount",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.ChannelWriterOutputView"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.HashPartition",
    "source_method": "spillPartition",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.IOManager, org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID, java.util.concurrent.LinkedBlockingQueue<org.apache.flink.core.memory.MemorySegment>):int \t org.apache.flink.runtime.operators.hash.HashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.HashPartition",
    "source_method": "finalizeBuildPhase",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.Enumerator, java.util.concurrent.LinkedBlockingQueue<org.apache.flink.core.memory.MemorySegment>):void \t org.apache.flink.runtime.operators.hash.HashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.HashPartition",
    "source_method": "prepareProbePhase",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.Enumerator, java.util.concurrent.LinkedBlockingQueue<org.apache.flink.core.memory.MemorySegment>):void \t org.apache.flink.runtime.io.disk.iomanager.IOManager"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.ReOpenableHashPartition",
    "source_method": "spillInMemoryPartition",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.IOManager, java.util.concurrent.LinkedBlockingQueue<org.apache.flink.core.memory.MemorySegment>):int \t org.apache.flink.runtime.io.disk.iomanager.IOManager"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.ReOpenableHashPartition",
    "source_method": "restorePartitionBuffers",
    "target_class": "java.util.List<org.apache.flink.core.memory.MemorySegment>):void \t org.apache.flink.runtime.io.disk.iomanager.BulkBlockChannelReader"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.MutableHashTable",
    "source_method": "hash",
    "target_class": "int):int \t org.apache.flink.util.MathUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.InMemoryPartition",
    "source_method": "resetRWViews",
    "target_class": "org.apache.flink.runtime.operators.hash.InMemoryPartition.ReadView"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.InMemoryPartition",
    "source_method": "allocateSegments",
    "target_class": "org.apache.flink.runtime.memory.ListMemorySegmentSource"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.HashJoinIteratorBase",
    "source_method": "getHashJoin",
    "target_class": "org.apache.flink.api.common.typeutils.TypeComparator<BT>, org.apache.flink.api.common.typeutils.TypeSerializer<PT>, org.apache.flink.api.common.typeutils.TypeComparator<PT>, org.apache.flink.api.common.typeutils.TypePairComparator<PT,BT>, org.apache.flink.runtime.memory.MemoryManager, org.apache.flink.runtime.io.disk.iomanager.IOManager, org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable, double, boolean):org.apache.flink.runtime.operators.hash.MutableHashTable<BT,PT> \t org.apache.flink.runtime.memory.MemoryManager"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable",
    "source_method": "open",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable",
    "source_method": "calcInitialNumBucketSegments",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable",
    "source_method": "compactOrThrow",
    "target_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable.RecordArea"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable",
    "source_method": "getMemoryConsumptionString",
    "target_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable.RecordArea"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable.RecordArea",
    "source_method": "resetAppendPosition",
    "target_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable.RecordArea.RecordAreaOutputView"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable.RecordArea",
    "source_method": "setReadPosition",
    "target_class": "org.apache.flink.runtime.io.disk.RandomAccessInputView"
  },
  {
    "source_class": "org.apache.flink.runtime.operators.hash.InPlaceMutableHashTable.RecordArea",
    "source_method": "getReadPosition",
    "target_class": "org.apache.flink.runtime.io.disk.RandomAccessInputView"
  },
  {
    "source_class": "org.apache.flink.runtime.leaderretrieval.ZooKeeperLeaderRetrievalDriver",
    "source_method": "notifyNoLeader",
    "target_class": "org.apache.flink.runtime.leaderretrieval.LeaderRetrievalEventHandler"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "handleUnexpectedTaskExecutorServiceTermination",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner.TaskExecutorService"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "start",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner.TaskExecutorService"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "deleteWorkingDir",
    "target_class": "org.apache.flink.runtime.entrypoint.DeterminismEnvelope"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "shutDownServices",
    "target_class": "org.apache.flink.runtime.blob.BlobCacheService"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "loadConfiguration",
    "target_class": "org.apache.flink.runtime.util.ConfigurationParserUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "runTaskManager",
    "target_class": "org.apache.flink.core.plugin.PluginManager):int \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "runTaskManagerProcessSecurely",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "runTaskManagerProcessSecurely",
    "target_class": "org.apache.flink.core.plugin.PluginUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "createTaskExecutorService",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceID, org.apache.flink.runtime.rpc.RpcService, org.apache.flink.runtime.highavailability.HighAvailabilityServices, org.apache.flink.runtime.heartbeat.HeartbeatServices, org.apache.flink.runtime.metrics.MetricRegistry, org.apache.flink.runtime.blob.BlobCacheService, boolean, org.apache.flink.runtime.externalresource.ExternalResourceInfoProvider, org.apache.flink.runtime.entrypoint.WorkingDirectory, org.apache.flink.runtime.rpc.FatalErrorHandler, org.apache.flink.runtime.security.token.DelegationTokenReceiverRepository):org.apache.flink.runtime.taskexecutor.TaskManagerRunner.TaskExecutorService \t org.apache.flink.runtime.taskexecutor.TaskExecutorToServiceAdapter"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "startTaskManager",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceID, org.apache.flink.runtime.rpc.RpcService, org.apache.flink.runtime.highavailability.HighAvailabilityServices, org.apache.flink.runtime.heartbeat.HeartbeatServices, org.apache.flink.runtime.metrics.MetricRegistry, org.apache.flink.runtime.blob.TaskExecutorBlobService, boolean, org.apache.flink.runtime.externalresource.ExternalResourceInfoProvider, org.apache.flink.runtime.entrypoint.WorkingDirectory, org.apache.flink.runtime.rpc.FatalErrorHandler, org.apache.flink.runtime.security.token.DelegationTokenReceiverRepository):org.apache.flink.runtime.taskexecutor.TaskExecutor \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "createRpcService",
    "target_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServices, org.apache.flink.runtime.rpc.RpcSystem):org.apache.flink.runtime.rpc.RpcService \t org.apache.flink.runtime.rpc.RpcUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "determineTaskManagerBindAddress",
    "target_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServices, org.apache.flink.runtime.rpc.RpcSystemUtils):java.lang.String \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "determineTaskManagerBindAddressByConnectingToResourceManager",
    "target_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServices, org.apache.flink.runtime.rpc.RpcSystemUtils):java.lang.String \t org.apache.flink.runtime.util.LeaderRetrievalUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerRunner",
    "source_method": "getTaskManagerResourceID",
    "target_class": "java.lang.String, int):org.apache.flink.runtime.entrypoint.DeterminismEnvelope<org.apache.flink.runtime.clusterframework.types.ResourceID> \t org.apache.flink.util.function.FunctionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.ThreadInfoSampleService",
    "source_method": "requestThreadInfoSamples",
    "target_class": "org.apache.flink.runtime.webmonitor.threadinfo.ThreadInfoSamplesRequest):java.util.concurrent.CompletableFuture<java.util.Map<org.apache.flink.runtime.executiongraph.ExecutionAttemptID,java.util.Collection<org.apache.flink.runtime.messages.ThreadInfoSample>>> \t org.apache.flink.runtime.webmonitor.threadinfo.ThreadInfoSamplesRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "resourceSpecFromConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "checkConfigOptionIsSet",
    "target_class": "org.apache.flink.configuration.ConfigOption<?>):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "checkTaskExecutorNetworkConfigSet",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "generateDefaultSlotResourceProfile",
    "target_class": "int):org.apache.flink.runtime.clusterframework.types.ResourceProfile \t org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "generateTotalAvailableResourceProfile",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "calculateTotalFlinkMemoryFromComponents",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "calculateTotalProcessMemoryFromComponents",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "adjustNetworkMemoryForLocalExecution",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "warnOptionHasNoEffectIfSet",
    "target_class": "org.apache.flink.configuration.ConfigOption<?>):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "silentlySetConfigOptionIfNotSet",
    "target_class": "org.apache.flink.configuration.ConfigOption<T>, T):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils",
    "source_method": "setConfigOptionToDefaultIfNotSet",
    "target_class": "org.apache.flink.configuration.ConfigOption<T>, T, java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceSpec, java.lang.String, java.io.File):org.apache.flink.runtime.taskexecutor.TaskManagerConfiguration \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.slot.SlotAllocationSnapshot",
    "source_method": "getSlotIndex",
    "target_class": "org.apache.flink.runtime.clusterframework.types.SlotID"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.slot.TaskSlot",
    "source_method": "createMemoryManager",
    "target_class": "int):org.apache.flink.runtime.memory.MemoryManager \t org.apache.flink.runtime.memory.MemoryManager"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.KvStateService",
    "source_method": "createKvStateTaskRegistry",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertexID):org.apache.flink.runtime.query.TaskKvStateRegistry \t org.apache.flink.runtime.query.KvStateRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.KvStateService",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskManagerServicesConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "stopTaskExecutorServices",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskManagerServices"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "filterPartitionsRequiringRelease",
    "target_class": "org.apache.flink.runtime.deployment.ResultPartitionDeploymentDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "allocateSlotForJob",
    "target_class": "org.apache.flink.runtime.clusterframework.types.SlotID, org.apache.flink.runtime.clusterframework.types.AllocationID, org.apache.flink.runtime.clusterframework.types.ResourceProfile, java.lang.String):boolean \t org.apache.flink.runtime.taskexecutor.slot.TaskSlotTable"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "registerNewJobAndCreateServices",
    "target_class": "java.lang.String):org.apache.flink.runtime.taskexecutor.TaskExecutor.TaskExecutorJobServices \t org.apache.flink.runtime.taskexecutor.JobLeaderService"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "disconnectAndTryReconnectToJobManager",
    "target_class": "java.lang.Exception):void \t org.apache.flink.runtime.taskexecutor.JobTable.Connection"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "registrationTimeout",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskManagerConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "offerSlotsToJobManager",
    "target_class": "org.apache.flink.runtime.taskexecutor.JobTable"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "closeJob",
    "target_class": "java.lang.Exception):void \t org.apache.flink.runtime.taskexecutor.JobTable.Job"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "associateWithJobManager",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceID, org.apache.flink.runtime.jobmaster.JobMasterGateway):org.apache.flink.runtime.taskexecutor.JobTable.Connection \t org.apache.flink.runtime.taskexecutor.JobTable.Job"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "disassociateFromJobManager",
    "target_class": "java.lang.Exception):void \t org.apache.flink.runtime.taskexecutor.JobTable.Connection"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "registerQueryableState",
    "target_class": "org.apache.flink.runtime.jobmaster.JobMasterGateway):void \t org.apache.flink.runtime.taskexecutor.KvStateService"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "failNoLongerAllocatedSlots",
    "target_class": "org.apache.flink.runtime.jobmaster.JobMasterGateway):void \t org.apache.flink.runtime.taskexecutor.slot.TaskSlotTable"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "isConnectedToResourceManager",
    "target_class": "org.apache.flink.runtime.jobmaster.ResourceManagerAddress"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutor",
    "source_method": "isJobManagerConnectionValid",
    "target_class": "org.apache.flink.runtime.jobmaster.JobMasterId):boolean \t org.apache.flink.runtime.taskexecutor.JobTable.Connection"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorMemoryConfiguration",
    "source_method": "getConfigurationValue",
    "target_class": "org.apache.flink.configuration.ConfigOption<? extends org.apache.flink.configuration.MemorySize>):java.lang.Long \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorMemoryConfiguration",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.QueryableStateConfiguration",
    "source_method": "disabled",
    "target_class": "org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.QueryableStateConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerServices",
    "source_method": "shutDown",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.IOManager"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerServices",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.blob.PermanentBlobService, org.apache.flink.metrics.MetricGroup, java.util.concurrent.ExecutorService, org.apache.flink.util.concurrent.ScheduledExecutor, org.apache.flink.runtime.rpc.FatalErrorHandler, org.apache.flink.runtime.entrypoint.WorkingDirectory):org.apache.flink.runtime.taskexecutor.TaskManagerServices \t org.apache.flink.runtime.taskexecutor.KvStateService"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerServices",
    "source_method": "createTaskSlotTable",
    "target_class": "org.apache.flink.runtime.taskexecutor.TaskExecutorResourceSpec, long, int, java.util.concurrent.Executor):org.apache.flink.runtime.taskexecutor.slot.TaskSlotTable<org.apache.flink.runtime.taskmanager.Task> \t org.apache.flink.runtime.taskexecutor.TaskExecutorResourceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerServices",
    "source_method": "createShuffleEnvironment",
    "target_class": "org.apache.flink.runtime.io.network.TaskEventDispatcher, org.apache.flink.metrics.MetricGroup, java.util.concurrent.Executor, org.apache.flink.util.concurrent.ScheduledExecutor):org.apache.flink.runtime.shuffle.ShuffleEnvironment<?,?> \t org.apache.flink.runtime.taskexecutor.TaskManagerServicesConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.TaskManagerServicesConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceID, java.lang.String, boolean, org.apache.flink.runtime.taskexecutor.TaskExecutorResourceSpec, org.apache.flink.runtime.entrypoint.WorkingDirectory):org.apache.flink.runtime.taskexecutor.TaskManagerServicesConfiguration \t org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskexecutor.SystemOutRedirectionUtils.LoggingPrintStream",
    "source_method": "tryLogCurrentLine",
    "target_class": "org.apache.flink.runtime.taskexecutor.SystemOutRedirectionUtils.LineContextCache"
  },
  {
    "source_class": "org.apache.flink.runtime.security.SecurityFactoryServiceLoader",
    "source_method": "findFactoryInternal",
    "target_class": "java.lang.Class<T>, java.lang.ClassLoader):T \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.security.modules.JaasModule",
    "source_method": "getAppConfigurationEntries",
    "target_class": "org.apache.flink.runtime.security.KerberosUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.security.modules.JaasModule",
    "source_method": "generateDefaultConfigFile",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.security.SecurityUtils",
    "source_method": "installModules",
    "target_class": "org.apache.flink.runtime.security.SecurityConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.security.SecurityUtils",
    "source_method": "installContext",
    "target_class": "org.apache.flink.runtime.security.SecurityConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.security.token.DefaultDelegationTokenManagerFactory",
    "source_method": "create",
    "target_class": "org.apache.flink.core.plugin.PluginManager, org.apache.flink.util.concurrent.ScheduledExecutor, java.util.concurrent.ExecutorService):org.apache.flink.runtime.security.token.DelegationTokenManager \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.security.token.DefaultDelegationTokenManager",
    "source_method": "isProviderEnabled",
    "target_class": "java.lang.String):boolean \t org.apache.flink.configuration.SecurityOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.persistence.IntegerResourceVersion",
    "source_method": "valueOf",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.storage.ExternalizedSnapshotLocation.Builder",
    "source_method": "build",
    "target_class": "org.apache.flink.runtime.state.storage.ExternalizedSnapshotLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.state.storage.ExternalizedSnapshotLocation",
    "source_method": "validatePath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.state.storage.ExternalizedSnapshotLocation",
    "source_method": "parameterOrConfigured",
    "target_class": "org.apache.flink.configuration.ReadableConfig, org.apache.flink.configuration.ConfigOption<java.lang.String>):org.apache.flink.core.fs.Path \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.state.storage.JobManagerCheckpointStorage",
    "source_method": "getCheckpointPath",
    "target_class": "org.apache.flink.runtime.state.storage.ExternalizedSnapshotLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.state.storage.JobManagerCheckpointStorage",
    "source_method": "getSavepointPath",
    "target_class": "org.apache.flink.runtime.state.storage.ExternalizedSnapshotLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.state.storage.FileSystemCheckpointStorage",
    "source_method": "createFromConfig",
    "target_class": "java.lang.ClassLoader):org.apache.flink.runtime.state.storage.FileSystemCheckpointStorage \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.state.storage.FileSystemCheckpointStorage",
    "source_method": "getCheckpointPath",
    "target_class": "org.apache.flink.runtime.state.storage.ExternalizedSnapshotLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.state.storage.FileSystemCheckpointStorage",
    "source_method": "getSavepointPath",
    "target_class": "org.apache.flink.runtime.state.storage.ExternalizedSnapshotLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateSnapshotContextSynchronousImpl",
    "source_method": "openAndRegisterNewStream",
    "target_class": "org.apache.flink.runtime.state.CheckpointStreamFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateSnapshotContextSynchronousImpl",
    "source_method": "closeAndUnregisterStream",
    "target_class": "extends T>):void \t org.apache.flink.runtime.state.CheckpointStateOutputStream"
  },
  {
    "source_class": "org.apache.flink.runtime.state.HeapPriorityQueuesManager",
    "source_method": "createOrUpdate",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>, boolean):org.apache.flink.runtime.state.KeyGroupedInternalPriorityQueue<T> \t org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility"
  },
  {
    "source_class": "org.apache.flink.runtime.state.HeapPriorityQueuesManager",
    "source_method": "createInternal",
    "target_class": "org.apache.flink.runtime.state.heap.HeapPriorityQueueSetFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshotReadersWriters",
    "source_method": "getWriter",
    "target_class": "org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshotReadersWriters.CurrentWriterImpl"
  },
  {
    "source_class": "org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshotReadersWriters",
    "source_method": "getReader",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.DefaultKeyedStateStore",
    "source_method": "getPartitionedState",
    "target_class": "org.apache.flink.runtime.state.KeyedStateBackend"
  },
  {
    "source_class": "org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager",
    "source_method": "getLocalStateRootDirectories",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager",
    "source_method": "allocationBaseDirectories",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateBackendLoader",
    "source_method": "loadStateBackendFromConfig",
    "target_class": "java.lang.ClassLoader, org.apache.flink.runtime.state.Logger):org.apache.flink.runtime.state.StateBackend \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateBackendLoader",
    "source_method": "loadFromApplicationOrConfigOrDefaultInternal",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.configuration.Configuration, java.lang.ClassLoader, org.apache.flink.runtime.state.Logger):org.apache.flink.runtime.state.StateBackend \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateBackendLoader",
    "source_method": "fromApplicationOrConfigOrDefault",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.configuration.Configuration, java.lang.ClassLoader, org.apache.flink.runtime.state.Logger):org.apache.flink.runtime.state.StateBackend \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateBackendLoader",
    "source_method": "stateBackendFromApplicationOrConfigOrDefaultUseManagedMemory",
    "target_class": "java.util.Optional<java.lang.Boolean>, java.lang.ClassLoader):boolean \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CompositeKeySerializationUtils",
    "source_method": "readKey",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer, boolean):K \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CompositeKeySerializationUtils",
    "source_method": "readNamespace",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer, boolean):N \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CompositeKeySerializationUtils",
    "source_method": "writeNameSpace",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.core.memory.DataOutputSerializer, boolean):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CompositeKeySerializationUtils",
    "source_method": "isSerializerTypeVariableSized",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CompositeKeySerializationUtils",
    "source_method": "writeKey",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<K>, org.apache.flink.core.memory.DataOutputSerializer, boolean):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CompositeKeySerializationUtils",
    "source_method": "writeLengthFrom",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer):void \t org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.filesystem.AbstractFsCheckpointStorageAccess",
    "source_method": "getCheckpointDirectoryForJob",
    "target_class": "org.apache.flink.api.common.JobID):org.apache.flink.core.fs.Path \t org.apache.flink.util.AbstractID"
  },
  {
    "source_class": "org.apache.flink.runtime.state.filesystem.AbstractFsCheckpointStorageAccess",
    "source_method": "resolveCheckpointPointer",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.filesystem.AbstractFsCheckpointStorageAccess",
    "source_method": "encodePathAsReference",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.state.filesystem.AbstractFsCheckpointStorageAccess",
    "source_method": "decodePathFromReference",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorageLocationReference"
  },
  {
    "source_class": "org.apache.flink.runtime.state.filesystem.FsCheckpointStateToolset",
    "source_method": "getNewDstPath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.state.filesystem.AbstractFileStateBackend",
    "source_method": "validatePath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.state.filesystem.AbstractFileStateBackend",
    "source_method": "parameterOrConfigured",
    "target_class": "org.apache.flink.configuration.ReadableConfig, org.apache.flink.configuration.ConfigOption<java.lang.String>):org.apache.flink.core.fs.Path \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.state.filesystem.FsCheckpointMetadataOutputStream",
    "source_method": "getOutputStreamWrapper",
    "target_class": "org.apache.flink.core.fs.Path):org.apache.flink.runtime.state.filesystem.MetadataOutputStreamWrapper \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.state.DefaultOperatorStateBackend",
    "source_method": "getListState",
    "target_class": "org.apache.flink.runtime.state.OperatorStateHandle.Mode):org.apache.flink.api.common.state.ListState<S> \t org.apache.flink.runtime.state.PartitionableListState"
  },
  {
    "source_class": "org.apache.flink.runtime.state.DefaultOperatorStateBackend",
    "source_method": "checkStateNameAndMode",
    "target_class": "java.lang.String, org.apache.flink.runtime.state.OperatorStateHandle.Mode, org.apache.flink.runtime.state.OperatorStateHandle.Mode):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.AbstractKeyedStateBackend",
    "source_method": "determineStreamCompression",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.state.AbstractKeyedStateBackend",
    "source_method": "publishQueryableStateIfEnabled",
    "target_class": "org.apache.flink.runtime.state.internal.InternalKvState<?,?,?>):void \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ListDelimitedSerializer",
    "source_method": "deserializeList",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):java.util.List<T> \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ListDelimitedSerializer",
    "source_method": "serializeList",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):byte[] \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ListDelimitedSerializer",
    "source_method": "deserializeNextElement",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):T \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.OperatorStateRestoreOperation",
    "source_method": "deserializeOperatorStateValues",
    "target_class": "org.apache.flink.core.fs.FSDataInputStream, org.apache.flink.runtime.state.OperatorStateHandle.StateMetaInfo):void \t org.apache.flink.runtime.state.PartitionableListState"
  },
  {
    "source_class": "org.apache.flink.runtime.state.OperatorStateRestoreOperation",
    "source_method": "deserializeBroadcastStateValues",
    "target_class": "org.apache.flink.core.fs.FSDataInputStream, org.apache.flink.runtime.state.OperatorStateHandle.StateMetaInfo):void \t org.apache.flink.core.fs.FSDataInputStream"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateUtil",
    "source_method": "getStateSize",
    "target_class": "org.apache.flink.runtime.state.StateObject"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateUtil",
    "source_method": "bestEffortDiscardAllStateObjects",
    "target_class": "extends org.apache.flink.runtime.state.StateObject>):void \t org.apache.flink.util.LambdaUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateUtil",
    "source_method": "discardStateObjectQuietly",
    "target_class": "org.apache.flink.runtime.state.StateObject"
  },
  {
    "source_class": "org.apache.flink.runtime.state.StateUtil",
    "source_method": "discardStateFuture",
    "target_class": "extends org.apache.flink.runtime.state.StateObject>):org.apache.flink.api.java.tuple.Tuple2<java.lang.Long,java.lang.Long> \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.runtime.state.TaskLocalStateStoreImpl",
    "source_method": "getLocalRecoveryDirectoryProvider",
    "target_class": "org.apache.flink.runtime.state.LocalRecoveryConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.state.TaskLocalStateStoreImpl",
    "source_method": "deleteDirectory",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CheckpointStorageLoader",
    "source_method": "fromConfig",
    "target_class": "java.lang.ClassLoader, org.apache.flink.runtime.state.Logger):java.util.Optional<org.apache.flink.runtime.state.CheckpointStorage> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CheckpointStorageLoader",
    "source_method": "load",
    "target_class": "org.apache.flink.runtime.state.StateBackend, org.apache.flink.configuration.Configuration, org.apache.flink.configuration.Configuration, java.lang.ClassLoader, org.apache.flink.runtime.state.Logger):org.apache.flink.runtime.state.CheckpointStorage \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CheckpointStorageLoader",
    "source_method": "createFileSystemCheckpointStorage",
    "target_class": "java.lang.ClassLoader, org.apache.flink.runtime.state.Logger):org.apache.flink.runtime.state.CheckpointStorage \t org.apache.flink.runtime.state.storage.FileSystemCheckpointStorage"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CheckpointStorageLoader",
    "source_method": "createJobManagerCheckpointStorage",
    "target_class": "java.lang.ClassLoader, org.apache.flink.runtime.state.Logger):org.apache.flink.runtime.state.CheckpointStorage \t org.apache.flink.runtime.state.storage.JobManagerCheckpointStorage"
  },
  {
    "source_class": "org.apache.flink.runtime.state.KeyGroupsStateHandle",
    "source_method": "getOffsetForKeyGroup",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRangeOffsets"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ChangelogTaskLocalStateStore",
    "source_method": "updateReference",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateSnapshot):void \t org.apache.flink.runtime.checkpoint.TaskStateSnapshot"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ChangelogTaskLocalStateStore",
    "source_method": "getLocalTaskOwnedDirectory",
    "target_class": "org.apache.flink.api.common.JobID):org.apache.flink.core.fs.Path \t org.apache.flink.util.AbstractID"
  },
  {
    "source_class": "org.apache.flink.runtime.state.memory.MemCheckpointStreamFactory.MemoryCheckpointOutputStream",
    "source_method": "closeAndGetBytes",
    "target_class": "org.apache.flink.core.memory.ByteArrayOutputStreamWithPos"
  },
  {
    "source_class": "org.apache.flink.runtime.state.memory.MemCheckpointStreamFactory.MemoryCheckpointOutputStream",
    "source_method": "closeInternal",
    "target_class": "org.apache.flink.core.memory.ByteArrayOutputStreamWithPos"
  },
  {
    "source_class": "org.apache.flink.runtime.state.SharedStateRegistryKey",
    "source_method": "forStreamStateHandle",
    "target_class": "org.apache.flink.runtime.state.StreamStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.state.DirectoryStateHandle",
    "source_method": "forPathWithSize",
    "target_class": "org.apache.flink.util.FileUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.changelog.ChangelogStateBackendHandle.ChangelogStateBackendHandleImpl",
    "source_method": "getChangelogStateBackendHandle",
    "target_class": "org.apache.flink.runtime.state.CheckpointBoundKeyedStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.state.changelog.ChangelogStateBackendHandle.ChangelogStateBackendHandleImpl",
    "source_method": "castToAbsolutePath",
    "target_class": "org.apache.flink.runtime.state.KeyGroupsStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.state.changelog.ChangelogStateBackendHandle.ChangelogStateBackendHandleImpl",
    "source_method": "restoreFileStateHandle",
    "target_class": "org.apache.flink.runtime.state.filesystem.FileStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.state.changelog.StateChangelogStorageLoader",
    "source_method": "initialize",
    "target_class": "org.apache.flink.core.plugin.PluginManager"
  },
  {
    "source_class": "org.apache.flink.runtime.state.changelog.StateChangelogStorageLoader",
    "source_method": "load",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.runtime.metrics.groups.TaskManagerJobMetricGroup, org.apache.flink.runtime.state.LocalRecoveryConfig):org.apache.flink.runtime.state.changelog.StateChangelogStorage<?> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.state.changelog.StateChangelogStorageLoader",
    "source_method": "loadFromStateHandle",
    "target_class": "org.apache.flink.runtime.state.changelog.ChangelogStateHandle):org.apache.flink.runtime.state.changelog.StateChangelogStorageView<?> \t org.apache.flink.runtime.state.changelog.StateChangelogStorageFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.state.changelog.ChangelogStateBackendLocalHandle",
    "source_method": "getRemoteMaterializedStateHandles",
    "target_class": "org.apache.flink.runtime.state.changelog.ChangelogStateBackendHandle.ChangelogStateBackendHandleImpl"
  },
  {
    "source_class": "org.apache.flink.runtime.state.changelog.ChangelogStateBackendLocalHandle",
    "source_method": "getRemoteNonMaterializedStateHandles",
    "target_class": "org.apache.flink.runtime.state.changelog.ChangelogStateBackendHandle.ChangelogStateBackendHandleImpl"
  },
  {
    "source_class": "org.apache.flink.runtime.state.KeyGroupRangeAssignment",
    "source_method": "computeKeyGroupForKeyHash",
    "target_class": "int):int \t org.apache.flink.util.MathUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.KeyGroupRangeAssignment",
    "source_method": "computeDefaultMaxParallelism",
    "target_class": "org.apache.flink.util.MathUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.KeyGroupRangeAssignment",
    "source_method": "checkParallelismPreconditions",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.SerializedCompositeKeyBuilder",
    "source_method": "build",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.SerializedCompositeKeyBuilder",
    "source_method": "resetFully",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.SerializedCompositeKeyBuilder",
    "source_method": "resetToKey",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.SerializedCompositeKeyBuilder",
    "source_method": "resetToNamespace",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.KeyedStateCheckpointOutputStream",
    "source_method": "getKeyGroupList",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRangeOffsets"
  },
  {
    "source_class": "org.apache.flink.runtime.state.KeyedStateCheckpointOutputStream",
    "source_method": "isKeyGroupAlreadyStarted",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRangeOffsets"
  },
  {
    "source_class": "org.apache.flink.runtime.state.NonClosingCheckpointOutputStream",
    "source_method": "acquireLease",
    "target_class": "org.apache.flink.util.ResourceGuard"
  },
  {
    "source_class": "org.apache.flink.runtime.state.NonClosingCheckpointOutputStream",
    "source_method": "closeAndGetHandleAfterLeasesReleased",
    "target_class": "org.apache.flink.util.ResourceGuard"
  },
  {
    "source_class": "org.apache.flink.runtime.state.metrics.StateLatencyMetricBase",
    "source_method": "updateHistogram",
    "target_class": "long):void \t org.apache.flink.metrics.Histogram"
  },
  {
    "source_class": "org.apache.flink.runtime.state.metrics.LatencyTrackingStateConfig",
    "source_method": "disabled",
    "target_class": "org.apache.flink.runtime.state.metrics.LatencyTrackingStateConfig.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.state.metrics.AbstractLatencyTrackState",
    "source_method": "trackLatencyWithIOException",
    "target_class": "java.lang.String):T \t org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.state.metrics.AbstractLatencyTrackState",
    "source_method": "trackLatencyWithIOException",
    "target_class": "java.lang.String):void \t org.apache.flink.util.function.ThrowingRunnable"
  },
  {
    "source_class": "org.apache.flink.runtime.state.metrics.AbstractLatencyTrackState",
    "source_method": "trackLatencyWithException",
    "target_class": "java.lang.String):T \t org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.state.metrics.AbstractLatencyTrackState",
    "source_method": "trackLatencyWithException",
    "target_class": "java.lang.String):void \t org.apache.flink.util.function.ThrowingRunnable"
  },
  {
    "source_class": "org.apache.flink.runtime.state.RegisteredStateMetaInfoBase",
    "source_method": "fromMetaInfoSnapshot",
    "target_class": "org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot"
  },
  {
    "source_class": "org.apache.flink.runtime.state.SharedStateRegistryImpl",
    "source_method": "preventsDiscardingCreatedCheckpoint",
    "target_class": "org.apache.flink.runtime.state.SharedStateRegistryImpl.SharedStateEntry"
  },
  {
    "source_class": "org.apache.flink.runtime.state.KeyGroupRangeOffsets",
    "source_method": "getIntersection",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange"
  },
  {
    "source_class": "org.apache.flink.runtime.state.KeyGroupRangeOffsets",
    "source_method": "computeKeyGroupIndex",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange"
  },
  {
    "source_class": "org.apache.flink.runtime.state.IncrementalKeyedStateHandle.HandleAndLocalPath",
    "source_method": "of",
    "target_class": "java.lang.String):org.apache.flink.runtime.state.IncrementalKeyedStateHandle.HandleAndLocalPath \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.state.FullSnapshotAsyncWriter",
    "source_method": "writeSnapshotToOutputStream",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRangeOffsets):void \t org.apache.flink.runtime.state.FullSnapshotResources"
  },
  {
    "source_class": "org.apache.flink.runtime.state.FullSnapshotAsyncWriter",
    "source_method": "writeKVStateData",
    "target_class": "org.apache.flink.runtime.state.CheckpointStreamWithResultProvider, org.apache.flink.runtime.state.KeyGroupRangeOffsets):void \t org.apache.flink.runtime.state.KeyValueStateIterator"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CheckpointStreamWithResultProvider",
    "source_method": "createSimpleStream",
    "target_class": "org.apache.flink.runtime.state.CheckpointStreamFactory):org.apache.flink.runtime.state.CheckpointStreamWithResultProvider \t org.apache.flink.runtime.state.CheckpointStreamFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CheckpointStreamWithResultProvider",
    "source_method": "createDuplicatingStream",
    "target_class": "org.apache.flink.runtime.state.CheckpointedStateScope, org.apache.flink.runtime.state.CheckpointStreamFactory, org.apache.flink.runtime.state.LocalRecoveryDirectoryProvider):org.apache.flink.runtime.state.CheckpointStreamWithResultProvider \t org.apache.flink.runtime.state.CheckpointStreamFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.state.CheckpointStreamWithResultProvider",
    "source_method": "toKeyedStateHandleSnapshotResult",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRangeOffsets, org.apache.flink.runtime.state.CheckpointStreamWithResultProvider.KeyedStateHandleFactory):org.apache.flink.runtime.state.SnapshotResult<org.apache.flink.runtime.state.KeyedStateHandle> \t org.apache.flink.runtime.state.CheckpointStreamWithResultProvider.KeyedStateHandleFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ttl.TtlStateSnapshotTransformer",
    "source_method": "deserializeTs",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ttl.TtlIncrementalCleanup",
    "source_method": "initIteratorIfNot",
    "target_class": "org.apache.flink.runtime.state.internal.InternalKvState.StateIncrementalVisitor"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ttl.TtlStateFactory",
    "source_method": "createStateAndWrapWithTtlIfEnabled",
    "target_class": "org.apache.flink.api.common.state.StateDescriptor<S,SV>, org.apache.flink.runtime.state.KeyedStateBackend<K>, org.apache.flink.runtime.state.ttl.TtlTimeProvider):IS \t org.apache.flink.runtime.state.KeyedStateFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ttl.TtlStateFactory",
    "source_method": "registerTtlIncrementalCleanupCallback",
    "target_class": "org.apache.flink.api.common.state.StateTtlConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ttl.TtlStateFactory",
    "source_method": "isStateIteratorSupported",
    "target_class": "int):boolean \t org.apache.flink.runtime.state.internal.InternalKvState"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ttl.TtlStateFactory",
    "source_method": "getSnapshotTransformFactory",
    "target_class": "org.apache.flink.api.common.state.StateTtlConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ttl.TtlStateFactory.TtlSerializer",
    "source_method": "isTtlStateSerializer",
    "target_class": "org.apache.flink.api.common.typeutils.base.ListSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ttl.AbstractTtlDecorator",
    "source_method": "wrapWithTs",
    "target_class": "org.apache.flink.runtime.state.ttl.TtlTimeProvider"
  },
  {
    "source_class": "org.apache.flink.runtime.state.ttl.AbstractTtlDecorator",
    "source_method": "getWrappedWithTtlCheckAndUpdate",
    "target_class": "org.apache.flink.util.function.ThrowingConsumer<org.apache.flink.runtime.state.ttl.TtlValue<V>,CE>, org.apache.flink.util.function.ThrowingRunnable<CLE>):org.apache.flink.runtime.state.ttl.TtlValue<V> \t org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.state.AbstractStateBackend",
    "source_method": "getCompressionDecorator",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.CopyOnWriteStateMap",
    "source_method": "compositeHash",
    "target_class": "java.lang.Object):int \t org.apache.flink.util.MathUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapSnapshotResources",
    "source_method": "create",
    "target_class": "java.util.Map<java.lang.String,org.apache.flink.runtime.state.heap.HeapPriorityQueueSnapshotRestoreWrapper<?>>, org.apache.flink.runtime.state.StreamCompressionDecorator, org.apache.flink.runtime.state.KeyGroupRange, org.apache.flink.api.common.typeutils.TypeSerializer<K>, int):org.apache.flink.runtime.state.heap.HeapSnapshotResources<K> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapSnapshotResources",
    "source_method": "processSnapshotMetaInfoForAllStates",
    "target_class": "java.util.Map<org.apache.flink.runtime.state.heap.StateUID,org.apache.flink.runtime.state.StateSnapshot>, java.util.Map<org.apache.flink.runtime.state.heap.StateUID,java.lang.Integer>, java.util.Map<java.lang.String,? extends org.apache.flink.runtime.state.StateSnapshotRestore>, org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot.BackendStateType):void \t org.apache.flink.runtime.state.heap.StateUID"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapPriorityQueueSet",
    "source_method": "globalKeyGroupToLocalIndex",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapSavepointRestoreOperation",
    "source_method": "readPriorityQueue",
    "target_class": "org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot):void \t org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapAggregatingState",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, org.apache.flink.api.common.typeutils.TypeSerializer<K>):IS \t org.apache.flink.api.common.state.AggregatingStateDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapAggregatingState",
    "source_method": "update",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, IS):IS \t org.apache.flink.runtime.state.heap.AbstractHeapState"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapReducingState",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, org.apache.flink.api.common.typeutils.TypeSerializer<K>):IS \t org.apache.flink.runtime.state.heap.StateTable"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapReducingState",
    "source_method": "update",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, IS):IS \t org.apache.flink.runtime.state.heap.AbstractHeapState"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapMetaInfoRestoreOperation",
    "source_method": "createInternal",
    "target_class": "org.apache.flink.runtime.state.heap.HeapPriorityQueueSetFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapListState",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, org.apache.flink.api.common.typeutils.TypeSerializer<K>):IS \t org.apache.flink.runtime.state.heap.StateTable"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapListState",
    "source_method": "update",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, IS):IS \t org.apache.flink.runtime.state.heap.AbstractHeapState"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.StateTable",
    "source_method": "getKeyGroupOffset",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapKeyValueStateIterator",
    "source_method": "setCurrentStateIterator",
    "target_class": "org.apache.flink.runtime.state.StateSnapshot"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.StateTableByKeyGroupReaders",
    "source_method": "createV2PlusReader",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapMapState",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, org.apache.flink.api.common.typeutils.TypeSerializer<K>):IS \t org.apache.flink.runtime.state.heap.StateTable"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapMapState",
    "source_method": "update",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, IS):IS \t org.apache.flink.runtime.state.heap.AbstractHeapState"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapValueState",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, org.apache.flink.api.common.typeutils.TypeSerializer<K>):IS \t org.apache.flink.runtime.state.heap.StateTable"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapValueState",
    "source_method": "update",
    "target_class": "org.apache.flink.runtime.state.heap.StateTable<K,N,SV>, IS):IS \t org.apache.flink.runtime.state.heap.AbstractHeapState"
  },
  {
    "source_class": "org.apache.flink.runtime.state.heap.HeapRestoreOperation",
    "source_method": "readKeyGroupStateData",
    "target_class": "java.util.Map<java.lang.Integer,org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot>, int, int, int):void \t org.apache.flink.runtime.state.metainfo.StateMetaInfoSnapshot"
  },
  {
    "source_class": "org.apache.flink.runtime.state.OperatorStateCheckpointOutputStream",
    "source_method": "startNewPartition",
    "target_class": "org.apache.flink.runtime.util.LongArrayList"
  },
  {
    "source_class": "org.apache.flink.runtime.state.OperatorStateCheckpointOutputStream",
    "source_method": "getNumberOfPartitions",
    "target_class": "org.apache.flink.runtime.util.LongArrayList"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunnerFactory",
    "source_method": "createSessionRunner",
    "target_class": "org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcessFactoryFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunnerFactory",
    "source_method": "createJobRunner",
    "target_class": "org.apache.flink.runtime.dispatcher.runner.JobDispatcherLeaderProcessFactoryFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.JobDispatcherLeaderProcessFactoryFactory",
    "source_method": "extractDirtyJobResult",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph):java.util.Optional<org.apache.flink.runtime.jobmaster.JobResult> \t org.apache.flink.runtime.jobmaster.JobResult"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.JobDispatcherLeaderProcessFactoryFactory",
    "source_method": "getJobGraphBasedOnDirtyJobResults",
    "target_class": "java.util.Collection<org.apache.flink.runtime.jobmaster.JobResult>):java.util.Optional<org.apache.flink.runtime.jobgraph.JobGraph> \t org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess",
    "source_method": "getDirtyJobResults",
    "target_class": "org.apache.flink.runtime.highavailability.JobResultStore"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess",
    "source_method": "stopServices",
    "target_class": "org.apache.flink.runtime.jobmanager.JobGraphStore"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.SessionDispatcherLeaderProcess",
    "source_method": "submitAddedJob",
    "target_class": "org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner",
    "source_method": "start",
    "target_class": "org.apache.flink.runtime.leaderelection.LeaderElection"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner",
    "source_method": "createNewDispatcherLeaderProcess",
    "target_class": "org.apache.flink.runtime.dispatcher.runner.DispatcherLeaderProcessFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner",
    "source_method": "forwardShutDownFuture",
    "target_class": "org.apache.flink.runtime.dispatcher.runner.DispatcherLeaderProcess"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner",
    "source_method": "forwardConfirmLeaderSessionFuture",
    "target_class": "org.apache.flink.runtime.dispatcher.runner.DispatcherLeaderProcess):void \t org.apache.flink.runtime.leaderelection.LeaderElection"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunner",
    "source_method": "stopLeaderElectionService",
    "target_class": "org.apache.flink.runtime.leaderelection.LeaderElection"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.AbstractDispatcherLeaderProcess",
    "source_method": "completeDispatcherSetupInternal",
    "target_class": "org.apache.flink.runtime.dispatcher.runner.AbstractDispatcherLeaderProcess.DispatcherGatewayService"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.runner.AbstractDispatcherLeaderProcess",
    "source_method": "handleError",
    "target_class": "org.apache.flink.runtime.rpc.FatalErrorHandler"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.FileExecutionGraphInfoStore",
    "source_method": "storeExecutionGraphInfo",
    "target_class": "org.apache.flink.runtime.scheduler.ExecutionGraphInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.DispatcherCachedOperationsHandler",
    "source_method": "triggerCheckpoint",
    "target_class": "org.apache.flink.core.execution.CheckpointType, org.apache.flink.api.common.time.Time):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.messages.Acknowledge> \t org.apache.flink.runtime.rest.handler.job.AsynchronousJobOperationKey"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.DispatcherCachedOperationsHandler",
    "source_method": "getCheckpointStatus",
    "target_class": "org.apache.flink.runtime.rest.handler.async.CompletedOperationCache"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.DispatcherCachedOperationsHandler",
    "source_method": "triggerSavepoint",
    "target_class": "java.lang.String, org.apache.flink.core.execution.SavepointFormatType, org.apache.flink.runtime.dispatcher.TriggerSavepointMode, org.apache.flink.api.common.time.Time):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.messages.Acknowledge> \t org.apache.flink.runtime.rest.handler.job.AsynchronousJobOperationKey"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.DispatcherCachedOperationsHandler",
    "source_method": "getSavepointStatus",
    "target_class": "org.apache.flink.runtime.rest.handler.async.CompletedOperationCache"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.DispatcherCachedOperationsHandler",
    "source_method": "registerOperationIdempotently",
    "target_class": "java.util.function.Supplier<java.util.concurrent.CompletableFuture<java.lang.String>>):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.messages.Acknowledge> \t org.apache.flink.runtime.rest.handler.async.CompletedOperationCache"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "assertRecoveredJobsAndDirtyJobResults",
    "target_class": "java.util.Collection<org.apache.flink.runtime.jobmaster.JobResult>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "stopDispatcherServices",
    "target_class": "org.apache.flink.runtime.jobmaster.JobManagerSharedServices"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "isInGloballyTerminalState",
    "target_class": "org.apache.flink.runtime.highavailability.JobResultStore"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "isPartialResourceConfigured",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "persistAndRunJob",
    "target_class": "org.apache.flink.runtime.jobmanager.JobGraphWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "createJobCleanupRunner",
    "target_class": "org.apache.flink.runtime.dispatcher.OnMainThreadJobManagerRunnerRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "handleJobManagerRunnerResult",
    "target_class": "org.apache.flink.runtime.dispatcher.Dispatcher.ExecutionType):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.dispatcher.Dispatcher.CleanupJobState> \t org.apache.flink.runtime.jobmaster.JobManagerRunnerResult"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "getExecutionGraphInfoFromStore",
    "target_class": "org.apache.flink.api.common.JobID):org.apache.flink.runtime.scheduler.ExecutionGraphInfo \t org.apache.flink.runtime.dispatcher.ExecutionGraphInfoStore"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "validateMaxParallelism",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,java.lang.Integer>):void \t org.apache.flink.runtime.jobgraph.JobResourceRequirements"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "terminateJob",
    "target_class": "org.apache.flink.runtime.dispatcher.OnMainThreadJobManagerRunnerRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "createDirtyJobResultEntryAsync",
    "target_class": "boolean):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.runtime.highavailability.JobResultStore"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "getJobMasterGateway",
    "target_class": "org.apache.flink.runtime.dispatcher.OnMainThreadJobManagerRunnerRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "getResourceManagerGateway",
    "target_class": "org.apache.flink.runtime.webmonitor.retriever.GatewayRetriever"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "getJobManagerRunner",
    "target_class": "org.apache.flink.runtime.dispatcher.OnMainThreadJobManagerRunnerRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "queryJobMastersForInformation",
    "target_class": "org.apache.flink.runtime.dispatcher.OnMainThreadJobManagerRunnerRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.Dispatcher",
    "source_method": "registerDispatcherMetrics",
    "target_class": "org.apache.flink.runtime.dispatcher.OnMainThreadJobManagerRunnerRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.DispatcherServices",
    "source_method": "from",
    "target_class": "org.apache.flink.runtime.dispatcher.JobManagerRunnerFactory, org.apache.flink.runtime.dispatcher.cleanup.CleanupRunnerFactory):org.apache.flink.runtime.dispatcher.DispatcherServices \t org.apache.flink.runtime.dispatcher.JobManagerMetricGroupFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.HistoryServerArchivist",
    "source_method": "createHistoryServerArchivist",
    "target_class": "org.apache.flink.runtime.webmonitor.history.JsonArchivist, java.util.concurrent.Executor):org.apache.flink.runtime.dispatcher.HistoryServerArchivist \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.cleanup.CheckpointResourcesCleanupRunner",
    "source_method": "runCleanupAsync",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointsCleaner"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.cleanup.CheckpointResourcesCleanupRunner",
    "source_method": "createCompletedCheckpointStore",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointRecoveryFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.cleanup.CheckpointResourcesCleanupRunner",
    "source_method": "getJobStatus",
    "target_class": "org.apache.flink.runtime.clusterframework.ApplicationStatus"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.cleanup.CheckpointResourcesCleanupRunner",
    "source_method": "generateExecutionGraphInfo",
    "target_class": "long):org.apache.flink.runtime.scheduler.ExecutionGraphInfo \t org.apache.flink.runtime.jobmaster.JobResult"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.cleanup.CleanupRetryStrategyFactory",
    "source_method": "createFixedRetryStrategy",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.cleanup.CleanupRetryStrategyFactory",
    "source_method": "createExponentialBackoffRetryStrategy",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.cleanup.CleanupRetryStrategyFactory",
    "source_method": "createInvalidCleanupStrategyErrorMessage",
    "target_class": "org.apache.flink.configuration.CleanupOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.dispatcher.cleanup.CleanupRetryStrategyFactory",
    "source_method": "isRetryStrategy",
    "target_class": "java.lang.String):boolean \t org.apache.flink.configuration.CleanupOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManagerRuntimeServicesConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpecFactory):org.apache.flink.runtime.resourcemanager.ResourceManagerRuntimeServicesConfiguration \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotStatusSyncer",
    "source_method": "syncAllocatedSlotStatus",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskManagerInfo):boolean \t org.apache.flink.runtime.resourcemanager.slotmanager.TaskManagerTracker"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker",
    "source_method": "transitionSlotToFree",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker.MultiSlotStatusUpdateListener"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker",
    "source_method": "transitionSlotToPending",
    "target_class": "org.apache.flink.api.common.JobID):void \t org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeTaskManagerSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker",
    "source_method": "transitionSlotToAllocated",
    "target_class": "org.apache.flink.api.common.JobID):void \t org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker.MultiSlotStatusUpdateListener"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultSlotTracker.SlotStatusStateReconciler",
    "source_method": "executeStateTransition",
    "target_class": "org.apache.flink.api.common.JobID):boolean \t org.apache.flink.runtime.resourcemanager.slotmanager.DeclarativeTaskManagerSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration",
    "source_method": "checkSlotNumResource",
    "target_class": "int, org.apache.flink.runtime.resourcemanager.WorkerResourceSpec):void \t org.apache.flink.runtime.resourcemanager.WorkerResourceSpec"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration",
    "source_method": "checkTotalCPUResource",
    "target_class": "org.apache.flink.api.common.resources.CPUResource, org.apache.flink.runtime.resourcemanager.WorkerResourceSpec):void \t org.apache.flink.runtime.resourcemanager.WorkerResourceSpec"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration",
    "source_method": "checkTotalMemoryResource",
    "target_class": "org.apache.flink.configuration.MemorySize, org.apache.flink.runtime.resourcemanager.WorkerResourceSpec):void \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpec):org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration",
    "source_method": "getMinTotalCpu",
    "target_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpec, int):org.apache.flink.api.common.resources.CPUResource \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration",
    "source_method": "getMaxTotalCpu",
    "target_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpec, int):org.apache.flink.api.common.resources.CPUResource \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration",
    "source_method": "getMinTotalMem",
    "target_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpec, int):org.apache.flink.configuration.MemorySize \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerConfiguration",
    "source_method": "getMaxTotalMem",
    "target_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpec, int):org.apache.flink.configuration.MemorySize \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "getAvailableResources",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.ResourceAllocationResult.Builder, org.apache.flink.runtime.blocklist.BlockedTaskManagerChecker):java.util.List<org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy.InternalResourceInfo> \t org.apache.flink.runtime.resourcemanager.slotmanager.ResourceAllocationResult.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "getPendingResources",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.ResourceAllocationResult.Builder):java.util.List<org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy.InternalResourceInfo> \t org.apache.flink.runtime.resourcemanager.slotmanager.ResourceAllocationResult.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "tryFulfillRequirementsForJobWithResources",
    "target_class": "java.util.Collection<org.apache.flink.runtime.slots.ResourceRequirement>, java.util.List<org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy.InternalResourceInfo>):java.util.Collection<org.apache.flink.runtime.slots.ResourceRequirement> \t org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy.ResourceMatchingStrategy"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "canFulfillRequirement",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile):boolean \t org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "tryFulfillRequirementsForJobWithPendingResources",
    "target_class": "java.util.Collection<org.apache.flink.runtime.slots.ResourceRequirement>, java.util.List<org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy.InternalResourceInfo>, org.apache.flink.runtime.resourcemanager.slotmanager.ResourceAllocationResult.Builder):org.apache.flink.runtime.clusterframework.types.ResourceProfile \t org.apache.flink.runtime.resourcemanager.slotmanager.ResourceAllocationResult.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "isRedundantResourcesFulfilled",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "isMinRequiredResourcesFulfilled",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "tryFulFillRequiredResourcesWithAction",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile, java.util.function.Consumer<? super org.apache.flink.runtime.resourcemanager.slotmanager.PendingTaskManager>):void \t org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "getTotalResourceOfTaskManagers",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy",
    "source_method": "getTotalResourceOfPendingTaskManagers",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy.InternalResourceInfo",
    "source_method": "tryAllocateSlotForJob",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile):boolean \t org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.DefaultResourceAllocationStrategy.InternalResourceInfo",
    "source_method": "updateUtilization",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.LeastUtilizationSlotMatchingStrategy",
    "source_method": "calculateUtilization",
    "target_class": "java.util.function.Function<? super org.apache.flink.runtime.instance.InstanceID,java.lang.Integer>, java.util.Map<org.apache.flink.runtime.instance.InstanceID,java.lang.Integer>):double \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.BiDirectionalResourceToRequirementMapping",
    "source_method": "internalIncrementCount",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile, org.apache.flink.runtime.clusterframework.types.ResourceProfile, int):void \t org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.BiDirectionalResourceToRequirementMapping",
    "source_method": "internalDecrementCount",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile, org.apache.flink.runtime.clusterframework.types.ResourceProfile, int):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.PendingTaskManager",
    "source_method": "clearPendingAllocationsOfJob",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.PendingTaskManager",
    "source_method": "calculateUnusedResourceProfile",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerRegistration",
    "source_method": "freeSlot",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerRegistration",
    "source_method": "notifyAllocationComplete",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerRegistration",
    "source_method": "notifyAllocation",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerSlot):void \t org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedTaskManagerSlot"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerUtils",
    "source_method": "generateDefaultSlotResourceProfile",
    "target_class": "int):org.apache.flink.runtime.clusterframework.types.ResourceProfile \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerUtils",
    "source_method": "generateDefaultSlotResourceProfile",
    "target_class": "int):org.apache.flink.runtime.clusterframework.types.ResourceProfile \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerUtils",
    "source_method": "calculateDefaultNumSlots",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile):int \t org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerUtils",
    "source_method": "getEffectiveResourceProfile",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile):org.apache.flink.runtime.clusterframework.types.ResourceProfile \t org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManagerUtils",
    "source_method": "generateTaskManagerTotalResourceProfile",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "isMaxSlotNumExceededAfterRegistration",
    "target_class": "org.apache.flink.runtime.taskexecutor.SlotReport"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "getNumNonPendingReportedNewSlots",
    "target_class": "org.apache.flink.runtime.taskexecutor.SlotReport"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "isPendingSlotExactlyMatchingResourceProfile",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile):boolean \t org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "declareNeededResourcesWithDelay",
    "target_class": "org.apache.flink.util.concurrent.ScheduledExecutor"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "declareNeededResources",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.ResourceAllocator"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "releaseIdleTaskExecutorIfPossible",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskManagerRegistration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "getTotalFreeResources",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "getTotalFreeResourcesOf",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "getNumberRegisteredSlotsOf",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskManagerRegistration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "getNumberFreeSlotsOf",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskManagerRegistration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskExecutorManager",
    "source_method": "removePendingTaskManagerSlots",
    "target_class": "org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker",
    "source_method": "findMatchingRequirement",
    "target_class": "org.apache.flink.runtime.slots.RequirementMatcher"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker",
    "source_method": "getMissingResources",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.BiDirectionalResourceToRequirementMapping"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker",
    "source_method": "getAcquiredResources",
    "target_class": "org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker",
    "source_method": "isEmpty",
    "target_class": "org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.JobScopedResourceTracker",
    "source_method": "isRequirementEmpty",
    "target_class": "org.apache.flink.runtime.util.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "maybeReclaimInactiveSlots",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotStatusSyncer"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "declareNeededResourcesWithDelay",
    "target_class": "org.apache.flink.util.concurrent.ScheduledExecutor"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "declareNeededResources",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskManagerTracker"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "allocateSlotsForRegisteredPendingTaskManager",
    "target_class": "org.apache.flink.runtime.instance.InstanceID):void \t org.apache.flink.runtime.resourcemanager.slotmanager.PendingTaskManager"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "findMatchingPendingTaskManager",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile):java.util.Optional<org.apache.flink.runtime.resourcemanager.slotmanager.PendingTaskManager> \t org.apache.flink.runtime.resourcemanager.slotmanager.PendingTaskManager"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "allocateSlotsAccordingTo",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotStatusSyncer"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "checkResourcesNeedReconcile",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.ResourceAllocationStrategy"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "releaseIdleTaskExecutorIfPossible",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskManagerInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "releaseIdleTaskExecutor",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.TaskManagerTracker"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.slotmanager.FineGrainedSlotManager",
    "source_method": "isMaxTotalResourceExceededAfterAdding",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.active.ActiveResourceManagerFactory",
    "source_method": "createStartWorkerFailureRater",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManager",
    "source_method": "stopResourceManagerServices",
    "target_class": "org.apache.flink.runtime.security.token.DelegationTokenManager"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManager",
    "source_method": "clearStateInternal",
    "target_class": "org.apache.flink.runtime.resourcemanager.JobLeaderIdService"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManager",
    "source_method": "stopHeartbeatServices",
    "target_class": "org.apache.flink.runtime.heartbeat.HeartbeatManager"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManager",
    "source_method": "setFailUnfulfillableRequest",
    "target_class": "org.apache.flink.runtime.resourcemanager.slotmanager.SlotManager"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.DefaultJobLeaderIdService.JobLeaderIdListener",
    "source_method": "stop",
    "target_class": "org.apache.flink.runtime.leaderretrieval.LeaderRetrievalService"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpec",
    "source_method": "fromTaskExecutorProcessSpec",
    "target_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessSpec"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpec",
    "source_method": "fromTotalResourceProfile",
    "target_class": "int):org.apache.flink.runtime.resourcemanager.WorkerResourceSpec \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpec",
    "source_method": "getTotalMemSize",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManagerServiceImpl",
    "source_method": "deregisterWithoutLeaderRm",
    "target_class": "org.apache.flink.util.concurrent.FutureUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManagerServiceImpl",
    "source_method": "stopLeaderElectionService",
    "target_class": "org.apache.flink.runtime.leaderelection.LeaderElection"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManagerServiceImpl",
    "source_method": "create",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.runtime.clusterframework.types.ResourceID, org.apache.flink.runtime.rpc.RpcService, org.apache.flink.runtime.highavailability.HighAvailabilityServices, org.apache.flink.runtime.heartbeat.HeartbeatServices, org.apache.flink.runtime.security.token.DelegationTokenManager, org.apache.flink.runtime.rpc.FatalErrorHandler, org.apache.flink.runtime.entrypoint.ClusterInformation, java.lang.String, org.apache.flink.runtime.metrics.MetricRegistry, java.lang.String, java.util.concurrent.Executor):org.apache.flink.runtime.resourcemanager.ResourceManagerServiceImpl \t org.apache.flink.runtime.resourcemanager.ResourceManagerFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.StandaloneResourceManagerFactory",
    "source_method": "removeResourceLimitationConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManagerRuntimeServices",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServices, org.apache.flink.util.concurrent.ScheduledExecutor, org.apache.flink.runtime.metrics.groups.SlotManagerMetricGroup):org.apache.flink.runtime.resourcemanager.ResourceManagerRuntimeServices \t org.apache.flink.runtime.resourcemanager.ResourceManagerRuntimeServicesConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManagerRuntimeServices",
    "source_method": "createSlotManager",
    "target_class": "org.apache.flink.util.concurrent.ScheduledExecutor, org.apache.flink.runtime.metrics.groups.SlotManagerMetricGroup):org.apache.flink.runtime.resourcemanager.slotmanager.SlotManager \t org.apache.flink.runtime.resourcemanager.ResourceManagerRuntimeServicesConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.resourcemanager.ResourceManagerFactory",
    "source_method": "createResourceManagerRuntimeServices",
    "target_class": "org.apache.flink.runtime.rpc.RpcService, org.apache.flink.runtime.highavailability.HighAvailabilityServices, org.apache.flink.runtime.metrics.groups.SlotManagerMetricGroup):org.apache.flink.runtime.resourcemanager.ResourceManagerRuntimeServices \t org.apache.flink.runtime.rpc.RpcService"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "sanityCheck",
    "target_class": "int):void \t org.apache.flink.util.MathUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "verifyIntTotalNumberOfPages",
    "target_class": "long):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "allocatePages",
    "target_class": "java.util.Collection<org.apache.flink.core.memory.MemorySegment>, int):void \t org.apache.flink.runtime.memory.UnsafeMemoryBudget"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "releasePage",
    "target_class": "org.apache.flink.runtime.memory.UnsafeMemoryBudget"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "release",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "freeSegment",
    "target_class": "java.util.Collection<org.apache.flink.core.memory.MemorySegment>):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "reserveMemory",
    "target_class": "long):void \t org.apache.flink.runtime.memory.UnsafeMemoryBudget"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "releaseAndCalculateReservedMemory",
    "target_class": "long):long \t org.apache.flink.runtime.memory.UnsafeMemoryBudget"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "releaseAllMemory",
    "target_class": "org.apache.flink.runtime.memory.UnsafeMemoryBudget"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "getSharedMemoryResourceForManagedMemory",
    "target_class": "org.apache.flink.util.function.LongFunctionWithException<T,java.lang.Exception>, double):org.apache.flink.runtime.memory.OpaqueMemoryResource<T> \t org.apache.flink.runtime.memory.SharedResources.ResourceAndSize"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "getExternalSharedMemoryResource",
    "target_class": "org.apache.flink.util.function.LongFunctionWithException<T,java.lang.Exception>, long):org.apache.flink.runtime.memory.OpaqueMemoryResource<T> \t org.apache.flink.runtime.memory.SharedResources"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "getMemorySize",
    "target_class": "org.apache.flink.runtime.memory.UnsafeMemoryBudget"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "availableMemory",
    "target_class": "org.apache.flink.runtime.memory.UnsafeMemoryBudget"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "computeMemorySize",
    "target_class": "org.apache.flink.runtime.memory.UnsafeMemoryBudget"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.MemoryManager",
    "source_method": "validateFraction",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.memory.SharedResources",
    "source_method": "release",
    "target_class": "java.lang.Object, java.util.function.LongConsumer):void \t org.apache.flink.runtime.memory.SharedResources.LeasedResource"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.Task",
    "source_method": "restoreAndInvoke",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerActions"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.Task",
    "source_method": "runWithSystemExitMonitoring",
    "target_class": "org.apache.flink.util.function.RunnableWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.Task",
    "source_method": "setupPartitionsAndGates",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputGate[]):void \t org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.Task",
    "source_method": "notifyFinalState",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerActions"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration",
    "source_method": "isSSLEnabled",
    "target_class": "org.apache.flink.runtime.io.network.netty.NettyConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.MemorySize, boolean, java.net.InetAddress):org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration",
    "source_method": "getDataBindPortRange",
    "target_class": "org.apache.flink.runtime.util.ConfigurationParserUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration",
    "source_method": "calculateNumberOfNetworkBuffers",
    "target_class": "org.apache.flink.configuration.MemorySize, int):int \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration",
    "source_method": "logIfIgnoringOldConfigs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration",
    "source_method": "createNettyConfig",
    "target_class": "boolean, java.net.InetAddress, org.apache.flink.runtime.util.PortRange):org.apache.flink.runtime.io.network.netty.NettyConfig \t org.apache.flink.runtime.util.ConfigurationParserUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.NettyShuffleEnvironmentConfiguration",
    "source_method": "getBlockingSubpartitionType",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.TaskExecutionState",
    "source_method": "getError",
    "target_class": "org.apache.flink.util.SerializedThrowable"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.InputGateWithMetrics",
    "source_method": "updateMetrics",
    "target_class": "org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation",
    "source_method": "getFQDNHostname",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation.HostNameSupplier"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation",
    "source_method": "getHostname",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation.HostNameSupplier"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation",
    "source_method": "getHostName",
    "target_class": "org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.taskmanager.MemoryLogger",
    "source_method": "startIfConfigured",
    "target_class": "org.apache.flink.configuration.Configuration, java.util.concurrent.CompletableFuture<java.lang.Void>):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.blocklist.DefaultBlocklistTracker",
    "source_method": "tryAddOrMerge",
    "target_class": "org.apache.flink.runtime.blocklist.BlockedNode"
  },
  {
    "source_class": "org.apache.flink.runtime.blocklist.BlocklistUtils",
    "source_method": "isBlocklistEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.instance.HardwareDescription",
    "source_method": "extractFromSystem",
    "target_class": "org.apache.flink.runtime.util.Hardware"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmanager.HighAvailabilityMode",
    "source_method": "fromConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmanager.JobManagerProcessUtils",
    "source_method": "processSpecFromConfig",
    "target_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmanager.JobManagerProcessUtils",
    "source_method": "createMemoryProcessSpec",
    "target_class": "org.apache.flink.runtime.util.config.memory.CommonProcessMemorySpec"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmanager.JobManagerProcessUtils",
    "source_method": "getConfigurationWithLegacyHeapSizeMappedToNewConfigOption",
    "target_class": "org.apache.flink.configuration.ConfigOption<org.apache.flink.configuration.MemorySize>):org.apache.flink.configuration.Configuration \t org.apache.flink.runtime.util.config.memory.MemoryBackwardsCompatibilityUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmanager.JobManagerProcessUtils",
    "source_method": "createDefaultJobManagerProcessSpec",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmanager.JobManagerProcessUtils",
    "source_method": "generateJvmParametersStr",
    "target_class": "org.apache.flink.configuration.Configuration):java.lang.String \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmanager.JobManagerProcessUtils",
    "source_method": "generateDynamicConfigsStr",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmanager.DefaultJobGraphStore",
    "source_method": "releaseAndRemoveOrThrowCompletionException",
    "target_class": "java.lang.String):void \t org.apache.flink.runtime.persistence.StateHandleStore"
  },
  {
    "source_class": "org.apache.flink.runtime.jobmanager.DefaultJobGraphStore",
    "source_method": "runAsyncWithLockAssertRunning",
    "target_class": "java.util.concurrent.Executor):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.util.function.ThrowingRunnable"
  },
  {
    "source_class": "org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager",
    "source_method": "getNumberOfReferenceHolders",
    "target_class": "org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager.LibraryCacheEntry"
  },
  {
    "source_class": "org.apache.flink.runtime.execution.librarycache.BlobLibraryCacheManager",
    "source_method": "createClassLoadingExceptionHandler",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobOutputStream",
    "source_method": "sendPutHeader",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.runtime.blob.BlobKey.BlobType):void \t org.apache.flink.util.AbstractID"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobOutputStream",
    "source_method": "receiveAndCheckPutResponse",
    "target_class": "java.security.MessageDigest, org.apache.flink.runtime.blob.BlobKey.BlobType):org.apache.flink.runtime.blob.BlobKey \t org.apache.flink.runtime.blob.BlobUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobClient",
    "source_method": "sendGetHeader",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.runtime.blob.BlobKey):void \t org.apache.flink.runtime.blob.BlobKey"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobClient",
    "source_method": "receiveAndCheckGetResponse",
    "target_class": "org.apache.flink.runtime.blob.BlobUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobClient",
    "source_method": "uploadFiles",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.api.common.JobID, java.util.List<org.apache.flink.core.fs.Path>):java.util.List<org.apache.flink.runtime.blob.PermanentBlobKey> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobClient",
    "source_method": "uploadFile",
    "target_class": "org.apache.flink.core.fs.Path):org.apache.flink.runtime.blob.PermanentBlobKey \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.TransientBlobCache",
    "source_method": "registerBlobExpiryTimes",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.TransientBlobCache",
    "source_method": "getStorageLocation",
    "target_class": "org.apache.flink.runtime.blob.BlobKey):java.io.File \t org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServerConnection",
    "source_method": "readFileFully",
    "target_class": "java.io.File, byte[]):byte[] \t org.apache.flink.runtime.blob.BlobUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServerConnection",
    "source_method": "writeErrorToStream",
    "target_class": "java.lang.Throwable):void \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobKey",
    "source_method": "fromString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobKey",
    "source_method": "toString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobUtils",
    "source_method": "createFileSystemBlobStore",
    "target_class": "org.apache.flink.runtime.highavailability.HighAvailabilityServicesUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobUtils",
    "source_method": "createBlobStorageDirectory",
    "target_class": "org.apache.flink.util.Reference<java.io.File>):org.apache.flink.util.Reference<java.io.File> \t org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobUtils",
    "source_method": "getStorageLocationPath",
    "target_class": "org.apache.flink.api.common.JobID):java.lang.String \t org.apache.flink.util.AbstractID"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobUtils",
    "source_method": "getStorageLocationPath",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.runtime.blob.BlobKey):java.lang.String \t org.apache.flink.runtime.blob.BlobKey"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobUtils",
    "source_method": "listBlobFilesInDirectory",
    "target_class": "org.apache.flink.util.FileUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobUtils",
    "source_method": "listBlobsInDirectory",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.PermanentBlobCache",
    "source_method": "checkLimitAndMoveFile",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.runtime.blob.BlobKey, java.io.File, org.apache.flink.runtime.blob.Logger, org.apache.flink.runtime.blob.BlobStore):void \t org.apache.flink.runtime.blob.BlobCacheSizeTracker"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.PermanentBlobCache",
    "source_method": "getStorageLocation",
    "target_class": "org.apache.flink.runtime.blob.BlobKey):java.io.File \t org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobWriter",
    "source_method": "serializeAndTryOffload",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.runtime.blob.BlobWriter):org.apache.flink.types.Either<org.apache.flink.util.SerializedValue<T>,org.apache.flink.runtime.blob.PermanentBlobKey> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServer",
    "source_method": "registerBlobExpiryTimes",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServer",
    "source_method": "checkStoredBlobsForCorruption",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServer",
    "source_method": "getStorageDir",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServer",
    "source_method": "getStorageLocation",
    "target_class": "org.apache.flink.runtime.blob.BlobKey):java.io.File \t org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServer",
    "source_method": "createTemporaryFilename",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServer",
    "source_method": "writeStreamToFileAndCreateDigest",
    "target_class": "java.io.File):java.security.MessageDigest \t org.apache.flink.runtime.blob.BlobUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServer",
    "source_method": "internalLocalCleanup",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServer",
    "source_method": "runAsyncWithWriteLock",
    "target_class": "java.util.concurrent.Executor):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.util.function.ThrowingRunnable"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.BlobServer",
    "source_method": "retainJobs",
    "target_class": "java.util.concurrent.Executor):void \t org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.AbstractBlobCache",
    "source_method": "checkStoredBlobsForCorruption",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.AbstractBlobCache",
    "source_method": "getStorageDir",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.blob.AbstractBlobCache",
    "source_method": "createTemporaryFilename",
    "target_class": "org.apache.flink.util.Reference"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.RestClientConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.RestClient",
    "source_method": "forUrl",
    "target_class": "java.util.concurrent.Executor, java.net.URL):org.apache.flink.runtime.rest.RestClient \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.RestClient",
    "source_method": "createRequest",
    "target_class": "java.lang.String, org.apache.flink.runtime.rest.HttpMethod, org.apache.flink.runtime.rest.ByteBuf, java.util.Collection<org.apache.flink.runtime.rest.FileUpload>, java.util.Collection<org.apache.flink.runtime.rest.HttpHeader>):org.apache.flink.runtime.rest.RestClient.Request \t org.apache.flink.runtime.rest.HttpHeader"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.RestClient",
    "source_method": "parseResponse",
    "target_class": "org.apache.flink.runtime.rest.JavaType):java.util.concurrent.CompletableFuture<P> \t org.apache.flink.runtime.rest.RestClient.JsonResponse"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.RestServerEndpoint",
    "source_method": "registerHandler",
    "target_class": "java.lang.String, org.apache.flink.runtime.rest.HttpMethodWrapper, org.apache.flink.runtime.rest.ChannelInboundHandler):void \t org.apache.flink.runtime.rest.handler.router.Router"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.ResourceProfileInfo",
    "source_method": "fromResrouceProfile",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.ResourceProfileInfo",
    "source_method": "getExetendedResources",
    "target_class": "org.apache.flink.api.common.resources.Resource"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.JobConfigInfo.ExecutionConfigInfo",
    "source_method": "from",
    "target_class": "org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.TriggerId",
    "source_method": "fromHexString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.job.JobDetailsInfo",
    "source_method": "getJsonPlan",
    "target_class": "org.apache.flink.runtime.rest.messages.JobPlanInfo.RawJson"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.job.SubtaskExecutionAttemptDetailsInfo",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcher, org.apache.flink.api.common.JobID, org.apache.flink.runtime.jobgraph.JobVertexID, java.util.List<org.apache.flink.runtime.rest.messages.job.SubtaskExecutionAttemptDetailsInfo>):org.apache.flink.runtime.rest.messages.job.SubtaskExecutionAttemptDetailsInfo \t org.apache.flink.runtime.executiongraph.AccessExecution"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.job.StatusDurationUtils",
    "source_method": "getExecutionStateDuration",
    "target_class": "org.apache.flink.runtime.executiongraph.AccessExecution"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.job.JobExecutionResultResponseBody",
    "source_method": "created",
    "target_class": "org.apache.flink.runtime.rest.messages.queue.QueueStatus"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.ProfilingInfoList",
    "source_method": "createNullable",
    "target_class": "org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.AggregatedTaskDetailsInfo",
    "source_method": "create",
    "target_class": "java.util.List<java.util.Map<org.apache.flink.runtime.execution.ExecutionState,java.lang.Long>>):org.apache.flink.runtime.rest.messages.AggregatedTaskDetailsInfo \t org.apache.flink.runtime.rest.messages.AggregatedTaskDetailsInfo.MetricsStatistics"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.queue.QueueStatus",
    "source_method": "inProgress",
    "target_class": "org.apache.flink.runtime.rest.messages.queue.QueueStatus.Id"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.queue.QueueStatus",
    "source_method": "completed",
    "target_class": "org.apache.flink.runtime.rest.messages.queue.QueueStatus.Id"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.EnvironmentInfo.JVMInfo",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.dataset.ClusterDataSetListResponseBody",
    "source_method": "from",
    "target_class": "org.apache.flink.runtime.io.network.partition.DataSetMetaInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.ThreadDumpInfo",
    "source_method": "dumpAndCreate",
    "target_class": "org.apache.flink.runtime.util.JvmUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.json.JobResultDeserializer",
    "source_method": "assertNotEndOfInput",
    "target_class": "org.apache.flink.runtime.rest.messages.json.JsonToken):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.JobPlanInfo",
    "source_method": "getJsonPlan",
    "target_class": "org.apache.flink.runtime.rest.messages.JobPlanInfo.RawJson"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.checkpoints.StatsSummaryDto",
    "source_method": "valueOf",
    "target_class": "org.apache.flink.runtime.checkpoint.StatsSummary"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.checkpoints.StatsSummaryDto",
    "source_method": "valueOf",
    "target_class": "org.apache.flink.runtime.checkpoint.StatsSummarySnapshot"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.checkpoints.CheckpointStatistics",
    "source_method": "generateCheckpointStatistics",
    "target_class": "boolean):org.apache.flink.runtime.rest.messages.checkpoints.CheckpointStatistics \t org.apache.flink.runtime.checkpoint.AbstractCheckpointStats"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.checkpoints.CheckpointStatistics.RestAPICheckpointType",
    "source_method": "valueOf",
    "target_class": "boolean):org.apache.flink.runtime.rest.messages.checkpoints.CheckpointStatistics.RestAPICheckpointType \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.DashboardConfiguration",
    "source_method": "from",
    "target_class": "java.time.ZonedDateTime, boolean, boolean, boolean, boolean):org.apache.flink.runtime.rest.messages.DashboardConfiguration \t org.apache.flink.runtime.util.EnvironmentInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.messages.ConfigurationInfo",
    "source_method": "from",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.RestServerEndpointConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.FileUploadHandler",
    "source_method": "getMultipartFileUploads",
    "target_class": "org.apache.flink.runtime.rest.handler.FileUploads"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.RestEndpointFactory",
    "source_method": "createExecutionGraphCache",
    "target_class": "org.apache.flink.runtime.rest.handler.RestHandlerConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.router.PathPattern",
    "source_method": "removeSlashesAtBothEnds",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.SubtasksTimesHandler",
    "source_method": "createSubtaskTimesInfo",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobVertexTaskManagersHandler",
    "source_method": "createJobVertexTaskManagersInfo",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcher):org.apache.flink.runtime.rest.messages.JobVertexTaskManagersInfo \t org.apache.flink.runtime.taskmanager.TaskManagerLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.savepoints.SavepointHandlers.SavepointStatusHandler",
    "source_method": "maybeCreateNotFoundError",
    "target_class": "org.apache.flink.runtime.rest.handler.job.AsynchronousJobOperationKey):java.util.Optional<org.apache.flink.runtime.rest.handler.RestHandlerException> \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.savepoints.SavepointHandlers.SavepointStatusHandler",
    "source_method": "getOperationKey",
    "target_class": "org.apache.flink.runtime.rest.handler.HandlerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.savepoints.SavepointHandlers",
    "source_method": "createInternalServerError",
    "target_class": "org.apache.flink.runtime.rest.handler.job.AsynchronousJobOperationKey, java.lang.String):org.apache.flink.runtime.rest.handler.RestHandlerException \t org.apache.flink.runtime.rest.handler.job.AsynchronousJobOperationKey"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobDetailsHandler",
    "source_method": "createJobDetailsInfo",
    "target_class": "org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcher):org.apache.flink.runtime.rest.messages.job.JobDetailsInfo \t org.apache.flink.api.common.JobStatus"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobDetailsHandler",
    "source_method": "createJobVertexDetailsInfo",
    "target_class": "long, org.apache.flink.api.common.JobID, org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcher):org.apache.flink.runtime.rest.messages.job.JobDetailsInfo.JobVertexDetailsInfo \t org.apache.flink.runtime.execution.ExecutionState"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobVertexBackPressureHandler",
    "source_method": "getMaxBackPressureRatio",
    "target_class": "org.apache.flink.runtime.rest.messages.JobVertexBackPressureInfo.SubtaskBackPressureInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobVertexBackPressureHandler",
    "source_method": "getMsPerSecondMetricAsRatio",
    "target_class": "java.lang.String):double \t org.apache.flink.runtime.rest.handler.legacy.metrics.MetricStore.ComponentMetricStore"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobVertexBackPressureHandler",
    "source_method": "getBackPressureLevel",
    "target_class": "org.apache.flink.runtime.rest.messages.JobVertexBackPressureInfo.VertexBackPressureLevel"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobExecutionResultHandler",
    "source_method": "propagateException",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobExceptionsHandler",
    "source_method": "createJobExceptionsInfo",
    "target_class": "int, java.util.List<org.apache.flink.runtime.rest.messages.job.FailureLabelFilterParameter.FailureLabel>):org.apache.flink.runtime.rest.messages.JobExceptionsInfoWithHistory \t org.apache.flink.runtime.scheduler.ExecutionGraphInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobExceptionsHandler",
    "source_method": "createJobExceptionHistory",
    "target_class": "int, java.util.List<org.apache.flink.runtime.rest.messages.job.FailureLabelFilterParameter.FailureLabel>):org.apache.flink.runtime.rest.messages.JobExceptionsInfoWithHistory.JobExceptionHistory \t org.apache.flink.runtime.scheduler.exceptionhistory.ExceptionHistoryEntry"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobExceptionsHandler",
    "source_method": "assertLocalExceptionInfo",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobExceptionsHandler",
    "source_method": "toString",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobExceptionsHandler",
    "source_method": "toTaskManagerId",
    "target_class": "org.apache.flink.runtime.taskmanager.TaskManagerLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobExceptionsHandler",
    "source_method": "toString",
    "target_class": "org.apache.flink.runtime.scheduler.exceptionhistory.ExceptionHistoryEntry.ArchivedTaskManagerLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobExceptionsHandler",
    "source_method": "toTaskManagerId",
    "target_class": "org.apache.flink.runtime.scheduler.exceptionhistory.ExceptionHistoryEntry.ArchivedTaskManagerLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobVertexDetailsHandler",
    "source_method": "createJobVertexDetailsInfo",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcher):org.apache.flink.runtime.rest.messages.JobVertexDetailsInfo \t org.apache.flink.runtime.rest.messages.job.SubtaskExecutionAttemptDetailsInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobSubmitHandler",
    "source_method": "loadJobGraph",
    "target_class": "java.util.Map<java.lang.String,org.apache.flink.core.fs.Path>):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.jobgraph.JobGraph> \t org.apache.flink.runtime.rest.messages.job.JobSubmitRequestBody"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobSubmitHandler",
    "source_method": "getArtifactFilesToUpload",
    "target_class": "java.util.Map<java.lang.String,org.apache.flink.core.fs.Path>):java.util.Collection<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,org.apache.flink.core.fs.Path>> \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobSubmitHandler",
    "source_method": "uploadJobGraphFiles",
    "target_class": "java.util.concurrent.CompletableFuture<org.apache.flink.runtime.jobgraph.JobGraph>, java.util.Collection<org.apache.flink.core.fs.Path>, java.util.Collection<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,org.apache.flink.core.fs.Path>>, org.apache.flink.configuration.Configuration):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.jobgraph.JobGraph> \t org.apache.flink.runtime.dispatcher.DispatcherGateway"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobAccumulatorsHandler",
    "source_method": "createJobAccumulatorsInfo",
    "target_class": "boolean):org.apache.flink.runtime.rest.messages.JobAccumulatorsInfo \t org.apache.flink.runtime.accumulators.StringifiedAccumulatorResult"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.SubtaskExecutionAttemptAccumulatorsHandler",
    "source_method": "createAccumulatorInfo",
    "target_class": "org.apache.flink.runtime.accumulators.StringifiedAccumulatorResult"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.checkpoints.TaskCheckpointStatisticDetailsHandler",
    "source_method": "createCheckpointDetails",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateStats):org.apache.flink.runtime.rest.messages.checkpoints.TaskCheckpointStatisticsWithSubtaskDetails \t org.apache.flink.runtime.checkpoint.TaskStateStats"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.checkpoints.TaskCheckpointStatisticDetailsHandler",
    "source_method": "createSummary",
    "target_class": "long):org.apache.flink.runtime.rest.messages.checkpoints.TaskCheckpointStatisticsWithSubtaskDetails.Summary \t org.apache.flink.runtime.rest.messages.checkpoints.StatsSummaryDto"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.checkpoints.TaskCheckpointStatisticDetailsHandler",
    "source_method": "createSubtaskCheckpointStatistics",
    "target_class": "long):java.util.List<org.apache.flink.runtime.rest.messages.checkpoints.SubtaskCheckpointStatistics> \t org.apache.flink.runtime.checkpoint.SubtaskStateStats"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.checkpoints.CheckpointingStatisticsHandler",
    "source_method": "createCheckpointingStatistics",
    "target_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpointStatsSummarySnapshot"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.checkpoints.CheckpointConfigHandler",
    "source_method": "createCheckpointConfigInfo",
    "target_class": "org.apache.flink.runtime.jobgraph.tasks.CheckpointCoordinatorConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.checkpoints.CheckpointHandlers.CheckpointTriggerHandler",
    "source_method": "createOperationKey",
    "target_class": "org.apache.flink.runtime.rest.handler.HandlerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.checkpoints.CheckpointHandlers.CheckpointStatusHandler",
    "source_method": "maybeCreateNotFoundError",
    "target_class": "org.apache.flink.runtime.rest.handler.job.AsynchronousJobOperationKey):java.util.Optional<org.apache.flink.runtime.rest.handler.RestHandlerException> \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.checkpoints.CheckpointHandlers.CheckpointStatusHandler",
    "source_method": "getOperationKey",
    "target_class": "org.apache.flink.runtime.rest.handler.HandlerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.checkpoints.CheckpointHandlers",
    "source_method": "createInternalServerError",
    "target_class": "org.apache.flink.runtime.rest.handler.job.AsynchronousJobOperationKey, java.lang.String):org.apache.flink.runtime.rest.handler.RestHandlerException \t org.apache.flink.runtime.rest.handler.job.AsynchronousJobOperationKey"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.metrics.AbstractMetricsHandler",
    "source_method": "getAvailableMetrics",
    "target_class": "org.apache.flink.runtime.rest.handler.legacy.metrics.MetricStore.ComponentMetricStore"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.metrics.AbstractMetricsHandler",
    "source_method": "getRequestedMetrics",
    "target_class": "java.util.Set<java.lang.String>):java.util.List<org.apache.flink.runtime.rest.messages.job.metrics.Metric> \t org.apache.flink.runtime.rest.handler.legacy.metrics.MetricStore.ComponentMetricStore"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.metrics.AbstractAggregatingMetricsHandler",
    "source_method": "getAvailableMetrics",
    "target_class": "extends org.apache.flink.runtime.rest.handler.legacy.metrics.MetricStore.ComponentMetricStore>):java.util.Collection<java.lang.String> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.metrics.AbstractAggregatingMetricsHandler.MetricAccumulatorFactory",
    "source_method": "get",
    "target_class": "double):org.apache.flink.runtime.rest.handler.job.metrics.AbstractAggregatingMetricsHandler.MetricAccumulator \t org.apache.flink.runtime.rest.handler.job.metrics.DoubleAccumulator.DoubleMaximumFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.metrics.AbstractAggregatingMetricsHandler.MetricAccumulator",
    "source_method": "add",
    "target_class": "org.apache.flink.runtime.rest.handler.job.metrics.DoubleAccumulator"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.metrics.AbstractAggregatingMetricsHandler.MetricAccumulator",
    "source_method": "get",
    "target_class": "org.apache.flink.runtime.rest.handler.job.metrics.DoubleAccumulator"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobConfigHandler",
    "source_method": "createJobConfigInfo",
    "target_class": "org.apache.flink.runtime.rest.messages.JobConfigInfo.ExecutionConfigInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobVertexFlameGraphHandler",
    "source_method": "isTerminated",
    "target_class": "java.lang.Integer):boolean \t org.apache.flink.runtime.executiongraph.AccessExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobVertexFlameGraphHandler",
    "source_method": "getFlameGraphType",
    "target_class": "org.apache.flink.runtime.rest.handler.HandlerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.job.JobVertexFlameGraphHandler",
    "source_method": "getSubtaskIndex",
    "target_class": "org.apache.flink.runtime.executiongraph.AccessExecutionJobVertex):java.lang.Integer \t org.apache.flink.runtime.rest.handler.HandlerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.RestHandlerConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.legacy.files.StaticFileServerHandler",
    "source_method": "setContentTypeHeader",
    "target_class": "java.io.File):void \t org.apache.flink.runtime.rest.handler.util.MimeTypes"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.legacy.metrics.MetricStore",
    "source_method": "addMetric",
    "target_class": "java.lang.String, org.apache.flink.runtime.metrics.dump.MetricDump):void \t org.apache.flink.runtime.metrics.dump.MetricDump"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.runtime.webmonitor.retriever.MetricQueryServiceRetriever, org.apache.flink.runtime.webmonitor.retriever.GatewayRetriever<T>, java.util.concurrent.ExecutorService):org.apache.flink.runtime.rest.handler.legacy.metrics.MetricFetcherImpl<T> \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.legacy.DefaultExecutionGraphCache",
    "source_method": "getExecutionGraphInternal",
    "target_class": "org.apache.flink.runtime.webmonitor.RestfulGateway):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.scheduler.ExecutionGraphInfo> \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.HandlerRequest",
    "source_method": "resolvePathParameters",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):void \t org.apache.flink.runtime.rest.messages.MessageParameter"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.HandlerRequest",
    "source_method": "resolveQueryParameters",
    "target_class": "java.util.Map<java.lang.String,java.util.List<java.lang.String>>):void \t org.apache.flink.runtime.rest.messages.MessageParameter"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.HandlerRequest",
    "source_method": "mapParameters",
    "target_class": "extends P>,P> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.FileUploads",
    "source_method": "getUploadedFiles",
    "target_class": "org.apache.flink.runtime.rest.handler.FileUploads.FileAdderVisitor"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.resourcemanager.AbstractResourceManagerHandler",
    "source_method": "getResourceManagerGateway",
    "target_class": "org.apache.flink.runtime.webmonitor.retriever.GatewayRetriever"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.AbstractHandler",
    "source_method": "finalizeRequestProcessing",
    "target_class": "org.apache.flink.runtime.rest.handler.InFlightRequestTracker"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.taskmanager.TaskManagerDetailsHandler",
    "source_method": "createTaskManagerMetricsInfo",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.taskmanager.TaskManagerDetailsHandler",
    "source_method": "createGarbageCollectorInfo",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.util.HandlerRedirectUtils",
    "source_method": "getRedirectResponse",
    "target_class": "java.lang.String, org.apache.flink.runtime.rest.handler.util.HttpResponseStatus):org.apache.flink.runtime.rest.handler.util.HttpResponse \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.util.HandlerUtils",
    "source_method": "sendResponse",
    "target_class": "boolean, java.lang.String, org.apache.flink.runtime.rest.handler.util.HttpResponseStatus, java.util.Map<java.lang.String,java.lang.String>):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.runtime.rest.util.RestConstants"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.util.HandlerRequestUtils",
    "source_method": "getQueryParameter",
    "target_class": "java.lang.Class<P>, X):X \t org.apache.flink.runtime.rest.handler.HandlerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.util.HandlerRequestUtils",
    "source_method": "fromRequestBodyOrQueryParameter",
    "target_class": "org.apache.flink.util.function.SupplierWithException<T,org.apache.flink.runtime.rest.handler.RestHandlerException>, T, org.apache.flink.runtime.rest.handler.util.Logger):T \t org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.async.AsynchronousOperationResult",
    "source_method": "completed",
    "target_class": "org.apache.flink.runtime.rest.messages.queue.QueueStatus"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.async.OperationResult",
    "source_method": "failure",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.async.OperationResult",
    "source_method": "success",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.async.OperationResult",
    "source_method": "inProgress",
    "target_class": "org.apache.flink.runtime.rest.handler.async.OperationResultStatus"
  },
  {
    "source_class": "org.apache.flink.runtime.rest.handler.LeaderRetrievalHandler",
    "source_method": "getTimeout",
    "target_class": "org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.runtime.heartbeat.DefaultHeartbeatMonitor",
    "source_method": "resetHeartbeatTimeout",
    "target_class": "org.apache.flink.util.concurrent.ScheduledExecutor"
  },
  {
    "source_class": "org.apache.flink.runtime.heartbeat.HeartbeatServices",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.heartbeat.HeartbeatServices",
    "source_method": "noOp",
    "target_class": "org.apache.flink.runtime.heartbeat.NoOpHeartbeatServices"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ResourceCounter",
    "source_method": "withResource",
    "target_class": "int):org.apache.flink.runtime.util.ResourceCounter \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.JvmShutdownSafeguard",
    "source_method": "installAsShutdownHook",
    "target_class": "long):void \t org.apache.flink.util.ShutdownHookUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.util.bash.BashJavaUtils",
    "source_method": "getTmResourceParams",
    "target_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.bash.BashJavaUtils",
    "source_method": "getJmResourceParams",
    "target_class": "org.apache.flink.runtime.jobmanager.JobManagerProcessUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.bash.BashJavaUtils",
    "source_method": "logMasterConfiguration",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.bash.BashJavaUtils",
    "source_method": "logTaskExecutorConfiguration",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.bash.FlinkConfigLoader",
    "source_method": "loadConfiguration",
    "target_class": "org.apache.flink.runtime.util.ConfigurationParserUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.LeaderRetrievalUtils",
    "source_method": "retrieveLeaderInformation",
    "target_class": "java.time.Duration):org.apache.flink.runtime.leaderelection.LeaderInformation \t org.apache.flink.runtime.leaderretrieval.LeaderRetrievalService"
  },
  {
    "source_class": "org.apache.flink.runtime.util.LeaderRetrievalUtils",
    "source_method": "findConnectingAddress",
    "target_class": "java.time.Duration, org.apache.flink.runtime.rpc.RpcSystemUtils):java.net.InetAddress \t org.apache.flink.runtime.leaderretrieval.LeaderRetrievalService"
  },
  {
    "source_class": "org.apache.flink.runtime.util.SignalHandler",
    "source_method": "register",
    "target_class": "org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "startCuratorFramework",
    "target_class": "org.apache.flink.runtime.rpc.FatalErrorHandler):org.apache.flink.runtime.highavailability.zookeeper.CuratorFrameworkWithUnhandledErrorListener \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "isZooKeeperRecoveryMode",
    "target_class": "org.apache.flink.runtime.jobmanager.HighAvailabilityMode"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "getZooKeeperEnsemble",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "createLeaderRetrievalDriverFactory",
    "target_class": "java.lang.String, org.apache.flink.configuration.Configuration):org.apache.flink.runtime.leaderretrieval.ZooKeeperLeaderRetrievalDriverFactory \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "writeLeaderInformationToZooKeeper",
    "target_class": "org.apache.flink.runtime.util.CuratorFramework, java.util.function.BooleanSupplier, java.lang.String):void \t org.apache.flink.runtime.leaderelection.LeaderInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "readLeaderInformation",
    "target_class": "org.apache.flink.runtime.leaderelection.LeaderInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "createJobGraphs",
    "target_class": "org.apache.flink.configuration.Configuration):org.apache.flink.runtime.jobmanager.JobGraphStore \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "createCompletedCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration, int, org.apache.flink.runtime.state.SharedStateRegistryFactory, java.util.concurrent.Executor, java.util.concurrent.Executor, org.apache.flink.runtime.jobgraph.RestoreMode):org.apache.flink.runtime.checkpoint.CompletedCheckpointStore \t org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "getPathForJob",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "createFileSystemStateStorage",
    "target_class": "java.lang.String):org.apache.flink.runtime.persistence.filesystem.FileSystemStateStorageHelper<T> \t org.apache.flink.runtime.highavailability.HighAvailabilityServicesUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "useNamespaceAndEnsurePath",
    "target_class": "java.lang.String):org.apache.flink.runtime.util.CuratorFramework \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils",
    "source_method": "createTreeCache",
    "target_class": "java.lang.String, org.apache.flink.runtime.util.TreeCacheSelector):org.apache.flink.runtime.util.TreeCache \t org.apache.flink.util.concurrent.Executors"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ZooKeeperUtils.ZkClientACLMode",
    "source_method": "fromConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.JvmUtils",
    "source_method": "createThreadInfoSample",
    "target_class": "int):java.util.Optional<org.apache.flink.runtime.messages.ThreadInfoSample> \t org.apache.flink.runtime.messages.ThreadInfoSample"
  },
  {
    "source_class": "org.apache.flink.runtime.util.JvmUtils",
    "source_method": "createThreadInfoSample",
    "target_class": "int):java.util.Map<java.lang.Long,org.apache.flink.runtime.messages.ThreadInfoSample> \t org.apache.flink.runtime.messages.ThreadInfoSample"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getVersion",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation.Versions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getScalaVersion",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation.Versions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getBuildTime",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation.Versions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getBuildTimeString",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation.Versions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getGitCommitId",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation.Versions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getGitCommitIdAbbrev",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation.Versions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getGitCommitTime",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation.Versions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getGitCommitTimeString",
    "target_class": "org.apache.flink.runtime.util.EnvironmentInformation.Versions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getMaxJvmHeapMemory",
    "target_class": "org.apache.flink.runtime.util.Hardware"
  },
  {
    "source_class": "org.apache.flink.runtime.util.EnvironmentInformation",
    "source_method": "getOpenFileHandlesLimit",
    "target_class": "org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ConfigurationParserUtils",
    "source_method": "getSlot",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ConfigurationParserUtils",
    "source_method": "getPageSize",
    "target_class": "org.apache.flink.util.MathUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.ConfigurationParserUtils",
    "source_method": "loadCommonConfiguration",
    "target_class": "java.lang.String):org.apache.flink.configuration.Configuration \t org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.profiler.ProfilingService",
    "source_method": "formatOutputFileName",
    "target_class": "org.apache.flink.runtime.rest.messages.ProfilingInfo):java.lang.String \t org.apache.flink.runtime.rest.messages.ProfilingInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.util.SlotSelectionStrategyUtils",
    "source_method": "selectSlotSelectionStrategy",
    "target_class": "org.apache.flink.configuration.Configuration):org.apache.flink.runtime.jobmaster.slotpool.SlotSelectionStrategy \t org.apache.flink.runtime.jobmaster.slotpool.LocationPreferenceSlotSelectionStrategy"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.MemoryBackwardsCompatibilityUtils",
    "source_method": "getLegacyHeapMemoryIfExplicitlyConfigured",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils",
    "source_method": "deriveJvmMetaspaceAndOverheadWithTotalProcessMemory",
    "target_class": "org.apache.flink.configuration.MemorySize):org.apache.flink.runtime.util.config.memory.JvmMetaspaceAndOverhead \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils",
    "source_method": "deriveJvmOverheadFromTotalFlinkMemoryAndOtherComponents",
    "target_class": "org.apache.flink.configuration.MemorySize):org.apache.flink.configuration.MemorySize \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils",
    "source_method": "sanityCheckTotalProcessMemory",
    "target_class": "org.apache.flink.configuration.MemorySize, org.apache.flink.runtime.util.config.memory.JvmMetaspaceAndOverhead):void \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils",
    "source_method": "getMemorySizeFromConfig",
    "target_class": "org.apache.flink.configuration.ConfigOption<org.apache.flink.configuration.MemorySize>):org.apache.flink.configuration.MemorySize \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils",
    "source_method": "getRangeFraction",
    "target_class": "org.apache.flink.configuration.MemorySize, org.apache.flink.configuration.ConfigOption<java.lang.Float>, org.apache.flink.configuration.Configuration):org.apache.flink.runtime.util.config.memory.RangeFraction \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils",
    "source_method": "deriveWithFraction",
    "target_class": "org.apache.flink.configuration.MemorySize, org.apache.flink.runtime.util.config.memory.RangeFraction):org.apache.flink.configuration.MemorySize \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils",
    "source_method": "deriveWithInverseFraction",
    "target_class": "org.apache.flink.configuration.MemorySize, org.apache.flink.runtime.util.config.memory.RangeFraction):org.apache.flink.configuration.MemorySize \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils",
    "source_method": "capToMinMax",
    "target_class": "org.apache.flink.configuration.MemorySize, org.apache.flink.runtime.util.config.memory.RangeFraction):org.apache.flink.configuration.MemorySize \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils",
    "source_method": "generateJvmParametersStr",
    "target_class": "boolean):java.lang.String \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "deriveNetworkMemoryWithFraction",
    "target_class": "org.apache.flink.configuration.MemorySize):org.apache.flink.configuration.MemorySize \t org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "deriveNetworkMemoryWithInverseFraction",
    "target_class": "org.apache.flink.configuration.MemorySize):org.apache.flink.configuration.MemorySize \t org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "getFrameworkHeapMemorySize",
    "target_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "getFrameworkOffHeapMemorySize",
    "target_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "getTaskHeapMemorySize",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "getTaskOffHeapMemorySize",
    "target_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "getManagedMemorySize",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "getManagedMemoryRangeFraction",
    "target_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "getNetworkMemorySizeWithLegacyConfig",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "getNetworkMemoryRangeFraction",
    "target_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "getTotalFlinkMemorySize",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "isTaskHeapMemorySizeExplicitlyConfigured",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "isManagedMemorySizeExplicitlyConfigured",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "isUsingLegacyNetworkConfigs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "isNetworkMemoryFractionExplicitlyConfigured",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "isTotalFlinkMemorySizeExplicitlyConfigured",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "sanityCheckTotalFlinkMemory",
    "target_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemory):void \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils",
    "source_method": "sanityCheckNetworkMemory",
    "target_class": "org.apache.flink.configuration.MemorySize, org.apache.flink.configuration.MemorySize):void \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.jobmanager.JobManagerFlinkMemoryUtils",
    "source_method": "sanityCheckTotalFlinkMemory",
    "target_class": "org.apache.flink.configuration.MemorySize, org.apache.flink.configuration.MemorySize):void \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.jobmanager.JobManagerFlinkMemoryUtils",
    "source_method": "deriveOffHeapMemory",
    "target_class": "org.apache.flink.configuration.MemorySize, org.apache.flink.configuration.MemorySize):org.apache.flink.configuration.MemorySize \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.jobmanager.JobManagerFlinkMemoryUtils",
    "source_method": "verifyJvmHeapSize",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ManagedMemoryUtils",
    "source_method": "getManagedMemoryUseCaseWeightsFromConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.config.memory.ManagedMemoryUtils",
    "source_method": "validateUseCaseWeightsNotConflict",
    "target_class": "java.util.Map<org.apache.flink.core.memory.ManagedMemoryUseCase,java.lang.Integer>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.util.StateHandleStoreUtils",
    "source_method": "serializeOrDiscard",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.util.StateHandleStoreUtils",
    "source_method": "deserialize",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.accumulators.AccumulatorSnapshot",
    "source_method": "deserializeUserAccumulators",
    "target_class": "org.apache.flink.util.SerializedValue"
  },
  {
    "source_class": "org.apache.flink.runtime.accumulators.StringifiedAccumulatorResult",
    "source_method": "stringifyAccumulatorResult",
    "target_class": "org.apache.flink.util.OptionalFailure<org.apache.flink.api.common.accumulators.Accumulator<?,?>>):org.apache.flink.runtime.accumulators.StringifiedAccumulatorResult \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties",
    "source_method": "forSavepoint",
    "target_class": "org.apache.flink.core.execution.SavepointFormatType):org.apache.flink.runtime.checkpoint.CheckpointProperties \t org.apache.flink.runtime.checkpoint.SavepointType"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties",
    "source_method": "forUnclaimedSnapshot",
    "target_class": "org.apache.flink.runtime.checkpoint.SavepointType"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties",
    "source_method": "forSyncSavepoint",
    "target_class": "boolean, org.apache.flink.core.execution.SavepointFormatType):org.apache.flink.runtime.checkpoint.CheckpointProperties \t org.apache.flink.runtime.checkpoint.SavepointType"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpoint",
    "source_method": "registerSharedStatesAfterRestored",
    "target_class": "org.apache.flink.runtime.jobgraph.RestoreMode):void \t org.apache.flink.runtime.state.SharedStateRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpoint",
    "source_method": "shouldBeDiscardedOnSubsume",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpoint",
    "source_method": "shouldBeDiscardedOnShutdown",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateStats",
    "source_method": "reportSubtaskStats",
    "target_class": "org.apache.flink.runtime.checkpoint.SubtaskStateStats"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateStats",
    "source_method": "getLatestAckTimestamp",
    "target_class": "org.apache.flink.runtime.checkpoint.SubtaskStateStats"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateStats",
    "source_method": "getStateSize",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateStats.TaskStateStatsSummary"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateStats",
    "source_method": "getEndToEndDuration",
    "target_class": "org.apache.flink.runtime.checkpoint.SubtaskStateStats"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateStats.TaskStateStatsSummary",
    "source_method": "updateSummary",
    "target_class": "org.apache.flink.runtime.checkpoint.StatsSummary"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.filemerging.LogicalFile",
    "source_method": "discardWithCheckpointId",
    "target_class": "org.apache.flink.runtime.checkpoint.filemerging.PhysicalFile"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.filemerging.FileMergingSnapshotManagerBase",
    "source_method": "createLogicalFile",
    "target_class": "int, int, org.apache.flink.runtime.checkpoint.filemerging.FileMergingSnapshotManager.SubtaskKey):org.apache.flink.runtime.checkpoint.filemerging.LogicalFile \t org.apache.flink.runtime.checkpoint.filemerging.LogicalFile.LogicalFileId"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StatsSummary",
    "source_method": "add",
    "target_class": "org.apache.flink.metrics.Histogram"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StatsSummary",
    "source_method": "createSnapshot",
    "target_class": "org.apache.flink.metrics.Histogram"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment",
    "source_method": "getDownstreamAssignments",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment",
    "source_method": "getUpstreamAssignments",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResult"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment",
    "source_method": "createRescalingDescriptor",
    "target_class": "org.apache.flink.runtime.jobgraph.OperatorID, org.apache.flink.runtime.checkpoint.TaskStateAssignment[], java.util.function.BiFunction<org.apache.flink.runtime.checkpoint.TaskStateAssignment,java.lang.Boolean,org.apache.flink.runtime.checkpoint.TaskStateAssignment.SubtasksRescaleMapping>, java.util.Map<java.lang.Integer,org.apache.flink.runtime.checkpoint.TaskStateAssignment.SubtasksRescaleMapping>, java.util.function.Function<java.lang.Integer,org.apache.flink.runtime.checkpoint.TaskStateAssignment.SubtasksRescaleMapping>):org.apache.flink.runtime.checkpoint.InflightDataRescalingDescriptor \t org.apache.flink.runtime.jobgraph.OperatorInstanceID"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment",
    "source_method": "getInflightDataGateOrPartitionRescalingDescriptor",
    "target_class": "int, org.apache.flink.runtime.checkpoint.TaskStateAssignment.SubtasksRescaleMapping, org.apache.flink.runtime.checkpoint.TaskStateAssignment.SubtasksRescaleMapping):org.apache.flink.runtime.checkpoint.InflightDataRescalingDescriptor.InflightDataGateOrPartitionRescalingDescriptor \t org.apache.flink.runtime.jobgraph.OperatorInstanceID"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment",
    "source_method": "getOutputMapping",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment",
    "source_method": "getInputMapping",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment",
    "source_method": "checkSubtaskMapping",
    "target_class": "org.apache.flink.runtime.checkpoint.RescaleMappings, boolean):org.apache.flink.runtime.checkpoint.TaskStateAssignment.SubtasksRescaleMapping \t org.apache.flink.runtime.checkpoint.RescaleMappings"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.OperatorCoordinatorCheckpoints",
    "source_method": "triggerCoordinatorCheckpoint",
    "target_class": "long):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.checkpoint.OperatorCoordinatorCheckpoints.CoordinatorSnapshot> \t org.apache.flink.util.AbstractID"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.OperatorCoordinatorCheckpoints",
    "source_method": "triggerAllCoordinatorCheckpoints",
    "target_class": "long):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.checkpoint.OperatorCoordinatorCheckpoints.AllCoordinatorSnapshots> \t org.apache.flink.util.concurrent.FutureUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.OperatorCoordinatorCheckpoints",
    "source_method": "acknowledgeAllCoordinators",
    "target_class": "java.util.Collection<org.apache.flink.runtime.checkpoint.OperatorCoordinatorCheckpoints.CoordinatorSnapshot>):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointSubsumeHelper",
    "source_method": "getLatestNotSavepoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointSubsumeHelper",
    "source_method": "canSubsume",
    "target_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpoint, java.util.Optional<org.apache.flink.runtime.checkpoint.CompletedCheckpoint>):boolean \t org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PendingCheckpointStats",
    "source_method": "reportSubtaskStats",
    "target_class": "org.apache.flink.runtime.checkpoint.SubtaskStateStats):boolean \t org.apache.flink.runtime.checkpoint.TaskStateStats"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCheckpointPlan",
    "source_method": "checkNoPartlyOperatorsFinishedVertexUsedUnionListState",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.OperatorID,org.apache.flink.runtime.checkpoint.OperatorState>):void \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCheckpointPlan",
    "source_method": "hasUsedUnionListState",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.OperatorID,org.apache.flink.runtime.checkpoint.OperatorState>):boolean \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCheckpointPlan",
    "source_method": "fulfillFullyFinishedOrFinishedOnRestoreOperatorStates",
    "target_class": "org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCheckpointPlan",
    "source_method": "fulfillSubtaskStateForPartiallyFinishedOperators",
    "target_class": "org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.AbstractCompleteCheckpointStore",
    "source_method": "findLowest",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.Checkpoints",
    "source_method": "storeCheckpointMetadata",
    "target_class": "java.io.DataOutputStream, org.apache.flink.runtime.checkpoint.metadata.MetadataSerializer):void \t org.apache.flink.core.io.Versioned"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.Checkpoints",
    "source_method": "loadCheckpointMetadata",
    "target_class": "java.lang.ClassLoader, java.lang.String):org.apache.flink.runtime.checkpoint.metadata.CheckpointMetadata \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.Checkpoints",
    "source_method": "loadAndValidateCheckpoint",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,org.apache.flink.runtime.executiongraph.ExecutionJobVertex>, org.apache.flink.runtime.state.CompletedCheckpointStorageLocation, java.lang.ClassLoader, boolean, org.apache.flink.runtime.checkpoint.CheckpointProperties):org.apache.flink.runtime.checkpoint.CompletedCheckpoint \t org.apache.flink.runtime.checkpoint.metadata.CheckpointMetadata"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.Checkpoints",
    "source_method": "disposeSavepoint",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorage, java.lang.ClassLoader):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.Checkpoints",
    "source_method": "loadStateBackend",
    "target_class": "org.apache.flink.configuration.Configuration, java.lang.ClassLoader, org.apache.flink.runtime.checkpoint.Logger):org.apache.flink.runtime.state.StateBackend \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.Checkpoints",
    "source_method": "loadCheckpointStorage",
    "target_class": "org.apache.flink.configuration.Configuration, java.lang.ClassLoader, org.apache.flink.runtime.checkpoint.Logger):org.apache.flink.runtime.state.CheckpointStorage \t org.apache.flink.runtime.state.CheckpointStorageLoader"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.JobInitializationMetricsBuilder",
    "source_method": "aggregateMetrics",
    "target_class": "java.util.Map<java.lang.String,java.lang.Long>):void \t org.apache.flink.runtime.checkpoint.JobInitializationMetrics.SumMaxDuration"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "assignStates",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "assignTaskStateToExecutionJobVertices",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "assignFinishedStateToTask",
    "target_class": "org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "assignNonFinishedStateToTask",
    "target_class": "java.util.List<org.apache.flink.runtime.OperatorIDPair>, int, org.apache.flink.runtime.executiongraph.Execution):void \t org.apache.flink.runtime.checkpoint.TaskStateAssignment"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "checkParallelismPreconditions",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "reDistributeKeyedStates",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment):void \t org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "reAssignSubKeyedStates",
    "target_class": "java.util.List<org.apache.flink.runtime.state.KeyGroupRange>, int, int, int):org.apache.flink.api.java.tuple.Tuple2<java.util.List<org.apache.flink.runtime.state.KeyedStateHandle>,java.util.List<org.apache.flink.runtime.state.KeyedStateHandle>> \t org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "reDistributePartitionableStates",
    "target_class": "int, java.util.function.Function<org.apache.flink.runtime.checkpoint.OperatorSubtaskState,org.apache.flink.runtime.checkpoint.StateObjectCollection<T>>, org.apache.flink.runtime.checkpoint.OperatorStateRepartitioner<T>, java.util.Map<org.apache.flink.runtime.jobgraph.OperatorInstanceID,java.util.List<T>>):void \t org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "reDistributeResultSubpartitionStates",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "reDistributeInputChannelStates",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateAssignment"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "hasChannelState",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.checkpoint.OperatorSubtaskState,org.apache.flink.runtime.checkpoint.StateObjectCollection<T>>):boolean \t org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "getPartitionState",
    "target_class": "java.util.function.Function<I,java.lang.Integer>, int):java.util.List<java.util.List<T>> \t org.apache.flink.runtime.state.AbstractChannelStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "splitBySubtasks",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.checkpoint.OperatorSubtaskState,org.apache.flink.runtime.checkpoint.StateObjectCollection<T>>):java.util.List<java.util.List<T>> \t org.apache.flink.runtime.checkpoint.StateObjectCollection"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "getManagedKeyedStateHandles",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange):java.util.List<org.apache.flink.runtime.state.KeyedStateHandle> \t org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "getRawKeyedStateHandles",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange):java.util.List<org.apache.flink.runtime.state.KeyedStateHandle> \t org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "extractIntersectingState",
    "target_class": "extends org.apache.flink.runtime.state.KeyedStateHandle>, org.apache.flink.runtime.state.KeyGroupRange, java.util.List<org.apache.flink.runtime.state.KeyedStateHandle>):void \t org.apache.flink.runtime.state.KeyedStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "createKeyGroupPartitions",
    "target_class": "int):java.util.List<org.apache.flink.runtime.state.KeyGroupRange> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "checkParallelismPreconditions",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex):void \t org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "checkStateMappingCompleteness",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.OperatorID,org.apache.flink.runtime.checkpoint.OperatorState>, java.util.Set<org.apache.flink.runtime.executiongraph.ExecutionJobVertex>):void \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "toInstanceMap",
    "target_class": "java.util.List<java.util.List<T>>):java.util.Map<org.apache.flink.runtime.jobgraph.OperatorInstanceID,java.util.List<T>> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.StateAssignmentOperation",
    "source_method": "applyRepartitioner",
    "target_class": "java.util.List<java.util.List<T>>, int, int):java.util.List<java.util.List<T>> \t org.apache.flink.runtime.checkpoint.OperatorStateRepartitioner"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsHistory",
    "source_method": "replacePendingCheckpointById",
    "target_class": "org.apache.flink.runtime.checkpoint.AbstractCheckpointStats"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.hooks.MasterHooks",
    "source_method": "reset",
    "target_class": "org.apache.flink.runtime.checkpoint.hooks.Logger):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.hooks.MasterHooks",
    "source_method": "close",
    "target_class": "org.apache.flink.runtime.checkpoint.hooks.Logger):void \t org.apache.flink.runtime.checkpoint.MasterTriggerRestoreHook"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.hooks.MasterHooks",
    "source_method": "triggerHook",
    "target_class": "long, long, java.util.concurrent.Executor):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.checkpoint.MasterState> \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.hooks.MasterHooks",
    "source_method": "deserializeState",
    "target_class": "org.apache.flink.runtime.checkpoint.MasterTriggerRestoreHook<?>):T \t org.apache.flink.runtime.checkpoint.MasterState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.hooks.MasterHooks",
    "source_method": "restoreHook",
    "target_class": "org.apache.flink.runtime.checkpoint.MasterTriggerRestoreHook<?>, long):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint",
    "source_method": "canBeSubsumed",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint",
    "source_method": "finalizeCheckpoint",
    "target_class": "java.lang.Runnable, java.util.concurrent.Executor):org.apache.flink.runtime.checkpoint.CompletedCheckpoint \t org.apache.flink.runtime.state.CheckpointMetadataOutputStream"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint",
    "source_method": "toCompletedCheckpointStats",
    "target_class": "org.apache.flink.runtime.state.CompletedCheckpointStorageLocation"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint",
    "source_method": "updateOperatorState",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateSnapshot, org.apache.flink.runtime.OperatorIDPair):void \t org.apache.flink.runtime.checkpoint.TaskStateSnapshot"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint",
    "source_method": "acknowledgeCoordinatorState",
    "target_class": "org.apache.flink.runtime.state.memory.ByteStreamStateHandle):org.apache.flink.runtime.checkpoint.PendingCheckpoint.TaskAcknowledgeResult \t org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint",
    "source_method": "assertAbortSubsumedForced",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint",
    "source_method": "dispose",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointsCleaner, java.lang.Runnable, java.util.concurrent.Executor):void \t org.apache.flink.runtime.checkpoint.CheckpointsCleaner"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.RoundRobinOperatorStateRepartitioner",
    "source_method": "collectStates",
    "target_class": "org.apache.flink.runtime.state.OperatorStateHandle.Mode):java.util.Map<java.lang.String,org.apache.flink.runtime.checkpoint.RoundRobinOperatorStateRepartitioner.StateEntry> \t org.apache.flink.runtime.checkpoint.RoundRobinOperatorStateRepartitioner.StateEntry"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.RoundRobinOperatorStateRepartitioner",
    "source_method": "groupByStateMode",
    "target_class": "org.apache.flink.runtime.state.OperatorStateHandle.StateMetaInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.RoundRobinOperatorStateRepartitioner",
    "source_method": "repartitionSplitState",
    "target_class": "int, java.util.List<java.util.Map<org.apache.flink.runtime.state.StreamStateHandle,org.apache.flink.runtime.state.OperatorStateHandle>>):void \t org.apache.flink.runtime.state.OperatorStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.RoundRobinOperatorStateRepartitioner",
    "source_method": "repartitionUnionState",
    "target_class": "java.util.List<java.util.Map<org.apache.flink.runtime.state.StreamStateHandle,org.apache.flink.runtime.state.OperatorStateHandle>>):void \t org.apache.flink.runtime.state.OperatorStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.RoundRobinOperatorStateRepartitioner",
    "source_method": "repartitionBroadcastState",
    "target_class": "java.util.List<java.util.Map<org.apache.flink.runtime.state.StreamStateHandle,org.apache.flink.runtime.state.OperatorStateHandle>>):void \t org.apache.flink.runtime.state.OperatorStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.VertexFinishedStateChecker",
    "source_method": "checkPredecessorsOfFullyFinishedVertex",
    "target_class": "org.apache.flink.runtime.checkpoint.VertexFinishedStateChecker.VerticesFinishedStatusCache):void \t org.apache.flink.runtime.checkpoint.VertexFinishedStateChecker.VerticesFinishedStatusCache"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.VertexFinishedStateChecker",
    "source_method": "checkPredecessorsOfPartiallyFinishedVertex",
    "target_class": "org.apache.flink.runtime.checkpoint.VertexFinishedStateChecker.VerticesFinishedStatusCache):void \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.VertexFinishedStateChecker.VerticesFinishedStatusCache",
    "source_method": "calculateFinishedState",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.OperatorID,org.apache.flink.runtime.checkpoint.OperatorState>):org.apache.flink.runtime.checkpoint.VertexFinishedStateChecker.VertexFinishedState \t org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.VertexFinishedStateChecker.VerticesFinishedStatusCache",
    "source_method": "checkOperatorFinishedStatus",
    "target_class": "org.apache.flink.runtime.OperatorIDPair):org.apache.flink.runtime.checkpoint.VertexFinishedStateChecker.VertexFinishedState \t org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.RecoveredChannelStateHandler.BufferWithContext",
    "source_method": "close",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateByteBuffer"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.InputChannelRecoveredStateHandler",
    "source_method": "calculateMapping",
    "target_class": "org.apache.flink.runtime.checkpoint.RescaleMappings"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ResultSubpartitionRecoveredStateHandler",
    "source_method": "getSubpartitionInfo",
    "target_class": "int):org.apache.flink.runtime.checkpoint.channel.ResultSubpartitionInfo \t org.apache.flink.runtime.io.network.partition.CheckpointedResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ResultSubpartitionRecoveredStateHandler",
    "source_method": "calculateMapping",
    "target_class": "org.apache.flink.runtime.checkpoint.RescaleMappings"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorImpl",
    "source_method": "registerFirstRequestFuture",
    "target_class": "java.util.Queue<org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest>):void \t org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorImpl",
    "source_method": "submitInternal",
    "target_class": "org.apache.flink.util.function.RunnableWithException):void \t org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest",
    "source_method": "completeInput",
    "target_class": "int, long):org.apache.flink.runtime.checkpoint.channel.CheckpointInProgressRequest \t org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest",
    "source_method": "completeOutput",
    "target_class": "int, long):org.apache.flink.runtime.checkpoint.channel.CheckpointInProgressRequest \t org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest",
    "source_method": "buildFutureWriteRequest",
    "target_class": "int, long, java.lang.String, java.util.concurrent.CompletableFuture<java.util.List<org.apache.flink.runtime.io.network.buffer.Buffer>>, java.util.function.BiConsumer<org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter,org.apache.flink.runtime.io.network.buffer.Buffer>):org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest",
    "source_method": "checkBufferIsBuffer",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.CheckpointInProgressRequest",
    "source_method": "execute",
    "target_class": "org.apache.flink.util.function.ThrowingConsumer"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutorFactory",
    "source_method": "getOrCreateExecutor",
    "target_class": "int, org.apache.flink.runtime.state.CheckpointStorage, int, boolean):org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutor \t org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestExecutor"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestDispatcherImpl",
    "source_method": "dispatchInternal",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestDispatcherImpl",
    "source_method": "handleAbortedRequest",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestDispatcherImpl",
    "source_method": "handleCheckpointStartRequest",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestDispatcherImpl",
    "source_method": "handleCheckpointInProgressRequest",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.CheckpointInProgressRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestDispatcherImpl",
    "source_method": "handleCheckpointAbortRequest",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestDispatcherImpl",
    "source_method": "buildWriter",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorageWorkerView"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequestDispatcherImpl",
    "source_method": "getStreamFactoryResolver",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorage"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter",
    "source_method": "finishWriteAndResult",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter",
    "source_method": "doComplete",
    "target_class": "org.apache.flink.util.function.RunnableWithException"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateCheckpointWriter",
    "source_method": "getChannelStatePendingResult",
    "target_class": "int):org.apache.flink.runtime.checkpoint.channel.ChannelStatePendingResult \t org.apache.flink.runtime.checkpoint.channel.SubtaskID"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriterImpl",
    "source_method": "enqueue",
    "target_class": "boolean):void \t org.apache.flink.runtime.checkpoint.channel.ChannelStateWriteRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateByteBuffer",
    "source_method": "wrap",
    "target_class": "org.apache.flink.runtime.io.network.buffer.Buffer"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateByteBuffer",
    "source_method": "wrap",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStatePendingResult",
    "source_method": "finishResult",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriter.ChannelStateWriteResult"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStatePendingResult",
    "source_method": "createHandle",
    "target_class": "org.apache.flink.runtime.state.StreamStateHandle, I, org.apache.flink.runtime.state.AbstractChannelStateHandle.StateContentMetaInfo):H \t org.apache.flink.runtime.state.AbstractChannelStateHandle.StateContentMetaInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStatePendingResult",
    "source_method": "isDone",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriter.ChannelStateWriteResult"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.SequentialChannelStateReaderImpl",
    "source_method": "readSequentially",
    "target_class": "java.util.List<Handle>, org.apache.flink.runtime.checkpoint.channel.RecoveredChannelStateHandler<Info,Context>):void \t org.apache.flink.runtime.state.StreamStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.SequentialChannelStateReaderImpl",
    "source_method": "streamSubtaskStates",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateSnapshot"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.SequentialChannelStateReaderImpl",
    "source_method": "validate",
    "target_class": "org.apache.flink.runtime.state.AbstractChannelStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.SequentialChannelStateReaderImpl",
    "source_method": "extractOffsets",
    "target_class": "org.apache.flink.runtime.state.AbstractChannelStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateChunkReader",
    "source_method": "readChunk",
    "target_class": "long, org.apache.flink.runtime.checkpoint.channel.RecoveredChannelStateHandler<Info,Context>, Info, int):void \t org.apache.flink.core.fs.FSDataInputStream"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.RescaleMappings",
    "source_method": "invert",
    "target_class": "org.apache.flink.runtime.util.IntArrayList"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.RescaleMappings",
    "source_method": "toSortedArray",
    "target_class": "org.apache.flink.runtime.util.IntArrayList"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.OperatorSubtaskState",
    "source_method": "registerSharedState",
    "target_class": "java.lang.Iterable<org.apache.flink.runtime.state.KeyedStateHandle>, long):void \t org.apache.flink.util.StringBasedID"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.OperatorSubtaskState",
    "source_method": "hasState",
    "target_class": "org.apache.flink.runtime.checkpoint.StateObjectCollection"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "addMasterHook",
    "target_class": "org.apache.flink.runtime.checkpoint.MasterTriggerRestoreHook"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "triggerSavepoint",
    "target_class": "org.apache.flink.core.execution.SavepointFormatType):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.checkpoint.CompletedCheckpoint> \t org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "triggerSynchronousSavepoint",
    "target_class": "java.lang.String, org.apache.flink.core.execution.SavepointFormatType):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.checkpoint.CompletedCheckpoint> \t org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "triggerCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "triggerCheckpoint",
    "target_class": "java.lang.String, boolean):java.util.concurrent.CompletableFuture<org.apache.flink.runtime.checkpoint.CompletedCheckpoint> \t org.apache.flink.runtime.checkpoint.CheckpointCoordinator.CheckpointTriggerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "triggerTasks",
    "target_class": "long, org.apache.flink.runtime.checkpoint.PendingCheckpoint):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "initializeCheckpointLocation",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties, java.lang.String, boolean):org.apache.flink.runtime.state.CheckpointStorageLocation \t org.apache.flink.runtime.state.CheckpointStorageCoordinatorView"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "snapshotMasterState",
    "target_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "onTriggerFailure",
    "target_class": "java.lang.Throwable):void \t org.apache.flink.runtime.checkpoint.CheckpointCoordinator.CheckpointTriggerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "onTriggerFailure",
    "target_class": "java.lang.Throwable):void \t org.apache.flink.runtime.checkpoint.PendingCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "chooseQueuedRequestToExecute",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointRequestDecider"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "completePendingCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "finalizeCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "extractIdIfDiscardedOnSubsumed",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "reportFailedCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointException):void \t org.apache.flink.runtime.checkpoint.PendingCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "sendAcknowledgeMessages",
    "target_class": "long, long, long):void \t org.apache.flink.runtime.executiongraph.Execution"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "failUnacknowledgedPendingCheckpointsFor",
    "target_class": "java.lang.Throwable):void \t org.apache.flink.runtime.checkpoint.PendingCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "dropSubsumedCheckpoints",
    "target_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "extractOperatorStates",
    "target_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "getNumberOfRetainedSuccessfulCheckpoints",
    "target_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpointStore"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "getSuccessfulCheckpoints",
    "target_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpointStore"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "getTriggerRequestQueue",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointRequestDecider"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "scheduleTriggerWithDelay",
    "target_class": "long):void \t org.apache.flink.util.concurrent.ScheduledExecutor"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "restoreStateToCoordinators",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.OperatorID,org.apache.flink.runtime.checkpoint.OperatorState>):void \t org.apache.flink.runtime.state.memory.ByteStreamStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "getNumQueuedRequests",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointRequestDecider"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "reportCheckpointMetrics",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionAttemptID, org.apache.flink.runtime.checkpoint.CheckpointMetrics):void \t org.apache.flink.runtime.checkpoint.CheckpointStatsTracker"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "reportInitializationMetrics",
    "target_class": "org.apache.flink.runtime.checkpoint.SubTaskInitializationMetrics):void \t org.apache.flink.runtime.checkpoint.CheckpointStatsTracker"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "abortPendingCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointException, org.apache.flink.runtime.executiongraph.ExecutionAttemptID):void \t org.apache.flink.runtime.checkpoint.PendingCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "abortPendingAndQueuedCheckpoints",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointRequestDecider"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "getCheckpointException",
    "target_class": "java.lang.Throwable):org.apache.flink.runtime.checkpoint.CheckpointException \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator.CheckpointTriggerRequest",
    "source_method": "isForce",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "trackPendingCheckpointStats",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointPlan, org.apache.flink.runtime.checkpoint.CheckpointProperties, long):org.apache.flink.runtime.checkpoint.PendingCheckpointStats \t org.apache.flink.runtime.checkpoint.CheckpointPlan"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "reportFinishedTasks",
    "target_class": "java.util.List<org.apache.flink.runtime.executiongraph.Execution>):void \t org.apache.flink.runtime.checkpoint.PendingCheckpointStats"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointCoordinator",
    "source_method": "getStatsCallback",
    "target_class": "org.apache.flink.runtime.checkpoint.PendingCheckpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointRequestDecider",
    "source_method": "chooseRequestToExecute",
    "target_class": "boolean, long):java.util.Optional<org.apache.flink.runtime.checkpoint.CheckpointCoordinator.CheckpointTriggerRequest> \t org.apache.flink.runtime.checkpoint.CheckpointCoordinator.CheckpointTriggerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointRequestDecider",
    "source_method": "chooseRequestToExecute",
    "target_class": "long):java.util.Optional<org.apache.flink.runtime.checkpoint.CheckpointCoordinator.CheckpointTriggerRequest> \t org.apache.flink.runtime.checkpoint.CheckpointCoordinator.CheckpointTriggerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointRequestDecider",
    "source_method": "checkpointTriggerRequestsComparator",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions",
    "source_method": "notExactlyOnce",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorageLocationReference):org.apache.flink.runtime.checkpoint.CheckpointOptions \t org.apache.flink.runtime.checkpoint.CheckpointOptions.AlignmentType"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions",
    "source_method": "alignedNoTimeout",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorageLocationReference):org.apache.flink.runtime.checkpoint.CheckpointOptions \t org.apache.flink.runtime.checkpoint.CheckpointOptions.AlignmentType"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions",
    "source_method": "unaligned",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorageLocationReference):org.apache.flink.runtime.checkpoint.CheckpointOptions \t org.apache.flink.runtime.checkpoint.SnapshotType"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions",
    "source_method": "alignedWithTimeout",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorageLocationReference, long):org.apache.flink.runtime.checkpoint.CheckpointOptions \t org.apache.flink.runtime.checkpoint.SnapshotType"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions",
    "source_method": "forceAligned",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorageLocationReference, long):org.apache.flink.runtime.checkpoint.CheckpointOptions \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions",
    "source_method": "forConfig",
    "target_class": "org.apache.flink.runtime.state.CheckpointStorageLocationReference, boolean, boolean, long):org.apache.flink.runtime.checkpoint.CheckpointOptions \t org.apache.flink.runtime.checkpoint.SnapshotType"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions",
    "source_method": "needsAlignment",
    "target_class": "org.apache.flink.runtime.checkpoint.SnapshotType"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.TaskStateSnapshot",
    "source_method": "deserializeTaskStateSnapshot",
    "target_class": "java.lang.ClassLoader):org.apache.flink.runtime.checkpoint.TaskStateSnapshot \t org.apache.flink.util.SerializedValue"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.SavepointType",
    "source_method": "savepoint",
    "target_class": "org.apache.flink.runtime.checkpoint.SavepointType.PostCheckpointAction"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.SavepointType",
    "source_method": "terminate",
    "target_class": "org.apache.flink.runtime.checkpoint.SavepointType.PostCheckpointAction"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.SavepointType",
    "source_method": "suspend",
    "target_class": "org.apache.flink.runtime.checkpoint.SavepointType.PostCheckpointAction"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpointStatsSummary",
    "source_method": "updateSummary",
    "target_class": "org.apache.flink.runtime.checkpoint.StatsSummary"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpointStatsSummary",
    "source_method": "createSnapshot",
    "target_class": "org.apache.flink.runtime.checkpoint.StatsSummary"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker",
    "source_method": "createSnapshot",
    "target_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpointStatsSummary"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker",
    "source_method": "reportPendingCheckpoint",
    "target_class": "long, org.apache.flink.runtime.checkpoint.CheckpointProperties, java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,java.lang.Integer>):org.apache.flink.runtime.checkpoint.PendingCheckpointStats \t org.apache.flink.runtime.checkpoint.CheckpointStatsHistory"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker",
    "source_method": "reportRestoredCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.RestoredCheckpointStats"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker",
    "source_method": "reportCompletedCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CompletedCheckpointStatsSummary"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker",
    "source_method": "getPendingCheckpointStats",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsHistory"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker",
    "source_method": "reportIncompleteStats",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionAttemptID, org.apache.flink.runtime.checkpoint.CheckpointMetrics):void \t org.apache.flink.runtime.checkpoint.CheckpointMetrics"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker",
    "source_method": "traceInitializationMetrics",
    "target_class": "org.apache.flink.traces.SpanBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker",
    "source_method": "setDurationSpanAttribute",
    "target_class": "org.apache.flink.runtime.checkpoint.JobInitializationMetrics.SumMaxDuration):void \t org.apache.flink.traces.SpanBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker",
    "source_method": "registerMetrics",
    "target_class": "org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils",
    "source_method": "getMaximumNumberOfRetainedCheckpoints",
    "target_class": "org.apache.flink.runtime.checkpoint.Logger):int \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils",
    "source_method": "retrieveCompletedCheckpoints",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointStoreUtil):java.util.Collection<org.apache.flink.runtime.checkpoint.CompletedCheckpoint> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStoreUtils",
    "source_method": "retrieveCompletedCheckpoint",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.runtime.state.RetrievableStateHandle<org.apache.flink.runtime.checkpoint.CompletedCheckpoint>,java.lang.String>):org.apache.flink.runtime.checkpoint.CompletedCheckpoint \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCheckpointPlanCalculator",
    "source_method": "hasRunningPrecedentTasks",
    "target_class": "java.util.List<org.apache.flink.runtime.jobgraph.JobEdge>, java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,java.util.BitSet>):boolean \t org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointFailureManager",
    "source_method": "updateStatsAfterCheckpointFailed",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointStatsTracker, org.apache.flink.runtime.checkpoint.CheckpointException):void \t org.apache.flink.runtime.checkpoint.PendingCheckpointStats"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointFailureManager",
    "source_method": "handleTaskLevelCheckpointException",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointException, org.apache.flink.runtime.executiongraph.ExecutionAttemptID):void \t org.apache.flink.runtime.checkpoint.CheckpointProperties"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.CheckpointFailureManager",
    "source_method": "isPreFlightFailure",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PrioritizedOperatorSubtaskState",
    "source_method": "empty",
    "target_class": "org.apache.flink.runtime.checkpoint.PrioritizedOperatorSubtaskState.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.PrioritizedOperatorSubtaskState.Builder",
    "source_method": "tryComputeMixedLocalAndRemoteAlternative",
    "target_class": "java.util.List<org.apache.flink.runtime.checkpoint.StateObjectCollection<STATE_OBJ_TYPE>>, java.util.function.Function<STATE_OBJ_TYPE,ID_TYPE>):java.util.Optional<org.apache.flink.runtime.checkpoint.StateObjectCollection<STATE_OBJ_TYPE>> \t org.apache.flink.runtime.checkpoint.StateObjectCollection"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStore",
    "source_method": "tryRemoveCompletedCheckpoint",
    "target_class": "boolean, org.apache.flink.runtime.checkpoint.CheckpointsCleaner, java.lang.Runnable):boolean \t org.apache.flink.runtime.checkpoint.CheckpointsCleaner"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.DefaultCompletedCheckpointStore",
    "source_method": "tryRemove",
    "target_class": "org.apache.flink.runtime.persistence.StateHandleStore"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.ChannelStateHandleSerializer",
    "source_method": "serialize",
    "target_class": "java.io.DataOutputStream):void \t org.apache.flink.runtime.checkpoint.channel.ResultSubpartitionInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.ChannelStateHandleSerializer",
    "source_method": "serializeChannelStateHandle",
    "target_class": "java.io.DataOutputStream, org.apache.flink.util.function.BiConsumerWithException<I,java.io.DataOutputStream,java.io.IOException>):void \t org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.ChannelStateHandleSerializer",
    "source_method": "deserializeChannelStateHandle",
    "target_class": "org.apache.flink.util.function.QuadFunction<java.lang.Integer,Info,org.apache.flink.runtime.state.StreamStateHandle,org.apache.flink.runtime.state.AbstractChannelStateHandle.StateContentMetaInfo,Handle>, java.io.DataInputStream, org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase.DeserializationContext):Handle \t org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV3Serializer",
    "source_method": "serializeCollection",
    "target_class": "java.io.DataOutputStream, org.apache.flink.util.function.BiConsumerWithException<T,java.io.DataOutputStream,java.io.IOException>):void \t org.apache.flink.runtime.checkpoint.StateObjectCollection"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "serializeMetadata",
    "target_class": "java.io.DataOutputStream):void \t org.apache.flink.runtime.checkpoint.metadata.CheckpointMetadata"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "serializeMasterState",
    "target_class": "java.io.DataOutputStream):void \t org.apache.flink.runtime.checkpoint.MasterState"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "serializeKeyedStateHandle",
    "target_class": "java.io.DataOutputStream):void \t org.apache.flink.runtime.state.changelog.ChangelogStateHandleStreamImpl"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "writeStateHandleId",
    "target_class": "java.io.DataOutputStream):void \t org.apache.flink.util.StringBasedID"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "deserializeKeyedStateHandle",
    "target_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase.DeserializationContext):org.apache.flink.runtime.state.KeyedStateHandle \t org.apache.flink.runtime.state.changelog.StateChange"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "deserializeIncrementalStateHandle",
    "target_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase.DeserializationContext, int):org.apache.flink.runtime.state.IncrementalRemoteKeyedStateHandle \t org.apache.flink.runtime.state.StateHandleID"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "serializeOperatorStateHandle",
    "target_class": "java.io.DataOutputStream):void \t org.apache.flink.runtime.state.OperatorStateHandle.StateMetaInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "serializeStreamStateHandle",
    "target_class": "java.io.DataOutputStream):void \t org.apache.flink.runtime.state.memory.ByteStreamStateHandle"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "deserializeStreamStateHandle",
    "target_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase.DeserializationContext):org.apache.flink.runtime.state.StreamStateHandle \t org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase.DeserializationContext"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase",
    "source_method": "serializeHandleAndLocalPathList",
    "target_class": "java.io.DataOutputStream):void \t org.apache.flink.runtime.state.IncrementalKeyedStateHandle.HandleAndLocalPath"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.metadata.MetadataV2V3SerializerBase.DeserializationContext",
    "source_method": "createExclusiveDirPath",
    "target_class": "org.apache.flink.runtime.state.filesystem.AbstractFsCheckpointStorageAccess"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.AbstractCheckpointStats",
    "source_method": "getLatestAckTimestamp",
    "target_class": "org.apache.flink.runtime.checkpoint.SubtaskStateStats"
  },
  {
    "source_class": "org.apache.flink.runtime.checkpoint.AbstractCheckpointStats",
    "source_method": "getEndToEndDuration",
    "target_class": "org.apache.flink.runtime.checkpoint.SubtaskStateStats"
  },
  {
    "source_class": "org.apache.flink.runtime.filecache.FileCache",
    "source_method": "createTmpFile",
    "target_class": "org.apache.flink.api.common.cache.DistributedCache.DistributedCacheEntry, org.apache.flink.api.common.JobID, org.apache.flink.runtime.executiongraph.ExecutionAttemptID):java.util.concurrent.Future<org.apache.flink.core.fs.Path> \t org.apache.flink.api.common.cache.DistributedCache.DistributedCacheEntry"
  },
  {
    "source_class": "org.apache.flink.runtime.filecache.FileCache",
    "source_method": "createShutdownHook",
    "target_class": "org.apache.flink.runtime.filecache.Logger):java.lang.Thread \t org.apache.flink.util.ShutdownHookUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.InputGateDeploymentDescriptor",
    "source_method": "getConsumedSubpartitionIndex",
    "target_class": "org.apache.flink.runtime.executiongraph.IndexRange"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.InputGateDeploymentDescriptor",
    "source_method": "putOrReplaceShuffleDescriptors",
    "target_class": "org.apache.flink.runtime.shuffle.ShuffleDescriptor"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory",
    "source_method": "createInputGateDeploymentDescriptors",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory",
    "source_method": "getConsumedPartitionShuffleDescriptors",
    "target_class": "org.apache.flink.runtime.scheduler.strategy.ConsumedPartitionGroup, org.apache.flink.runtime.executiongraph.InternalExecutionGraphAccessor):java.util.List<org.apache.flink.runtime.deployment.TaskDeploymentDescriptor.MaybeOffloaded<org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory.ShuffleDescriptorGroup>> \t org.apache.flink.runtime.deployment.CachedShuffleDescriptors"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory",
    "source_method": "computeConsumedPartitionShuffleDescriptors",
    "target_class": "org.apache.flink.runtime.executiongraph.InternalExecutionGraphAccessor):org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory.ShuffleDescriptorAndIndex[] \t org.apache.flink.runtime.executiongraph.InternalExecutionGraphAccessor"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory",
    "source_method": "getClusterPartitionShuffleDescriptors",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory",
    "source_method": "getSerializedJobInformation",
    "target_class": "org.apache.flink.types.Either"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory",
    "source_method": "getSerializedTaskInformation",
    "target_class": "org.apache.flink.types.Either"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory",
    "source_method": "getConsumedPartitionShuffleDescriptor",
    "target_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory.PartitionLocationConstraint, boolean):org.apache.flink.runtime.shuffle.ShuffleDescriptor \t org.apache.flink.runtime.executiongraph.IntermediateResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory",
    "source_method": "isProducerAvailable",
    "target_class": "org.apache.flink.runtime.execution.ExecutionState"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory",
    "source_method": "isProducerFailedOrCanceled",
    "target_class": "org.apache.flink.runtime.execution.ExecutionState"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.CachedShuffleDescriptors",
    "source_method": "serializeShuffleDescriptors",
    "target_class": "org.apache.flink.runtime.deployment.TaskDeploymentDescriptorFactory.ShuffleDescriptorSerializer"
  },
  {
    "source_class": "org.apache.flink.runtime.deployment.CachedShuffleDescriptors",
    "source_method": "markPartitionFinished",
    "target_class": "org.apache.flink.runtime.executiongraph.IntermediateResultPartition"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.topology.DefaultLogicalTopology",
    "source_method": "fromJobGraph",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.topology.DefaultLogicalTopology",
    "source_method": "buildVerticesAndResults",
    "target_class": "org.apache.flink.runtime.jobgraph.topology.DefaultLogicalVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraphUtils",
    "source_method": "prepareUserArtifactEntries",
    "target_class": "org.apache.flink.api.common.JobID):java.util.Map<java.lang.String,org.apache.flink.api.common.cache.DistributedCache.DistributedCacheEntry> \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobVertexID",
    "source_method": "fromHexString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.IntermediateDataSet",
    "source_method": "addConsumer",
    "target_class": "org.apache.flink.runtime.jobgraph.JobEdge"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable",
    "source_method": "getUserCodeClassLoader",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable",
    "source_method": "getCurrentNumberOfSubtasks",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable",
    "source_method": "getIndexInSubtaskGroup",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable",
    "source_method": "getTaskConfiguration",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable",
    "source_method": "getJobConfiguration",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.tasks.AbstractInvokable",
    "source_method": "getExecutionConfig",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.forwardgroup.ForwardGroupComputeUtil",
    "source_method": "computeForwardGroupsAndCheckParallelism",
    "target_class": "org.apache.flink.runtime.jobgraph.forwardgroup.ForwardGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.forwardgroup.ForwardGroupComputeUtil",
    "source_method": "computeForwardGroups",
    "target_class": "java.util.function.Function<org.apache.flink.runtime.jobgraph.JobVertex,java.util.Set<org.apache.flink.runtime.jobgraph.JobVertex>>):java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,org.apache.flink.runtime.jobgraph.forwardgroup.ForwardGroup> \t org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.forwardgroup.ForwardGroupComputeUtil",
    "source_method": "getForwardProducers",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.jsonplan.JsonPlanGenerator",
    "source_method": "generatePlan",
    "target_class": "org.apache.flink.runtime.scheduler.adaptive.allocator.VertexParallelism"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.jsonplan.JsonPlanGenerator",
    "source_method": "generatePlan",
    "target_class": "java.lang.String, org.apache.flink.runtime.jobgraph.JobType, java.lang.Iterable<org.apache.flink.runtime.jobgraph.JobVertex>, org.apache.flink.runtime.scheduler.adaptive.allocator.VertexParallelism):java.lang.String \t org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraph",
    "source_method": "addVertex",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraph",
    "source_method": "isCheckpointingEnabled",
    "target_class": "org.apache.flink.runtime.jobgraph.tasks.JobCheckpointingSettings"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraph",
    "source_method": "getVerticesSortedTopologicallyFromSources",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraph",
    "source_method": "setUserArtifactBlobKey",
    "target_class": "org.apache.flink.runtime.blob.PermanentBlobKey):void \t org.apache.flink.api.common.cache.DistributedCache.DistributedCacheEntry"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraph",
    "source_method": "setUserArtifactRemotePath",
    "target_class": "java.lang.String):void \t org.apache.flink.api.common.cache.DistributedCache.DistributedCacheEntry"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraph",
    "source_method": "setInitialClientHeartbeatTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraph",
    "source_method": "getInitialClientHeartbeatTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraphBuilder",
    "source_method": "build",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraphBuilder",
    "source_method": "newStreamingJobGraphBuilder",
    "target_class": "org.apache.flink.runtime.jobgraph.JobType"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobGraphBuilder",
    "source_method": "newBatchJobGraphBuilder",
    "target_class": "org.apache.flink.runtime.jobgraph.JobType"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.SavepointRestoreSettings",
    "source_method": "forPath",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.SavepointRestoreSettings",
    "source_method": "forPath",
    "target_class": "boolean):org.apache.flink.runtime.jobgraph.SavepointRestoreSettings \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.SavepointRestoreSettings",
    "source_method": "forPath",
    "target_class": "boolean, org.apache.flink.runtime.jobgraph.RestoreMode):org.apache.flink.runtime.jobgraph.SavepointRestoreSettings \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.SavepointRestoreSettings",
    "source_method": "toConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.SavepointRestoreSettings",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobResourceRequirements",
    "source_method": "writeToJobGraph",
    "target_class": "org.apache.flink.runtime.jobgraph.JobResourceRequirements):void \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobResourceRequirements",
    "source_method": "readFromJobGraph",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobResourceRequirements",
    "source_method": "validate",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,java.lang.Integer>):java.util.List<java.lang.String> \t org.apache.flink.runtime.jobgraph.JobVertexResourceRequirements.Parallelism"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatContainer",
    "source_method": "getUniqueInputFormat",
    "target_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatContainer.FormatUserCodeTable"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatContainer",
    "source_method": "getUniqueOutputFormat",
    "target_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatContainer.FormatUserCodeTable"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatContainer",
    "source_method": "addInputFormat",
    "target_class": "org.apache.flink.api.common.io.InputFormat<?,?>):org.apache.flink.runtime.jobgraph.InputOutputFormatContainer \t org.apache.flink.runtime.jobgraph.InputOutputFormatContainer.FormatUserCodeTable"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatContainer",
    "source_method": "addInputFormat",
    "target_class": "org.apache.flink.api.common.operators.util.UserCodeWrapper<? extends org.apache.flink.api.common.io.InputFormat<?,?>>):org.apache.flink.runtime.jobgraph.InputOutputFormatContainer \t org.apache.flink.runtime.jobgraph.InputOutputFormatContainer.FormatUserCodeTable"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatContainer",
    "source_method": "addOutputFormat",
    "target_class": "org.apache.flink.api.common.io.OutputFormat<?>):org.apache.flink.runtime.jobgraph.InputOutputFormatContainer \t org.apache.flink.runtime.jobgraph.InputOutputFormatContainer.FormatUserCodeTable"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatContainer",
    "source_method": "addOutputFormat",
    "target_class": "org.apache.flink.api.common.operators.util.UserCodeWrapper<? extends org.apache.flink.api.common.io.OutputFormat<?>>):org.apache.flink.runtime.jobgraph.InputOutputFormatContainer \t org.apache.flink.runtime.jobgraph.InputOutputFormatContainer.FormatUserCodeTable"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.InputOutputFormatContainer",
    "source_method": "write",
    "target_class": "org.apache.flink.runtime.operators.util.TaskConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobVertex",
    "source_method": "setSlotSharingGroup",
    "target_class": "org.apache.flink.runtime.jobmanager.scheduler.SlotSharingGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobVertex",
    "source_method": "setStrictlyCoLocatedWith",
    "target_class": "org.apache.flink.runtime.jobmanager.scheduler.CoLocationGroupImpl"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobVertex",
    "source_method": "connectNewDataSetAsInput",
    "target_class": "org.apache.flink.runtime.jobgraph.DistributionPattern, org.apache.flink.runtime.io.network.partition.ResultPartitionType, org.apache.flink.runtime.jobgraph.IntermediateDataSetID, boolean):org.apache.flink.runtime.jobgraph.JobEdge \t org.apache.flink.runtime.jobgraph.IntermediateDataSet"
  },
  {
    "source_class": "org.apache.flink.runtime.jobgraph.JobEdge",
    "source_method": "getSourceId",
    "target_class": "org.apache.flink.runtime.jobgraph.IntermediateDataSet"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.history.HistoryServerUtils",
    "source_method": "isSSLEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.history.HistoryServerUtils",
    "source_method": "getPort",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.history.HistoryServerUtils",
    "source_method": "getHostname",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.WebMonitorExtension",
    "source_method": "empty",
    "target_class": "org.apache.flink.runtime.webmonitor.WebMonitorExtension.EmptyWebMonitorExtension"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.threadinfo.VertexFlameGraphFactory",
    "source_method": "createFlameGraphFromSample",
    "target_class": "java.util.Set<java.lang.Thread.State>):org.apache.flink.runtime.webmonitor.threadinfo.VertexFlameGraph \t org.apache.flink.runtime.webmonitor.threadinfo.VertexFlameGraphFactory.NodeBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.threadinfo.VertexThreadInfoTracker",
    "source_method": "triggerThreadInfoSampleInternal",
    "target_class": "org.apache.flink.runtime.executiongraph.AccessExecutionJobVertex):void \t org.apache.flink.runtime.executiongraph.AccessExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.threadinfo.VertexThreadInfoTracker",
    "source_method": "triggerThreadInfoSampleInternal",
    "target_class": "org.apache.flink.runtime.executiongraph.AccessExecutionJobVertex):void \t org.apache.flink.runtime.executiongraph.AccessExecutionJobVertex"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.threadinfo.VertexThreadInfoTracker.JobVertexThreadInfoSampleCompletionCallback",
    "source_method": "generateExecutionVertexStats",
    "target_class": "org.apache.flink.runtime.executiongraph.ExecutionAttemptID, java.util.Collection<org.apache.flink.runtime.messages.ThreadInfoSample>):org.apache.flink.runtime.webmonitor.threadinfo.VertexThreadInfoStats \t org.apache.flink.runtime.webmonitor.threadinfo.VertexThreadInfoStats"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.WebMonitorEndpoint",
    "source_method": "initializeThreadInfoTracker",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.WebMonitorEndpoint",
    "source_method": "startExecutionGraphCacheCleanupTask",
    "target_class": "org.apache.flink.runtime.rest.handler.RestHandlerConfiguration"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.WebMonitorEndpoint",
    "source_method": "createExecutorService",
    "target_class": "int, java.lang.String):java.util.concurrent.ScheduledExecutorService \t org.apache.flink.util.concurrent.ExecutorThreadFactory.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.WebMonitorUtils.LogFileLocation",
    "source_method": "find",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.scope.ScopeFormat",
    "source_method": "concat",
    "target_class": "java.lang.Character, java.lang.String[]):java.lang.String \t org.apache.flink.metrics.CharacterFilter"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.scope.ScopeFormat",
    "source_method": "arrayToMap",
    "target_class": "org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.scope.ScopeFormats",
    "source_method": "fromConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.filter.DefaultMetricFilter",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.filter.DefaultMetricFilter",
    "source_method": "parseMetricTypes",
    "target_class": "org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.dump.MetricQueryService",
    "source_method": "createMetricQueryService",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceID, long):org.apache.flink.runtime.metrics.dump.MetricQueryService \t org.apache.flink.runtime.clusterframework.types.ResourceID"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.dump.MetricDumpSerialization",
    "source_method": "serializeMetricInfo",
    "target_class": "org.apache.flink.runtime.metrics.dump.QueryScopeInfo):void \t org.apache.flink.runtime.metrics.dump.QueryScopeInfo"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.dump.MetricDumpSerialization",
    "source_method": "serializeHistogram",
    "target_class": "org.apache.flink.runtime.metrics.dump.QueryScopeInfo, java.lang.String, org.apache.flink.metrics.Histogram):void \t org.apache.flink.metrics.HistogramStatistics"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.MetricRegistryImpl",
    "source_method": "getConfiguredIntervalOrDefault",
    "target_class": "org.apache.flink.util.TimeUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "getDelimiter",
    "target_class": "org.apache.flink.metrics.MetricConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "getIntervalSettings",
    "target_class": "org.apache.flink.metrics.MetricConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "getExcludedVariables",
    "target_class": "org.apache.flink.metrics.MetricConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "forReporter",
    "target_class": "org.apache.flink.metrics.reporter.MetricReporter):org.apache.flink.runtime.metrics.ReporterSetup \t org.apache.flink.runtime.metrics.filter.MetricFilter"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "forReporter",
    "target_class": "org.apache.flink.metrics.MetricConfig, org.apache.flink.metrics.reporter.MetricReporter):org.apache.flink.runtime.metrics.ReporterSetup \t org.apache.flink.runtime.metrics.filter.MetricFilter"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "findEnabledTraceReportersInConfiguration",
    "target_class": "java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String):java.util.Set<java.lang.String> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "loadReporterConfigurations",
    "target_class": "java.util.Set<java.lang.String>, java.lang.String):java.util.List<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,org.apache.flink.configuration.Configuration>> \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "loadAvailableReporterFactories",
    "target_class": "org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "setupReporters",
    "target_class": "java.util.List<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,org.apache.flink.configuration.Configuration>>):java.util.List<org.apache.flink.runtime.metrics.ReporterSetup> \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "loadReporter",
    "target_class": "org.apache.flink.configuration.Configuration, java.util.Map<java.lang.String,org.apache.flink.metrics.reporter.MetricReporterFactory>):java.util.Optional<org.apache.flink.metrics.reporter.MetricReporter> \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.ReporterSetup",
    "source_method": "loadViaFactory",
    "target_class": "org.apache.flink.metrics.reporter.MetricReporterFactory):java.util.Optional<org.apache.flink.metrics.reporter.MetricReporter> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup",
    "source_method": "markTaskStart",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup",
    "source_method": "markTaskInitializationStarted",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup",
    "source_method": "getTaskInitializationDuration",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup",
    "source_method": "getAccumulatedBusyTime",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup",
    "source_method": "reuseRecordsInputCounter",
    "target_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup.SumCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup",
    "source_method": "reuseRecordsOutputCounter",
    "target_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup.SumCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup",
    "source_method": "registerMailboxSizeSupplier",
    "target_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup.SizeGauge"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.TaskManagerMetricGroup",
    "source_method": "createTaskManagerMetricGroup",
    "target_class": "java.lang.String, org.apache.flink.runtime.clusterframework.types.ResourceID):org.apache.flink.runtime.metrics.groups.TaskManagerMetricGroup \t org.apache.flink.runtime.clusterframework.types.ResourceID"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalSinkWriterMetricGroup",
    "source_method": "wrap",
    "target_class": "org.apache.flink.metrics.groups.OperatorMetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.AbstractImitatingJobManagerMetricGroup",
    "source_method": "getScope",
    "target_class": "java.lang.String):java.lang.String[] \t org.apache.flink.runtime.metrics.scope.ScopeFormats"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.AbstractMetricGroup",
    "source_method": "getMetricIdentifier",
    "target_class": "org.apache.flink.metrics.CharacterFilter, int, char):java.lang.String \t org.apache.flink.metrics.CharacterFilter"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.AbstractMetricGroup",
    "source_method": "close",
    "target_class": "org.apache.flink.runtime.metrics.MetricRegistry"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.GenericMetricGroup",
    "source_method": "makeScopeComponents",
    "target_class": "java.lang.String):java.lang.String[] \t org.apache.flink.runtime.metrics.groups.AbstractMetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalOperatorIOMetricGroup",
    "source_method": "reuseInputMetricsForTask",
    "target_class": "org.apache.flink.runtime.metrics.groups.InternalOperatorMetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalOperatorIOMetricGroup",
    "source_method": "reuseOutputMetricsForTask",
    "target_class": "org.apache.flink.runtime.metrics.groups.InternalOperatorMetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalOperatorMetricGroup",
    "source_method": "getTaskIOMetricGroup",
    "target_class": "org.apache.flink.runtime.metrics.groups.TaskMetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup",
    "source_method": "wrap",
    "target_class": "org.apache.flink.util.clock.SystemClock"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup",
    "source_method": "mock",
    "target_class": "org.apache.flink.util.clock.SystemClock"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup",
    "source_method": "idlingStarted",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup",
    "source_method": "watermarkEmitted",
    "target_class": "org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup",
    "source_method": "updateMaxDesiredWatermark",
    "target_class": "org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup",
    "source_method": "getIdleTime",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup",
    "source_method": "getLastEmitTime",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.groups.InternalSinkCommitterMetricGroup",
    "source_method": "wrap",
    "target_class": "org.apache.flink.metrics.groups.OperatorMetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.util.SystemResourcesMetricsInitializer",
    "source_method": "instantiateCPUMetrics",
    "target_class": "org.apache.flink.runtime.metrics.util.SystemResourcesCounter):void \t org.apache.flink.runtime.metrics.util.SystemResourcesCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.util.SystemResourcesMetricsInitializer",
    "source_method": "instantiateNetworkMetrics",
    "target_class": "org.apache.flink.runtime.metrics.util.SystemResourcesCounter):void \t org.apache.flink.runtime.metrics.util.SystemResourcesCounter"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.util.MetricUtils",
    "source_method": "instantiateProcessMetricGroup",
    "target_class": "java.lang.String, java.util.Optional<org.apache.flink.api.common.time.Time>):org.apache.flink.runtime.metrics.groups.ProcessMetricGroup \t org.apache.flink.runtime.metrics.util.SystemResourcesMetricsInitializer"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.util.MetricUtils",
    "source_method": "instantiateTaskManagerMetricGroup",
    "target_class": "java.lang.String, org.apache.flink.runtime.clusterframework.types.ResourceID, java.util.Optional<org.apache.flink.api.common.time.Time>):org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.runtime.metrics.groups.TaskManagerMetricGroup,org.apache.flink.metrics.MetricGroup> \t org.apache.flink.runtime.metrics.groups.TaskManagerMetricGroup"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.util.MetricUtils",
    "source_method": "instantiateFlinkMemoryMetricGroup",
    "target_class": "org.apache.flink.runtime.taskexecutor.slot.TaskSlotTable<?>, java.util.function.Supplier<java.lang.Long>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.util.MetricUtils",
    "source_method": "getUsedManagedMemory",
    "target_class": "org.apache.flink.runtime.memory.MemoryManager"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.util.MetricUtils",
    "source_method": "startRemoteMetricsRpcService",
    "target_class": "java.lang.String, java.lang.String, org.apache.flink.runtime.rpc.RpcSystem):org.apache.flink.runtime.rpc.RpcService \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.util.MetricUtils",
    "source_method": "startLocalMetricsRpcService",
    "target_class": "org.apache.flink.runtime.rpc.RpcSystem):org.apache.flink.runtime.rpc.RpcService \t org.apache.flink.runtime.rpc.RpcSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.util.MetricUtils",
    "source_method": "startMetricRpcService",
    "target_class": "org.apache.flink.runtime.rpc.RpcSystem.RpcServiceBuilder):org.apache.flink.runtime.rpc.RpcService \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.MetricRegistryConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "long):org.apache.flink.runtime.metrics.MetricRegistryConfiguration \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.TraceReporterSetup",
    "source_method": "setupReporters",
    "target_class": "java.util.List<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,org.apache.flink.configuration.Configuration>>):java.util.List<org.apache.flink.runtime.metrics.TraceReporterSetup> \t org.apache.flink.runtime.metrics.scope.ScopeFormat"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.TraceReporterSetup",
    "source_method": "loadReporter",
    "target_class": "org.apache.flink.configuration.Configuration, java.util.Map<java.lang.String,org.apache.flink.traces.reporter.TraceReporterFactory>):java.util.Optional<org.apache.flink.traces.reporter.TraceReporter> \t org.apache.flink.configuration.TraceOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.metrics.TraceReporterSetup",
    "source_method": "loadViaFactory",
    "target_class": "org.apache.flink.traces.reporter.TraceReporterFactory):java.util.Optional<org.apache.flink.traces.reporter.TraceReporter> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.broadcast.BroadcastVariableMaterialization",
    "source_method": "decrementReferenceInternal",
    "target_class": "boolean):boolean \t org.apache.flink.runtime.broadcast.BroadcastVariableKey"
  },
  {
    "source_class": "org.apache.flink.runtime.broadcast.BroadcastVariableManager",
    "source_method": "materializeBroadcastVariable",
    "target_class": "int, org.apache.flink.runtime.operators.BatchTask<?,?>, org.apache.flink.runtime.io.network.api.reader.MutableReader<?>, org.apache.flink.api.common.typeutils.TypeSerializerFactory<T>):org.apache.flink.runtime.broadcast.BroadcastVariableMaterialization<T,?> \t org.apache.flink.runtime.broadcast.BroadcastVariableMaterialization"
  },
  {
    "source_class": "org.apache.flink.runtime.broadcast.BroadcastVariableManager",
    "source_method": "releaseReference",
    "target_class": "org.apache.flink.runtime.operators.BatchTask<?,?>):void \t org.apache.flink.runtime.broadcast.BroadcastVariableMaterialization"
  },
  {
    "source_class": "org.apache.flink.runtime.broadcast.BroadcastVariableManager",
    "source_method": "releaseAllReferencesFromTask",
    "target_class": "org.apache.flink.runtime.broadcast.BroadcastVariableMaterialization"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils",
    "source_method": "parseParametersOrExit",
    "target_class": "org.apache.flink.runtime.entrypoint.parser.ParserResultFactory<T>, java.lang.Class<?>):T \t org.apache.flink.runtime.entrypoint.parser.CommandLineParser"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils",
    "source_method": "getPoolSize",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils",
    "source_method": "configureUncaughtExceptionHandler",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils",
    "source_method": "createTaskManagerWorkingDirectory",
    "target_class": "org.apache.flink.runtime.entrypoint.DeterminismEnvelope<org.apache.flink.runtime.clusterframework.types.ResourceID>):org.apache.flink.runtime.entrypoint.DeterminismEnvelope<org.apache.flink.runtime.entrypoint.WorkingDirectory> \t org.apache.flink.runtime.entrypoint.DeterminismEnvelope"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils",
    "source_method": "generateWorkingDirectoryFile",
    "target_class": "java.util.Optional<org.apache.flink.configuration.ConfigOption<java.lang.String>>, java.lang.String):java.io.File \t org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils",
    "source_method": "createJobManagerWorkingDirectory",
    "target_class": "org.apache.flink.runtime.entrypoint.DeterminismEnvelope<org.apache.flink.runtime.clusterframework.types.ResourceID>):org.apache.flink.runtime.entrypoint.DeterminismEnvelope<org.apache.flink.runtime.entrypoint.WorkingDirectory> \t org.apache.flink.runtime.entrypoint.DeterminismEnvelope"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "getRestPort",
    "target_class": "org.apache.flink.runtime.entrypoint.component.DispatcherResourceManagerComponent"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "getRpcPort",
    "target_class": "org.apache.flink.runtime.rpc.RpcService"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "runCluster",
    "target_class": "org.apache.flink.core.plugin.PluginManager):void \t org.apache.flink.runtime.rpc.RpcService"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "getRPCPortRange",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "createHeartbeatServices",
    "target_class": "org.apache.flink.runtime.heartbeat.HeartbeatServices"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "createMetricRegistry",
    "target_class": "org.apache.flink.core.plugin.PluginManager, org.apache.flink.runtime.rpc.RpcSystemUtils):org.apache.flink.runtime.metrics.MetricRegistryImpl \t org.apache.flink.runtime.rpc.RpcSystemUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "stopClusterServices",
    "target_class": "org.apache.flink.runtime.blob.BlobServer"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "generateClusterConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "closeClusterComponent",
    "target_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint.ShutdownBehaviour, java.lang.String):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.runtime.entrypoint.component.DispatcherResourceManagerComponent"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "cleanupDirectories",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "parseArguments",
    "target_class": "org.apache.flink.runtime.entrypoint.parser.CommandLineParser"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "loadConfiguration",
    "target_class": "org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntrypoint",
    "source_method": "runClusterEntrypoint",
    "target_class": "org.apache.flink.runtime.clusterframework.ApplicationStatus"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.component.FileJobGraphRetriever",
    "source_method": "createFrom",
    "target_class": "java.io.File):org.apache.flink.runtime.entrypoint.component.FileJobGraphRetriever \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.component.DefaultDispatcherResourceManagerComponentFactory",
    "source_method": "createSessionComponentFactory",
    "target_class": "org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunnerFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.component.DefaultDispatcherResourceManagerComponentFactory",
    "source_method": "createJobComponentFactory",
    "target_class": "org.apache.flink.runtime.entrypoint.component.JobGraphRetriever):org.apache.flink.runtime.entrypoint.component.DefaultDispatcherResourceManagerComponentFactory \t org.apache.flink.runtime.dispatcher.runner.DefaultDispatcherRunnerFactory"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.component.DispatcherResourceManagerComponent",
    "source_method": "handleUnexpectedResourceManagerTermination",
    "target_class": "org.apache.flink.runtime.resourcemanager.ResourceManagerService"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.component.DispatcherResourceManagerComponent",
    "source_method": "registerShutDownFuture",
    "target_class": "org.apache.flink.runtime.dispatcher.runner.DispatcherRunner"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.component.DispatcherResourceManagerComponent",
    "source_method": "stopApplication",
    "target_class": "java.lang.String):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.runtime.resourcemanager.ResourceManagerService"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.component.DispatcherResourceManagerComponent",
    "source_method": "internalShutdown",
    "target_class": "org.apache.flink.runtime.dispatcher.DispatcherOperationCaches"
  },
  {
    "source_class": "org.apache.flink.runtime.entrypoint.ClusterEntryPointExceptionUtils",
    "source_method": "tryEnrichClusterEntryPointError",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.throughput.BufferDebloatConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.runtime.throughput.ThroughputCalculator",
    "source_method": "incomingDataSize",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.throughput.ThroughputCalculator",
    "source_method": "pauseMeasurement",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.throughput.ThroughputCalculator",
    "source_method": "resumeMeasurement",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.BootstrapTools",
    "source_method": "writeConfiguration",
    "target_class": "java.io.File):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.BootstrapTools",
    "source_method": "substituteDeprecatedConfigKey",
    "target_class": "java.lang.String, java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.BootstrapTools",
    "source_method": "substituteDeprecatedConfigPrefix",
    "target_class": "java.lang.String, java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.BootstrapTools",
    "source_method": "parseDynamicProperties",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.BootstrapTools",
    "source_method": "getTaskManagerShellCommand",
    "target_class": "org.apache.flink.runtime.clusterframework.ContaineredTaskManagerParameters, java.lang.String, java.lang.String, boolean, boolean, boolean, java.lang.Class<?>, java.lang.String):java.lang.String \t org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.BootstrapTools",
    "source_method": "updateTmpDirectoriesInConfiguration",
    "target_class": "java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.BootstrapTools",
    "source_method": "cloneConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.BootstrapTools",
    "source_method": "getDynamicPropertiesAsString",
    "target_class": "org.apache.flink.configuration.Configuration):java.lang.String \t org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessSpecBuilder",
    "source_method": "withCpuCores",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessSpecBuilder",
    "source_method": "withTotalProcessMemory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.ResourceBudgetManager",
    "source_method": "checkResourceProfileNotNullOrUnknown",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile",
    "source_method": "getOperatorsMemory",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile",
    "source_method": "merge",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile",
    "source_method": "multiply",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile",
    "source_method": "addMemorySizeString",
    "target_class": "java.lang.String, org.apache.flink.configuration.MemorySize):java.lang.String \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile",
    "source_method": "fromResourceSpec",
    "target_class": "org.apache.flink.configuration.MemorySize):org.apache.flink.runtime.clusterframework.types.ResourceProfile \t org.apache.flink.runtime.clusterframework.types.ResourceProfile.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile",
    "source_method": "fromResources",
    "target_class": "int):org.apache.flink.runtime.clusterframework.types.ResourceProfile \t org.apache.flink.runtime.clusterframework.types.ResourceProfile.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile",
    "source_method": "newBuilder",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile.Builder"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.ResourceID",
    "source_method": "generate",
    "target_class": "org.apache.flink.util.AbstractID"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.types.AllocationID",
    "source_method": "fromHexString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.ContaineredTaskManagerParameters",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessSpec):org.apache.flink.runtime.clusterframework.ContaineredTaskManagerParameters \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils",
    "source_method": "generateDynamicConfigsStr",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils",
    "source_method": "newProcessSpecBuilder",
    "target_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessSpecBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils",
    "source_method": "processSpecFromConfig",
    "target_class": "org.apache.flink.runtime.util.config.memory.ProcessMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils",
    "source_method": "processSpecFromWorkerResourceSpec",
    "target_class": "org.apache.flink.runtime.resourcemanager.WorkerResourceSpec):org.apache.flink.runtime.clusterframework.TaskExecutorProcessSpec \t org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils",
    "source_method": "createMemoryProcessSpec",
    "target_class": "org.apache.flink.runtime.util.config.memory.CommonProcessMemorySpec<org.apache.flink.runtime.util.config.memory.taskmanager.TaskExecutorFlinkMemory>):org.apache.flink.runtime.clusterframework.TaskExecutorProcessSpec \t org.apache.flink.runtime.externalresource.ExternalResourceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils",
    "source_method": "getNumSlots",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils",
    "source_method": "getCpuCoresWithFallbackConfigOption",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.Double>):double \t org.apache.flink.api.common.resources.Resource"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils",
    "source_method": "getCpuCoresWithFallback",
    "target_class": "double):org.apache.flink.api.common.resources.CPUResource \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.clusterframework.TaskExecutorProcessUtils",
    "source_method": "getConfigurationMapLegacyTaskManagerHeapSizeToConfigOption",
    "target_class": "org.apache.flink.configuration.ConfigOption<org.apache.flink.configuration.MemorySize>):org.apache.flink.configuration.Configuration \t org.apache.flink.runtime.util.config.memory.MemoryBackwardsCompatibilityUtils"
  },
  {
    "source_class": "org.apache.flink.container.entrypoint.StandaloneApplicationClusterEntryPoint",
    "source_method": "getPackagedProgram",
    "target_class": "org.apache.flink.configuration.Configuration):org.apache.flink.client.program.PackagedProgram \t org.apache.flink.runtime.entrypoint.ClusterEntrypointUtils"
  },
  {
    "source_class": "org.apache.flink.container.entrypoint.StandaloneApplicationClusterEntryPoint",
    "source_method": "setStaticJobId",
    "target_class": "org.apache.flink.configuration.Configuration):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.examples.wordcount.util.CLI",
    "source_method": "fromArgs",
    "target_class": "org.apache.flink.api.common.RuntimeExecutionMode"
  },
  {
    "source_class": "org.apache.flink.streaming.examples.wordcount.util.CLI",
    "source_method": "getInt",
    "target_class": "org.apache.flink.api.java.utils.MultipleParameterTool"
  },
  {
    "source_class": "org.apache.flink.streaming.examples.statemachine.generator.StandaloneThreadedGenerator",
    "source_method": "runGenerator",
    "target_class": "org.apache.flink.streaming.examples.statemachine.generator.StandaloneThreadedGenerator.GeneratorThread"
  },
  {
    "source_class": "org.apache.flink.streaming.examples.statemachine.dfa.State",
    "source_method": "randomTransition",
    "target_class": "org.apache.flink.streaming.examples.statemachine.dfa.Transition"
  },
  {
    "source_class": "org.apache.flink.streaming.examples.join.WindowJoinSampleData",
    "source_method": "getTupleGeneratorSource",
    "target_class": "double):org.apache.flink.connector.datagen.source.DataGeneratorSource<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,java.lang.Integer>> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.streaming.examples.join.WindowJoin",
    "source_method": "runWindowJoin",
    "target_class": "org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,java.lang.Integer>>, long):org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.api.java.tuple.Tuple3<java.lang.String,java.lang.Integer,java.lang.Integer>> \t org.apache.flink.streaming.api.datastream.JoinedStreams.WithWindow"
  },
  {
    "source_class": "org.apache.flink.table.examples.java.functions.AdvancedFunctionsExample",
    "source_method": "executeLastDatedValueFunction",
    "target_class": "org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.table.examples.java.functions.AdvancedFunctionsExample",
    "source_method": "executeInternalRowMergerFunction",
    "target_class": "org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.table.examples.java.basics.StreamWindowSQLExample",
    "source_method": "createTempFile",
    "target_class": "org.apache.flink.util.FileUtils"
  },
  {
    "source_class": "org.apache.flink.examples.java.wordcount.util.WordCountData",
    "source_method": "getDefaultTextLineDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.clustering.KMeans",
    "source_method": "getCentroidDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment):org.apache.flink.api.java.DataSet<org.apache.flink.examples.java.clustering.KMeans.Centroid> \t org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.examples.java.clustering.KMeans",
    "source_method": "getPointDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment):org.apache.flink.api.java.DataSet<org.apache.flink.examples.java.clustering.KMeans.Point> \t org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.examples.java.clustering.util.KMeansData",
    "source_method": "getDefaultCentroidDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.clustering.util.KMeansData",
    "source_method": "getDefaultPointDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.distcp.DistCp",
    "source_method": "isOnDistributedFS",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.examples.java.distcp.DistCp",
    "source_method": "getCopyTasks",
    "target_class": "java.lang.String, java.util.List<org.apache.flink.examples.java.distcp.FileCopyTask>):void \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.examples.java.graph.PageRank",
    "source_method": "getPagesDataSet",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):org.apache.flink.api.java.DataSet<java.lang.Long> \t org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.examples.java.graph.PageRank",
    "source_method": "getLinksDataSet",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):org.apache.flink.api.java.DataSet<org.apache.flink.api.java.tuple.Tuple2<java.lang.Long,java.lang.Long>> \t org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.examples.java.graph.ConnectedComponents",
    "source_method": "getVertexDataSet",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):org.apache.flink.api.java.DataSet<java.lang.Long> \t org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.examples.java.graph.ConnectedComponents",
    "source_method": "getEdgeDataSet",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):org.apache.flink.api.java.DataSet<org.apache.flink.api.java.tuple.Tuple2<java.lang.Long,java.lang.Long>> \t org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.examples.java.graph.util.ConnectedComponentsData",
    "source_method": "getDefaultVertexDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.graph.util.ConnectedComponentsData",
    "source_method": "getDefaultEdgeDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.graph.util.EnumTrianglesData",
    "source_method": "getDefaultEdgeDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.graph.util.PageRankData",
    "source_method": "getDefaultEdgeDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.graph.util.PageRankData",
    "source_method": "getDefaultPagesDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.EmptyFieldsCountAccumulator",
    "source_method": "getDataSet",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):org.apache.flink.api.java.DataSet<org.apache.flink.examples.java.relational.EmptyFieldsCountAccumulator.StringTriple> \t org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.WebLogAnalysis",
    "source_method": "getDocumentsDataSet",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):org.apache.flink.api.java.DataSet<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,java.lang.String>> \t org.apache.flink.api.java.utils.ParameterTool"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.WebLogAnalysis",
    "source_method": "getRanksDataSet",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):org.apache.flink.api.java.DataSet<org.apache.flink.api.java.tuple.Tuple3<java.lang.Integer,java.lang.String,java.lang.Integer>> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.WebLogAnalysis",
    "source_method": "getVisitsDataSet",
    "target_class": "org.apache.flink.api.java.utils.ParameterTool):org.apache.flink.api.java.DataSet<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,java.lang.String>> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.TPCHQuery3",
    "source_method": "getLineitemDataSet",
    "target_class": "java.lang.String):org.apache.flink.api.java.DataSet<org.apache.flink.examples.java.relational.TPCHQuery3.Lineitem> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.TPCHQuery3",
    "source_method": "getCustomerDataSet",
    "target_class": "java.lang.String):org.apache.flink.api.java.DataSet<org.apache.flink.examples.java.relational.TPCHQuery3.Customer> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.TPCHQuery3",
    "source_method": "getOrdersDataSet",
    "target_class": "java.lang.String):org.apache.flink.api.java.DataSet<org.apache.flink.examples.java.relational.TPCHQuery3.Order> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.util.WebLogData",
    "source_method": "getDocumentDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.util.WebLogData",
    "source_method": "getRankDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.util.WebLogData",
    "source_method": "getVisitDataSet",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.TPCHQuery10",
    "source_method": "getCustomerDataSet",
    "target_class": "java.lang.String):org.apache.flink.api.java.DataSet<org.apache.flink.api.java.tuple.Tuple5<java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Double>> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.TPCHQuery10",
    "source_method": "getOrdersDataSet",
    "target_class": "java.lang.String):org.apache.flink.api.java.DataSet<org.apache.flink.api.java.tuple.Tuple3<java.lang.Integer,java.lang.Integer,java.lang.String>> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.TPCHQuery10",
    "source_method": "getLineitemDataSet",
    "target_class": "java.lang.String):org.apache.flink.api.java.DataSet<org.apache.flink.api.java.tuple.Tuple4<java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.String>> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.examples.java.relational.TPCHQuery10",
    "source_method": "getNationsDataSet",
    "target_class": "java.lang.String):org.apache.flink.api.java.DataSet<org.apache.flink.api.java.tuple.Tuple2<java.lang.Integer,java.lang.String>> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "generateCommonSection",
    "target_class": "org.apache.flink.docs.util.ConfigurationOptionLocator, java.lang.String):void \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "findSectionOptions",
    "target_class": "org.apache.flink.docs.util.ConfigurationOptionLocator):java.util.Collection<org.apache.flink.docs.util.OptionWithMetaInfo> \t org.apache.flink.docs.util.ConfigurationOptionLocator"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "createTables",
    "target_class": "java.lang.String):void \t org.apache.flink.docs.util.ConfigurationOptionLocator"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "generateTablesForClass",
    "target_class": "java.util.Collection<org.apache.flink.docs.util.OptionWithMetaInfo>):java.util.List<org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.annotation.docs.ConfigGroup,java.lang.String>> \t org.apache.flink.docs.configuration.ConfigOptionsDocGenerator.Tree"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "toHtmlString",
    "target_class": "org.apache.flink.annotation.docs.Documentation.ExecMode"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "getDocumentedKey",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "getDescription",
    "target_class": "org.apache.flink.configuration.description.Formatter"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "getEnumOptionsDescription",
    "target_class": "org.apache.flink.configuration.description.Description"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "formatEnumOption",
    "target_class": "org.apache.flink.configuration.description.TextElement"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "atomicTypeToHtml",
    "target_class": "boolean):java.lang.String \t org.apache.flink.docs.util.Utils"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "enumTypeToHtml",
    "target_class": "org.apache.flink.docs.util.Utils"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "stringifyDefault",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator",
    "source_method": "stringifyObject",
    "target_class": "org.apache.flink.util.TimeUtils"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator.Tree",
    "source_method": "findConfigOptions",
    "target_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator.Tree.Node"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator.Tree",
    "source_method": "getDefaultOptions",
    "target_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator.Tree.Node"
  },
  {
    "source_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator.Tree",
    "source_method": "findGroupRoot",
    "target_class": "org.apache.flink.docs.configuration.ConfigOptionsDocGenerator.Tree.Node"
  },
  {
    "source_class": "org.apache.flink.docs.rest.OpenApiSpecGenerator",
    "source_method": "setInfo",
    "target_class": "java.lang.String, org.apache.flink.runtime.rest.versioning.RestAPIVersion):void \t org.apache.flink.runtime.util.EnvironmentInformation"
  },
  {
    "source_class": "org.apache.flink.docs.rest.OpenApiSpecGenerator",
    "source_method": "collectAsyncOperationResultVariants",
    "target_class": "org.apache.flink.runtime.rest.handler.async.AsynchronousOperationStatusMessageHeaders"
  },
  {
    "source_class": "org.apache.flink.docs.rest.OpenApiSpecGenerator",
    "source_method": "overrideSerializeThrowableSchema",
    "target_class": "org.apache.flink.runtime.rest.messages.json.SerializedThrowableSerializer"
  },
  {
    "source_class": "org.apache.flink.docs.rest.OpenApiSpecGenerator",
    "source_method": "getSchema",
    "target_class": "org.apache.flink.docs.rest.ApiSpecGeneratorUtils"
  },
  {
    "source_class": "org.apache.flink.docs.rest.RestAPIDocGenerator",
    "source_method": "createPathParameterHtmlList",
    "target_class": "org.apache.flink.runtime.rest.messages.MessageParameter"
  },
  {
    "source_class": "org.apache.flink.docs.rest.RestAPIDocGenerator",
    "source_method": "createQueryParameterHtmlList",
    "target_class": "org.apache.flink.runtime.rest.messages.MessageParameter"
  },
  {
    "source_class": "org.apache.flink.docs.rest.RestAPIDocGenerator",
    "source_method": "createMessageHtmlEntry",
    "target_class": "java.lang.Class<?>, java.lang.Class<?>):java.lang.String \t org.apache.flink.docs.rest.ApiSpecGeneratorUtils"
  },
  {
    "source_class": "org.apache.flink.streaming.util.TestStreamEnvironment",
    "source_method": "randomizeConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.util.TestStreamEnvironment",
    "source_method": "isConfigurationSupportedByChangelog",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.upserttest.sink.UpsertTestFileUtil",
    "source_method": "writeRecords",
    "target_class": "java.util.Map<org.apache.flink.connector.upserttest.sink.ImmutableByteArrayWrapper,org.apache.flink.connector.upserttest.sink.ImmutableByteArrayWrapper>):void \t org.apache.flink.connector.upserttest.sink.ImmutableByteArrayWrapper"
  },
  {
    "source_class": "org.apache.flink.connector.upserttest.sink.UpsertTestFileUtil",
    "source_method": "readRecords",
    "target_class": "org.apache.flink.api.common.serialization.DeserializationSchema<K>, org.apache.flink.api.common.serialization.DeserializationSchema<V>):java.util.Map<K,V> \t org.apache.flink.api.common.serialization.DeserializationSchema"
  },
  {
    "source_class": "org.apache.flink.connector.upserttest.sink.UpsertTestFileUtil",
    "source_method": "readRecords",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.connector.upserttest.table.UpsertTestDynamicTableSinkFactory",
    "source_method": "resolvePrimaryKeyDataType",
    "target_class": "org.apache.flink.table.connector.Projection"
  },
  {
    "source_class": "org.apache.flink.connector.upserttest.table.UpsertTestDynamicTableSink",
    "source_method": "createKeySerializationSchema",
    "target_class": "org.apache.flink.table.connector.format.EncodingFormat"
  },
  {
    "source_class": "org.apache.flink.types.PojoTestUtils",
    "source_method": "assertSerializedAsPojo",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.types.PojoTestUtils",
    "source_method": "assertSerializedAsPojoWithoutKryo",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.test.junit5.MiniClusterExtension",
    "source_method": "registerEnv",
    "target_class": "org.apache.flink.runtime.testutils.InternalMiniClusterExtension"
  },
  {
    "source_class": "org.apache.flink.test.junit5.MiniClusterExtension",
    "source_method": "createMiniClusterClient",
    "target_class": "org.apache.flink.runtime.testutils.InternalMiniClusterExtension"
  },
  {
    "source_class": "org.apache.flink.test.junit5.MiniClusterExtension",
    "source_method": "createRestClusterClient",
    "target_class": "org.apache.flink.runtime.testutils.InternalMiniClusterExtension"
  },
  {
    "source_class": "org.apache.flink.test.resources.ResourceTestUtils",
    "source_method": "getResource",
    "target_class": "org.apache.flink.test.parameters.ParameterProperty"
  },
  {
    "source_class": "org.apache.flink.test.util.FileUtils",
    "source_method": "findDistribution",
    "target_class": "org.apache.flink.util.FileUtils"
  },
  {
    "source_class": "org.apache.flink.test.util.MultipleProgramsTestBase",
    "source_method": "setupEnvironment",
    "target_class": "org.apache.flink.test.util.TestEnvironment"
  },
  {
    "source_class": "org.apache.flink.test.util.TestBaseUtils",
    "source_method": "readAllResultLines",
    "target_class": "java.lang.String, java.lang.String[], boolean):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.test.util.TestBaseUtils",
    "source_method": "compareResult",
    "target_class": "java.lang.String, boolean, boolean):void \t org.apache.flink.api.java.tuple.Tuple"
  },
  {
    "source_class": "org.apache.flink.test.util.TestingSecurityContext",
    "source_method": "install",
    "target_class": "java.util.Map<java.lang.String,org.apache.flink.test.util.TestingSecurityContext.ClientSecurityConfiguration>):void \t org.apache.flink.runtime.security.SecurityUtils"
  },
  {
    "source_class": "org.apache.flink.test.util.SecureTestEnvironment",
    "source_method": "doPrepare",
    "target_class": "java.lang.String[]):void \t org.apache.flink.runtime.security.KerberosUtils"
  },
  {
    "source_class": "org.apache.flink.test.util.SecureTestEnvironment",
    "source_method": "populateFlinkSecureConfigurations",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.test.util.SecureTestEnvironment",
    "source_method": "getRealm",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.test.util.MiniClusterPipelineExecutorServiceLoader",
    "source_method": "updateConfigurationForMiniCluster",
    "target_class": "java.util.Collection<org.apache.flink.core.fs.Path>, java.util.Collection<java.net.URL>):org.apache.flink.configuration.Configuration \t org.apache.flink.configuration.ConfigUtils"
  },
  {
    "source_class": "org.apache.flink.test.util.MiniClusterPipelineExecutorServiceLoader",
    "source_method": "checkOverridesOption",
    "target_class": "org.apache.flink.configuration.ConfigOption<?>):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.test.util.MiniClusterPipelineExecutorServiceLoader",
    "source_method": "getAbsoluteURL",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.test.util.TestUtils",
    "source_method": "tryExecute",
    "target_class": "java.lang.String):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.test.util.TestUtils",
    "source_method": "submitJobAndWaitForResult",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph, java.lang.ClassLoader):void \t org.apache.flink.client.program.ClusterClient"
  },
  {
    "source_class": "org.apache.flink.test.util.TestUtils",
    "source_method": "loadCheckpointMetadata",
    "target_class": "org.apache.flink.runtime.state.filesystem.AbstractFsCheckpointStorageAccess"
  },
  {
    "source_class": "org.apache.flink.test.util.TestUtils",
    "source_method": "hasMetadata",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.test.util.TestUtils",
    "source_method": "waitUntilJobCanceled",
    "target_class": "org.apache.flink.client.program.ClusterClient<?>):void \t org.apache.flink.client.program.ClusterClient"
  },
  {
    "source_class": "org.apache.flink.test.util.TestUtils",
    "source_method": "waitUntilAllTasksAreRunning",
    "target_class": "org.apache.flink.api.common.JobID):void \t org.apache.flink.runtime.testutils.CommonTestUtils"
  },
  {
    "source_class": "org.apache.flink.test.util.TestUtils",
    "source_method": "allVerticesRunning",
    "target_class": "org.apache.flink.runtime.execution.ExecutionState"
  },
  {
    "source_class": "org.apache.flink.test.util.ShellScript",
    "source_method": "createShellScriptBuilder",
    "target_class": "org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.test.util.ShellScript",
    "source_method": "getScriptExtension",
    "target_class": "org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.test.migration.PublishedVersionUtils",
    "source_method": "getMostRecentlyPublishedVersion",
    "target_class": "org.apache.flink.FlinkVersion"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.container.FlinkContainers.Builder",
    "source_method": "build",
    "target_class": "org.apache.flink.connector.testframe.container.FlinkTestcontainersConfigurator"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.container.FlinkContainersSettings",
    "source_method": "defaultConfig",
    "target_class": "org.apache.flink.connector.testframe.container.FlinkContainersSettings.Builder"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.container.FlinkContainersSettings.Builder",
    "source_method": "setConfigOption",
    "target_class": "T):org.apache.flink.connector.testframe.container.FlinkContainersSettings.Builder \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.container.FlinkContainersSettings.Builder",
    "source_method": "basedOn",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.container.FlinkContainersSettings.Builder",
    "source_method": "defaultFlinkConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.container.FlinkContainersSettings",
    "source_method": "getJobManagerHostname",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.container.TestcontainersSettings",
    "source_method": "defaultSettings",
    "target_class": "org.apache.flink.connector.testframe.container.TestcontainersSettings.Builder"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.container.FlinkImageBuilder",
    "source_method": "createTemporaryFlinkConfFile",
    "target_class": "java.nio.file.Path):java.nio.file.Path \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.environment.MiniClusterTestEnvironment",
    "source_method": "defaultMiniClusterResourceConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.utils.MetricQuerier",
    "source_method": "getJobDetails",
    "target_class": "org.apache.flink.connector.testframe.environment.TestEnvironment.Endpoint, org.apache.flink.api.common.JobID):org.apache.flink.runtime.rest.messages.job.JobDetailsInfo \t org.apache.flink.runtime.rest.RestClient"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.utils.MetricQuerier",
    "source_method": "getMetricList",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.runtime.jobgraph.JobVertexID):org.apache.flink.runtime.rest.messages.job.metrics.AggregatedMetricsResponseBody \t org.apache.flink.runtime.rest.RestClient"
  },
  {
    "source_class": "org.apache.flink.connector.testframe.utils.MetricQuerier",
    "source_method": "getMetrics",
    "target_class": "org.apache.flink.api.common.JobID, org.apache.flink.runtime.jobgraph.JobVertexID, java.lang.String):org.apache.flink.runtime.rest.messages.job.metrics.AggregatedMetricsResponseBody \t org.apache.flink.runtime.rest.RestClient"
  },
  {
    "source_class": "org.apache.flink.connector.testutils.source.reader.TestingSplitEnumeratorContext",
    "source_method": "triggerAllActions",
    "target_class": "org.apache.flink.core.testutils.ManuallyTriggeredScheduledExecutorService"
  },
  {
    "source_class": "org.apache.flink.core.testutils.ManuallyTriggeredScheduledExecutorService",
    "source_method": "getActivePeriodicScheduledTask",
    "target_class": "org.apache.flink.core.testutils.ScheduledTask"
  },
  {
    "source_class": "org.apache.flink.core.testutils.ManuallyTriggeredScheduledExecutorService",
    "source_method": "getActiveNonPeriodicScheduledTask",
    "target_class": "org.apache.flink.core.testutils.ScheduledTask"
  },
  {
    "source_class": "org.apache.flink.core.testutils.ManuallyTriggeredScheduledExecutorService",
    "source_method": "triggerNonPeriodicScheduledTask",
    "target_class": "org.apache.flink.core.testutils.ScheduledTask"
  },
  {
    "source_class": "org.apache.flink.core.testutils.ManuallyTriggeredScheduledExecutorService",
    "source_method": "triggerNonPeriodicScheduledTasksWithRecursion",
    "target_class": "org.apache.flink.core.testutils.ScheduledTask"
  },
  {
    "source_class": "org.apache.flink.core.testutils.ManuallyTriggeredScheduledExecutorService",
    "source_method": "triggerNonPeriodicScheduledTasks",
    "target_class": "org.apache.flink.core.testutils.ScheduledTask"
  },
  {
    "source_class": "org.apache.flink.configuration.ExternalResourceOptions",
    "source_method": "keyWithResourceNameAndSuffix",
    "target_class": "java.lang.String):java.lang.String \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.configuration.CoreOptions",
    "source_method": "getParentFirstLoaderPatterns",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.configuration.CoreOptions",
    "source_method": "fileSystemConnectionLimit",
    "target_class": "org.apache.flink.configuration.ConfigOptions.TypedConfigOptionBuilder"
  },
  {
    "source_class": "org.apache.flink.configuration.CoreOptions",
    "source_method": "fileSystemConnectionLimitIn",
    "target_class": "org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.configuration.CoreOptions",
    "source_method": "fileSystemConnectionLimitOut",
    "target_class": "org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.configuration.CoreOptions",
    "source_method": "fileSystemConnectionLimitTimeout",
    "target_class": "org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.configuration.CoreOptions",
    "source_method": "fileSystemConnectionLimitStreamInactivityTimeout",
    "target_class": "org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.configuration.MetricOptions.JobStatusMetricsSettings",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigUtils",
    "source_method": "encodeCollectionToConfig",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.util.List<OUT>>, java.util.Collection<IN>, java.util.function.Function<IN,OUT>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigUtils",
    "source_method": "decodeListFromConfig",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.util.List<IN>>, org.apache.flink.util.function.FunctionWithException<IN,OUT,E>):java.util.List<OUT> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.configuration.SecurityOptions",
    "source_method": "isInternalSSLEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.SecurityOptions",
    "source_method": "isRestSSLEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.SecurityOptions",
    "source_method": "isRestSSLAuthenticationEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.StructuredOptionsSplitter",
    "source_method": "processTokens",
    "target_class": "org.apache.flink.configuration.StructuredOptionsSplitter.TokenType"
  },
  {
    "source_class": "org.apache.flink.configuration.MemorySize",
    "source_method": "parse",
    "target_class": "org.apache.flink.configuration.MemorySize.MemoryUnit):org.apache.flink.configuration.MemorySize \t org.apache.flink.configuration.MemorySize.MemoryUnit"
  },
  {
    "source_class": "org.apache.flink.configuration.MemorySize",
    "source_method": "parseBytes",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.configuration.MemorySize",
    "source_method": "parseUnit",
    "target_class": "org.apache.flink.configuration.MemorySize.MemoryUnit"
  },
  {
    "source_class": "org.apache.flink.configuration.MemorySize",
    "source_method": "matchesAny",
    "target_class": "org.apache.flink.configuration.MemorySize.MemoryUnit):boolean \t org.apache.flink.configuration.MemorySize.MemoryUnit"
  },
  {
    "source_class": "org.apache.flink.configuration.MemorySize.MemoryUnit",
    "source_method": "hasUnit",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigOptions",
    "source_method": "key",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "getSystemResourceMetricsProbingInterval",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "parseTempDirectories",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "getRandomTempDirectory",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "parseLocalStateDirectories",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "parseStringToMap",
    "target_class": "org.apache.flink.configuration.GlobalConfiguration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "parseMapToString",
    "target_class": "org.apache.flink.configuration.GlobalConfiguration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "getStandaloneClusterStartupPeriodTime",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "createConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "hideSensitiveValues",
    "target_class": "org.apache.flink.configuration.GlobalConfiguration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "parseTmResourceDynamicConfigs",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "checkConfigContains",
    "target_class": "java.lang.String):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "parseJvmArgString",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "getPrefixedKeyValuePairs",
    "target_class": "org.apache.flink.configuration.Configuration):java.util.Map<java.lang.String,java.lang.String> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "convertValue",
    "target_class": "java.lang.Class<?>):T \t org.apache.flink.configuration.GlobalConfiguration"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "convertToList",
    "target_class": "java.lang.Class<?>, boolean):T \t org.apache.flink.configuration.YamlParserUtils"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "convertToListWithLegacyProperties",
    "target_class": "java.lang.Class<?>):T \t org.apache.flink.configuration.StructuredOptionsSplitter"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "convertToProperties",
    "target_class": "boolean):java.util.Map<java.lang.String,java.lang.String> \t org.apache.flink.configuration.YamlParserUtils"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "convertToPropertiesWithLegacyPattern",
    "target_class": "org.apache.flink.configuration.StructuredOptionsSplitter"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "convertToDuration",
    "target_class": "org.apache.flink.util.TimeUtils"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "convertToMemorySize",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "convertToString",
    "target_class": "boolean):java.lang.String \t org.apache.flink.configuration.YamlParserUtils"
  },
  {
    "source_class": "org.apache.flink.configuration.ConfigurationUtils",
    "source_method": "canBePrefixMap",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.Configuration",
    "source_method": "setString",
    "target_class": "java.lang.String):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.Configuration",
    "source_method": "setInteger",
    "target_class": "int):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.Configuration",
    "source_method": "setLong",
    "target_class": "long):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.Configuration",
    "source_method": "setBoolean",
    "target_class": "boolean):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.Configuration",
    "source_method": "setFloat",
    "target_class": "float):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.Configuration",
    "source_method": "setDouble",
    "target_class": "double):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.Configuration",
    "source_method": "getEnum",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.String>):T \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.Configuration",
    "source_method": "applyWithOption",
    "target_class": "java.util.function.BiFunction<java.lang.String,java.lang.Boolean,java.util.Optional<T>>):java.util.Optional<T> \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.configuration.GlobalConfiguration",
    "source_method": "loadLegacyYAMLResource",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.GlobalConfiguration",
    "source_method": "flatten",
    "target_class": "java.lang.String):java.util.Map<java.lang.String,java.lang.Object> \t org.apache.flink.configuration.YamlParserUtils"
  },
  {
    "source_class": "org.apache.flink.configuration.GlobalConfiguration",
    "source_method": "loadYAMLResource",
    "target_class": "org.apache.flink.configuration.YamlParserUtils"
  },
  {
    "source_class": "org.apache.flink.configuration.GlobalConfiguration",
    "source_method": "isSensitive",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.configuration.ClusterOptions",
    "source_method": "isReactiveModeEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.ClusterOptions",
    "source_method": "isAdaptiveSchedulerEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.TaskManagerOptions.TaskManagerLoadBalanceMode",
    "source_method": "loadFromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.AkkaOptions",
    "source_method": "isForceRpcInvocationSerializationEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.configuration.DelegatingConfiguration",
    "source_method": "prefixOption",
    "target_class": "java.lang.String):org.apache.flink.configuration.ConfigOption<T> \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.types.Row",
    "source_method": "withPositions",
    "target_class": "org.apache.flink.types.RowKind"
  },
  {
    "source_class": "org.apache.flink.types.Row",
    "source_method": "withNames",
    "target_class": "org.apache.flink.types.RowKind"
  },
  {
    "source_class": "org.apache.flink.types.RowUtils",
    "source_method": "deepHashCodeRow",
    "target_class": "java.lang.Object[], java.util.Map<java.lang.String,java.lang.Object>):int \t org.apache.flink.types.RowKind"
  },
  {
    "source_class": "org.apache.flink.types.RowUtils",
    "source_method": "deepToStringInternal",
    "target_class": "java.lang.Object):void \t org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.types.RowUtils",
    "source_method": "deepToStringArrayLegacy",
    "target_class": "java.lang.Object[]):void \t org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.types.Either",
    "source_method": "obtainLeft",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<L>):org.apache.flink.types.Either.Left<L,R> \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.types.Either",
    "source_method": "obtainRight",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<R>):org.apache.flink.types.Either.Right<L,R> \t org.apache.flink.types.Either.Right"
  },
  {
    "source_class": "org.apache.flink.types.parser.SqlTimestampParser",
    "source_method": "parseField",
    "target_class": "int, int, char):java.sql.Timestamp \t org.apache.flink.types.parser.FieldParser"
  },
  {
    "source_class": "org.apache.flink.types.parser.SqlDateParser",
    "source_method": "parseField",
    "target_class": "int, int, char):java.sql.Date \t org.apache.flink.types.parser.FieldParser"
  },
  {
    "source_class": "org.apache.flink.types.parser.BigIntParser",
    "source_method": "parseField",
    "target_class": "int, int, char):java.math.BigInteger \t org.apache.flink.types.parser.FieldParser"
  },
  {
    "source_class": "org.apache.flink.types.parser.FloatParser",
    "source_method": "parseField",
    "target_class": "int, int, char):float \t org.apache.flink.types.parser.FieldParser"
  },
  {
    "source_class": "org.apache.flink.types.parser.SqlTimeParser",
    "source_method": "parseField",
    "target_class": "int, int, char):java.sql.Time \t org.apache.flink.types.parser.FieldParser"
  },
  {
    "source_class": "org.apache.flink.types.parser.DoubleParser",
    "source_method": "parseField",
    "target_class": "int, int, char):double \t org.apache.flink.types.parser.FieldParser"
  },
  {
    "source_class": "org.apache.flink.types.JavaToValueConverter",
    "source_method": "convertValueType",
    "target_class": "org.apache.flink.types.ShortValue"
  },
  {
    "source_class": "org.apache.flink.types.Record",
    "source_method": "unionFields",
    "target_class": "org.apache.flink.types.Record.InternalDeSerializer"
  },
  {
    "source_class": "org.apache.flink.types.Record",
    "source_method": "updateBinaryRepresenation",
    "target_class": "org.apache.flink.types.Record.InternalDeSerializer"
  },
  {
    "source_class": "org.apache.flink.types.Record",
    "source_method": "serializeHeader",
    "target_class": "int[], int):void \t org.apache.flink.types.Record.InternalDeSerializer"
  },
  {
    "source_class": "org.apache.flink.core.io.SimpleVersionedSerialization",
    "source_method": "writeVersionAndSerialize",
    "target_class": "T, org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.core.io.SimpleVersionedSerialization",
    "source_method": "writeVersionAndSerializeList",
    "target_class": "java.util.List<T>, org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.core.io.SimpleVersionedSerialization",
    "source_method": "readVersionAndDeSerialize",
    "target_class": "org.apache.flink.core.memory.DataInputView):T \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.core.io.SimpleVersionedSerialization",
    "source_method": "readVersionAndDeserializeList",
    "target_class": "org.apache.flink.core.memory.DataInputView):java.util.List<T> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.core.io.SimpleVersionedSerialization",
    "source_method": "writeVersionAndSerialize",
    "target_class": "T):byte[] \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.core.io.SimpleVersionedSerialization",
    "source_method": "readVersionAndDeSerialize",
    "target_class": "byte[]):T \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.core.plugin.PluginLoader",
    "source_method": "createPluginClassLoader",
    "target_class": "java.lang.ClassLoader, java.lang.String[]):java.net.URLClassLoader \t org.apache.flink.util.ArrayUtils"
  },
  {
    "source_class": "org.apache.flink.core.plugin.PluginLoader",
    "source_method": "load",
    "target_class": "org.apache.flink.util.TemporaryClassLoaderContext"
  },
  {
    "source_class": "org.apache.flink.core.plugin.PluginUtils",
    "source_method": "createPluginManagerFromRootFolder",
    "target_class": "org.apache.flink.core.plugin.PluginConfig"
  },
  {
    "source_class": "org.apache.flink.core.plugin.PluginUtils",
    "source_method": "createPluginManagerFromRootFolder",
    "target_class": "org.apache.flink.core.plugin.DirectoryBasedPluginFinder"
  },
  {
    "source_class": "org.apache.flink.core.plugin.PluginConfig",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.CoreOptions"
  },
  {
    "source_class": "org.apache.flink.core.security.FlinkSecurityManager",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.core.security.FlinkSecurityManager",
    "source_method": "setFromConfiguration",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.core.memory.MemorySegmentFactory",
    "source_method": "wrapCopy",
    "target_class": "int, int):org.apache.flink.core.memory.MemorySegment \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.core.memory.MemorySegmentFactory",
    "source_method": "allocateDirectMemory",
    "target_class": "org.apache.flink.util.TaskManagerExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.core.memory.MemorySegmentFactory",
    "source_method": "allocateOffHeapUnsafeMemory",
    "target_class": "java.lang.Object, java.lang.Runnable):org.apache.flink.core.memory.MemorySegment \t org.apache.flink.core.memory.MemoryUtils"
  },
  {
    "source_class": "org.apache.flink.core.memory.MemoryUtils",
    "source_method": "getByteBufferAddress",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.core.fs.EntropyInjector",
    "source_method": "createEntropyAware",
    "target_class": "org.apache.flink.core.fs.Path, org.apache.flink.core.fs.FileSystem.WriteMode):org.apache.flink.core.fs.OutputStreamAndPath \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.core.fs.EntropyInjector",
    "source_method": "isEntropyInjecting",
    "target_class": "org.apache.flink.core.fs.Path):boolean \t org.apache.flink.core.fs.EntropyInjectingFileSystem"
  },
  {
    "source_class": "org.apache.flink.core.fs.EntropyInjector",
    "source_method": "resolveEntropy",
    "target_class": "org.apache.flink.core.fs.EntropyInjectingFileSystem, boolean):org.apache.flink.core.fs.Path \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.core.fs.ClosingFSDataOutputStream",
    "source_method": "wrapSafe",
    "target_class": "org.apache.flink.core.fs.SafetyNetCloseableRegistry, java.lang.String):org.apache.flink.core.fs.ClosingFSDataOutputStream \t org.apache.flink.util.AbstractAutoCloseableRegistry"
  },
  {
    "source_class": "org.apache.flink.core.fs.LimitedConnectionsFileSystem",
    "source_method": "createOutputStream",
    "target_class": "org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.core.fs.LimitedConnectionsFileSystem",
    "source_method": "createInputStream",
    "target_class": "org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.core.fs.LimitedConnectionsFileSystem.StreamProgressTracker",
    "source_method": "checkNewBytesAndMark",
    "target_class": "org.apache.flink.core.fs.LimitedConnectionsFileSystem.StreamWithTimeout"
  },
  {
    "source_class": "org.apache.flink.core.fs.LimitedConnectionsFileSystem.ConnectionLimitingSettings",
    "source_method": "fromConfig",
    "target_class": "java.lang.String):org.apache.flink.core.fs.LimitedConnectionsFileSystem.ConnectionLimitingSettings \t org.apache.flink.configuration.CoreOptions"
  },
  {
    "source_class": "org.apache.flink.core.fs.LimitedConnectionsFileSystem.ConnectionLimitingSettings",
    "source_method": "checkLimit",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.Integer>):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.core.fs.LimitedConnectionsFileSystem.ConnectionLimitingSettings",
    "source_method": "checkTimeout",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.Long>):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.core.fs.Path",
    "source_method": "deserializeFromDataInputView",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.core.fs.Path",
    "source_method": "serializeToDataOutputView",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.core.fs.local.LocalRecoverableWriter",
    "source_method": "generateStagingTempFilePath",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.core.fs.local.LocalFileSystem",
    "source_method": "pathToFile",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.core.fs.ConnectionLimitingFactory",
    "source_method": "decorateIfLimited",
    "target_class": "java.lang.String, org.apache.flink.configuration.Configuration):org.apache.flink.core.fs.FileSystemFactory \t org.apache.flink.core.fs.LimitedConnectionsFileSystem.ConnectionLimitingSettings"
  },
  {
    "source_class": "org.apache.flink.core.fs.FileSystem",
    "source_method": "initialize",
    "target_class": "org.apache.flink.core.plugin.PluginManager):void \t org.apache.flink.core.fs.ConnectionLimitingFactory"
  },
  {
    "source_class": "org.apache.flink.core.fs.FileSystem",
    "source_method": "getLocalFileSystem",
    "target_class": "org.apache.flink.core.fs.FileSystemSafetyNet"
  },
  {
    "source_class": "org.apache.flink.core.fs.FileSystem",
    "source_method": "get",
    "target_class": "org.apache.flink.core.fs.FileSystemSafetyNet"
  },
  {
    "source_class": "org.apache.flink.core.fs.FileSystem",
    "source_method": "getUnguardedFileSystem",
    "target_class": "org.apache.flink.util.TemporaryClassLoaderContext"
  },
  {
    "source_class": "org.apache.flink.core.fs.FileSystem",
    "source_method": "loadFileSystemFactories",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.core.fs.FileSystem",
    "source_method": "addAllFactoriesToList",
    "target_class": "java.util.List<org.apache.flink.core.fs.FileSystemFactory>):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.core.fs.ClosingFSDataInputStream",
    "source_method": "wrapSafe",
    "target_class": "org.apache.flink.core.fs.SafetyNetCloseableRegistry, java.lang.String):org.apache.flink.core.fs.ClosingFSDataInputStream \t org.apache.flink.util.AbstractAutoCloseableRegistry"
  },
  {
    "source_class": "org.apache.flink.core.fs.FileSystemSafetyNet",
    "source_method": "initializeSafetyNetForThread",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.core.fs.FileSystemSafetyNet",
    "source_method": "closeSafetyNetAndGuardedResourcesForThread",
    "target_class": "org.apache.flink.util.IOUtils"
  },
  {
    "source_class": "org.apache.flink.core.fs.RefCountedBufferingFileStream",
    "source_method": "openNew",
    "target_class": "org.apache.flink.util.function.FunctionWithException"
  },
  {
    "source_class": "org.apache.flink.core.fs.RefCountedBufferingFileStream",
    "source_method": "restore",
    "target_class": "java.io.File):org.apache.flink.core.fs.RefCountedBufferingFileStream \t org.apache.flink.util.function.FunctionWithException"
  },
  {
    "source_class": "org.apache.flink.core.fs.RefCountedFileWithStream",
    "source_method": "write",
    "target_class": "int, int):void \t org.apache.flink.core.fs.OffsetAwareOutputStream"
  },
  {
    "source_class": "org.apache.flink.core.fs.RefCountedFileWithStream",
    "source_method": "flush",
    "target_class": "org.apache.flink.core.fs.OffsetAwareOutputStream"
  },
  {
    "source_class": "org.apache.flink.util.CompressedSerializedValue",
    "source_method": "fromObject",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.CollectionUtil",
    "source_method": "computeRequiredCapacity",
    "target_class": "float):int \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.OptionalFailure",
    "source_method": "createFrom",
    "target_class": "org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.util.MathUtils",
    "source_method": "divideRoundUp",
    "target_class": "int):int \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.InstantiationUtil.MigrationUtil",
    "source_method": "initMap",
    "target_class": "org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.util.InstantiationUtil",
    "source_method": "serializeToByteArray",
    "target_class": "T):byte[] \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.util.InstantiationUtil",
    "source_method": "deserializeFromByteArray",
    "target_class": "byte[]):T \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.util.InstantiationUtil",
    "source_method": "deserializeFromByteArray",
    "target_class": "T, byte[]):T \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.util.InstantiationUtil",
    "source_method": "createCopyWritable",
    "target_class": "org.apache.flink.core.io.IOReadableWritable"
  },
  {
    "source_class": "org.apache.flink.util.LinkedOptionalMapSerializer",
    "source_method": "writeOptionalMap",
    "target_class": "org.apache.flink.util.LinkedOptionalMap<K,V>, org.apache.flink.util.function.BiConsumerWithException<org.apache.flink.core.memory.DataOutputView,K,java.io.IOException>, org.apache.flink.util.function.BiConsumerWithException<org.apache.flink.core.memory.DataOutputView,V,java.io.IOException>):void \t org.apache.flink.util.LinkedOptionalMap"
  },
  {
    "source_class": "org.apache.flink.util.LinkedOptionalMapSerializer",
    "source_method": "writeFramed",
    "target_class": "org.apache.flink.util.function.BiConsumerWithException<org.apache.flink.core.memory.DataOutputView,T,java.io.IOException>, T):void \t org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.util.ExceptionUtils",
    "source_method": "firstOrSuppressed",
    "target_class": "T):T \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.ExceptionUtils",
    "source_method": "findSerializedThrowable",
    "target_class": "java.lang.Class<T>, java.lang.ClassLoader):java.util.Optional<T> \t org.apache.flink.util.SerializedThrowable"
  },
  {
    "source_class": "org.apache.flink.util.ExceptionUtils",
    "source_method": "findThrowableSerializedAware",
    "target_class": "java.lang.Class<T>, java.lang.ClassLoader):java.util.Optional<T> \t org.apache.flink.util.SerializedThrowable"
  },
  {
    "source_class": "org.apache.flink.util.ExceptionUtils",
    "source_method": "tryDeserializeAndThrow",
    "target_class": "java.lang.ClassLoader):void \t org.apache.flink.util.SerializedThrowable"
  },
  {
    "source_class": "org.apache.flink.util.ExceptionUtils",
    "source_method": "suppressExceptions",
    "target_class": "org.apache.flink.util.function.RunnableWithException"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "deleteFileOrDirectory",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "deleteDirectory",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "cleanDirectory",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "guardIfNotThreadSafe",
    "target_class": "java.io.File):void \t org.apache.flink.util.OperatingSystem"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "copy",
    "target_class": "org.apache.flink.core.fs.Path, boolean):void \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "internalCopyDirectory",
    "target_class": "org.apache.flink.core.fs.Path, boolean, org.apache.flink.core.fs.FileSystem, org.apache.flink.core.fs.FileSystem):void \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "internalCopyFile",
    "target_class": "org.apache.flink.core.fs.Path, boolean, org.apache.flink.core.fs.FileSystem, org.apache.flink.core.fs.FileSystem):void \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "compressDirectory",
    "target_class": "org.apache.flink.core.fs.Path):org.apache.flink.core.fs.Path \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "addToZip",
    "target_class": "org.apache.flink.core.fs.FileSystem, org.apache.flink.core.fs.Path, java.util.zip.ZipOutputStream):void \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "expandDirectory",
    "target_class": "org.apache.flink.core.fs.Path):org.apache.flink.core.fs.Path \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "listFilesInDirectory",
    "target_class": "java.util.function.Predicate<java.nio.file.Path>):java.util.Collection<java.nio.file.Path> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.FileUtils",
    "source_method": "absolutizePath",
    "target_class": "org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.util.IOUtils",
    "source_method": "closeAll",
    "target_class": "extends java.lang.AutoCloseable>, java.lang.Class<T>):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.TimeUtils",
    "source_method": "parseDuration",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.TimeUtils",
    "source_method": "initMap",
    "target_class": "org.apache.flink.util.TimeUtils.TimeUnit"
  },
  {
    "source_class": "org.apache.flink.util.TimeUtils",
    "source_method": "getStringInMillis",
    "target_class": "org.apache.flink.util.TimeUtils.TimeUnit"
  },
  {
    "source_class": "org.apache.flink.util.TimeUtils",
    "source_method": "getHighestIntegerUnit",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.TaskManagerExceptionUtils",
    "source_method": "tryEnrichTaskManagerError",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.StringUtils",
    "source_method": "generateRandomAlphanumericString",
    "target_class": "int):java.lang.String \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.StringUtils",
    "source_method": "writeString",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.ShutdownHookUtil",
    "source_method": "addShutdownHookThread",
    "target_class": "java.lang.String, org.apache.flink.util.Logger):boolean \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.ShutdownHookUtil",
    "source_method": "removeShutdownHook",
    "target_class": "java.lang.String, org.apache.flink.util.Logger):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.NetUtils",
    "source_method": "validateHostPortString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.util.NetUtils",
    "source_method": "acceptWithoutTimeout",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.NetUtils",
    "source_method": "getAvailablePort",
    "target_class": "org.apache.flink.util.FileLock"
  },
  {
    "source_class": "org.apache.flink.util.NetUtils",
    "source_method": "unresolvedHostToNormalizedString",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.NetUtils",
    "source_method": "unresolvedHostAndPortToNormalizedString",
    "target_class": "int):java.lang.String \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.NetUtils",
    "source_method": "getPortRangeFromString",
    "target_class": "org.apache.flink.util.UnionIterator"
  },
  {
    "source_class": "org.apache.flink.util.NetUtils",
    "source_method": "createSocketFromPorts",
    "target_class": "org.apache.flink.util.NetUtils.SocketFactory):java.net.ServerSocket \t org.apache.flink.util.NetUtils.SocketFactory"
  },
  {
    "source_class": "org.apache.flink.util.StringValueUtils",
    "source_method": "toLowerCase",
    "target_class": "org.apache.flink.types.StringValue"
  },
  {
    "source_class": "org.apache.flink.util.StringValueUtils",
    "source_method": "replaceNonWordChars",
    "target_class": "char):void \t org.apache.flink.types.StringValue"
  },
  {
    "source_class": "org.apache.flink.util.ClassLoaderUtil",
    "source_method": "getUserCodeClassLoaderInfo",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.LinkedOptionalMap",
    "source_method": "optionalMapOf",
    "target_class": "java.util.function.Function<K,java.lang.String>):org.apache.flink.util.LinkedOptionalMap<K,V> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.util.PropertiesUtil",
    "source_method": "flatten",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.function.CheckedSupplier",
    "source_method": "unchecked",
    "target_class": "org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.util.function.FunctionUtils",
    "source_method": "uncheckedFunction",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.function.FunctionUtils",
    "source_method": "uncheckedConsumer",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.function.FunctionUtils",
    "source_method": "uncheckedSupplier",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.function.FunctionUtils",
    "source_method": "asCallable",
    "target_class": "T):java.util.concurrent.Callable<T> \t org.apache.flink.util.function.RunnableWithException"
  },
  {
    "source_class": "org.apache.flink.util.CloseableIterator",
    "source_method": "fromList",
    "target_class": "java.util.function.Consumer<T>):org.apache.flink.util.CloseableIterator<T> \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.CloseableIterator",
    "source_method": "flatten",
    "target_class": "org.apache.flink.util.IOUtils"
  },
  {
    "source_class": "org.apache.flink.util.IterableUtils",
    "source_method": "toStream",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.Executors",
    "source_method": "directExecutor",
    "target_class": "org.apache.flink.util.concurrent.Executors.DirectExecutor"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "retryOperation",
    "target_class": "java.util.function.Supplier<java.util.concurrent.CompletableFuture<T>>, int, java.util.function.Predicate<java.lang.Throwable>, java.util.concurrent.Executor):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "retryOperationWithDelay",
    "target_class": "java.util.function.Supplier<java.util.concurrent.CompletableFuture<T>>, org.apache.flink.util.concurrent.RetryStrategy, java.util.function.Predicate<java.lang.Throwable>, org.apache.flink.util.concurrent.ScheduledExecutor):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "retrySuccessfulOperationWithDelay",
    "target_class": "java.util.function.Supplier<java.util.concurrent.CompletableFuture<T>>, java.time.Duration, org.apache.flink.api.common.time.Deadline, java.util.function.Predicate<T>, org.apache.flink.util.concurrent.ScheduledExecutor):void \t org.apache.flink.api.common.time.Deadline"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "orTimeout",
    "target_class": "long, java.util.concurrent.TimeUnit, java.lang.String):java.util.concurrent.CompletableFuture<T> \t org.apache.flink.util.concurrent.Executors"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "orTimeout",
    "target_class": "long, java.util.concurrent.TimeUnit, java.util.concurrent.Executor, java.lang.String):java.util.concurrent.CompletableFuture<T> \t org.apache.flink.util.concurrent.FutureUtils.Delayer"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "completeDelayed",
    "target_class": "T, java.time.Duration):void \t org.apache.flink.util.concurrent.FutureUtils.Delayer"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "runAfterwards",
    "target_class": "org.apache.flink.util.function.RunnableWithException):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.util.concurrent.Executors"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "runAfterwardsAsync",
    "target_class": "org.apache.flink.util.function.RunnableWithException, java.util.concurrent.Executor):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "composeAfterwards",
    "target_class": "java.util.function.Supplier<java.util.concurrent.CompletableFuture<?>>):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "combineAll",
    "target_class": "extends java.util.concurrent.CompletableFuture<? extends T>>):org.apache.flink.util.concurrent.FutureUtils.ConjunctFuture<java.util.Collection<T>> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "waitForAll",
    "target_class": "extends java.util.concurrent.CompletableFuture<?>>):org.apache.flink.util.concurrent.FutureUtils.ConjunctFuture<java.lang.Void> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "supplyAsync",
    "target_class": "java.util.concurrent.Executor):java.util.concurrent.CompletableFuture<T> \t org.apache.flink.util.function.SupplierWithException"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "runAsync",
    "target_class": "java.util.concurrent.Executor):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.util.function.RunnableWithException"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "checkStateAndGet",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils.Delayer",
    "source_method": "delay",
    "target_class": "long, java.util.concurrent.TimeUnit):java.util.concurrent.ScheduledFuture<?> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "assertNoException",
    "target_class": "org.apache.flink.util.FatalExitExceptionHandler"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "handleException",
    "target_class": "extends T>, java.lang.Class<E>, java.util.function.Function<? super E,? extends T>):java.util.concurrent.CompletableFuture<T> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "handleUncaughtException",
    "target_class": "java.lang.Thread.UncaughtExceptionHandler):void \t org.apache.flink.util.FatalExitExceptionHandler"
  },
  {
    "source_class": "org.apache.flink.util.concurrent.FutureUtils",
    "source_method": "handleUncaughtException",
    "target_class": "java.lang.Thread.UncaughtExceptionHandler, java.lang.Thread.UncaughtExceptionHandler):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.util.LambdaUtil",
    "source_method": "applyToAllWhileSuppressingExceptions",
    "target_class": "org.apache.flink.util.function.ThrowingConsumer<T,? extends java.lang.Exception>):void \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.util.LambdaUtil",
    "source_method": "withContextClassLoader",
    "target_class": "org.apache.flink.util.function.ThrowingRunnable<E>):void \t org.apache.flink.util.function.ThrowingRunnable"
  },
  {
    "source_class": "org.apache.flink.util.LambdaUtil",
    "source_method": "withContextClassLoader",
    "target_class": "org.apache.flink.util.function.SupplierWithException<R,E>):R \t org.apache.flink.util.TemporaryClassLoaderContext"
  },
  {
    "source_class": "org.apache.flink.util.ReflectionUtil.FullTypeInfo",
    "source_method": "getClazzIterator",
    "target_class": "org.apache.flink.util.UnionIterator"
  },
  {
    "source_class": "org.apache.flink.api.dag.Transformation",
    "source_method": "declareManagedMemoryUseCaseAtOperatorScope",
    "target_class": "int):java.util.Optional<java.lang.Integer> \t org.apache.flink.core.memory.ManagedMemoryUseCase"
  },
  {
    "source_class": "org.apache.flink.api.dag.Transformation",
    "source_method": "declareManagedMemoryUseCaseAtSlotScope",
    "target_class": "org.apache.flink.core.memory.ManagedMemoryUseCase"
  },
  {
    "source_class": "org.apache.flink.api.connector.source.lib.NumberSequenceSource.SplitSerializer",
    "source_method": "serializeV1",
    "target_class": "org.apache.flink.api.connector.source.lib.NumberSequenceSource.NumberSequenceSplit):void \t org.apache.flink.api.connector.source.lib.NumberSequenceSource.NumberSequenceSplit"
  },
  {
    "source_class": "org.apache.flink.api.connector.source.lib.util.IteratorSourceReaderBase",
    "source_method": "finishSplit",
    "target_class": "org.apache.flink.api.connector.source.SourceReaderContext"
  },
  {
    "source_class": "org.apache.flink.api.connector.source.util.ratelimit.RateLimiterStrategy",
    "source_method": "perCheckpoint",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.restartstrategy.RestartStrategies",
    "source_method": "fixedDelayRestart",
    "target_class": "long):org.apache.flink.api.common.restartstrategy.RestartStrategies.RestartStrategyConfiguration \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.api.common.restartstrategy.RestartStrategies",
    "source_method": "fixedDelayRestart",
    "target_class": "org.apache.flink.api.common.time.Time):org.apache.flink.api.common.restartstrategy.RestartStrategies.RestartStrategyConfiguration \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.api.common.restartstrategy.RestartStrategies",
    "source_method": "failureRateRestart",
    "target_class": "org.apache.flink.api.common.time.Time, org.apache.flink.api.common.time.Time):org.apache.flink.api.common.restartstrategy.RestartStrategies.FailureRateRestartStrategyConfiguration \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.api.common.restartstrategy.RestartStrategies",
    "source_method": "exponentialDelayRestart",
    "target_class": "org.apache.flink.api.common.time.Time, double, org.apache.flink.api.common.time.Time, double):org.apache.flink.api.common.restartstrategy.RestartStrategies.ExponentialDelayRestartStrategyConfiguration \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.api.common.restartstrategy.RestartStrategies",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.api.common.distributions.CommonRangeBoundaries",
    "source_method": "compareKeys",
    "target_class": "java.lang.Object[], java.lang.Object[]):int \t org.apache.flink.api.common.typeutils.TypeComparator"
  },
  {
    "source_class": "org.apache.flink.api.common.io.GenericCsvInputFormat",
    "source_method": "max",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FileOutputFormat",
    "source_method": "initDefaultsFromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FinalizeOnMaster",
    "source_method": "finalizeGlobal",
    "target_class": "org.apache.flink.api.common.io.FinalizeOnMaster.FinalizationContext"
  },
  {
    "source_class": "org.apache.flink.api.common.io.DelimitedInputFormat",
    "source_method": "loadConfigParameters",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.io.BinaryInputFormat",
    "source_method": "getFiles",
    "target_class": "org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.api.common.io.BinaryInputFormat",
    "source_method": "createAndReadBlockInfo",
    "target_class": "org.apache.flink.api.common.io.BlockInfo"
  },
  {
    "source_class": "org.apache.flink.api.common.io.BinaryInputFormat",
    "source_method": "createStatistics",
    "target_class": "org.apache.flink.api.common.io.FileInputFormat.FileBaseStatistics):org.apache.flink.api.common.io.BinaryInputFormat.SequentialStatistics \t org.apache.flink.api.common.io.FileInputFormat.FileBaseStatistics"
  },
  {
    "source_class": "org.apache.flink.api.common.io.LocatableInputSplitAssigner",
    "source_method": "isLocal",
    "target_class": "java.lang.String[]):boolean \t org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.api.common.io.LocatableInputSplitAssigner.LocatableInputSplitChooser",
    "source_method": "getNextUnassignedMinLocalCountSplit",
    "target_class": "org.apache.flink.api.common.io.LocatableInputSplitAssigner.LocatableInputSplitWithCount"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FileInputFormat",
    "source_method": "initDefaultsFromConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FileInputFormat",
    "source_method": "initDefaultInflaterInputStreamFactories",
    "target_class": "org.apache.flink.api.common.io.compression.ZStandardInputStreamFactory"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FileInputFormat",
    "source_method": "extractFileExtension",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FileInputFormat",
    "source_method": "getFileStats",
    "target_class": "org.apache.flink.core.fs.Path[], java.util.ArrayList<org.apache.flink.core.fs.FileStatus>):org.apache.flink.api.common.io.FileInputFormat.FileBaseStatistics \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FileInputFormat",
    "source_method": "getFileStats",
    "target_class": "org.apache.flink.core.fs.Path, org.apache.flink.core.fs.FileSystem, java.util.ArrayList<org.apache.flink.core.fs.FileStatus>):org.apache.flink.api.common.io.FileInputFormat.FileBaseStatistics \t org.apache.flink.core.fs.FileStatus"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FileInputFormat",
    "source_method": "testForUnsplittable",
    "target_class": "org.apache.flink.core.fs.FileStatus"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FileInputFormat",
    "source_method": "acceptFile",
    "target_class": "org.apache.flink.core.fs.FileStatus"
  },
  {
    "source_class": "org.apache.flink.api.common.io.FileInputFormat",
    "source_method": "decorateInputStream",
    "target_class": "org.apache.flink.core.fs.FileInputSplit):org.apache.flink.core.fs.FSDataInputStream \t org.apache.flink.api.common.io.compression.InflaterInputStreamFactory"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility",
    "source_method": "compatibleAsIs",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility.Type"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility",
    "source_method": "compatibleAfterMigration",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility.Type"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility",
    "source_method": "compatibleWithReconfiguredSerializer",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility",
    "source_method": "incompatible",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility.Type"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.CompositeSerializer",
    "source_method": "duplicateFieldSerializers",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.CompositeSerializer.PrecomputedParameters",
    "source_method": "precompute",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<java.lang.Object>[]):org.apache.flink.api.common.typeutils.CompositeSerializer.PrecomputedParameters \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.TypeSerializerUtils",
    "source_method": "snapshot",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.BigIntSerializer",
    "source_method": "copyBigInteger",
    "target_class": "org.apache.flink.core.memory.DataOutputView):boolean \t org.apache.flink.core.memory.DataOutputView"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.GenericArraySerializerConfigSnapshot",
    "source_method": "readV2",
    "target_class": "java.lang.ClassLoader):void \t org.apache.flink.api.common.typeutils.NestedSerializersSnapshotDelegate"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.GenericArraySerializerConfigSnapshot",
    "source_method": "getNestedSerializerSnapshots",
    "target_class": "org.apache.flink.api.common.typeutils.NestedSerializersSnapshotDelegate"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.LocalDateComparator",
    "source_method": "putNormalizedKeyLocalDate",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.LocalTimeComparator",
    "source_method": "putNormalizedKeyLocalTime",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.DateComparator",
    "source_method": "putNormalizedKeyDate",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.BigDecSerializer",
    "source_method": "readBigDecimal",
    "target_class": "org.apache.flink.api.common.typeutils.base.BigIntSerializer"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil",
    "source_method": "putByteNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil",
    "source_method": "putCharNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil",
    "source_method": "putBooleanNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil",
    "source_method": "putShortNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil",
    "source_method": "putUnsignedIntegerNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil",
    "source_method": "putUnsignedLongNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.SingleThreadAccessCheckingTypeSerializer",
    "source_method": "writeObject",
    "target_class": "org.apache.flink.api.common.typeutils.SingleThreadAccessCheckingTypeSerializer.SingleThreadAccessChecker"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.TypeSerializerSnapshotSerializationUtil",
    "source_method": "writeSerializerSnapshot",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<T>):void \t org.apache.flink.api.common.typeutils.TypeSerializerSnapshotSerializationUtil.TypeSerializerSnapshotSerializationProxy"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.TypeSerializerSnapshotSerializationUtil",
    "source_method": "readSerializerSnapshot",
    "target_class": "java.lang.ClassLoader):org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<T> \t org.apache.flink.api.common.typeutils.TypeSerializerSnapshotSerializationUtil.TypeSerializerSnapshotSerializationProxy"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.TypeSerializerSnapshotSerializationUtil",
    "source_method": "readAndInstantiateSnapshotClass",
    "target_class": "java.lang.ClassLoader):org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<T> \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.NestedSerializersSnapshotDelegate",
    "source_method": "getRestoredNestedSerializer",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerSnapshot"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.NestedSerializersSnapshotDelegate",
    "source_method": "readNestedSerializerSnapshots",
    "target_class": "java.lang.ClassLoader):org.apache.flink.api.common.typeutils.NestedSerializersSnapshotDelegate \t org.apache.flink.api.common.typeutils.TypeSerializerSnapshot"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.TypeSerializerSnapshot",
    "source_method": "readVersionedSnapshot",
    "target_class": "java.lang.ClassLoader):org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<T> \t org.apache.flink.api.common.typeutils.TypeSerializerSnapshotSerializationUtil"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.CompositeTypeSerializerSnapshot",
    "source_method": "getNestedSerializerSnapshots",
    "target_class": "org.apache.flink.api.common.typeutils.NestedSerializersSnapshotDelegate"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil",
    "source_method": "delegateCompatibilityCheckToNewSnapshot",
    "target_class": "org.apache.flink.api.common.typeutils.CompositeTypeSerializerSnapshot<T,? extends org.apache.flink.api.common.typeutils.TypeSerializer<T>>, org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<?>[]):org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility<T> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil",
    "source_method": "setNestedSerializersSnapshots",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<?>[]):void \t org.apache.flink.api.common.typeutils.CompositeTypeSerializerSnapshot"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil",
    "source_method": "constructIntermediateCompatibilityResult",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<?>[]):org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil.IntermediateCompatibilityResult<T> \t org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil.IntermediateCompatibilityResult"
  },
  {
    "source_class": "org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil.IntermediateCompatibilityResult",
    "source_method": "definedCompatibleAfterMigrationResult",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility.Type"
  },
  {
    "source_class": "org.apache.flink.api.common.eventtime.IndexedCombinedWatermarkStatus",
    "source_method": "forInputsCount",
    "target_class": "org.apache.flink.api.common.eventtime.CombinedWatermarkStatus"
  },
  {
    "source_class": "org.apache.flink.api.common.eventtime.IndexedCombinedWatermarkStatus",
    "source_method": "updateWatermark",
    "target_class": "long):boolean \t org.apache.flink.api.common.eventtime.CombinedWatermarkStatus"
  },
  {
    "source_class": "org.apache.flink.api.common.eventtime.IndexedCombinedWatermarkStatus",
    "source_method": "updateStatus",
    "target_class": "boolean):boolean \t org.apache.flink.api.common.eventtime.CombinedWatermarkStatus"
  },
  {
    "source_class": "org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer",
    "source_method": "registerNewOutput",
    "target_class": "org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer.WatermarkUpdateListener):void \t org.apache.flink.api.common.eventtime.CombinedWatermarkStatus"
  },
  {
    "source_class": "org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer",
    "source_method": "unregisterOutput",
    "target_class": "org.apache.flink.api.common.eventtime.CombinedWatermarkStatus"
  },
  {
    "source_class": "org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer",
    "source_method": "updateCombinedWatermark",
    "target_class": "org.apache.flink.api.common.eventtime.WatermarkOutput"
  },
  {
    "source_class": "org.apache.flink.api.common.eventtime.WatermarksWithIdleness.IdlenessTimer",
    "source_method": "checkIfIdle",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.api.common.functions.util.FunctionUtils",
    "source_method": "openFunction",
    "target_class": "org.apache.flink.api.common.functions.OpenContext):void \t org.apache.flink.api.common.functions.RichFunction"
  },
  {
    "source_class": "org.apache.flink.api.common.functions.util.FunctionUtils",
    "source_method": "closeFunction",
    "target_class": "org.apache.flink.api.common.functions.RichFunction"
  },
  {
    "source_class": "org.apache.flink.api.common.functions.util.FunctionUtils",
    "source_method": "setFunctionRuntimeContext",
    "target_class": "org.apache.flink.api.common.functions.RuntimeContext):void \t org.apache.flink.api.common.functions.RichFunction"
  },
  {
    "source_class": "org.apache.flink.api.common.functions.util.FunctionUtils",
    "source_method": "getFunctionRuntimeContext",
    "target_class": "org.apache.flink.api.common.functions.RuntimeContext):org.apache.flink.api.common.functions.RuntimeContext \t org.apache.flink.api.common.functions.RichFunction"
  },
  {
    "source_class": "org.apache.flink.api.common.JobID",
    "source_method": "fromHexString",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.CollectionExecutor",
    "source_method": "execute",
    "target_class": "org.apache.flink.api.common.Plan"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.CollectionExecutor",
    "source_method": "executeDataSink",
    "target_class": "int, org.apache.flink.api.common.JobInfo):void \t org.apache.flink.api.common.operators.GenericDataSinkBase"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.CollectionExecutor",
    "source_method": "executeDataSource",
    "target_class": "int, org.apache.flink.api.common.JobInfo):java.util.List<OUT> \t org.apache.flink.api.common.operators.GenericDataSourceBase"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.CollectionExecutor",
    "source_method": "executeDeltaIteration",
    "target_class": "org.apache.flink.api.common.JobInfo):java.util.List<T> \t org.apache.flink.api.common.operators.base.DeltaIterationBase"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.SingleInputSemanticProperties",
    "source_method": "isTargetFieldPresent",
    "target_class": "org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.base.BulkIterationBase",
    "source_method": "setTerminationCriterion",
    "target_class": "org.apache.flink.api.common.operators.Operator"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.Ordering",
    "source_method": "getFieldNumber",
    "target_class": "org.apache.flink.api.common.operators.util.FieldList"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.Ordering",
    "source_method": "getFieldPositions",
    "target_class": "org.apache.flink.api.common.operators.util.FieldList"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.Ordering",
    "source_method": "groupsFields",
    "target_class": "org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.ResourceSpec",
    "source_method": "newBuilder",
    "target_class": "int):org.apache.flink.api.common.operators.ResourceSpec.Builder \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.ResourceSpec.Builder",
    "source_method": "build",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.Operator",
    "source_method": "createUnionCascade",
    "target_class": "org.apache.flink.api.common.operators.Operator<T>[]):org.apache.flink.api.common.operators.Operator<T> \t org.apache.flink.api.common.operators.DualInputOperator"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.SlotSharingGroup.Builder",
    "source_method": "setTaskHeapMemory",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.SlotSharingGroup.Builder",
    "source_method": "build",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.Keys.ExpressionKeys",
    "source_method": "isSortKey",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):boolean \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.Keys.ExpressionKeys",
    "source_method": "isSortKey",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):boolean \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.DualInputSemanticProperties",
    "source_method": "isTargetFieldPresent",
    "target_class": "java.util.Map<java.lang.Integer,org.apache.flink.api.common.operators.util.FieldSet>):boolean \t org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.DualInputSemanticProperties",
    "source_method": "addReadFields",
    "target_class": "org.apache.flink.api.common.operators.util.FieldSet):void \t org.apache.flink.api.common.operators.util.FieldSet"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.util.OperatorValidationUtils",
    "source_method": "validateParallelism",
    "target_class": "boolean):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.util.OperatorValidationUtils",
    "source_method": "validateMaxParallelism",
    "target_class": "int, boolean):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.util.OperatorValidationUtils",
    "source_method": "validateResources",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.util.OperatorValidationUtils",
    "source_method": "validateMinAndPreferredResources",
    "target_class": "org.apache.flink.api.common.operators.ResourceSpec):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.operators.util.SlotSharingGroupUtils",
    "source_method": "extractResourceSpec",
    "target_class": "org.apache.flink.api.common.operators.SlotSharingGroup"
  },
  {
    "source_class": "org.apache.flink.api.common.typeinfo.Types",
    "source_method": "TUPLE",
    "target_class": "org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.api.common.typeinfo.Types",
    "source_method": "POJO",
    "target_class": "org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.api.common.typeinfo.Types",
    "source_method": "POJO",
    "target_class": "java.util.Map<java.lang.String,org.apache.flink.api.common.typeinfo.TypeInformation<?>>):org.apache.flink.api.common.typeinfo.TypeInformation<T> \t org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.api.common.typeinfo.Types",
    "source_method": "PRIMITIVE_ARRAY",
    "target_class": "org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.common.typeinfo.Types",
    "source_method": "OBJECT_ARRAY",
    "target_class": "org.apache.flink.api.java.typeutils.ObjectArrayTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo",
    "source_method": "getInfoFor",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.typeinfo.LocalTimeTypeInfo",
    "source_method": "getInfoFor",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.common.typeinfo.TypeInformation",
    "source_method": "of",
    "target_class": "org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.api.common.typeinfo.TypeInformation",
    "source_method": "of",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeHint"
  },
  {
    "source_class": "org.apache.flink.api.common.JobExecutionResult",
    "source_method": "getAccumulatorResult",
    "target_class": "org.apache.flink.util.OptionalFailure"
  },
  {
    "source_class": "org.apache.flink.api.common.state.StateDescriptor",
    "source_method": "setQueryable",
    "target_class": "org.apache.flink.api.common.state.StateTtlConfig"
  },
  {
    "source_class": "org.apache.flink.api.common.state.StateDescriptor",
    "source_method": "enableTimeToLive",
    "target_class": "org.apache.flink.api.common.state.StateTtlConfig"
  },
  {
    "source_class": "org.apache.flink.api.common.state.StateTtlConfig.Builder",
    "source_method": "setTtl",
    "target_class": "org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.api.common.cache.DistributedCache",
    "source_method": "getFile",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.api.common.cache.DistributedCache",
    "source_method": "writeFileInfoToConfig",
    "target_class": "org.apache.flink.api.common.cache.DistributedCache.DistributedCacheEntry, org.apache.flink.configuration.Configuration):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.cache.DistributedCache",
    "source_method": "readFileInfoFromConfig",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.cache.DistributedCache",
    "source_method": "parseCachedFilesFromString",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.api.common.cache.DistributedCache",
    "source_method": "parseStringFromCachedFiles",
    "target_class": "org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.api.common.accumulators.SerializedListAccumulator",
    "source_method": "deserializeList",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):java.util.List<T> \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.api.common.accumulators.AccumulatorHelper",
    "source_method": "toResultMap",
    "target_class": "org.apache.flink.api.common.accumulators.Accumulator"
  },
  {
    "source_class": "org.apache.flink.api.common.accumulators.AccumulatorHelper",
    "source_method": "wrapUnchecked",
    "target_class": "java.util.function.Supplier<R>):org.apache.flink.util.OptionalFailure<R> \t org.apache.flink.util.OptionalFailure"
  },
  {
    "source_class": "org.apache.flink.api.common.accumulators.AccumulatorHelper",
    "source_method": "copy",
    "target_class": "org.apache.flink.api.common.accumulators.Accumulator"
  },
  {
    "source_class": "org.apache.flink.api.common.accumulators.AccumulatorHelper",
    "source_method": "deserializeAccumulators",
    "target_class": "java.lang.ClassLoader):java.util.Map<java.lang.String,org.apache.flink.util.OptionalFailure<java.lang.Object>> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.api.common.accumulators.AccumulatorHelper",
    "source_method": "deserializeAndUnwrapAccumulators",
    "target_class": "java.lang.ClassLoader):java.util.Map<java.lang.String,java.lang.Object> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.api.common.Plan",
    "source_method": "setDefaultParallelism",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.api.common.Plan",
    "source_method": "getMaximumParallelism",
    "target_class": "org.apache.flink.api.common.Plan.MaxDopVisitor"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setClosureCleanerLevel",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getClosureCleanerLevel",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setAutoWatermarkInterval",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getAutoWatermarkInterval",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setLatencyTrackingInterval",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getLatencyTrackingInterval",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "isLatencyTrackingConfigured",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "isPeriodicMaterializeEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "enablePeriodicMaterialize",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getPeriodicMaterializeIntervalMillis",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setPeriodicMaterializeIntervalMillis",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getMaterializationMaxAllowedFailures",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setMaterializationMaxAllowedFailures",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getParallelism",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setParallelism",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "resetParallelism",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getMaxParallelism",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setMaxParallelism",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getTaskCancellationInterval",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setTaskCancellationInterval",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getTaskCancellationTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setTaskCancellationTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getSchedulerType",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getNumberOfExecutionRetries",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setNumberOfExecutionRetries",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setExecutionMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getExecutionMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setForceKryo",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "isForceKryoEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setGenericTypes",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "hasGenericTypesDisabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setAutoGeneratedUids",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "hasAutoGeneratedUIDsEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setForceAvro",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "isForceAvroEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setObjectReuse",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "isObjectReuseEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "getGlobalJobParameters",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setGlobalJobParameters",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "isAutoTypeRegistrationDisabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setAutoTypeRegistration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "isUseSnapshotCompression",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setUseSnapshotCompression",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.api.common.ExecutionConfig",
    "source_method": "setRestartStrategy",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.api.common.time.Deadline",
    "source_method": "timeLeft",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.api.common.time.Deadline",
    "source_method": "timeLeftIfAny",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.api.common.time.Deadline",
    "source_method": "isOverdue",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.api.common.time.Deadline",
    "source_method": "now",
    "target_class": "org.apache.flink.util.clock.SystemClock"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "getUnaryOperatorReturnType",
    "target_class": "java.lang.Class<?>, int, int, int[], org.apache.flink.api.common.typeinfo.TypeInformation<IN>, java.lang.String, boolean):org.apache.flink.api.common.typeinfo.TypeInformation<OUT> \t org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "getBinaryOperatorReturnType",
    "target_class": "java.lang.Class<?>, int, int, int, int[], org.apache.flink.api.common.typeinfo.TypeInformation<IN1>, org.apache.flink.api.common.typeinfo.TypeInformation<IN2>, java.lang.String, boolean):org.apache.flink.api.common.typeinfo.TypeInformation<OUT> \t org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "validateInfo",
    "target_class": "java.lang.reflect.Type, org.apache.flink.api.common.typeinfo.TypeInformation<?>):void \t org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "getTypeInfoFactory",
    "target_class": "org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "getTypeInfoFactory",
    "target_class": "org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "countTypeInHierarchy",
    "target_class": "java.lang.reflect.Type):int \t org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "getClosestFactory",
    "target_class": "java.lang.reflect.Type):org.apache.flink.api.common.typeinfo.TypeInfoFactory<? super OUT> \t org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "materializeTypeVariable",
    "target_class": "java.lang.reflect.TypeVariable<?>):java.lang.reflect.Type \t org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "getTypeOfPojoField",
    "target_class": "java.lang.reflect.Field):org.apache.flink.api.common.typeinfo.TypeInformation<?> \t org.apache.flink.api.java.typeutils.PojoTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "createHadoopWritableTypeInfo",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TypeExtractor",
    "source_method": "validateIfWritable",
    "target_class": "java.lang.reflect.Type):void \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.RowTypeInfo",
    "source_method": "projectFields",
    "target_class": "int[]):org.apache.flink.api.java.typeutils.RowTypeInfo \t org.apache.flink.api.java.typeutils.TupleTypeInfoBase"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.ObjectArrayTypeInfo",
    "source_method": "getInfoFor",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<C>):org.apache.flink.api.java.typeutils.ObjectArrayTypeInfo<T,C> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.ObjectArrayTypeInfo",
    "source_method": "getInfoFor",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.EitherSerializerSnapshot",
    "source_method": "readV2",
    "target_class": "java.lang.ClassLoader):void \t org.apache.flink.api.common.typeutils.NestedSerializersSnapshotDelegate"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.EitherSerializerSnapshot",
    "source_method": "getNestedSerializerSnapshots",
    "target_class": "org.apache.flink.api.common.typeutils.NestedSerializersSnapshotDelegate"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.NullableSerializer",
    "source_method": "checkIfNullSupported",
    "target_class": "org.apache.flink.core.memory.DataOutputSerializer"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.NullableSerializer",
    "source_method": "deserializeNull",
    "target_class": "org.apache.flink.core.memory.DataInputView"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowComparator",
    "source_method": "createAuxiliaryFields",
    "target_class": "org.apache.flink.api.java.typeutils.runtime.NullAwareComparator<java.lang.Object>[]):org.apache.flink.api.java.tuple.Tuple4<int[],java.lang.Integer,java.lang.Integer,java.lang.Boolean> \t org.apache.flink.api.java.typeutils.runtime.NullAwareComparator"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowComparator",
    "source_method": "makeNullAware",
    "target_class": "boolean[]):org.apache.flink.api.java.typeutils.runtime.NullAwareComparator<java.lang.Object>[] \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshotData",
    "source_method": "createFrom",
    "target_class": "java.lang.reflect.Field[], org.apache.flink.api.common.typeutils.TypeSerializer<?>[], java.util.LinkedHashMap<java.lang.Class<?>,org.apache.flink.api.common.typeutils.TypeSerializer<?>>, java.util.Map<java.lang.Class<?>,org.apache.flink.api.common.typeutils.TypeSerializer<?>>):org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshotData<T> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshotData",
    "source_method": "createFrom",
    "target_class": "java.lang.reflect.Field[], org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<?>[], java.util.LinkedHashMap<java.lang.Class<?>,org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<?>>, java.util.Map<java.lang.Class<?>,org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<?>>):org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshotData<T> \t org.apache.flink.util.LinkedOptionalMap"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshotData",
    "source_method": "fieldReader",
    "target_class": "org.apache.flink.api.java.typeutils.runtime.PojoFieldUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.ValueSerializer",
    "source_method": "asKryoRegistrations",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.KryoUtils",
    "source_method": "copy",
    "target_class": "org.apache.flink.api.java.typeutils.runtime.Kryo, org.apache.flink.api.common.typeutils.TypeSerializer<T>):T \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.KryoUtils",
    "source_method": "copy",
    "target_class": "T, org.apache.flink.api.java.typeutils.runtime.Kryo, org.apache.flink.api.common.typeutils.TypeSerializer<T>):T \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.KryoUtils",
    "source_method": "applyRegistrations",
    "target_class": "java.util.Collection<org.apache.flink.api.java.typeutils.runtime.KryoRegistration>, int):void \t org.apache.flink.api.java.typeutils.runtime.KryoRegistration"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.Serializers",
    "source_method": "recursivelyRegisterType",
    "target_class": "org.apache.flink.api.common.ExecutionConfig, java.util.Set<java.lang.Class<?>>):void \t org.apache.flink.api.java.typeutils.AvroUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.Serializers",
    "source_method": "recursivelyRegisterGenericType",
    "target_class": "org.apache.flink.api.common.ExecutionConfig, java.util.Set<java.lang.Class<?>>):void \t org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.Serializers",
    "source_method": "getContainedGenericTypes",
    "target_class": "java.util.List<org.apache.flink.api.java.typeutils.GenericTypeInfo<?>>):void \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData",
    "source_method": "createFrom",
    "target_class": "java.util.LinkedHashMap<java.lang.Class<?>,org.apache.flink.api.common.ExecutionConfig.SerializableSerializer<?>>, java.util.LinkedHashMap<java.lang.Class<?>,java.lang.Class<? extends org.apache.flink.api.java.typeutils.runtime.kryo.Serializer<?>>>, java.util.LinkedHashMap<java.lang.String,org.apache.flink.api.java.typeutils.runtime.KryoRegistration>):org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData<T> \t org.apache.flink.util.LinkedOptionalMap"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData",
    "source_method": "writeKryoRegistrations",
    "target_class": "org.apache.flink.util.LinkedOptionalMap<java.lang.String,org.apache.flink.api.java.typeutils.runtime.KryoRegistration>):void \t org.apache.flink.util.LinkedOptionalMapSerializer"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData",
    "source_method": "writeDefaultKryoSerializerClasses",
    "target_class": "org.apache.flink.util.LinkedOptionalMap<java.lang.Class<?>,java.lang.Class<? extends org.apache.flink.api.java.typeutils.runtime.kryo.Serializer<?>>>):void \t org.apache.flink.util.LinkedOptionalMapSerializer"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData",
    "source_method": "readTypeClass",
    "target_class": "java.lang.ClassLoader):java.lang.Class<T> \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData",
    "source_method": "readKryoRegistrations",
    "target_class": "java.lang.ClassLoader):org.apache.flink.util.LinkedOptionalMap<java.lang.String,org.apache.flink.api.java.typeutils.runtime.KryoRegistration> \t org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData.KryoRegistrationUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData",
    "source_method": "readDefaultKryoSerializers",
    "target_class": "java.lang.ClassLoader):org.apache.flink.util.LinkedOptionalMap<java.lang.Class<?>,org.apache.flink.api.common.ExecutionConfig.SerializableSerializer<?>> \t org.apache.flink.util.LinkedOptionalMapSerializer"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData",
    "source_method": "readDefaultKryoSerializerClasses",
    "target_class": "java.lang.ClassLoader):org.apache.flink.util.LinkedOptionalMap<java.lang.Class<?>,java.lang.Class<? extends org.apache.flink.api.java.typeutils.runtime.kryo.Serializer<?>>> \t org.apache.flink.util.LinkedOptionalMapSerializer"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData.KryoRegistrationUtil",
    "source_method": "writeKryoRegistration",
    "target_class": "org.apache.flink.api.java.typeutils.runtime.KryoRegistration):void \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerSnapshotData.KryoRegistrationUtil",
    "source_method": "tryReadWithSerializerInstance",
    "target_class": "java.lang.ClassLoader, java.lang.String, java.lang.Class<?>):org.apache.flink.api.java.typeutils.runtime.KryoRegistration \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer",
    "source_method": "buildKryoRegistrations",
    "target_class": "java.util.LinkedHashSet<java.lang.Class<?>>, java.util.LinkedHashMap<java.lang.Class<?>,java.lang.Class<? extends org.apache.flink.api.java.typeutils.runtime.kryo.Serializer<?>>>, java.util.LinkedHashMap<java.lang.Class<?>,org.apache.flink.api.common.ExecutionConfig.SerializableSerializer<?>>):java.util.LinkedHashMap<java.lang.String,org.apache.flink.api.java.typeutils.runtime.KryoRegistration> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializer",
    "source_method": "readObject",
    "target_class": "org.apache.flink.api.java.typeutils.runtime.JavaRecordBuilderFactory"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializer",
    "source_method": "getRegisteredSubclassesFromExecutionConfig",
    "target_class": "org.apache.flink.api.common.ExecutionConfig):java.util.LinkedHashSet<java.lang.Class<?>> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializer",
    "source_method": "createRegisteredSubclassSerializers",
    "target_class": "org.apache.flink.api.common.ExecutionConfig):org.apache.flink.api.common.typeutils.TypeSerializer<?>[] \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializer",
    "source_method": "buildSnapshot",
    "target_class": "java.util.LinkedHashMap<java.lang.Class<?>,java.lang.Integer>, org.apache.flink.api.common.typeutils.TypeSerializer<?>[], java.lang.reflect.Field[], org.apache.flink.api.common.typeutils.TypeSerializer<?>[], java.util.Map<java.lang.Class<?>,org.apache.flink.api.common.typeutils.TypeSerializer<?>>, org.apache.flink.api.common.ExecutionConfig):org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot<T> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot",
    "source_method": "restoreSerializers",
    "target_class": "org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot",
    "source_method": "decomposeSubclassSerializerRegistry",
    "target_class": "org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot",
    "source_method": "newPojoHasNewOrRemovedFields",
    "target_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshotData"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot",
    "source_method": "previousSerializerHasNonRegisteredSubclasses",
    "target_class": "org.apache.flink.util.LinkedOptionalMap"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot",
    "source_method": "constructReconfiguredFieldSerializers",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot",
    "source_method": "constructReconfiguredSubclassRegistrations",
    "target_class": "org.apache.flink.util.LinkedOptionalMap<java.lang.Class<?>,org.apache.flink.api.common.typeutils.TypeSerializerSnapshot<?>>, org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil.IntermediateCompatibilityResult<?>):org.apache.flink.api.java.tuple.Tuple2<java.util.LinkedHashMap<java.lang.Class<?>,java.lang.Integer>,org.apache.flink.api.common.typeutils.TypeSerializer<java.lang.Object>[]> \t org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil.IntermediateCompatibilityResult"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowSerializer",
    "source_method": "copyPositionBased",
    "target_class": "org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowSerializer",
    "source_method": "copyNameBased",
    "target_class": "java.util.Set<java.lang.String>):org.apache.flink.types.Row \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowSerializer",
    "source_method": "copyPositionBased",
    "target_class": "org.apache.flink.types.Row):org.apache.flink.types.Row \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowSerializer",
    "source_method": "copyNameBased",
    "target_class": "java.util.Set<java.lang.String>, org.apache.flink.types.Row):org.apache.flink.types.Row \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowSerializer",
    "source_method": "serializePositionBased",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowSerializer",
    "source_method": "serializeNameBased",
    "target_class": "java.util.Set<java.lang.String>, org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowSerializer",
    "source_method": "fillMask",
    "target_class": "org.apache.flink.types.Row, boolean[], boolean, int):void \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.runtime.RowSerializer",
    "source_method": "readKindFromMask",
    "target_class": "org.apache.flink.types.RowKind"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.MultisetTypeInfo",
    "source_method": "getInfoFor",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TupleTypeInfo",
    "source_method": "getBasicTupleTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.BasicTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.typeutils.TupleTypeInfo",
    "source_method": "getBasicAndBasicValueTupleTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.BasicTypeInfo"
  },
  {
    "source_class": "org.apache.flink.api.java.ClosureCleaner",
    "source_method": "canBeSerialized",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.ClosureCleaner",
    "source_method": "ensureSerializable",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.api.java.ClosureCleaner",
    "source_method": "cleanThis0",
    "target_class": "java.lang.Class<?>, java.lang.String):boolean \t org.apache.flink.api.java.This0AccessFinder"
  },
  {
    "source_class": "org.apache.flink.management.jmx.JMXService",
    "source_method": "stopInstance",
    "target_class": "org.apache.flink.management.jmx.JMXServer"
  },
  {
    "source_class": "org.apache.flink.management.jmx.JMXService",
    "source_method": "startJMXServerWithPortRanges",
    "target_class": "org.apache.flink.management.jmx.JMXServer"
  },
  {
    "source_class": "org.apache.flink.streaming.util.typeutils.FieldAccessorFactory",
    "source_method": "getAccessor",
    "target_class": "int, org.apache.flink.api.common.ExecutionConfig):org.apache.flink.streaming.util.typeutils.FieldAccessor<T,F> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.streaming.util.typeutils.FieldAccessorFactory",
    "source_method": "getAccessor",
    "target_class": "java.lang.String, org.apache.flink.api.common.ExecutionConfig):org.apache.flink.streaming.util.typeutils.FieldAccessor<T,F> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.streaming.util.typeutils.FieldAccessorFactory",
    "source_method": "decomposeFieldExpression",
    "target_class": "org.apache.flink.api.common.operators.Keys.ExpressionKeys"
  },
  {
    "source_class": "org.apache.flink.streaming.util.functions.StreamingFunctionUtils",
    "source_method": "setOutputType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<T>, org.apache.flink.api.common.ExecutionConfig):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.util.functions.StreamingFunctionUtils",
    "source_method": "trySetOutputType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<T>, org.apache.flink.api.common.ExecutionConfig):boolean \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.util.functions.StreamingFunctionUtils",
    "source_method": "snapshotFunctionState",
    "target_class": "org.apache.flink.runtime.state.OperatorStateBackend, org.apache.flink.api.common.functions.Function):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.util.functions.StreamingFunctionUtils",
    "source_method": "trySnapshotFunctionState",
    "target_class": "org.apache.flink.runtime.state.OperatorStateBackend, org.apache.flink.api.common.functions.Function):boolean \t org.apache.flink.runtime.state.DefaultOperatorStateBackend"
  },
  {
    "source_class": "org.apache.flink.streaming.util.functions.StreamingFunctionUtils",
    "source_method": "restoreFunctionState",
    "target_class": "org.apache.flink.api.common.functions.Function):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.util.functions.StreamingFunctionUtils",
    "source_method": "tryRestoreFunction",
    "target_class": "org.apache.flink.api.common.functions.Function):boolean \t org.apache.flink.runtime.state.DefaultOperatorStateBackend"
  },
  {
    "source_class": "org.apache.flink.streaming.util.keys.KeySelectorUtil",
    "source_method": "getSelectorForKeys",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<X>, org.apache.flink.api.common.ExecutionConfig):org.apache.flink.api.java.functions.KeySelector<X,org.apache.flink.api.java.tuple.Tuple> \t org.apache.flink.api.common.operators.Keys"
  },
  {
    "source_class": "org.apache.flink.streaming.util.keys.KeySelectorUtil",
    "source_method": "getSelectorForArray",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<X>):org.apache.flink.streaming.util.keys.KeySelectorUtil.ArrayKeySelector<X> \t org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.util.keys.KeySelectorUtil",
    "source_method": "getSelectorForOneKey",
    "target_class": "org.apache.flink.api.common.functions.Partitioner<K>, org.apache.flink.api.common.typeinfo.TypeInformation<X>, org.apache.flink.api.common.ExecutionConfig):org.apache.flink.api.java.functions.KeySelector<X,K> \t org.apache.flink.api.common.typeutils.CompositeType"
  },
  {
    "source_class": "org.apache.flink.streaming.util.graph.StreamGraphUtils",
    "source_method": "validateTransformationUid",
    "target_class": "org.apache.flink.api.dag.Transformation<?>):void \t org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.util.graph.StreamGraphUtils",
    "source_method": "configureBufferTimeout",
    "target_class": "int, org.apache.flink.api.dag.Transformation<T>, long):void \t org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.source.ContinuousFileMonitoringFunction",
    "source_method": "getInputSplitsSortedByModTime",
    "target_class": "org.apache.flink.api.common.io.FileInputFormat"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.source.ContinuousFileReaderOperator",
    "source_method": "processRecord",
    "target_class": "org.apache.flink.api.common.io.InputFormat"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.source.StatefulSequenceSource",
    "source_method": "safeDivide",
    "target_class": "long):int \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.source.datagen.SequenceGenerator",
    "source_method": "safeDivide",
    "target_class": "long):int \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.source.datagen.RandomGenerator",
    "source_method": "arrayGenerator",
    "target_class": "int):org.apache.flink.streaming.api.functions.source.datagen.RandomGenerator<T[]> \t org.apache.flink.streaming.api.functions.source.datagen.DataGenerator"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.source.datagen.RandomGenerator",
    "source_method": "mapGenerator",
    "target_class": "org.apache.flink.streaming.api.functions.source.datagen.DataGenerator<V>, int):org.apache.flink.streaming.api.functions.source.datagen.RandomGenerator<java.util.Map<K,V>> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.source.SerializedCheckpointData",
    "source_method": "fromDeque",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>, org.apache.flink.core.memory.DataOutputSerializer):org.apache.flink.streaming.api.functions.source.SerializedCheckpointData[] \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.source.SerializedCheckpointData",
    "source_method": "toDeque",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>):java.util.ArrayDeque<org.apache.flink.api.java.tuple.Tuple2<java.lang.Long,java.util.Set<T>>> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.source.InputFormatSourceFunction",
    "source_method": "getInputSplits",
    "target_class": "org.apache.flink.runtime.jobgraph.tasks.InputSplitProvider"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSinkHelper",
    "source_method": "commitUpToCheckpoint",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.Buckets"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSinkHelper",
    "source_method": "snapshotState",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.Buckets"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSinkHelper",
    "source_method": "close",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.Buckets"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.BucketStateSerializer",
    "source_method": "getResumableSerializer",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.OutputStreamBasedPartFileWriter.OutputStreamBasedInProgressFileRecoverableSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.BucketStateSerializer",
    "source_method": "getCommitableSerializer",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.OutputStreamBasedPartFileWriter.OutputStreamBasedPendingFileRecoverableSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.Bucket",
    "source_method": "assembleNewPartPath",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.OutputFileConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.Bucket",
    "source_method": "closePartFile",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.InProgressFileWriter"
  },
  {
    "source_class": "org.apache.flink.streaming.api.functions.sink.filesystem.Bucket",
    "source_method": "disposePartFile",
    "target_class": "org.apache.flink.streaming.api.functions.sink.filesystem.InProgressFileWriter"
  },
  {
    "source_class": "org.apache.flink.streaming.api.connector.sink2.CommittableMessageSerializer",
    "source_method": "readCheckpointId",
    "target_class": "org.apache.flink.core.memory.DataInputDeserializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.connector.sink2.StandardSinkTopologies",
    "source_method": "addGlobalCommitter",
    "target_class": "org.apache.flink.util.function.SerializableSupplier<org.apache.flink.api.connector.sink2.Committer<CommT>>, org.apache.flink.util.function.SerializableSupplier<org.apache.flink.core.io.SimpleVersionedSerializer<CommT>>):void \t org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sorted.state.BatchExecutionKeyMapState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.api.common.state.StateDescriptor<S,SV>):IS \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sorted.state.BatchExecutionKeyReducingState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.api.common.state.StateDescriptor<S,SV>):IS \t org.apache.flink.api.common.state.ReducingStateDescriptor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sorted.state.BatchExecutionKeyAggregatingState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.api.common.state.StateDescriptor<S,SV>):IS \t org.apache.flink.api.common.state.AggregatingStateDescriptor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sorted.state.BatchExecutionKeyListState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.api.common.state.StateDescriptor<S,SV>):IS \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sorted.state.BatchExecutionInternalTimeServiceManager",
    "source_method": "create",
    "target_class": "java.lang.ClassLoader, org.apache.flink.streaming.api.operators.KeyContext, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, java.lang.Iterable<org.apache.flink.runtime.state.KeyGroupStatePartitionStreamProvider>, org.apache.flink.streaming.runtime.tasks.StreamTaskCancellationContext):org.apache.flink.streaming.api.operators.InternalTimeServiceManager<K> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sorted.state.BatchExecutionKeyValueState",
    "source_method": "create",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.api.common.state.StateDescriptor<S,SV>):IS \t org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.TimerSerializer",
    "source_method": "computeTotalByteLength",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<?>):int \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.collect.CollectSinkOperatorCoordinator",
    "source_method": "createEmptyResponse",
    "target_class": "org.apache.flink.streaming.api.operators.collect.CollectCoordinationRequest"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.collect.CollectResultFetcher",
    "source_method": "sendRequest",
    "target_class": "long):org.apache.flink.streaming.api.operators.collect.CollectCoordinationResponse \t org.apache.flink.runtime.operators.coordination.CoordinationRequestGateway"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.collect.CollectResultFetcher",
    "source_method": "getAccumulatorResults",
    "target_class": "org.apache.flink.core.execution.JobClient"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.collect.CollectResultFetcher",
    "source_method": "cancelJob",
    "target_class": "org.apache.flink.core.execution.JobClient"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.collect.CollectResultIterator",
    "source_method": "setJobClient",
    "target_class": "org.apache.flink.streaming.api.operators.collect.CollectResultFetcher"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.collect.CollectCoordinationResponse",
    "source_method": "getResults",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.collect.CollectSinkFunction",
    "source_method": "serializeAccumulatorResult",
    "target_class": "java.lang.String, long, java.util.List<byte[]>):byte[] \t org.apache.flink.streaming.api.operators.collect.CollectCoordinationResponse"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.collect.CollectSinkFunction",
    "source_method": "deserializeAccumulatorResult",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.collect.CollectSinkOperator",
    "source_method": "setOperatorEventGateway",
    "target_class": "org.apache.flink.streaming.api.operators.collect.CollectSinkFunction"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.source.SourceOutputWithWatermarks",
    "source_method": "emitPeriodicWatermark",
    "target_class": "org.apache.flink.api.common.eventtime.WatermarkGenerator"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.source.TimestampsAndWatermarks",
    "source_method": "createProgressiveEventTimeLogic",
    "target_class": "org.apache.flink.metrics.MetricGroup, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, long):org.apache.flink.streaming.api.operators.source.TimestampsAndWatermarks<E> \t org.apache.flink.api.common.eventtime.WatermarkStrategy"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.source.TimestampsAndWatermarks",
    "source_method": "createNoOpEventTimeLogic",
    "target_class": "org.apache.flink.metrics.MetricGroup):org.apache.flink.streaming.api.operators.source.TimestampsAndWatermarks<E> \t org.apache.flink.api.common.eventtime.WatermarkStrategy"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.source.WatermarkToDataOutput",
    "source_method": "markActiveInternally",
    "target_class": "org.apache.flink.streaming.runtime.io.PushingAsyncDataInput.DataOutput"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.source.ProgressiveTimestampsAndWatermarks.SplitLocalOutputs",
    "source_method": "releaseOutputForSplit",
    "target_class": "org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.source.ProgressiveTimestampsAndWatermarks.SplitLocalOutputs",
    "source_method": "emitPeriodicWatermark",
    "target_class": "org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.source.ProgressiveTimestampsAndWatermarks.IdlenessManager",
    "source_method": "maybeMarkUnderlyingOutputAsIdle",
    "target_class": "org.apache.flink.api.common.eventtime.WatermarkOutput"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamTaskStateInitializerImpl.KeyGroupStreamIterator",
    "source_method": "unsetOffsetsSkippingIterator",
    "target_class": "org.apache.flink.runtime.state.KeyGroupsStateHandle"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamTaskStateInitializerImpl",
    "source_method": "transform",
    "target_class": "org.apache.flink.runtime.state.StateUtil"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler",
    "source_method": "initializeOperatorState",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateContext"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler",
    "source_method": "closeFromRegistry",
    "target_class": "org.apache.flink.core.fs.CloseableRegistry):void \t org.apache.flink.util.AbstractAutoCloseableRegistry"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler",
    "source_method": "snapshotState",
    "target_class": "java.util.Optional<org.apache.flink.streaming.api.operators.InternalTimeServiceManager<?>>, java.lang.String, long, long, org.apache.flink.runtime.checkpoint.CheckpointOptions, org.apache.flink.runtime.state.CheckpointStreamFactory, boolean):org.apache.flink.streaming.api.operators.OperatorSnapshotFutures \t org.apache.flink.runtime.state.CheckpointableKeyedStateBackend"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler",
    "source_method": "snapshotState",
    "target_class": "java.util.Optional<org.apache.flink.streaming.api.operators.InternalTimeServiceManager<?>>, java.lang.String, long, long, org.apache.flink.runtime.checkpoint.CheckpointOptions, org.apache.flink.runtime.state.CheckpointStreamFactory, org.apache.flink.streaming.api.operators.OperatorSnapshotFutures, org.apache.flink.runtime.state.StateSnapshotContextSynchronousImpl, boolean):void \t org.apache.flink.runtime.state.StateSnapshotContextSynchronousImpl"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler",
    "source_method": "isCanonicalSavepoint",
    "target_class": "org.apache.flink.runtime.checkpoint.SnapshotType"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler",
    "source_method": "prepareCanonicalSavepoint",
    "target_class": "org.apache.flink.core.fs.CloseableRegistry):org.apache.flink.runtime.state.SnapshotStrategyRunner<org.apache.flink.runtime.state.KeyedStateHandle,? extends org.apache.flink.runtime.state.FullSnapshotResources<?>> \t org.apache.flink.runtime.state.CheckpointableKeyedStateBackend"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamingRuntimeContext",
    "source_method": "getTaskManagerRuntimeInfo",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamingRuntimeContext",
    "source_method": "checkPreconditionsAndGetKeyedStateStore",
    "target_class": "org.apache.flink.api.common.state.StateDescriptor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamOperatorFactoryUtil",
    "source_method": "createOperator",
    "target_class": "org.apache.flink.streaming.runtime.tasks.StreamTask<OUT,?>, org.apache.flink.streaming.api.graph.StreamConfig, org.apache.flink.streaming.api.operators.Output<org.apache.flink.streaming.runtime.streamrecord.StreamRecord<OUT>>, org.apache.flink.runtime.operators.coordination.OperatorEventDispatcher):org.apache.flink.api.java.tuple.Tuple2<OP,java.util.Optional<org.apache.flink.streaming.runtime.tasks.ProcessingTimeService>> \t org.apache.flink.streaming.runtime.tasks.StreamTask"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.co.IntervalJoinOperator",
    "source_method": "isLate",
    "target_class": "org.apache.flink.streaming.api.operators.InternalTimerService"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.InternalTimeServiceManagerImpl",
    "source_method": "create",
    "target_class": "java.lang.ClassLoader, org.apache.flink.streaming.api.operators.KeyContext, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, java.lang.Iterable<org.apache.flink.runtime.state.KeyGroupStatePartitionStreamProvider>, org.apache.flink.streaming.runtime.tasks.StreamTaskCancellationContext):org.apache.flink.streaming.api.operators.InternalTimeServiceManagerImpl<K> \t org.apache.flink.runtime.state.CheckpointableKeyedStateBackend"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperator",
    "source_method": "initSourceMetricGroup",
    "target_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperator",
    "source_method": "initReader",
    "target_class": "org.apache.flink.util.function.FunctionWithException"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperator",
    "source_method": "stopInternalServices",
    "target_class": "org.apache.flink.streaming.api.operators.source.TimestampsAndWatermarks"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperator",
    "source_method": "convertToInternalStatus",
    "target_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperator",
    "source_method": "emitLatestWatermark",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorEventGateway"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperator",
    "source_method": "updateMaxDesiredWatermark",
    "target_class": "org.apache.flink.runtime.metrics.groups.InternalSourceReaderMetricGroup"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperator",
    "source_method": "pauseOrResumeSplits",
    "target_class": "java.util.Collection<java.lang.String>):void \t org.apache.flink.api.connector.source.SourceReader"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperator",
    "source_method": "registerReader",
    "target_class": "org.apache.flink.runtime.operators.coordination.OperatorEventGateway"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperator.SourceOperatorAvailabilityHelper",
    "source_method": "update",
    "target_class": "org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SimpleOperatorFactory",
    "source_method": "of",
    "target_class": "org.apache.flink.streaming.api.operators.AbstractUdfStreamOperator"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamSource",
    "source_method": "cancel",
    "target_class": "org.apache.flink.streaming.api.functions.source.SourceFunction.SourceContext"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.InputSelection.Builder",
    "source_method": "from",
    "target_class": "org.apache.flink.streaming.api.operators.InputSelection"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.StreamSourceContexts",
    "source_method": "getSourceContext",
    "target_class": "org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, java.lang.Object, org.apache.flink.streaming.api.operators.Output<org.apache.flink.streaming.runtime.streamrecord.StreamRecord<OUT>>, long, long, boolean):org.apache.flink.streaming.api.functions.source.SourceFunction.SourceContext<OUT> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.TimestampedCollector",
    "source_method": "setTimestamp",
    "target_class": "org.apache.flink.streaming.runtime.streamrecord.StreamRecord"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.TimestampedCollector",
    "source_method": "setAbsoluteTimestamp",
    "target_class": "org.apache.flink.streaming.runtime.streamrecord.StreamRecord"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.TimestampedCollector",
    "source_method": "eraseTimestamp",
    "target_class": "org.apache.flink.streaming.runtime.streamrecord.StreamRecord"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.InternalTimerServiceImpl",
    "source_method": "partitionElementsByKeyGroup",
    "target_class": "org.apache.flink.runtime.state.KeyGroupRange"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sort.MultiInputSortingDataInput",
    "source_method": "wrapInputs",
    "target_class": "org.apache.flink.streaming.runtime.io.StreamTaskInput<java.lang.Object>[], org.apache.flink.api.java.functions.KeySelector<java.lang.Object,K>[], org.apache.flink.api.common.typeutils.TypeSerializer<java.lang.Object>[], org.apache.flink.api.common.typeutils.TypeSerializer<K>, org.apache.flink.streaming.runtime.io.StreamTaskInput<java.lang.Object>[], org.apache.flink.runtime.memory.MemoryManager, org.apache.flink.runtime.io.disk.iomanager.IOManager, boolean, double, org.apache.flink.configuration.Configuration, org.apache.flink.api.common.ExecutionConfig):org.apache.flink.streaming.api.operators.sort.MultiInputSortingDataInput.SelectableSortingInputs \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sort.MultiInputSortingDataInput",
    "source_method": "endSorting",
    "target_class": "org.apache.flink.streaming.api.operators.sort.MultiInputSortingDataInput.CommonContext"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sort.BytesKeyNormalizationUtil",
    "source_method": "putBytesArray",
    "target_class": "int, int, byte[]):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.sort.SortingDataInput",
    "source_method": "endSorting",
    "target_class": "org.apache.flink.runtime.operators.sort.PushSorter"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "getKeyedStateBackend",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "getOperatorStateBackend",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "getOrCreateKeyedState",
    "target_class": "org.apache.flink.api.common.state.StateDescriptor<S,T>):S \t org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "getPartitionedState",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.api.common.state.StateDescriptor<S,?>):S \t org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "internalSetKeyContextElement",
    "target_class": "org.apache.flink.api.java.functions.KeySelector<T,?>):void \t org.apache.flink.streaming.runtime.streamrecord.StreamRecord"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "setCurrentKey",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "getCurrentKey",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "getKeyedStateStore",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "reportOrForwardLatencyMarker",
    "target_class": "org.apache.flink.streaming.util.LatencyStats"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "getInternalTimerService",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.streaming.api.operators.Triggerable<K,N>):org.apache.flink.streaming.api.operators.InternalTimerService<N> \t org.apache.flink.streaming.api.operators.InternalTimeServiceManager"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "processWatermark",
    "target_class": "org.apache.flink.streaming.api.operators.InternalTimeServiceManager"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "reportWatermark",
    "target_class": "int):void \t org.apache.flink.streaming.api.watermark.Watermark"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "processWatermarkStatus",
    "target_class": "int):void \t org.apache.flink.streaming.runtime.watermarkstatus.WatermarkStatus"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperatorV2",
    "source_method": "processRecordAttributes",
    "target_class": "int):void \t org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.async.AsyncWaitOperator",
    "source_method": "waitInFlightInputsFinished",
    "target_class": "org.apache.flink.streaming.api.operators.async.queue.StreamElementQueue"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.async.AsyncWaitOperator",
    "source_method": "tryOnce",
    "target_class": "org.apache.flink.streaming.api.functions.async.AsyncFunction"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.async.AsyncWaitOperator",
    "source_method": "registerTimer",
    "target_class": "long, org.apache.flink.util.function.ThrowingConsumer<java.lang.Void,java.lang.Exception>):java.util.concurrent.ScheduledFuture<?> \t org.apache.flink.util.function.ThrowingConsumer"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.async.AsyncWaitOperator.RetryableResultHandlerDelegator",
    "source_method": "timerTriggered",
    "target_class": "org.apache.flink.streaming.api.operators.async.AsyncWaitOperator.ResultHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.async.AsyncWaitOperator.ResultHandler",
    "source_method": "timerTriggered",
    "target_class": "org.apache.flink.streaming.runtime.streamrecord.StreamRecord"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.SourceOperatorFactory",
    "source_method": "getBoundedness",
    "target_class": "org.apache.flink.api.connector.source.Source"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "getKeyedStateBackend",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "getOperatorStateBackend",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "getOrCreateKeyedState",
    "target_class": "org.apache.flink.api.common.state.StateDescriptor<S,T>):S \t org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "getPartitionedState",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.api.common.state.StateDescriptor<S,?>):S \t org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "setKeyContextElement",
    "target_class": "org.apache.flink.api.java.functions.KeySelector<T,?>):void \t org.apache.flink.streaming.runtime.streamrecord.StreamRecord"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "setCurrentKey",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "getCurrentKey",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "getKeyedStateStore",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorStateHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "reportOrForwardLatencyMarker",
    "target_class": "org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "getInternalTimerService",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<N>, org.apache.flink.streaming.api.operators.Triggerable<K,N>):org.apache.flink.streaming.api.operators.InternalTimerService<N> \t org.apache.flink.streaming.api.operators.InternalTimeServiceManager"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "processWatermark",
    "target_class": "org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "processWatermark",
    "target_class": "int):void \t org.apache.flink.streaming.api.watermark.Watermark"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "processWatermarkStatus",
    "target_class": "org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "processWatermarkStatus",
    "target_class": "int):void \t org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "processRecordAttributes",
    "target_class": "org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "processRecordAttributes1",
    "target_class": "org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.streaming.api.operators.AbstractStreamOperator",
    "source_method": "processRecordAttributes2",
    "target_class": "org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "setSlotSharingGroupResource",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "shouldDisableUnalignedCheckpointing",
    "target_class": "org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "setDynamic",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "configureStreamGraph",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "configureStreamGraphStreaming",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "deriveJobName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "deriveGlobalStreamExchangeModeBatch",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "deriveGlobalStreamExchangeModeStreaming",
    "target_class": "org.apache.flink.streaming.api.environment.CheckpointConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "checkApproximateLocalRecoveryCompatibility",
    "target_class": "org.apache.flink.streaming.api.environment.CheckpointConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "setFineGrainedGlobalStreamExchangeMode",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "shouldExecuteInBatchMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "legacyTransform",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "getBufferTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "transformFeedback",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "transformCoFeedback",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "translate",
    "target_class": "org.apache.flink.api.dag.Transformation<?>):java.util.Collection<java.lang.Integer> \t org.apache.flink.streaming.api.graph.TransformationTranslator"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraphGenerator",
    "source_method": "determineSlotSharingGroup",
    "target_class": "java.util.Collection<java.lang.Integer>):java.lang.String \t org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "getUserArtifacts",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "hasFineGrainedResource",
    "target_class": "org.apache.flink.runtime.clusterframework.types.ResourceProfile"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "isChainingEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "isChainingOfOperatorsWithDifferentMaxParallelismEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "addOperator",
    "target_class": "java.lang.String, java.lang.String, org.apache.flink.streaming.api.operators.StreamOperatorFactory<OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<IN>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>, java.lang.String):void \t org.apache.flink.streaming.api.operators.StreamOperatorFactory"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "addVirtualSideOutputNode",
    "target_class": "java.lang.Integer, org.apache.flink.util.OutputTag):void \t org.apache.flink.util.OutputTag"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "createActualEdge",
    "target_class": "java.lang.Integer, int, org.apache.flink.streaming.runtime.partitioner.StreamPartitioner<?>, org.apache.flink.util.OutputTag, org.apache.flink.streaming.api.transformations.StreamExchangeMode, org.apache.flink.runtime.jobgraph.IntermediateDataSetID):void \t org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "setSerializers",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<?>, org.apache.flink.api.common.typeutils.TypeSerializer<?>, org.apache.flink.api.common.typeutils.TypeSerializer<?>):void \t org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "setSerializers",
    "target_class": "java.util.List<org.apache.flink.api.common.typeinfo.TypeInformation<?>>, org.apache.flink.api.common.typeutils.TypeSerializer<OUT>):void \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "setTransformationUID",
    "target_class": "java.lang.String):void \t org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "setTransformationUserHash",
    "target_class": "java.lang.String):void \t org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "getSourceVertex",
    "target_class": "org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "getTargetVertex",
    "target_class": "org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "removeVertex",
    "target_class": "org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamGraph",
    "source_method": "setSupportsConcurrentExecutionAttempts",
    "target_class": "boolean):void \t org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "createJobGraph",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph, org.apache.flink.api.common.JobID):org.apache.flink.runtime.jobgraph.JobGraph \t org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "createJobGraph",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "waitForSerializationFuturesAndUpdateJobVertices",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "addVertexIndexPrefixInVertexName",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setVertexDescription",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "getChainedOutputNodes",
    "target_class": "org.apache.flink.streaming.api.graph.StreamNode):java.util.LinkedList<java.lang.Integer> \t org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "getDescriptionWithChainedSourcesInfo",
    "target_class": "org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "hasCustomPartitioner",
    "target_class": "org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "buildChainedInputsAndGetHeadInputs",
    "target_class": "java.util.List<java.util.Map<java.lang.Integer,byte[]>>):java.util.Map<java.lang.Integer,org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator.OperatorChainInfo> \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setVertexParallelismsForDynamicGraphIfNecessary",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "getChainedSourcesByVertexId",
    "target_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator.OperatorChainInfo):java.util.List<org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator.ChainedSourceInfo> \t org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "createChainedMinResources",
    "target_class": "java.util.List<org.apache.flink.streaming.api.graph.StreamEdge>):org.apache.flink.api.common.operators.ResourceSpec \t org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "createChainedPreferredResources",
    "target_class": "java.util.List<org.apache.flink.streaming.api.graph.StreamEdge>):org.apache.flink.api.common.operators.ResourceSpec \t org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setOperatorChainedOutputsConfig",
    "target_class": "java.util.List<org.apache.flink.streaming.api.graph.StreamEdge>):void \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setOperatorNonChainedOutputsConfig",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig, java.util.List<org.apache.flink.streaming.api.graph.StreamEdge>, java.util.Map<org.apache.flink.streaming.api.graph.StreamEdge,org.apache.flink.streaming.api.graph.NonChainedOutput>):void \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setVertexNonChainedOutputsConfig",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig, java.util.List<org.apache.flink.streaming.api.graph.StreamEdge>, java.util.Map<java.lang.Integer,java.util.Map<org.apache.flink.streaming.api.graph.StreamEdge,org.apache.flink.streaming.api.graph.NonChainedOutput>>):void \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "createOrReuseOutput",
    "target_class": "java.util.Map<org.apache.flink.streaming.api.graph.StreamEdge,org.apache.flink.streaming.api.graph.NonChainedOutput>, org.apache.flink.streaming.api.graph.StreamEdge, boolean, org.apache.flink.runtime.jobgraph.IntermediateDataSetID, org.apache.flink.runtime.io.network.partition.ResultPartitionType):void \t org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "isPartitionTypeCanBeReuse",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionType"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "allHybridOrSameReconsumablePartitionType",
    "target_class": "org.apache.flink.runtime.io.network.partition.ResultPartitionType):boolean \t org.apache.flink.runtime.io.network.partition.ResultPartitionType"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "isPersistentIntermediateDataset",
    "target_class": "org.apache.flink.streaming.api.graph.StreamEdge):boolean \t org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "checkBufferTimeout",
    "target_class": "org.apache.flink.streaming.api.graph.StreamEdge):void \t org.apache.flink.runtime.io.network.partition.ResultPartitionType"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "getResultPartitionType",
    "target_class": "org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "determineUndefinedResultPartitionType",
    "target_class": "org.apache.flink.streaming.runtime.partitioner.StreamPartitioner"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "isChainable",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph):boolean \t org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "isChainableInput",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph):boolean \t org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "arePartitionerAndExchangeModeChainable",
    "target_class": "org.apache.flink.streaming.api.transformations.StreamExchangeMode, boolean):boolean \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "areOperatorsChainable",
    "target_class": "org.apache.flink.streaming.api.graph.StreamNode, org.apache.flink.streaming.api.graph.StreamGraph):boolean \t org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "getHeadOperator",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph):org.apache.flink.streaming.api.operators.StreamOperatorFactory<?> \t org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "markSupportingConcurrentExecutionAttempts",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setSlotSharing",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "validateHybridShuffleExecuteInBatchMode",
    "target_class": "org.apache.flink.runtime.jobgraph.JobGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "buildVertexRegionSlotSharingGroups",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setCoLocation",
    "target_class": "org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setManagedMemoryFraction",
    "target_class": "java.util.Map<java.lang.Integer,org.apache.flink.streaming.api.graph.StreamConfig>, java.util.Map<java.lang.Integer,java.util.Map<java.lang.Integer,org.apache.flink.streaming.api.graph.StreamConfig>>, java.util.function.Function<java.lang.Integer,java.util.Map<org.apache.flink.core.memory.ManagedMemoryUseCase,java.lang.Integer>>, java.util.function.Function<java.lang.Integer,java.util.Set<org.apache.flink.core.memory.ManagedMemoryUseCase>>):void \t org.apache.flink.runtime.jobgraph.JobVertex"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setManagedMemoryFractionForSlotSharingGroup",
    "target_class": "java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,java.lang.Integer>, java.util.Map<org.apache.flink.runtime.jobgraph.JobVertexID,java.util.Set<java.lang.Integer>>, java.util.Map<java.lang.Integer,org.apache.flink.streaming.api.graph.StreamConfig>, java.util.Map<java.lang.Integer,java.util.Map<java.lang.Integer,org.apache.flink.streaming.api.graph.StreamConfig>>, java.util.function.Function<java.lang.Integer,java.util.Map<org.apache.flink.core.memory.ManagedMemoryUseCase,java.lang.Integer>>, java.util.function.Function<java.lang.Integer,java.util.Set<org.apache.flink.core.memory.ManagedMemoryUseCase>>):void \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "setManagedMemoryFractionForOperator",
    "target_class": "java.util.Set<org.apache.flink.core.memory.ManagedMemoryUseCase>, java.util.Map<org.apache.flink.core.memory.ManagedMemoryUseCase,java.lang.Integer>, java.util.Set<org.apache.flink.core.memory.ManagedMemoryUseCase>, org.apache.flink.streaming.api.graph.StreamConfig):void \t org.apache.flink.runtime.util.config.memory.ManagedMemoryUtils"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "configureCheckpointing",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator",
    "source_method": "nameWithChainedSourcesInfo",
    "target_class": "java.util.Collection<org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator.ChainedSourceInfo>):java.lang.String \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator.OperatorChainInfo",
    "source_method": "recordChainedNode",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setVertexID",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getVertexID",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setManagedMemoryFractionOperatorOfUseCase",
    "target_class": "double):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getManagedMemoryFractionConfigOption",
    "target_class": "org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getAllManagedMemoryUseCases",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setTimeCharacteristic",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getTimeCharacteristic",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getTypeSerializerSideOut",
    "target_class": "java.lang.ClassLoader):org.apache.flink.api.common.typeutils.TypeSerializer<T> \t org.apache.flink.util.OutputTag"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setIterationId",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getIterationId",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setIterationWaitTime",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getIterationWaitTime",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setNumberOfNetworkInputs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getNumberOfNetworkInputs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setNumberOfOutputs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getNumberOfOutputs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setCheckpointingEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "isCheckpointingEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setCheckpointMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getCheckpointMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setUnalignedCheckpointsEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "isUnalignedCheckpointsEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getAlignedCheckpointTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setAlignedCheckpointTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setMaxConcurrentCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getMaxConcurrentCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getMaxSubtasksPerChannelStateFile",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setMaxSubtasksPerChannelStateFile",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setOperatorID",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getOperatorID",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setOperatorName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getOperatorName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setChainIndex",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "getChainIndex",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setStateBackend",
    "target_class": "org.apache.flink.runtime.state.StateBackend"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setStateBackendUsesManagedMemory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setChainStart",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "isChainStart",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setChainEnd",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "isChainEnd",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "setGraphContainingLoops",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "isGraphContainingLoops",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "clearInitialConfigs",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamConfig",
    "source_method": "requiresSorting",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig.InputRequirement"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamNode",
    "source_method": "addInEdge",
    "target_class": "org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.graph.StreamNode",
    "source_method": "addOutEdge",
    "target_class": "org.apache.flink.streaming.api.graph.StreamEdge"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStreamUtils",
    "source_method": "collect",
    "target_class": "java.lang.String):java.util.Iterator<OUT> \t org.apache.flink.streaming.api.datastream.DataStream"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStreamUtils",
    "source_method": "collectWithClient",
    "target_class": "java.lang.String):org.apache.flink.streaming.api.operators.collect.ClientAndIterator<OUT> \t org.apache.flink.streaming.api.datastream.DataStream"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStreamUtils",
    "source_method": "collectBoundedStream",
    "target_class": "java.lang.String):java.util.List<E> \t org.apache.flink.streaming.api.operators.collect.ClientAndIterator"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStreamUtils",
    "source_method": "collectUnboundedStream",
    "target_class": "int, java.lang.String):java.util.List<E> \t org.apache.flink.core.execution.JobClient"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStreamUtils",
    "source_method": "collectRecordsFromUnboundedStream",
    "target_class": "int):java.util.List<E> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStreamUtils",
    "source_method": "reinterpretAsKeyedStream",
    "target_class": "org.apache.flink.api.java.functions.KeySelector<T,K>):org.apache.flink.streaming.api.datastream.KeyedStream<T,K> \t org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStreamUtils",
    "source_method": "reinterpretAsKeyedStream",
    "target_class": "org.apache.flink.api.java.functions.KeySelector<T,K>, org.apache.flink.api.common.typeinfo.TypeInformation<K>):org.apache.flink.streaming.api.datastream.KeyedStream<T,K> \t org.apache.flink.streaming.api.datastream.DataStream"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.BroadcastConnectedStream",
    "source_method": "clean",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStreamSink",
    "source_method": "forSinkFunction",
    "target_class": "org.apache.flink.streaming.api.functions.sink.SinkFunction<T>):org.apache.flink.streaming.api.datastream.DataStreamSink<T> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStreamSink",
    "source_method": "forSink",
    "target_class": "org.apache.flink.api.connector.sink2.Sink<T>, org.apache.flink.streaming.api.datastream.CustomSinkOperatorUidHashes):org.apache.flink.streaming.api.datastream.DataStreamSink<T> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.AsyncDataStream",
    "source_method": "addOperator",
    "target_class": "org.apache.flink.streaming.api.functions.async.AsyncFunction<IN,OUT>, long, int, org.apache.flink.streaming.api.datastream.AsyncDataStream.OutputMode, org.apache.flink.streaming.api.functions.async.AsyncRetryStrategy<OUT>):org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator<OUT> \t org.apache.flink.api.java.Utils"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.AsyncDataStream",
    "source_method": "unorderedWaitWithRetry",
    "target_class": "org.apache.flink.streaming.api.functions.async.AsyncFunction<IN,OUT>, long, java.util.concurrent.TimeUnit, org.apache.flink.streaming.api.functions.async.AsyncRetryStrategy<OUT>):org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator<OUT> \t org.apache.flink.streaming.api.datastream.AsyncDataStream.OutputMode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.AsyncDataStream",
    "source_method": "unorderedWaitWithRetry",
    "target_class": "org.apache.flink.streaming.api.functions.async.AsyncFunction<IN,OUT>, long, java.util.concurrent.TimeUnit, int, org.apache.flink.streaming.api.functions.async.AsyncRetryStrategy<OUT>):org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator<OUT> \t org.apache.flink.streaming.api.datastream.AsyncDataStream.OutputMode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.AsyncDataStream",
    "source_method": "orderedWaitWithRetry",
    "target_class": "org.apache.flink.streaming.api.functions.async.AsyncFunction<IN,OUT>, long, java.util.concurrent.TimeUnit, org.apache.flink.streaming.api.functions.async.AsyncRetryStrategy<OUT>):org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator<OUT> \t org.apache.flink.streaming.api.datastream.AsyncDataStream.OutputMode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.AsyncDataStream",
    "source_method": "orderedWaitWithRetry",
    "target_class": "org.apache.flink.streaming.api.functions.async.AsyncFunction<IN,OUT>, long, java.util.concurrent.TimeUnit, int, org.apache.flink.streaming.api.functions.async.AsyncRetryStrategy<OUT>):org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator<OUT> \t org.apache.flink.streaming.api.datastream.AsyncDataStream.OutputMode"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.StreamProjection",
    "source_method": "extractFieldTypes",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):org.apache.flink.api.common.typeinfo.TypeInformation<?>[] \t org.apache.flink.api.java.typeutils.TupleTypeInfoBase"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.AllWindowedStream",
    "source_method": "getAllWindowFunctionReturnType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<IN>):org.apache.flink.api.common.typeinfo.TypeInformation<OUT> \t org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.AllWindowedStream",
    "source_method": "getProcessAllWindowFunctionReturnType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<IN>):org.apache.flink.api.common.typeinfo.TypeInformation<OUT> \t org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator",
    "source_method": "getSideOutput",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.WindowedStream",
    "source_method": "getWindowFunctionReturnType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<IN>):org.apache.flink.api.common.typeinfo.TypeInformation<OUT> \t org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.WindowedStream",
    "source_method": "getProcessWindowFunctionReturnType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<IN>, java.lang.String):org.apache.flink.api.common.typeinfo.TypeInformation<OUT> \t org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.WindowedStream",
    "source_method": "getAllowedLateness",
    "target_class": "org.apache.flink.streaming.runtime.operators.windowing.WindowOperatorBuilder"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStream",
    "source_method": "getId",
    "target_class": "org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStream",
    "source_method": "getParallelism",
    "target_class": "org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStream",
    "source_method": "getMinResources",
    "target_class": "org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStream",
    "source_method": "getPreferredResources",
    "target_class": "org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStream",
    "source_method": "clean",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.DataStream",
    "source_method": "getExecutionConfig",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.streaming.api.datastream.BroadcastStream",
    "source_method": "clean",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.RemoteStreamEnvironment",
    "source_method": "getEffectiveConfiguration",
    "target_class": "java.lang.String, int, java.lang.String[], java.util.List<java.net.URL>, org.apache.flink.runtime.jobgraph.SavepointRestoreSettings):org.apache.flink.configuration.Configuration \t org.apache.flink.configuration.ConfigUtils"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.RemoteStreamEnvironment",
    "source_method": "getHost",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.RemoteStreamEnvironment",
    "source_method": "getPort",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "setParallelism",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "setRuntimeMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "setMaxParallelism",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "registerSlotSharingGroup",
    "target_class": "org.apache.flink.api.common.operators.SlotSharingGroup"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "setBufferTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "getBufferTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "disableOperatorChaining",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "isChainingEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "isChainingOfOperatorsWithDifferentMaxParallelismEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "enableCheckpointing",
    "target_class": "org.apache.flink.streaming.api.environment.CheckpointConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "enableCheckpointing",
    "target_class": "org.apache.flink.streaming.api.CheckpointingMode):org.apache.flink.streaming.api.environment.StreamExecutionEnvironment \t org.apache.flink.streaming.api.environment.CheckpointConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "enableCheckpointing",
    "target_class": "org.apache.flink.streaming.api.CheckpointingMode, boolean):org.apache.flink.streaming.api.environment.StreamExecutionEnvironment \t org.apache.flink.streaming.api.environment.CheckpointConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "enableCheckpointing",
    "target_class": "org.apache.flink.streaming.api.environment.CheckpointConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "enableChangelogStateBackend",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "isChangelogStateBackendEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "setDefaultSavepointDirectory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "setDefaultSavepointDirectory",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "getDefaultSavepointDirectory",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "registerType",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "setStreamTimeCharacteristic",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "configure",
    "target_class": "java.lang.ClassLoader):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "extractTypeInfoFromCollection",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "fromCollection",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<OUT>):org.apache.flink.streaming.api.datastream.DataStreamSource<OUT> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "readTextFile",
    "target_class": "java.lang.String):org.apache.flink.streaming.api.datastream.DataStreamSource<java.lang.String> \t org.apache.flink.api.java.io.TextInputFormat"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "readFileStream",
    "target_class": "long, org.apache.flink.streaming.api.functions.source.FileMonitoringFunction.WatchType):org.apache.flink.streaming.api.datastream.DataStream<java.lang.String> \t org.apache.flink.streaming.api.datastream.DataStream"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "createFileInput",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<OUT>, java.lang.String, org.apache.flink.streaming.api.functions.source.FileProcessingMode, long):org.apache.flink.streaming.api.datastream.DataStreamSource<OUT> \t org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "execute",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "clearJobListeners",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "executeAsync",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "executeAsync",
    "target_class": "org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "synchronizeClusterDatasetStatus",
    "target_class": "org.apache.flink.streaming.api.transformations.CacheTransformation"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "getStreamGraphGenerator",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "clean",
    "target_class": "org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "getExecutionEnvironment",
    "target_class": "org.apache.flink.api.java.Utils"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "createLocalEnvironment",
    "target_class": "org.apache.flink.configuration.Configuration):org.apache.flink.streaming.api.environment.LocalStreamEnvironment \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "createLocalEnvironment",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "createLocalEnvironmentWithWebUI",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment",
    "source_method": "getPipelineExecutor",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.LocalStreamEnvironment",
    "source_method": "validateAndGetConfiguration",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "disableCheckpointing",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getCheckpointingMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setCheckpointingMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getCheckpointInterval",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setCheckpointInterval",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getCheckpointTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setCheckpointTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getMinPauseBetweenCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setMinPauseBetweenCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getMaxConcurrentCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setMaxConcurrentCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "isForceCheckpointing",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setForceCheckpointing",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "isForceUnalignedCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setForceUnalignedCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getTolerableCheckpointFailureNumber",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setTolerableCheckpointFailureNumber",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setExternalizedCheckpointCleanup",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "enableUnalignedCheckpoints",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "isUnalignedCheckpointsEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getAlignedCheckpointTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setAlignedCheckpointTimeout",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getMaxSubtasksPerChannelStateFile",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setMaxSubtasksPerChannelStateFile",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "isApproximateLocalRecoveryEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "enableApproximateLocalRecovery",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getExternalizedCheckpointCleanup",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "setCheckpointIdOfIgnoredInFlightData",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "getCheckpointIdOfIgnoredInFlightData",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.streaming.api.environment.CheckpointConfig",
    "source_method": "configure",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.evictors.TimeEvictor",
    "source_method": "getMaxTimestamp",
    "target_class": "org.apache.flink.streaming.runtime.operators.windowing.TimestampedValue"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.TumblingProcessingTimeWindows",
    "source_method": "of",
    "target_class": "org.apache.flink.streaming.api.windowing.assigners.WindowStagger"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.TumblingProcessingTimeWindows",
    "source_method": "of",
    "target_class": "java.time.Duration):org.apache.flink.streaming.api.windowing.assigners.TumblingProcessingTimeWindows \t org.apache.flink.streaming.api.windowing.assigners.WindowStagger"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.TumblingProcessingTimeWindows",
    "source_method": "of",
    "target_class": "org.apache.flink.streaming.api.windowing.time.Time, org.apache.flink.streaming.api.windowing.assigners.WindowStagger):org.apache.flink.streaming.api.windowing.assigners.TumblingProcessingTimeWindows \t org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows",
    "source_method": "of",
    "target_class": "org.apache.flink.streaming.api.windowing.assigners.WindowStagger"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows",
    "source_method": "of",
    "target_class": "java.time.Duration):org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows \t org.apache.flink.streaming.api.windowing.assigners.WindowStagger"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows",
    "source_method": "of",
    "target_class": "org.apache.flink.streaming.api.windowing.time.Time, org.apache.flink.streaming.api.windowing.assigners.WindowStagger):org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows \t org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.ProcessingTimeSessionWindows",
    "source_method": "withGap",
    "target_class": "org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.SlidingEventTimeWindows",
    "source_method": "of",
    "target_class": "org.apache.flink.streaming.api.windowing.time.Time, org.apache.flink.streaming.api.windowing.time.Time):org.apache.flink.streaming.api.windowing.assigners.SlidingEventTimeWindows \t org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.SlidingProcessingTimeWindows",
    "source_method": "of",
    "target_class": "org.apache.flink.streaming.api.windowing.time.Time, org.apache.flink.streaming.api.windowing.time.Time):org.apache.flink.streaming.api.windowing.assigners.SlidingProcessingTimeWindows \t org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.api.windowing.assigners.EventTimeSessionWindows",
    "source_method": "withGap",
    "target_class": "org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordProcessorUtils",
    "source_method": "getRecordProcessor",
    "target_class": "org.apache.flink.streaming.api.operators.KeyContextHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordProcessorUtils",
    "source_method": "getRecordProcessor1",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperator"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordProcessorUtils",
    "source_method": "getRecordProcessor2",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperator"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordProcessorUtils",
    "source_method": "hasKeyContext",
    "target_class": "int):boolean \t org.apache.flink.streaming.api.operators.AbstractStreamOperator"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.StreamTaskNetworkInputFactory",
    "source_method": "create",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>, org.apache.flink.runtime.io.disk.iomanager.IOManager, org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve, int, org.apache.flink.runtime.checkpoint.InflightDataRescalingDescriptor, java.util.function.Function<java.lang.Integer,org.apache.flink.streaming.runtime.partitioner.StreamPartitioner<?>>, org.apache.flink.api.common.TaskInfo, org.apache.flink.streaming.runtime.tasks.StreamTask.CanEmitBatchOfRecordsChecker):org.apache.flink.streaming.runtime.io.StreamTaskInput<T> \t org.apache.flink.runtime.checkpoint.InflightDataRescalingDescriptor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.StreamMultipleInputProcessorFactory",
    "source_method": "create",
    "target_class": "org.apache.flink.streaming.runtime.io.checkpointing.CheckpointedInputGate[], org.apache.flink.streaming.api.graph.StreamConfig.InputConfig[], org.apache.flink.runtime.io.disk.iomanager.IOManager, org.apache.flink.runtime.memory.MemoryManager, org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup, org.apache.flink.metrics.Counter, org.apache.flink.streaming.api.operators.MultipleInputStreamOperator<?>, org.apache.flink.streaming.runtime.metrics.WatermarkGauge[], org.apache.flink.streaming.api.graph.StreamConfig, org.apache.flink.configuration.Configuration, org.apache.flink.configuration.Configuration, org.apache.flink.api.common.ExecutionConfig, java.lang.ClassLoader, org.apache.flink.streaming.runtime.tasks.OperatorChain<?,?>, org.apache.flink.runtime.checkpoint.InflightDataRescalingDescriptor, java.util.function.Function<java.lang.Integer,org.apache.flink.streaming.runtime.partitioner.StreamPartitioner<?>>, org.apache.flink.api.common.TaskInfo, org.apache.flink.streaming.runtime.tasks.StreamTask.CanEmitBatchOfRecordsChecker):org.apache.flink.streaming.runtime.io.StreamMultipleInputProcessor \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.ChannelState",
    "source_method": "blockChannel",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.InputChannelInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.ChannelState",
    "source_method": "prioritizeAllAnnouncements",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.InputChannelInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.AlternatingWaitingForFirstBarrierUnaligned",
    "source_method": "stopCheckpoint",
    "target_class": "org.apache.flink.streaming.runtime.io.checkpointing.ChannelState"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.InputProcessorUtil",
    "source_method": "createCheckpointedMultipleInputGate",
    "target_class": "java.util.List<org.apache.flink.runtime.io.network.partition.consumer.IndexedInputGate>[], org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup, org.apache.flink.streaming.runtime.io.checkpointing.CheckpointBarrierHandler, org.apache.flink.streaming.api.graph.StreamConfig):org.apache.flink.streaming.runtime.io.checkpointing.CheckpointedInputGate[] \t org.apache.flink.streaming.runtime.io.checkpointing.UpstreamRecoveryTracker"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.InputProcessorUtil",
    "source_method": "createCheckpointBarrierHandler",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig, org.apache.flink.streaming.runtime.tasks.SubtaskCheckpointCoordinator, java.lang.String, java.util.List<org.apache.flink.runtime.io.network.partition.consumer.IndexedInputGate>[], java.util.List<org.apache.flink.streaming.runtime.io.StreamTaskSourceInput<?>>, org.apache.flink.api.common.operators.MailboxExecutor, org.apache.flink.streaming.runtime.tasks.TimerService):org.apache.flink.streaming.runtime.io.checkpointing.CheckpointBarrierHandler \t org.apache.flink.util.clock.SystemClock"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.InputProcessorUtil",
    "source_method": "createBarrierHandler",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig, org.apache.flink.streaming.runtime.tasks.SubtaskCheckpointCoordinator, java.lang.String, org.apache.flink.api.common.operators.MailboxExecutor, org.apache.flink.streaming.runtime.tasks.TimerService, org.apache.flink.runtime.io.network.partition.consumer.CheckpointableInput[], org.apache.flink.util.clock.Clock, int):org.apache.flink.streaming.runtime.io.checkpointing.SingleCheckpointBarrierHandler \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.InputProcessorUtil",
    "source_method": "registerCheckpointMetrics",
    "target_class": "org.apache.flink.streaming.runtime.io.checkpointing.CheckpointBarrierHandler):void \t org.apache.flink.runtime.metrics.groups.ProxyMetricGroup"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.BarrierAlignmentUtil",
    "source_method": "getTimerDelay",
    "target_class": "org.apache.flink.runtime.io.network.api.CheckpointBarrier):long \t org.apache.flink.runtime.checkpoint.CheckpointOptions"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.BarrierAlignmentUtil",
    "source_method": "createRegisterTimerCallback",
    "target_class": "org.apache.flink.streaming.runtime.tasks.TimerService):org.apache.flink.streaming.runtime.io.checkpointing.BarrierAlignmentUtil.DelayableTimer \t org.apache.flink.api.common.operators.MailboxExecutor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.CheckpointBarrierHandler",
    "source_method": "getAlignmentDurationNanos",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.CheckpointBarrierHandler",
    "source_method": "notifyCheckpoint",
    "target_class": "org.apache.flink.runtime.io.network.api.CheckpointBarrier"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.CheckpointBarrierHandler",
    "source_method": "notifyAbort",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointException):void \t org.apache.flink.runtime.jobgraph.tasks.CheckpointableTask"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.AlternatingCollectingBarriersUnaligned",
    "source_method": "finishCheckpoint",
    "target_class": "org.apache.flink.streaming.runtime.io.checkpointing.ChannelState"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.SingleCheckpointBarrierHandler",
    "source_method": "createUnalignedCheckpointBarrierHandler",
    "target_class": "java.lang.String, org.apache.flink.runtime.jobgraph.tasks.CheckpointableTask, org.apache.flink.util.clock.Clock, boolean, org.apache.flink.runtime.io.network.partition.consumer.CheckpointableInput[]):org.apache.flink.streaming.runtime.io.checkpointing.SingleCheckpointBarrierHandler \t org.apache.flink.runtime.io.network.partition.consumer.CheckpointableInput"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.SingleCheckpointBarrierHandler",
    "source_method": "checkNewCheckpoint",
    "target_class": "org.apache.flink.runtime.io.network.api.CheckpointBarrier"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.CheckpointedInputGate",
    "source_method": "processPriorityEvents",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.BufferOrEvent"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.CheckpointedInputGate",
    "source_method": "handleEmptyBuffer",
    "target_class": "org.apache.flink.runtime.io.network.partition.consumer.InputGate"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.AbstractAlternatingAlignedBarrierHandlerState",
    "source_method": "finishCheckpoint",
    "target_class": "org.apache.flink.streaming.runtime.io.checkpointing.ChannelState"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.checkpointing.AbstractAlignedBarrierHandlerState",
    "source_method": "triggerGlobalCheckpoint",
    "target_class": "org.apache.flink.runtime.io.network.api.CheckpointBarrier):org.apache.flink.streaming.runtime.io.checkpointing.WaitingForFirstBarrier \t org.apache.flink.streaming.runtime.io.checkpointing.BarrierHandlerState.Controller"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordWriterOutput",
    "source_method": "pushToRecordWriter",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordWriterOutput",
    "source_method": "broadcastEvent",
    "target_class": "boolean):void \t org.apache.flink.runtime.io.network.api.writer.RecordWriter"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordWriterOutput",
    "source_method": "alignedBarrierTimeout",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordWriterOutput",
    "source_method": "abortCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointException):void \t org.apache.flink.runtime.io.network.api.writer.RecordWriter"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordWriterOutput",
    "source_method": "flush",
    "target_class": "org.apache.flink.runtime.io.network.api.writer.RecordWriter"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.StreamTaskNetworkInput",
    "source_method": "getRecordDeserializers",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.IOManager):java.util.Map<org.apache.flink.runtime.checkpoint.channel.InputChannelInfo,org.apache.flink.runtime.io.network.api.serialization.SpillingAdaptiveSpanningRecordDeserializer<org.apache.flink.runtime.plugable.DeserializationDelegate<org.apache.flink.streaming.runtime.streamrecord.StreamElement>>> \t org.apache.flink.runtime.io.disk.iomanager.IOManager"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.RecordAttributesCombiner",
    "source_method": "combineIsBacklog",
    "target_class": "org.apache.flink.streaming.runtime.streamrecord.RecordAttributes):java.lang.Boolean \t org.apache.flink.streaming.runtime.streamrecord.RecordAttributes"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.MultipleInputSelectionHandler",
    "source_method": "checkSupportedInputCount",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.MultipleInputSelectionHandler",
    "source_method": "nextSelection",
    "target_class": "org.apache.flink.streaming.api.operators.InputSelectable"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.StreamTwoInputProcessorFactory",
    "source_method": "create",
    "target_class": "org.apache.flink.streaming.runtime.io.checkpointing.CheckpointedInputGate[], org.apache.flink.runtime.io.disk.iomanager.IOManager, org.apache.flink.runtime.memory.MemoryManager, org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup, org.apache.flink.streaming.api.operators.TwoInputStreamOperator<IN1,IN2,?>, org.apache.flink.streaming.runtime.metrics.WatermarkGauge, org.apache.flink.streaming.runtime.metrics.WatermarkGauge, org.apache.flink.streaming.runtime.tasks.OperatorChain<?,?>, org.apache.flink.streaming.api.graph.StreamConfig, org.apache.flink.configuration.Configuration, org.apache.flink.configuration.Configuration, org.apache.flink.api.common.ExecutionConfig, java.lang.ClassLoader, org.apache.flink.metrics.Counter, org.apache.flink.runtime.checkpoint.InflightDataRescalingDescriptor, java.util.function.Function<java.lang.Integer,org.apache.flink.streaming.runtime.partitioner.StreamPartitioner<?>>, org.apache.flink.api.common.TaskInfo, org.apache.flink.streaming.runtime.tasks.StreamTask.CanEmitBatchOfRecordsChecker):org.apache.flink.streaming.runtime.io.StreamMultipleInputProcessor \t org.apache.flink.streaming.runtime.io.RecordProcessorUtils"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.StreamTwoInputProcessorFactory.FinishedOnRestoreWatermarkBypass",
    "source_method": "checkAndForward",
    "target_class": "org.apache.flink.streaming.api.watermark.Watermark"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.StreamMultipleInputProcessor",
    "source_method": "selectFirstReadingInputIndex",
    "target_class": "org.apache.flink.streaming.runtime.io.MultipleInputSelectionHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.StreamMultipleInputProcessor",
    "source_method": "selectNextReadingInputIndex",
    "target_class": "org.apache.flink.streaming.runtime.io.MultipleInputSelectionHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.StreamMultipleInputProcessor",
    "source_method": "fullCheckAndSetAvailable",
    "target_class": "org.apache.flink.streaming.runtime.io.MultipleInputSelectionHandler"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.recovery.DemultiplexingRecordDeserializer.VirtualChannel",
    "source_method": "getNextRecord",
    "target_class": "org.apache.flink.runtime.io.network.api.serialization.RecordDeserializer"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.recovery.DemultiplexingRecordDeserializer.VirtualChannel",
    "source_method": "setNextBuffer",
    "target_class": "org.apache.flink.runtime.io.network.api.serialization.RecordDeserializer"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.recovery.DemultiplexingRecordDeserializer.VirtualChannel",
    "source_method": "clear",
    "target_class": "org.apache.flink.runtime.io.network.api.serialization.RecordDeserializer"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.recovery.DemultiplexingRecordDeserializer",
    "source_method": "create",
    "target_class": "org.apache.flink.runtime.checkpoint.InflightDataRescalingDescriptor, java.util.function.Function<java.lang.Integer,org.apache.flink.runtime.io.network.api.serialization.RecordDeserializer<org.apache.flink.runtime.plugable.DeserializationDelegate<org.apache.flink.streaming.runtime.streamrecord.StreamElement>>>, java.util.function.Function<org.apache.flink.runtime.checkpoint.channel.InputChannelInfo,java.util.function.Predicate<org.apache.flink.streaming.runtime.streamrecord.StreamRecord<T>>>):org.apache.flink.streaming.runtime.io.recovery.DemultiplexingRecordDeserializer<T> \t org.apache.flink.runtime.checkpoint.RescaleMappings"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.io.recovery.RescalingStreamTaskNetworkInput",
    "source_method": "getRecordDeserializers",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>, org.apache.flink.runtime.io.disk.iomanager.IOManager, org.apache.flink.runtime.checkpoint.InflightDataRescalingDescriptor, java.util.function.Function<java.lang.Integer,org.apache.flink.streaming.runtime.partitioner.StreamPartitioner<?>>, org.apache.flink.api.common.TaskInfo):java.util.Map<org.apache.flink.runtime.checkpoint.channel.InputChannelInfo,org.apache.flink.streaming.runtime.io.recovery.DemultiplexingRecordDeserializer<T>> \t org.apache.flink.streaming.runtime.io.checkpointing.CheckpointedInputGate"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.operators.GenericWriteAheadSink",
    "source_method": "saveHandleInState",
    "target_class": "long):void \t org.apache.flink.runtime.state.CheckpointStateOutputStream"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.operators.GenericWriteAheadSink",
    "source_method": "cleanRestoredHandles",
    "target_class": "org.apache.flink.streaming.runtime.operators.CheckpointCommitter"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.operators.sink.committables.CommitRequestImpl",
    "source_method": "setCommittedIfNoError",
    "target_class": "org.apache.flink.metrics.groups.SinkCommitterMetricGroup"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.operators.sink.committables.CommittableCollector",
    "source_method": "of",
    "target_class": "org.apache.flink.metrics.groups.SinkCommitterMetricGroup):org.apache.flink.streaming.runtime.operators.sink.committables.CommittableCollector<CommT> \t org.apache.flink.api.common.TaskInfo"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.operators.sink.StatefulSinkWriterStateHandler",
    "source_method": "cast",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.operators.windowing.TimestampedValue",
    "source_method": "from",
    "target_class": "org.apache.flink.streaming.runtime.streamrecord.StreamRecord"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.operators.windowing.MergingWindowSet",
    "source_method": "persist",
    "target_class": "org.apache.flink.api.common.state.ListState"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.operators.windowing.WindowOperatorBuilder",
    "source_method": "allowedLateness",
    "target_class": "org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.operators.windowing.WindowOperator.WindowContext",
    "source_method": "clear",
    "target_class": "org.apache.flink.streaming.runtime.operators.windowing.functions.InternalWindowFunction"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SourceStreamTask",
    "source_method": "interruptSourceThread",
    "target_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SourceStreamTask",
    "source_method": "isSynchronousSavepoint",
    "target_class": "org.apache.flink.runtime.checkpoint.SnapshotType"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.TestProcessingTimeService",
    "source_method": "setCurrentTime",
    "target_class": "org.apache.flink.streaming.runtime.tasks.TestProcessingTimeService.CallbackTask"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.TestProcessingTimeService.CallbackTask",
    "source_method": "onProcessingTime",
    "target_class": "org.apache.flink.api.common.operators.ProcessingTimeService.ProcessingTimeCallback"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain",
    "source_method": "getTailOperator",
    "target_class": "org.apache.flink.streaming.runtime.tasks.StreamOperatorWrapper"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain",
    "source_method": "snapshotChannelStates",
    "target_class": "org.apache.flink.runtime.checkpoint.channel.ChannelStateWriter.ChannelStateWriteResult, org.apache.flink.streaming.api.operators.OperatorSnapshotFutures):void \t org.apache.flink.runtime.checkpoint.channel.ChannelStateWriter.ChannelStateWriteResult"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain",
    "source_method": "getOperatorRecordsOutCounter",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig):org.apache.flink.metrics.Counter \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain",
    "source_method": "createNumRecordsOutCounter",
    "target_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain",
    "source_method": "createOperator",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig, java.lang.ClassLoader, org.apache.flink.streaming.runtime.tasks.WatermarkGaugeExposingOutput<org.apache.flink.streaming.runtime.streamrecord.StreamRecord<OUT>>, java.util.List<org.apache.flink.streaming.runtime.tasks.StreamOperatorWrapper<?,?>>, boolean):OP \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain",
    "source_method": "linkOperatorWrappers",
    "target_class": "org.apache.flink.streaming.runtime.tasks.StreamOperatorWrapper"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain",
    "source_method": "createOperatorWrapper",
    "target_class": "org.apache.flink.streaming.runtime.tasks.StreamTask<?,?>, org.apache.flink.streaming.api.graph.StreamConfig, java.util.Optional<org.apache.flink.streaming.runtime.tasks.ProcessingTimeService>, boolean):org.apache.flink.streaming.runtime.tasks.StreamOperatorWrapper<T,P> \t org.apache.flink.streaming.runtime.tasks.StreamTask"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain",
    "source_method": "sendAcknowledgeCheckpointEvent",
    "target_class": "org.apache.flink.streaming.runtime.tasks.OperatorEventDispatcherImpl"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamOperatorWrapper",
    "source_method": "finish",
    "target_class": "org.apache.flink.runtime.io.network.api.StopMode):void \t org.apache.flink.streaming.runtime.tasks.StreamTaskActionExecutor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamOperatorWrapper",
    "source_method": "sendFinishedMail",
    "target_class": "org.apache.flink.api.common.operators.MailboxExecutor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamOperatorWrapper",
    "source_method": "finishOperator",
    "target_class": "org.apache.flink.streaming.runtime.tasks.StreamTaskActionExecutor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "injectChannelStateWriterIntoChannels",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "prepareInputSnapshot",
    "target_class": "long):java.util.concurrent.CompletableFuture<java.lang.Void> \t org.apache.flink.streaming.runtime.io.StreamInputProcessor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "processInput",
    "target_class": "org.apache.flink.runtime.metrics.groups.TaskIOMetricGroup"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "notifyEndOfData",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "createStreamTaskStateInitializer",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "restoreStateAndGates",
    "target_class": "org.apache.flink.runtime.checkpoint.SubTaskInitializationMetricsBuilder"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "scheduleBufferDebloater",
    "target_class": "org.apache.flink.api.common.operators.MailboxExecutor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "debloat",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "runMailboxStep",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "isMailboxLoopRunning",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "runMailboxLoop",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "areCheckpointsWithFinishedTasksEnabled",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "taskIsAvailable",
    "target_class": "org.apache.flink.runtime.io.AvailabilityProvider"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "getCanEmitBatchOfRecords",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "releaseOutputResources",
    "target_class": "org.apache.flink.streaming.runtime.tasks.StreamTaskActionExecutor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "closeAllOperators",
    "target_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "isSerializingTimestamps",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "getName",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "getTaskNameWithSubtaskAndId",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "getCheckpointStorage",
    "target_class": "org.apache.flink.streaming.runtime.tasks.SubtaskCheckpointCoordinator"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "getStreamOutputs",
    "target_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "triggerUnfinishedChannelsCheckpoint",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions):boolean \t org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "isSynchronous",
    "target_class": "org.apache.flink.runtime.checkpoint.SnapshotType"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "notifyCheckpointOperation",
    "target_class": "java.lang.String):java.util.concurrent.Future<java.lang.Void> \t org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "tryShutdownTimerService",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "createStateBackend",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "createCheckpointStorage",
    "target_class": "org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "createRecordWriters",
    "target_class": "org.apache.flink.runtime.execution.Environment):java.util.List<org.apache.flink.runtime.io.network.api.writer.RecordWriter<org.apache.flink.runtime.plugable.SerializationDelegate<org.apache.flink.streaming.runtime.streamrecord.StreamRecord<OUT>>>> \t org.apache.flink.streaming.api.graph.NonChainedOutput"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "replaceForwardPartitionerIfConsumerParallelismDoesNotMatch",
    "target_class": "org.apache.flink.streaming.api.graph.NonChainedOutput, int):void \t org.apache.flink.streaming.api.graph.NonChainedOutput"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "createRecordWriter",
    "target_class": "int, org.apache.flink.runtime.execution.Environment, java.lang.String, long):org.apache.flink.runtime.io.network.api.writer.RecordWriter<org.apache.flink.runtime.plugable.SerializationDelegate<org.apache.flink.streaming.runtime.streamrecord.StreamRecord<OUT>>> \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.StreamTask",
    "source_method": "deferCallbackToMailbox",
    "target_class": "org.apache.flink.api.common.operators.ProcessingTimeService.ProcessingTimeCallback):org.apache.flink.api.common.operators.ProcessingTimeService.ProcessingTimeCallback \t org.apache.flink.api.common.operators.MailboxExecutor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SubtaskCheckpointCoordinatorImpl",
    "source_method": "registerAlignmentTimer",
    "target_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain<?,?>, org.apache.flink.runtime.io.network.api.CheckpointBarrier):void \t org.apache.flink.runtime.io.network.api.CheckpointBarrier"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SubtaskCheckpointCoordinatorImpl",
    "source_method": "prepareInflightDataSnapshot",
    "target_class": "org.apache.flink.util.function.BiFunctionWithException"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SubtaskCheckpointCoordinatorImpl",
    "source_method": "finishAndReportAsync",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointMetaData, org.apache.flink.runtime.checkpoint.CheckpointMetricsBuilder, boolean, boolean, java.util.function.Supplier<java.lang.Boolean>):void \t org.apache.flink.streaming.runtime.tasks.AsyncCheckpointRunnable"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SubtaskCheckpointCoordinatorImpl",
    "source_method": "unregisterConsumer",
    "target_class": "org.apache.flink.streaming.runtime.tasks.AsyncCheckpointRunnable"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SubtaskCheckpointCoordinatorImpl",
    "source_method": "logCheckpointProcessingDelay",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointMetaData"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.RegularOperatorChain",
    "source_method": "checkpointStreamOperator",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointMetaData, org.apache.flink.runtime.checkpoint.CheckpointOptions, org.apache.flink.runtime.state.CheckpointStreamFactory, java.util.function.Supplier<java.lang.Boolean>):org.apache.flink.streaming.api.operators.OperatorSnapshotFutures \t org.apache.flink.runtime.checkpoint.CheckpointMetaData"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.AsyncCheckpointRunnable",
    "source_method": "finalizedFinishedSnapshots",
    "target_class": "org.apache.flink.streaming.api.operators.OperatorSnapshotFutures"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.AsyncCheckpointRunnable",
    "source_method": "finalizeNonFinishedSnapshots",
    "target_class": "org.apache.flink.runtime.checkpoint.TaskStateSnapshot"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "prepareClose",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.TaskMailbox"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "drain",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.TaskMailbox"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "runMailboxLoop",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxDefaultAction"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "runMailboxStep",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxDefaultAction"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "sendPoisonMail",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.TaskMailbox"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "sendControlMail",
    "target_class": "java.lang.String, java.lang.Object[]):void \t org.apache.flink.streaming.runtime.tasks.mailbox.TaskMailbox"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "runMail",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.Mail"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "maybePauseIdleTimer",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor.DefaultActionSuspension"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "maybeRestartIdleTimer",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor.DefaultActionSuspension"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor",
    "source_method": "suspendDefaultAction",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.TaskMailbox"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxExecutorImpl",
    "source_method": "isIdle",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.TaskMailbox"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.TaskMailboxImpl",
    "source_method": "takeOrNull",
    "target_class": "int):org.apache.flink.streaming.runtime.tasks.mailbox.Mail \t org.apache.flink.streaming.runtime.tasks.mailbox.Mail"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxMetricsController",
    "source_method": "measureMailboxLatency",
    "target_class": "org.apache.flink.api.common.operators.MailboxExecutor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.MultipleInputStreamTask",
    "source_method": "isSynchronous",
    "target_class": "org.apache.flink.runtime.checkpoint.SnapshotType"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.MultipleInputStreamTask",
    "source_method": "triggerSourcesCheckpointAsync",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions):java.util.concurrent.CompletableFuture<java.lang.Boolean> \t org.apache.flink.api.common.operators.MailboxExecutor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.MultipleInputStreamTask",
    "source_method": "triggerStopWithSavepointAsync",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions):java.util.concurrent.CompletableFuture<java.lang.Boolean> \t org.apache.flink.runtime.checkpoint.CheckpointOptions"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.MultipleInputStreamTask",
    "source_method": "emitBarrierForSources",
    "target_class": "org.apache.flink.streaming.runtime.tasks.OperatorChain"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.ProcessingTimeServiceImpl",
    "source_method": "addQuiesceProcessingToCallback",
    "target_class": "org.apache.flink.api.common.operators.ProcessingTimeService.ProcessingTimeCallback"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.OperatorEventDispatcherImpl",
    "source_method": "dispatchEventToHandlers",
    "target_class": "org.apache.flink.util.SerializedValue<org.apache.flink.runtime.operators.coordination.OperatorEvent>):void \t org.apache.flink.util.SerializedValue"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SourceOperatorStreamTask",
    "source_method": "isSynchronous",
    "target_class": "org.apache.flink.runtime.checkpoint.SnapshotType"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SourceOperatorStreamTask",
    "source_method": "cleanupOldCheckpoints",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.tasks.SourceOperatorStreamTask",
    "source_method": "maybeResumeProcessing",
    "target_class": "org.apache.flink.streaming.runtime.tasks.mailbox.MailboxProcessor"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.translators.SinkTransformationTranslator.SinkExpander",
    "source_method": "addFailOverRegion",
    "target_class": "org.apache.flink.streaming.api.datastream.DataStream"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.translators.SinkTransformationTranslator.SinkExpander",
    "source_method": "adjustTransformations",
    "target_class": "java.util.function.Function<org.apache.flink.streaming.api.datastream.DataStream<I>,R>, boolean, boolean):R \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.translators.SinkTransformationTranslator.SinkExpander",
    "source_method": "setOperatorUidHashIfPossible",
    "target_class": "java.lang.String, java.lang.String):void \t org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.translators.BatchExecutionUtils",
    "source_method": "applyBatchExecutionSettings",
    "target_class": "org.apache.flink.streaming.api.graph.TransformationTranslator.Context, org.apache.flink.streaming.api.graph.StreamConfig.InputRequirement[]):void \t org.apache.flink.streaming.api.graph.TransformationTranslator.Context"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.translators.BatchExecutionUtils",
    "source_method": "deriveMemoryWeight",
    "target_class": "org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.translators.BatchExecutionUtils",
    "source_method": "isInputSelectable",
    "target_class": "org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.translators.BatchExecutionUtils",
    "source_method": "adjustChainingStrategy",
    "target_class": "org.apache.flink.streaming.api.graph.StreamNode"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve",
    "source_method": "getIndexSets",
    "target_class": "org.apache.flink.streaming.runtime.io.checkpointing.CheckpointedInputGate"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve",
    "source_method": "inputWatermarkStatus",
    "target_class": "int, org.apache.flink.streaming.runtime.io.PushingAsyncDataInput.DataOutput<?>):void \t org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve.SubpartitionStatus"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve",
    "source_method": "findAndOutputNewMinWatermarkAcrossAlignedSubpartitions",
    "target_class": "org.apache.flink.streaming.runtime.watermarkstatus.HeapPriorityQueue"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve",
    "source_method": "markWatermarkAligned",
    "target_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve.SubpartitionStatus"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve",
    "source_method": "markWatermarkUnaligned",
    "target_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve.SubpartitionStatus"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve",
    "source_method": "adjustAlignedSubpartitionStatuses",
    "target_class": "org.apache.flink.streaming.runtime.watermarkstatus.HeapPriorityQueue"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve",
    "source_method": "findAndOutputMaxWatermarkAcrossAllSubpartitions",
    "target_class": "org.apache.flink.streaming.runtime.io.PushingAsyncDataInput.DataOutput"
  },
  {
    "source_class": "org.apache.flink.streaming.runtime.watermarkstatus.StatusWatermarkValve.SubpartitionStatus",
    "source_method": "addTo",
    "target_class": "org.apache.flink.streaming.runtime.watermarkstatus.HeapPriorityQueue"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcService",
    "source_method": "startSupervisorActor",
    "target_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcService.Supervisor"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcActor",
    "source_method": "handleControlMessage",
    "target_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcActor.RpcEndpointTerminationResult"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcActor",
    "source_method": "serializeRemoteResultAndVerifySize",
    "target_class": "java.lang.String):org.apache.flink.types.Either<org.apache.flink.runtime.rpc.pekko.RpcSerializedValue,org.apache.flink.runtime.rpc.exceptions.RpcException> \t org.apache.flink.runtime.rpc.pekko.RpcSerializedValue"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.ActorSystemBootstrapTools",
    "source_method": "startRemoteActorSystem",
    "target_class": "java.lang.String, java.lang.String, org.apache.flink.runtime.rpc.pekko.Logger):org.apache.flink.runtime.rpc.pekko.ActorSystem \t org.apache.flink.runtime.rpc.pekko.PekkoUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.ActorSystemBootstrapTools",
    "source_method": "startRemoteActorSystem",
    "target_class": "java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Optional<java.lang.Integer>, org.apache.flink.runtime.rpc.pekko.Logger, org.apache.flink.runtime.rpc.pekko.Config, org.apache.flink.runtime.rpc.pekko.Config):org.apache.flink.runtime.rpc.pekko.ActorSystem \t org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.ActorSystemBootstrapTools",
    "source_method": "startRemoteActorSystem",
    "target_class": "java.lang.String, java.lang.String, int, java.lang.String, int, org.apache.flink.runtime.rpc.pekko.Logger, org.apache.flink.runtime.rpc.pekko.Config, org.apache.flink.runtime.rpc.pekko.Config):org.apache.flink.runtime.rpc.pekko.ActorSystem \t org.apache.flink.runtime.rpc.pekko.PekkoUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.ActorSystemBootstrapTools",
    "source_method": "startLocalActorSystem",
    "target_class": "java.lang.String, org.apache.flink.runtime.rpc.pekko.Logger, org.apache.flink.runtime.rpc.pekko.Config, org.apache.flink.runtime.rpc.pekko.Config):org.apache.flink.runtime.rpc.pekko.ActorSystem \t org.apache.flink.runtime.rpc.pekko.PekkoUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.ActorSystemBootstrapTools",
    "source_method": "startActorSystem",
    "target_class": "java.lang.String, org.apache.flink.runtime.rpc.pekko.Logger):org.apache.flink.runtime.rpc.pekko.ActorSystem \t org.apache.flink.runtime.rpc.pekko.PekkoUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.ActorSystemBootstrapTools",
    "source_method": "getForkJoinExecutorConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.ActorSystemBootstrapTools",
    "source_method": "getRemoteForkJoinExecutorConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceConfiguration",
    "source_method": "fromConfiguration",
    "target_class": "org.apache.flink.configuration.AkkaOptions"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.SupervisorActor",
    "source_method": "getActorName",
    "target_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.SupervisorActor",
    "source_method": "startRpcActor",
    "target_class": "org.apache.flink.runtime.rpc.pekko.SupervisorActor.StartRpcActor.PropsFactory, java.lang.String):org.apache.flink.runtime.rpc.pekko.SupervisorActor.StartRpcActorResponse \t org.apache.flink.runtime.rpc.RpcUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.SupervisorActor",
    "source_method": "createStartRpcActorMessage",
    "target_class": "java.lang.String):org.apache.flink.runtime.rpc.pekko.SupervisorActor.StartRpcActor \t org.apache.flink.runtime.rpc.pekko.SupervisorActor.StartRpcActor"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "getBasicConfig",
    "target_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils.ConfigBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "getThreadPoolExecutorConfig",
    "target_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils.ConfigBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "getForkJoinExecutorConfig",
    "target_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils.ConfigBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "addBaseRemoteConfig",
    "target_class": "org.apache.flink.configuration.Configuration, int, int):void \t org.apache.flink.util.TimeUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "addHostnameRemoteConfig",
    "target_class": "java.lang.String, java.lang.String):void \t org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "addSslRemoteConfig",
    "target_class": "org.apache.flink.configuration.Configuration):void \t org.apache.flink.runtime.rpc.pekko.PekkoUtils.ConfigBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "addRemoteForkJoinExecutorConfig",
    "target_class": "org.apache.flink.runtime.rpc.RpcSystem.ForkJoinExecutorConfiguration):org.apache.flink.runtime.rpc.pekko.Config \t org.apache.flink.runtime.rpc.pekko.PekkoUtils.ConfigBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "createActorSystem",
    "target_class": "org.apache.flink.runtime.rpc.pekko.Config):org.apache.flink.runtime.rpc.pekko.ActorSystem \t org.apache.flink.runtime.rpc.pekko.RobustActorSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "getConfig",
    "target_class": "org.apache.flink.runtime.rpc.pekko.HostAndPort, org.apache.flink.runtime.rpc.pekko.HostAndPort, org.apache.flink.runtime.rpc.pekko.Config):org.apache.flink.runtime.rpc.pekko.Config \t org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "getAddress",
    "target_class": "org.apache.flink.runtime.rpc.pekko.RemoteAddressExtension"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoUtils",
    "source_method": "terminateActorSystem",
    "target_class": "org.apache.flink.util.function.FunctionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoInvocationHandler",
    "source_method": "deserializeValueIfNeeded",
    "target_class": "java.lang.reflect.Method, java.lang.ClassLoader):java.lang.Object \t org.apache.flink.runtime.rpc.pekko.RpcSerializedValue"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoInvocationHandler",
    "source_method": "resolveTimeoutException",
    "target_class": "java.lang.Throwable, java.lang.String, org.apache.flink.runtime.rpc.messages.RpcInvocation):java.lang.Throwable \t org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.RpcSerializedValue",
    "source_method": "valueOf",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils",
    "source_method": "createRemoteRpcService",
    "target_class": "java.lang.String, java.lang.String, java.lang.String, java.util.Optional<java.lang.Integer>):org.apache.flink.runtime.rpc.pekko.PekkoRpcService \t org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils.PekkoRpcServiceBuilder"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils",
    "source_method": "getRpcUrl",
    "target_class": "int, java.lang.String, org.apache.flink.runtime.rpc.AddressResolution, org.apache.flink.configuration.Configuration):java.lang.String \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils",
    "source_method": "getRpcUrl",
    "target_class": "int, java.lang.String, org.apache.flink.runtime.rpc.AddressResolution, org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils.Protocol):java.lang.String \t org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils",
    "source_method": "protocolToString",
    "target_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils.Protocol"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.pekko.PekkoRpcServiceUtils",
    "source_method": "extractMaximumFramesize",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.concurrent.pekko.ScalaFutureUtils",
    "source_method": "toJava",
    "target_class": "org.apache.flink.runtime.concurrent.pekko.ScalaFutureUtils.DirectExecutionContext"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.MainThreadValidatorUtil",
    "source_method": "enterMainThread",
    "target_class": "org.apache.flink.runtime.rpc.RpcEndpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.MainThreadValidatorUtil",
    "source_method": "exitMainThread",
    "target_class": "org.apache.flink.runtime.rpc.RpcEndpoint"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.RpcEndpoint",
    "source_method": "validateResourceClosed",
    "target_class": "org.apache.flink.runtime.rpc.RpcEndpoint.MainThreadExecutor"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.RpcGatewayUtils",
    "source_method": "extractRpcTimeout",
    "target_class": "java.lang.Object[], java.time.Duration):java.time.Duration \t org.apache.flink.util.TimeUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.RpcServiceUtils",
    "source_method": "createRandomName",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.RpcSystem",
    "source_method": "load",
    "target_class": "org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.RpcUtils",
    "source_method": "terminateAsyncCloseables",
    "target_class": "extends org.apache.flink.util.AutoCloseableAsync>):void \t org.apache.flink.util.concurrent.FutureUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.RpcUtils",
    "source_method": "getHostname",
    "target_class": "org.apache.flink.runtime.rpc.RpcService"
  },
  {
    "source_class": "org.apache.flink.runtime.rpc.RpcUtils",
    "source_method": "createRemoteRpcService",
    "target_class": "org.apache.flink.configuration.Configuration, java.lang.String, java.lang.String, java.lang.String, java.util.Optional<java.lang.Integer>):org.apache.flink.runtime.rpc.RpcService \t org.apache.flink.runtime.rpc.RpcSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.concurrent.ClassLoadingUtils",
    "source_method": "runWithContextClassLoader",
    "target_class": "java.lang.ClassLoader):void \t org.apache.flink.util.TemporaryClassLoaderContext"
  },
  {
    "source_class": "org.apache.flink.runtime.concurrent.ClassLoadingUtils",
    "source_method": "runWithContextClassLoader",
    "target_class": "java.lang.ClassLoader):T \t org.apache.flink.util.TemporaryClassLoaderContext"
  },
  {
    "source_class": "org.apache.flink.runtime.concurrent.ClassLoadingUtils",
    "source_method": "guardCompletionWithContextClassLoader",
    "target_class": "java.lang.ClassLoader):java.util.concurrent.CompletableFuture<T> \t org.apache.flink.util.concurrent.FutureUtils"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.ParquetVectorizedInputFormat",
    "source_method": "numBatchesToCirculate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.row.ParquetRowDataWriter",
    "source_method": "timestampToInt64",
    "target_class": "org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.ParquetColumnarRowInputFormat",
    "source_method": "createPartitionedFormat",
    "target_class": "org.apache.flink.table.types.logical.RowType, org.apache.flink.api.common.typeinfo.TypeInformation<org.apache.flink.table.data.RowData>, java.util.List<java.lang.String>, org.apache.flink.connector.file.table.PartitionFieldExtractor<SplitT>, int, boolean, boolean):org.apache.flink.formats.parquet.ParquetColumnarRowInputFormat<SplitT> \t org.apache.flink.formats.parquet.vector.ParquetSplitReaderUtil"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.TimestampColumnReader",
    "source_method": "int96ToTimestamp",
    "target_class": "long, int):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.TimestampColumnReader",
    "source_method": "int64ToTimestamp",
    "target_class": "long, LogicalTypeAnnotation.TimeUnit):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.ByteColumnReader",
    "source_method": "readBytes",
    "target_class": "org.apache.flink.table.data.columnar.vector.writable.WritableByteVector, int):void \t org.apache.flink.table.data.columnar.vector.writable.WritableByteVector"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.BaseVectorizedColumnReader",
    "source_method": "readRepetitionAndDefinitionLevels",
    "target_class": "org.apache.flink.formats.parquet.vector.reader.BaseVectorizedColumnReader.IntIterator"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.MapColumnReader",
    "source_method": "readBatch",
    "target_class": "org.apache.flink.table.data.columnar.vector.ColumnVector):void \t org.apache.flink.table.data.columnar.vector.heap.HeapMapVector"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.FloatColumnReader",
    "source_method": "readFloats",
    "target_class": "org.apache.flink.table.data.columnar.vector.writable.WritableFloatVector, int):void \t org.apache.flink.table.data.columnar.vector.writable.WritableFloatVector"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.IntColumnReader",
    "source_method": "readIntegers",
    "target_class": "org.apache.flink.table.data.columnar.vector.writable.WritableIntVector, int):void \t org.apache.flink.table.data.columnar.vector.writable.WritableIntVector"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.DoubleColumnReader",
    "source_method": "readDoubles",
    "target_class": "org.apache.flink.table.data.columnar.vector.writable.WritableDoubleVector, int):void \t org.apache.flink.table.data.columnar.vector.writable.WritableDoubleVector"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.BytesColumnReader",
    "source_method": "readBinary",
    "target_class": "org.apache.flink.table.data.columnar.vector.writable.WritableBytesVector, int):void \t org.apache.flink.table.data.columnar.vector.writable.WritableBytesVector"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.ArrayColumnReader",
    "source_method": "setChildrenInfo",
    "target_class": "int, int):void \t org.apache.flink.table.data.columnar.vector.heap.HeapArrayVector"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.reader.LongColumnReader",
    "source_method": "readLongs",
    "target_class": "org.apache.flink.table.data.columnar.vector.writable.WritableLongVector, int):void \t org.apache.flink.table.data.columnar.vector.writable.WritableLongVector"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.ParquetColumnarRowSplitReader",
    "source_method": "nextBatch",
    "target_class": "org.apache.flink.table.data.columnar.vector.VectorizedColumnBatch"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.ParquetSplitReaderUtil",
    "source_method": "createVectorFromConstant",
    "target_class": "java.lang.Object, int):org.apache.flink.table.data.columnar.vector.ColumnVector \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.ParquetSplitReaderUtil",
    "source_method": "createColumnReader",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.formats.parquet.vector.Type, java.util.List<org.apache.flink.formats.parquet.vector.ColumnDescriptor>, org.apache.flink.formats.parquet.vector.PageReadStore, int):org.apache.flink.formats.parquet.vector.reader.ColumnReader \t org.apache.flink.table.types.logical.MapType"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.vector.ParquetSplitReaderUtil",
    "source_method": "createWritableColumnVector",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.formats.parquet.vector.Type, java.util.List<org.apache.flink.formats.parquet.vector.ColumnDescriptor>, int):org.apache.flink.table.data.columnar.vector.writable.WritableColumnVector \t org.apache.flink.table.types.logical.MapType"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.ParquetFileFormatFactory",
    "source_method": "getParquetConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.utils.ParquetFormatStatisticsReportUtil",
    "source_method": "convertToColumnStats",
    "target_class": "org.apache.flink.formats.parquet.utils.Statistics<?>, boolean):org.apache.flink.table.plan.stats.ColumnStats \t org.apache.flink.table.plan.stats.ColumnStats.Builder"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.utils.ParquetFormatStatisticsReportUtil",
    "source_method": "binaryToTimestamp",
    "target_class": "boolean):java.sql.Timestamp \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.formats.parquet.avro.AvroParquetReaders",
    "source_method": "forReflectRecord",
    "target_class": "org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonToRowDataConverters",
    "source_method": "convertField",
    "target_class": "java.lang.String, org.apache.flink.formats.json.JsonNode):java.lang.Object \t org.apache.flink.formats.json.JsonToRowDataConverters.JsonToRowDataConverter"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowDataDeserializationSchema",
    "source_method": "convertToRowData",
    "target_class": "org.apache.flink.formats.json.JsonToRowDataConverters.JsonToRowDataConverter"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonParserToRowDataConverters",
    "source_method": "createConverter",
    "target_class": "org.apache.flink.table.types.logical.RowType):org.apache.flink.formats.json.JsonParserToRowDataConverters.JsonParserToRowDataConverter \t org.apache.flink.formats.json.JsonParserToRowDataConverters.RowNestedConverter"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonParserToRowDataConverters.FieldConverter",
    "source_method": "outNestedFields",
    "target_class": "org.apache.flink.table.data.GenericRowData):void \t org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonParserToRowDataConverters.FieldConverter",
    "source_method": "addNestedFieldPath",
    "target_class": "java.lang.String[]):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowSchemaConverter",
    "source_method": "convert",
    "target_class": "org.apache.flink.util.jackson.JacksonMapperFactory"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowSchemaConverter",
    "source_method": "convertObject",
    "target_class": "org.apache.flink.formats.json.JsonNode, org.apache.flink.formats.json.JsonNode):org.apache.flink.api.common.typeinfo.TypeInformation<org.apache.flink.types.Row> \t org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowSchemaConverter",
    "source_method": "convertArray",
    "target_class": "org.apache.flink.formats.json.JsonNode, org.apache.flink.formats.json.JsonNode):org.apache.flink.api.common.typeinfo.TypeInformation<?> \t org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowSchemaConverter",
    "source_method": "convertStringFormat",
    "target_class": "org.apache.flink.formats.json.JsonNode):org.apache.flink.api.common.typeinfo.TypeInformation<?> \t org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowSchemaConverter",
    "source_method": "convertStringEncoding",
    "target_class": "org.apache.flink.formats.json.JsonNode):org.apache.flink.api.common.typeinfo.TypeInformation<?> \t org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonFormatFactory",
    "source_method": "toProjectedNames",
    "target_class": "int[][]):java.lang.String[][] \t org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowDeserializationSchema",
    "source_method": "createContainerConverter",
    "target_class": "org.apache.flink.api.java.typeutils.MapTypeInfo"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowDeserializationSchema",
    "source_method": "createRowConverter",
    "target_class": "org.apache.flink.api.java.typeutils.RowTypeInfo"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowDeserializationSchema",
    "source_method": "convertField",
    "target_class": "org.apache.flink.formats.json.JsonRowDeserializationSchema.DeserializationRuntimeConverter, java.lang.String, org.apache.flink.formats.json.JsonNode):java.lang.Object \t org.apache.flink.formats.json.JsonRowDeserializationSchema.DeserializationRuntimeConverter"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonRowSerializationSchema",
    "source_method": "createRowConverter",
    "target_class": "org.apache.flink.api.java.typeutils.RowTypeInfo"
  },
  {
    "source_class": "org.apache.flink.formats.json.maxwell.MaxwellJsonSerializationSchema",
    "source_method": "createJsonRowType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.formats.json.maxwell.MaxwellJsonDeserializationSchema",
    "source_method": "emitRow",
    "target_class": "org.apache.flink.table.data.GenericRowData, org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>):void \t org.apache.flink.util.Collector"
  },
  {
    "source_class": "org.apache.flink.formats.json.maxwell.MaxwellJsonDeserializationSchema",
    "source_method": "createJsonRowType",
    "target_class": "java.util.List<org.apache.flink.formats.json.maxwell.MaxwellJsonDecodingFormat.ReadableMetadata>):org.apache.flink.table.types.logical.RowType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.formats.json.maxwell.MaxwellJsonDeserializationSchema",
    "source_method": "convert",
    "target_class": "org.apache.flink.formats.json.maxwell.MaxwellJsonDecodingFormat.ReadableMetadata):org.apache.flink.formats.json.maxwell.MaxwellJsonDeserializationSchema.MetadataConverter \t org.apache.flink.table.api.DataTypes.AbstractField"
  },
  {
    "source_class": "org.apache.flink.formats.json.debezium.DebeziumJsonSerializationSchema",
    "source_method": "createJsonRowType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.formats.json.debezium.DebeziumJsonDecodingFormat",
    "source_method": "readProperty",
    "target_class": "int, org.apache.flink.table.data.StringData):java.lang.Object \t org.apache.flink.table.data.GenericMapData"
  },
  {
    "source_class": "org.apache.flink.formats.json.debezium.DebeziumJsonDeserializationSchema",
    "source_method": "emitRow",
    "target_class": "org.apache.flink.table.data.GenericRowData, org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>):void \t org.apache.flink.util.Collector"
  },
  {
    "source_class": "org.apache.flink.formats.json.debezium.DebeziumJsonDeserializationSchema",
    "source_method": "createJsonRowType",
    "target_class": "java.util.List<org.apache.flink.formats.json.debezium.DebeziumJsonDecodingFormat.ReadableMetadata>, boolean):org.apache.flink.table.types.logical.RowType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.formats.json.debezium.DebeziumJsonDeserializationSchema",
    "source_method": "convertInRoot",
    "target_class": "org.apache.flink.formats.json.debezium.DebeziumJsonDecodingFormat.ReadableMetadata):org.apache.flink.formats.json.debezium.DebeziumJsonDeserializationSchema.MetadataConverter \t org.apache.flink.formats.json.debezium.DebeziumJsonDecodingFormat.ReadableMetadata"
  },
  {
    "source_class": "org.apache.flink.formats.json.debezium.DebeziumJsonDeserializationSchema",
    "source_method": "findFieldPos",
    "target_class": "org.apache.flink.table.types.logical.RowType):int \t org.apache.flink.table.api.DataTypes.AbstractField"
  },
  {
    "source_class": "org.apache.flink.formats.json.debezium.DebeziumJsonFormatFactory",
    "source_method": "validateEncodingFormatOptions",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.formats.json.ogg.OggJsonDeserializationSchema",
    "source_method": "createJsonRowType",
    "target_class": "java.util.List<org.apache.flink.formats.json.ogg.OggJsonDecodingFormat.ReadableMetadata>):org.apache.flink.table.types.logical.RowType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.formats.json.ogg.OggJsonDeserializationSchema",
    "source_method": "convertInRoot",
    "target_class": "org.apache.flink.formats.json.ogg.OggJsonDecodingFormat.ReadableMetadata):org.apache.flink.formats.json.ogg.OggJsonDeserializationSchema.MetadataConverter \t org.apache.flink.formats.json.ogg.OggJsonDecodingFormat.ReadableMetadata"
  },
  {
    "source_class": "org.apache.flink.formats.json.ogg.OggJsonDeserializationSchema",
    "source_method": "findFieldPos",
    "target_class": "org.apache.flink.table.types.logical.RowType):int \t org.apache.flink.table.api.DataTypes.AbstractField"
  },
  {
    "source_class": "org.apache.flink.formats.json.ogg.OggJsonDeserializationSchema",
    "source_method": "emitRow",
    "target_class": "org.apache.flink.table.data.GenericRowData, org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>):void \t org.apache.flink.util.Collector"
  },
  {
    "source_class": "org.apache.flink.formats.json.ogg.OggJsonSerializationSchema",
    "source_method": "createJsonRowType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.formats.json.canal.CanalJsonSerializationSchema",
    "source_method": "createJsonRowType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.formats.json.canal.CanalJsonDeserializationSchema",
    "source_method": "emitRow",
    "target_class": "org.apache.flink.table.data.GenericRowData, org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>):void \t org.apache.flink.util.Collector"
  },
  {
    "source_class": "org.apache.flink.formats.json.canal.CanalJsonDeserializationSchema",
    "source_method": "createJsonRowType",
    "target_class": "java.util.List<org.apache.flink.formats.json.canal.CanalJsonDecodingFormat.ReadableMetadata>):org.apache.flink.table.types.logical.RowType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.formats.json.canal.CanalJsonDeserializationSchema",
    "source_method": "convert",
    "target_class": "org.apache.flink.formats.json.canal.CanalJsonDecodingFormat.ReadableMetadata):org.apache.flink.formats.json.canal.CanalJsonDeserializationSchema.MetadataConverter \t org.apache.flink.table.api.DataTypes.AbstractField"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonFormatOptionsUtil",
    "source_method": "getTimestampFormat",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonFormatOptionsUtil",
    "source_method": "getMapNullKeyMode",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonFormatOptionsUtil",
    "source_method": "validateDecodingFormatOptions",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonFormatOptionsUtil",
    "source_method": "validateEncodingFormatOptions",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.formats.json.JsonFormatOptionsUtil",
    "source_method": "validateTimestampFormat",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.orc.OrcFileFormatFactory",
    "source_method": "getOrcProperties",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.orc.OrcFilters",
    "source_method": "toOrcPredicate",
    "target_class": "org.apache.flink.table.expressions.CallExpression"
  },
  {
    "source_class": "org.apache.flink.orc.OrcFilters",
    "source_method": "getLiteral",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.orc.OrcFilters",
    "source_method": "toOrcType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.orc.TimestampUtil",
    "source_method": "createVectorFromConstant",
    "target_class": "java.lang.Object):org.apache.flink.orc.ColumnVector \t org.apache.flink.orc.vector.OrcTimestampColumnVector"
  },
  {
    "source_class": "org.apache.flink.orc.vector.AbstractOrcColumnVector",
    "source_method": "createFlinkVector",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.data.columnar.vector.ColumnVector \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.orc.vector.AbstractOrcColumnVector",
    "source_method": "createHiveVectorFromConstant",
    "target_class": "java.lang.Object, int):org.apache.flink.orc.vector.ColumnVector \t org.apache.flink.orc.TimestampUtil"
  },
  {
    "source_class": "org.apache.flink.orc.vector.RowDataVectorizer",
    "source_method": "setColumn",
    "target_class": "org.apache.flink.orc.vector.ColumnVector, org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.data.RowData, int):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.orc.vector.RowDataVectorizer",
    "source_method": "setColumn",
    "target_class": "org.apache.flink.orc.vector.MapColumnVector, org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.data.RowData, int):void \t org.apache.flink.table.types.logical.MapType"
  },
  {
    "source_class": "org.apache.flink.orc.vector.RowDataVectorizer",
    "source_method": "convert",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.data.RowData \t org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.orc.OrcSplitReaderUtil",
    "source_method": "genPartColumnarRowReader",
    "target_class": "org.apache.flink.orc.Configuration, java.lang.String[], org.apache.flink.table.types.DataType[], java.util.Map<java.lang.String,java.lang.Object>, int[], java.util.List<org.apache.flink.orc.OrcFilters.Predicate>, int, org.apache.flink.core.fs.Path, long, long):org.apache.flink.orc.OrcColumnarRowSplitReader<org.apache.flink.orc.VectorizedRowBatch> \t org.apache.flink.orc.vector.AbstractOrcColumnVector"
  },
  {
    "source_class": "org.apache.flink.orc.OrcSplitReaderUtil",
    "source_method": "convertToOrcTypeWithPart",
    "target_class": "org.apache.flink.table.types.logical.LogicalType[], java.util.Collection<java.lang.String>):org.apache.flink.orc.TypeDescription \t org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.orc.OrcSplitReaderUtil",
    "source_method": "logicalTypeToOrcType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.orc.OrcSplitReader",
    "source_method": "ensureBatch",
    "target_class": "org.apache.flink.orc.vector.OrcVectorizedBatchWrapper"
  },
  {
    "source_class": "org.apache.flink.orc.util.OrcFormatStatisticsReportUtil",
    "source_method": "convertToColumnStats",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.orc.util.ColumnStatistics):org.apache.flink.table.plan.stats.ColumnStats \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.orc.shim.OrcShimV200",
    "source_method": "getOffsetAndLengthForSplit",
    "target_class": "long, java.util.List<org.apache.flink.orc.shim.StripeInformation>):org.apache.flink.api.java.tuple.Tuple2<java.lang.Long,java.lang.Long> \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.orc.OrcColumnarRowInputFormat",
    "source_method": "createPartitionedFormat",
    "target_class": "org.apache.flink.orc.Configuration, org.apache.flink.table.types.logical.RowType, java.util.List<java.lang.String>, org.apache.flink.connector.file.table.PartitionFieldExtractor<SplitT>, int[], java.util.List<org.apache.flink.orc.OrcFilters.Predicate>, int, java.util.function.Function<org.apache.flink.table.types.logical.RowType,org.apache.flink.api.common.typeinfo.TypeInformation<org.apache.flink.table.data.RowData>>):org.apache.flink.orc.OrcColumnarRowInputFormat<org.apache.flink.orc.VectorizedRowBatch,SplitT> \t org.apache.flink.orc.OrcSplitReaderUtil"
  },
  {
    "source_class": "org.apache.flink.formats.avro.registry.confluent.RegistryAvroFormatFactory",
    "source_method": "buildOptionalPropertiesMap",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.formats.avro.registry.confluent.RegistryAvroFormatFactory",
    "source_method": "getAvroSchema",
    "target_class": "org.apache.flink.table.types.logical.RowType):org.apache.flink.formats.avro.registry.confluent.Schema \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.formats.avro.registry.confluent.debezium.DebeziumAvroSerializationSchema",
    "source_method": "createDebeziumAvroRowType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.formats.avro.registry.confluent.debezium.DebeziumAvroFormatFactory",
    "source_method": "validateSchemaString",
    "target_class": "org.apache.flink.table.types.logical.RowType):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.formats.avro.registry.confluent.debezium.DebeziumAvroDeserializationSchema",
    "source_method": "createDebeziumAvroRowType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.orc.nohive.OrcNoHiveColumnarRowInputFormat",
    "source_method": "createPartitionedFormat",
    "target_class": "org.apache.flink.table.types.logical.RowType, java.util.List<java.lang.String>, org.apache.flink.connector.file.table.PartitionFieldExtractor<SplitT>, int[], java.util.List<org.apache.flink.orc.OrcFilters.Predicate>, int, java.util.function.Function<org.apache.flink.table.types.logical.RowType,org.apache.flink.api.common.typeinfo.TypeInformation<org.apache.flink.table.data.RowData>>):org.apache.flink.orc.OrcColumnarRowInputFormat<?,SplitT> \t org.apache.flink.orc.vector.AbstractOrcColumnVector"
  },
  {
    "source_class": "org.apache.flink.orc.nohive.OrcNoHiveBulkWriterFactory",
    "source_method": "setColumn",
    "target_class": "org.apache.flink.orc.nohive.ColumnVector, org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.data.RowData, int):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.orc.nohive.OrcNoHiveSplitReaderUtil",
    "source_method": "genPartColumnarRowReader",
    "target_class": "java.lang.String[], org.apache.flink.table.types.DataType[], java.util.Map<java.lang.String,java.lang.Object>, int[], java.util.List<org.apache.flink.orc.OrcFilters.Predicate>, int, org.apache.flink.core.fs.Path, long, long):org.apache.flink.orc.OrcColumnarRowSplitReader<?> \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowSerializationSchema",
    "source_method": "createRowRuntimeConverter",
    "target_class": "boolean):org.apache.flink.formats.csv.CsvRowSerializationSchema.RuntimeConverter \t org.apache.flink.api.java.typeutils.RowTypeInfo"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowSerializationSchema",
    "source_method": "assembleRowRuntimeConverter",
    "target_class": "java.lang.String[], org.apache.flink.formats.csv.CsvRowSerializationSchema.RuntimeConverter[]):org.apache.flink.formats.csv.CsvRowSerializationSchema.RuntimeConverter \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowSerializationSchema",
    "source_method": "createRuntimeConverter",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvFormatFactory",
    "source_method": "configureDeserializationSchema",
    "target_class": "org.apache.flink.formats.csv.CsvRowDataDeserializationSchema.Builder):void \t org.apache.flink.formats.csv.CsvRowDataDeserializationSchema.Builder"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvFormatFactory",
    "source_method": "configureSerializationSchema",
    "target_class": "org.apache.flink.formats.csv.CsvRowDataSerializationSchema.Builder):void \t org.apache.flink.formats.csv.CsvRowDataSerializationSchema.Builder"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowSchemaConverter",
    "source_method": "convert",
    "target_class": "org.apache.flink.api.java.typeutils.RowTypeInfo"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowSchemaConverter",
    "source_method": "convertType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):CsvSchema.ColumnType \t org.apache.flink.api.java.typeutils.TupleTypeInfoBase"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowSchemaConverter",
    "source_method": "convertType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):CsvSchema.ColumnType \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowSchemaConverter",
    "source_method": "validateNestedField",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvFileFormatFactory",
    "source_method": "createCsvBulkWriterFactory",
    "target_class": "org.apache.flink.table.types.logical.RowType):org.apache.flink.api.common.serialization.BulkWriter.Factory<org.apache.flink.table.data.RowData> \t org.apache.flink.formats.csv.CsvBulkWriter"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvFileFormatFactory",
    "source_method": "buildCsvSchema",
    "target_class": "org.apache.flink.configuration.ReadableConfig):org.apache.flink.formats.csv.CsvSchema \t org.apache.flink.formats.csv.CsvRowSchemaConverter"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvBulkWriter",
    "source_method": "forPojo",
    "target_class": "org.apache.flink.core.fs.FSDataOutputStream):org.apache.flink.formats.csv.CsvBulkWriter<T,T,java.lang.Void> \t org.apache.flink.util.jackson.JacksonMapperFactory"
  },
  {
    "source_class": "org.apache.flink.formats.csv.util.CsvFormatStatisticsReportUtil",
    "source_method": "getTableStatistics",
    "target_class": "org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.formats.csv.RowDataToCsvConverters",
    "source_method": "createRowConverter",
    "target_class": "org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.formats.csv.RowDataToCsvConverters",
    "source_method": "createDecimalRowFieldConverter",
    "target_class": "org.apache.flink.table.types.logical.DecimalType"
  },
  {
    "source_class": "org.apache.flink.formats.csv.RowDataToCsvConverters",
    "source_method": "createDecimalArrayElementConverter",
    "target_class": "org.apache.flink.table.types.logical.DecimalType"
  },
  {
    "source_class": "org.apache.flink.formats.csv.RowDataToCsvConverters",
    "source_method": "convertDecimal",
    "target_class": "org.apache.flink.table.data.DecimalData, org.apache.flink.formats.csv.ContainerNode<?>):org.apache.flink.formats.csv.JsonNode \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.formats.csv.RowDataToCsvConverters",
    "source_method": "convertTimestamp",
    "target_class": "org.apache.flink.formats.csv.ContainerNode<?>, java.time.format.DateTimeFormatter):org.apache.flink.formats.csv.JsonNode \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.formats.csv.RowDataToCsvConverters",
    "source_method": "createRowRowFieldConverter",
    "target_class": "org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowDeserializationSchema",
    "source_method": "createRowRuntimeConverter",
    "target_class": "boolean, boolean):org.apache.flink.formats.csv.CsvRowDeserializationSchema.RuntimeConverter \t org.apache.flink.api.java.typeutils.RowTypeInfo"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowDeserializationSchema",
    "source_method": "assembleRowRuntimeConverter",
    "target_class": "boolean, java.lang.String[], org.apache.flink.formats.csv.CsvRowDeserializationSchema.RuntimeConverter[]):org.apache.flink.formats.csv.CsvRowDeserializationSchema.RuntimeConverter \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowDeserializationSchema",
    "source_method": "createRuntimeConverter",
    "target_class": "boolean):org.apache.flink.formats.csv.CsvRowDeserializationSchema.RuntimeConverter \t org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvRowDeserializationSchema",
    "source_method": "createObjectArrayRuntimeConverter",
    "target_class": "boolean):org.apache.flink.formats.csv.CsvRowDeserializationSchema.RuntimeConverter \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvReaderFormat",
    "source_method": "forSchema",
    "target_class": "org.apache.flink.formats.csv.CsvSchema, org.apache.flink.api.common.typeinfo.TypeInformation<T>):org.apache.flink.formats.csv.CsvReaderFormat<T> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvReaderFormat",
    "source_method": "forSchema",
    "target_class": "org.apache.flink.util.function.SerializableFunction<org.apache.flink.formats.csv.CsvMapper,org.apache.flink.formats.csv.CsvSchema>, org.apache.flink.api.common.typeinfo.TypeInformation<T>):org.apache.flink.formats.csv.CsvReaderFormat<T> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.formats.csv.CsvCommons",
    "source_method": "validateCharacterVal",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.String>, boolean):void \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.formats.hadoop.bulk.HadoopPathBasedPartFileWriter.HadoopPathBasedPendingFile",
    "source_method": "getRecoverable",
    "target_class": "org.apache.flink.formats.hadoop.bulk.HadoopFileCommitter"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.PbFormatContext",
    "source_method": "createSplitMethod",
    "target_class": "java.lang.String, java.lang.String, java.lang.String, java.lang.String):java.lang.String \t org.apache.flink.formats.protobuf.util.PbCodegenAppender"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.serialize.PbCodegenSerializeFactory",
    "source_method": "getPbCodegenSer",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.formats.protobuf.PbFormatContext):org.apache.flink.formats.protobuf.serialize.PbCodegenSerializer \t org.apache.flink.formats.protobuf.util.PbFormatUtils"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.deserialize.PbCodegenDeserializeFactory",
    "source_method": "getPbCodegenDes",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.formats.protobuf.PbFormatContext):org.apache.flink.formats.protobuf.deserialize.PbCodegenDeserializer \t org.apache.flink.formats.protobuf.util.PbFormatUtils"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.PbFormatFactory",
    "source_method": "buildConfig",
    "target_class": "org.apache.flink.formats.protobuf.PbFormatConfig.PbFormatConfigBuilder"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.util.PbCodegenUtils",
    "source_method": "flinkContainerElementCode",
    "target_class": "java.lang.String, org.apache.flink.table.types.logical.LogicalType):java.lang.String \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.util.PbCodegenUtils",
    "source_method": "getTypeStrFromProto",
    "target_class": "boolean):java.lang.String \t org.apache.flink.formats.protobuf.util.PbFormatUtils"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.util.PbCodegenUtils",
    "source_method": "getTypeStrFromLogicType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.util.PbCodegenUtils",
    "source_method": "pbDefaultValueCode",
    "target_class": "org.apache.flink.formats.protobuf.PbFormatContext):java.lang.String \t org.apache.flink.formats.protobuf.util.PbFormatUtils"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.util.PbCodegenUtils",
    "source_method": "convertFlinkArrayElementToPbWithDefaultValueCode",
    "target_class": "java.lang.String, java.lang.String, org.apache.flink.formats.protobuf.util.FieldDescriptor, org.apache.flink.table.types.logical.LogicalType, org.apache.flink.formats.protobuf.PbFormatContext, int):java.lang.String \t org.apache.flink.formats.protobuf.util.PbCodegenAppender"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.util.PbFormatUtils",
    "source_method": "isSimpleType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.formats.protobuf.util.PbFormatUtils",
    "source_method": "getStrongCamelCaseJsonName",
    "target_class": "com.google.protobuf.ProtobufInternalUtils"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroSchemaConverter",
    "source_method": "convertToTypeInfo",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroSchemaConverter",
    "source_method": "convertToTypeInfo",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroSchemaConverter",
    "source_method": "convertToTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroSchemaConverter",
    "source_method": "convertToDataType",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroSchemaConverter",
    "source_method": "convertToDataType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroSchemaConverter",
    "source_method": "extractValueTypeToAvroMap",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroTypeInfo",
    "source_method": "generateFieldsFromAvroSchema",
    "target_class": "org.apache.flink.api.java.typeutils.PojoTypeInfo"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroFactory",
    "source_method": "fromGeneric",
    "target_class": "org.apache.flink.formats.avro.typeutils.Schema):org.apache.flink.formats.avro.typeutils.AvroFactory<T> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroSerializerSnapshot",
    "source_method": "resolveSchemaCompatibility",
    "target_class": "org.apache.flink.formats.avro.typeutils.Schema):org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility<T> \t org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility"
  },
  {
    "source_class": "org.apache.flink.formats.avro.typeutils.AvroSerializerSnapshot",
    "source_method": "avroCompatibilityToFlinkCompatibility",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility"
  },
  {
    "source_class": "org.apache.flink.formats.avro.RowDataToAvroConverters",
    "source_method": "createRowConverter",
    "target_class": "org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.formats.avro.RowDataToAvroConverters",
    "source_method": "createMapConverter",
    "target_class": "org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroToRowDataConverters",
    "source_method": "createRowConverter",
    "target_class": "org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroToRowDataConverters",
    "source_method": "createDecimalConverter",
    "target_class": "org.apache.flink.table.types.logical.DecimalType"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroToRowDataConverters",
    "source_method": "createArrayConverter",
    "target_class": "org.apache.flink.table.types.logical.utils.LogicalTypeUtils"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroToRowDataConverters",
    "source_method": "createMapConverter",
    "target_class": "org.apache.flink.formats.avro.typeutils.AvroSchemaConverter"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroToRowDataConverters",
    "source_method": "convertToTimestamp",
    "target_class": "org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroToRowDataConverters",
    "source_method": "convertToDate",
    "target_class": "org.apache.flink.formats.avro.JodaConverter"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroToRowDataConverters",
    "source_method": "convertToTime",
    "target_class": "org.apache.flink.formats.avro.JodaConverter"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroRowDeserializationSchema",
    "source_method": "convertToDate",
    "target_class": "org.apache.flink.formats.avro.JodaConverter"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroRowDeserializationSchema",
    "source_method": "convertToTime",
    "target_class": "org.apache.flink.formats.avro.JodaConverter"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroRowDeserializationSchema",
    "source_method": "convertToTimestamp",
    "target_class": "boolean):java.sql.Timestamp \t org.apache.flink.formats.avro.JodaConverter"
  },
  {
    "source_class": "org.apache.flink.formats.avro.AvroRowDeserializationSchema",
    "source_method": "convertToObjectArray",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>, java.lang.Object):java.lang.Object[] \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.history.HistoryServer",
    "source_method": "getWebPort",
    "target_class": "org.apache.flink.runtime.webmonitor.utils.WebFrontendBootstrap"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.history.HistoryServer",
    "source_method": "getArchiveFetchingRunnable",
    "target_class": "org.apache.flink.runtime.webmonitor.history.HistoryServerArchiveFetcher"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.history.HistoryServerArchiveFetcher",
    "source_method": "listArchives",
    "target_class": "org.apache.flink.core.fs.Path):org.apache.flink.core.fs.FileStatus[] \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.history.HistoryServerArchiveFetcher",
    "source_method": "isValidJobID",
    "target_class": "org.apache.flink.core.fs.Path):boolean \t org.apache.flink.api.common.JobID"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.history.HistoryServerArchiveFetcher",
    "source_method": "convertLegacyJobOverview",
    "target_class": "org.apache.flink.api.common.JobStatus"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.history.HistoryServerArchiveFetcher",
    "source_method": "updateJobOverview",
    "target_class": "java.io.File):void \t org.apache.flink.runtime.messages.webmonitor.MultipleJobsDetails"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.utils.LogUrlUtil",
    "source_method": "getValidLogUrlPattern",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.String>):java.util.Optional<java.lang.String> \t org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.handlers.utils.JarHandlerUtils.JarHandlerContext",
    "source_method": "fromRequest",
    "target_class": "java.nio.file.Path, org.apache.flink.runtime.webmonitor.handlers.utils.Logger):org.apache.flink.runtime.webmonitor.handlers.utils.JarHandlerUtils.JarHandlerContext \t org.apache.flink.runtime.rest.handler.HandlerRequest"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.handlers.utils.JarHandlerUtils.JarHandlerContext",
    "source_method": "applyToConfiguration",
    "target_class": "org.apache.flink.runtime.rest.handler.HandlerRequest<? extends org.apache.flink.runtime.webmonitor.handlers.JarRequestBody>):void \t org.apache.flink.client.program.PackagedProgram"
  },
  {
    "source_class": "org.apache.flink.runtime.webmonitor.handlers.utils.JarHandlerUtils",
    "source_method": "getProgramArgs",
    "target_class": "org.apache.flink.runtime.webmonitor.handlers.utils.Logger):java.util.List<java.lang.String> \t org.apache.flink.runtime.rest.handler.util.HandlerRequestUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.bridge.internal.AbstractStreamTableEnvironmentImpl",
    "source_method": "lookupExecutor",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment):org.apache.flink.table.delegation.Executor \t org.apache.flink.table.factories.FactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.api.bridge.internal.AbstractStreamTableEnvironmentImpl",
    "source_method": "toStreamInternal",
    "target_class": "org.apache.flink.table.operations.ModifyOperation):org.apache.flink.streaming.api.datastream.DataStream<T> \t org.apache.flink.table.delegation.Planner"
  },
  {
    "source_class": "org.apache.flink.table.api.bridge.internal.AbstractStreamTableEnvironmentImpl",
    "source_method": "extractTypeInformation",
    "target_class": "java.lang.Class<T>):org.apache.flink.api.common.typeinfo.TypeInformation<T> \t org.apache.flink.table.api.Table"
  },
  {
    "source_class": "org.apache.flink.table.api.bridge.internal.AbstractStreamTableEnvironmentImpl",
    "source_method": "getTransformation",
    "target_class": "java.util.List<org.apache.flink.api.dag.Transformation<?>>):org.apache.flink.api.dag.Transformation<T> \t org.apache.flink.table.api.Table"
  },
  {
    "source_class": "org.apache.flink.table.api.bridge.internal.AbstractStreamTableEnvironmentImpl",
    "source_method": "asQueryOperation",
    "target_class": "java.util.Optional<java.util.List<org.apache.flink.table.expressions.Expression>>):org.apache.flink.table.operations.DataStreamQueryOperation<T> \t org.apache.flink.table.typeutils.FieldInfoUtils.TypeInfoSchema"
  },
  {
    "source_class": "org.apache.flink.table.api.bridge.internal.AbstractStreamTableEnvironmentImpl",
    "source_method": "validateTimeCharacteristic",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.calcite.sql.validate.SqlValidatorImpl",
    "source_method": "expandSelectExpr",
    "target_class": "org.apache.calcite.sql.validate.SelectScope, org.apache.calcite.sql.validate.SqlSelect):org.apache.calcite.sql.validate.SqlNode \t org.apache.calcite.sql.validate.SqlValidatorImpl.Expander"
  },
  {
    "source_class": "org.apache.calcite.sql.validate.SqlValidatorImpl",
    "source_method": "expandGroupByOrHavingExpr",
    "target_class": "org.apache.calcite.sql.validate.SqlValidatorScope, org.apache.calcite.sql.validate.SqlSelect, boolean):org.apache.calcite.sql.validate.SqlNode \t org.apache.calcite.sql.validate.SqlValidatorImpl.Expander"
  },
  {
    "source_class": "org.apache.calcite.sql2rel.RelDecorrelator",
    "source_method": "relBuilderFactory",
    "target_class": "org.apache.calcite.tools.RelBuilder"
  },
  {
    "source_class": "org.apache.calcite.sql2rel.RelDecorrelator",
    "source_method": "has",
    "target_class": "org.apache.calcite.sql2rel.RelDecorrelator.CorRef):boolean \t org.apache.calcite.sql2rel.RelDecorrelator.CorDef"
  },
  {
    "source_class": "org.apache.calcite.sql2rel.SqlToRelConverter",
    "source_method": "setDynamicParamCountInExplain",
    "target_class": "org.apache.calcite.sql2rel.SqlToRelConverter.Config"
  },
  {
    "source_class": "org.apache.calcite.sql2rel.SqlToRelConverter",
    "source_method": "decorrelate",
    "target_class": "org.apache.calcite.sql2rel.RelNode):org.apache.calcite.sql2rel.RelNode \t org.apache.calcite.sql2rel.SqlToRelConverter.Config"
  },
  {
    "source_class": "org.apache.calcite.sql2rel.SqlToRelConverter",
    "source_method": "removeSortInSubQuery",
    "target_class": "org.apache.calcite.sql2rel.SqlToRelConverter.Config"
  },
  {
    "source_class": "org.apache.calcite.sql2rel.SqlToRelConverter",
    "source_method": "getInSubqueryThreshold",
    "target_class": "org.apache.calcite.sql2rel.SqlToRelConverter.Config"
  },
  {
    "source_class": "org.apache.calcite.sql2rel.SqlToRelConverter",
    "source_method": "enableDecorrelation",
    "target_class": "org.apache.calcite.sql2rel.SqlToRelConverter.Config"
  },
  {
    "source_class": "org.apache.calcite.sql2rel.SqlToRelConverter",
    "source_method": "isTrimUnusedFields",
    "target_class": "org.apache.calcite.sql2rel.SqlToRelConverter.Config"
  },
  {
    "source_class": "org.apache.calcite.tools.RelBuilder",
    "source_method": "replaceTop",
    "target_class": "org.apache.calcite.tools.RelBuilder.Frame"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "beforeConversion",
    "target_class": "org.apache.flink.table.planner.utils.RowLevelModificationContextUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertDropTable",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertAlterTableOptions",
    "target_class": "org.apache.flink.table.catalog.CatalogTable, org.apache.flink.sql.parser.ddl.SqlAlterTableOptions):org.apache.flink.table.operations.Operation \t org.apache.flink.sql.parser.ddl.SqlAlterTableOptions"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertAlterTableReset",
    "target_class": "org.apache.flink.table.catalog.CatalogTable, org.apache.flink.sql.parser.ddl.SqlAlterTableReset):org.apache.flink.table.operations.Operation \t org.apache.flink.sql.parser.ddl.SqlAlterTableReset"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertAlterTableCompact",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedTable, org.apache.flink.sql.parser.ddl.SqlAlterTableCompact):org.apache.flink.table.operations.ModifyOperation \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertDropFunction",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertSqlStatementSet",
    "target_class": "org.apache.flink.sql.parser.dml.SqlStatementSet"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertUseCatalog",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlUseCatalog"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertDropCatalog",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlDropCatalog"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertUseDatabase",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlUseDatabase"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertDropDatabase",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertShowTables",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertShowColumns",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertShowCreateTable",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertShowCreateView",
    "target_class": "org.apache.flink.sql.parser.dql.SqlShowCreateView"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertDropView",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertDescribeTable",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertAddJar",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlAddJar"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertRemoveJar",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlRemoveJar"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertUnloadModule",
    "target_class": "org.apache.flink.sql.parser.dql.SqlUnloadModule"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertUseModules",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlUseModules"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertShowModules",
    "target_class": "org.apache.flink.sql.parser.dql.SqlShowModules"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertSet",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlSet"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertReset",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlReset"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertExecutePlan",
    "target_class": "org.apache.flink.sql.parser.dml.SqlExecutePlan"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "getPartitionKeyExpr",
    "target_class": "java.lang.String):org.apache.flink.table.expressions.FieldReferenceExpression \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "getPartitionValueExpr",
    "target_class": "java.lang.String, java.lang.String):org.apache.flink.table.expressions.ValueLiteralExpression \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlNodeToOperationConversion",
    "source_method": "convertStopJob",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlStopJob"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.MergeTableLikeUtil",
    "source_method": "computeMergingStrategies",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlTableLike.SqlTableLikeOption"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.MergeTableLikeUtil.SchemaBuilder",
    "source_method": "populateWatermarksFromSourceTable",
    "target_class": "org.apache.flink.table.api.Schema):void \t org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.MergeTableLikeUtil.SchemaBuilder",
    "source_method": "populatePrimaryKeyFromSourceTable",
    "target_class": "org.apache.flink.table.api.Schema):void \t org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.MergeTableLikeUtil.SchemaBuilder",
    "source_method": "build",
    "target_class": "org.apache.flink.table.api.Schema.UnresolvedPrimaryKey"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter.SchemaConverter",
    "source_method": "populateColumnsFromSourceTable",
    "target_class": "org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter.SchemaConverter",
    "source_method": "populatePrimaryKeyFromSourceTable",
    "target_class": "org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter.SchemaConverter",
    "source_method": "populateWatermarkFromSourceTable",
    "target_class": "org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter.SchemaConverter",
    "source_method": "updatePrimaryKey",
    "target_class": "org.apache.flink.sql.parser.ddl.constraint.SqlTableConstraint"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter.SchemaConverter",
    "source_method": "updatePrimaryKeyNullability",
    "target_class": "org.apache.flink.table.api.Schema.UnresolvedColumn"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter.SchemaConverter",
    "source_method": "applyColumnPosition",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlTableColumn"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter.SchemaConverter",
    "source_method": "convert",
    "target_class": "org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter.ReferencesManager",
    "source_method": "create",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter",
    "source_method": "buildUpdatedColumn",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable, java.util.function.BiConsumer<org.apache.flink.table.api.Schema.Builder,org.apache.flink.table.api.Schema.UnresolvedColumn>):void \t org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter",
    "source_method": "buildUpdatedPrimaryKey",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable, java.util.function.Function<java.lang.String,java.lang.String>):void \t org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter",
    "source_method": "buildUpdatedWatermark",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable):void \t org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter",
    "source_method": "buildNewColumnFromOldColumn",
    "target_class": "org.apache.flink.table.api.Schema.UnresolvedColumn, java.lang.String):void \t org.apache.flink.table.api.Schema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.AlterSchemaConverter",
    "source_method": "buildAlterTableChangeOperation",
    "target_class": "java.util.List<org.apache.flink.table.catalog.TableChange>, org.apache.flink.table.api.Schema, org.apache.flink.table.catalog.ResolvedCatalogTable):org.apache.flink.table.operations.Operation \t org.apache.flink.sql.parser.ddl.SqlAlterTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.PlannerCallProcedureOperation",
    "source_method": "getConvertedArgumentValues",
    "target_class": "java.lang.ClassLoader):java.lang.Object[] \t org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.PlannerCallProcedureOperation",
    "source_method": "toExternal",
    "target_class": "org.apache.flink.table.types.DataType, java.lang.ClassLoader):java.lang.Object \t org.apache.flink.table.data.conversion.DataStructureConverter"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.PlannerCallProcedureOperation",
    "source_method": "procedureResultToTableResult",
    "target_class": "org.apache.flink.table.api.TableConfig, java.lang.ClassLoader):org.apache.flink.table.api.internal.TableResultInternal \t org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.PlannerCallProcedureOperation.CallProcedureResultProvider",
    "source_method": "toRowData",
    "target_class": "org.apache.flink.table.data.conversion.DataStructureConverter"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.converters.SqlNodeConvertUtils",
    "source_method": "toCatalogView",
    "target_class": "java.util.List<org.apache.flink.table.planner.operations.converters.SqlNode>, java.util.Map<java.lang.String,java.lang.String>, java.lang.String, org.apache.flink.table.planner.operations.converters.SqlNodeConverter.ConvertContext):org.apache.flink.table.catalog.CatalogView \t org.apache.flink.table.api.Schema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.converters.SqlNodeConvertUtils",
    "source_method": "validateAlterView",
    "target_class": "org.apache.flink.table.planner.operations.converters.SqlNodeConverter.ConvertContext):org.apache.flink.table.catalog.CatalogView \t org.apache.flink.table.catalog.UnresolvedIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.converters.SqlNodeConverters",
    "source_method": "register",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.DeletePushDownUtils",
    "source_method": "getDynamicTableSink",
    "target_class": "org.apache.flink.table.planner.operations.LogicalTableModify, org.apache.flink.table.catalog.CatalogManager):java.util.Optional<org.apache.flink.table.connector.sink.DynamicTableSink> \t org.apache.flink.table.factories.TableFactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.DeletePushDownUtils",
    "source_method": "prepareFilter",
    "target_class": "org.apache.flink.table.planner.operations.DeletePushDownUtils.ReduceExpressionsRuleProxy"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.DeletePushDownUtils",
    "source_method": "resolveFilter",
    "target_class": "org.apache.flink.table.planner.operations.Filter):java.util.List<org.apache.flink.table.expressions.ResolvedExpression> \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlCreateTableConverter",
    "source_method": "convertCreateTable",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlCreateTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.operations.SqlCreateTableConverter",
    "source_method": "verifyPartitioningColumnsExist",
    "target_class": "java.util.List<java.lang.String>):void \t org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.RowTypeUtils",
    "source_method": "projectRowType",
    "target_class": "int[]):org.apache.flink.table.types.logical.RowType \t org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.LogicalRelDataTypeConverter",
    "source_method": "toRelDataType",
    "target_class": "org.apache.flink.table.planner.typeutils.RelDataTypeFactory):org.apache.flink.table.planner.typeutils.RelDataType \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.LogicalRelDataTypeConverter",
    "source_method": "getTimestampKind",
    "target_class": "org.apache.flink.table.types.logical.TimestampKind"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.SymbolUtil",
    "source_method": "serializableToCalcite",
    "target_class": "java.lang.String):T \t org.apache.flink.table.planner.typeutils.SymbolUtil.SerializableSymbol"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.SymbolUtil",
    "source_method": "addSymbolMapping",
    "target_class": "java.lang.Enum<?>, java.lang.Enum<?>, java.lang.String, java.lang.String):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.SymbolUtil",
    "source_method": "checkCalciteSymbol",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.SymbolUtil",
    "source_method": "checkCommonSymbol",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.DataViewUtils",
    "source_method": "extractDataViews",
    "target_class": "org.apache.flink.table.types.DataType):java.util.List<org.apache.flink.table.runtime.dataview.DataViewSpec> \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.DataViewUtils",
    "source_method": "adjustDataViews",
    "target_class": "boolean):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.DataViewUtils",
    "source_method": "createDistinctViewDataType",
    "target_class": "int, int):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.planner.typeutils.DataViewUtils",
    "source_method": "isDataView",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.api.dataview.DataView>):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.FlinkCalciteCatalogReader",
    "source_method": "toPreparingTable",
    "target_class": "java.util.List<java.lang.String>, org.apache.flink.table.planner.plan.RelDataType, org.apache.flink.table.planner.catalog.CatalogSchemaTable):org.apache.flink.table.planner.plan.schema.FlinkPreparingTableBase \t org.apache.flink.table.planner.catalog.CatalogSchemaTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.FlinkCalciteCatalogReader",
    "source_method": "convertQueryOperationView",
    "target_class": "java.util.List<java.lang.String>, org.apache.flink.table.planner.plan.RelDataType, org.apache.flink.table.catalog.QueryOperationCatalogView):org.apache.flink.table.planner.plan.schema.FlinkPreparingTableBase \t org.apache.flink.table.planner.catalog.QueryOperationCatalogViewTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.FlinkCalciteCatalogReader",
    "source_method": "convertLegacyTableSource",
    "target_class": "org.apache.flink.table.planner.plan.RelDataType, org.apache.flink.table.catalog.ObjectIdentifier, org.apache.flink.table.catalog.ConnectorCatalogTable<?,?>, org.apache.flink.table.planner.plan.FlinkStatistic, boolean):org.apache.flink.table.planner.plan.schema.FlinkPreparingTableBase \t org.apache.flink.table.catalog.ConnectorCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.FlinkCalciteCatalogReader",
    "source_method": "convertCatalogTable",
    "target_class": "java.util.List<java.lang.String>, org.apache.flink.table.planner.plan.RelDataType, org.apache.flink.table.planner.catalog.CatalogSchemaTable):org.apache.flink.table.planner.plan.schema.FlinkPreparingTableBase \t org.apache.flink.table.planner.catalog.CatalogSchemaTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.FlinkCalciteCatalogReader",
    "source_method": "isLegacySourceOptions",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.program.FlinkRuntimeFilterProgram",
    "source_method": "getInputIndices",
    "target_class": "org.apache.flink.table.planner.plan.optimize.program.ImmutableIntList):org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.table.planner.plan.optimize.program.ImmutableIntList,org.apache.flink.table.planner.plan.optimize.program.ImmutableIntList> \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.program.FlinkRuntimeFilterProgram",
    "source_method": "createKeysMapping",
    "target_class": "org.apache.flink.table.planner.plan.optimize.program.ImmutableIntList):java.util.Map<java.lang.Integer,java.lang.Integer> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.program.FlinkRuntimeFilterProgram",
    "source_method": "isRuntimeFilterEnabled",
    "target_class": "org.apache.flink.table.planner.utils.ShortcutUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.program.FlinkRuntimeFilterProgram",
    "source_method": "getMaxBuildDataSize",
    "target_class": "org.apache.flink.table.planner.utils.ShortcutUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.program.FlinkRuntimeFilterProgram",
    "source_method": "getMinProbeDataSize",
    "target_class": "org.apache.flink.table.planner.utils.ShortcutUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.program.FlinkRuntimeFilterProgram",
    "source_method": "getMinFilterRatio",
    "target_class": "org.apache.flink.table.planner.utils.ShortcutUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.program.FlinkRecomputeStatisticsProgram",
    "source_method": "isUnknownTableStats",
    "target_class": "org.apache.flink.table.plan.stats.TableStats"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.program.FlinkRecomputeStatisticsProgram",
    "source_method": "getPartitionStats",
    "target_class": "org.apache.flink.table.catalog.ObjectPath, java.util.List<java.util.Map<java.lang.String,java.lang.String>>):java.util.Optional<org.apache.flink.table.plan.stats.TableStats> \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.program.FlinkRecomputeStatisticsProgram",
    "source_method": "getPartitionKeys",
    "target_class": "org.apache.flink.table.catalog.CatalogPartitionSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.optimize.StreamNonDeterministicPhysicalPlanResolver",
    "source_method": "resolvePhysicalPlan",
    "target_class": "org.apache.flink.table.api.TableConfig):java.util.List<org.apache.flink.table.planner.plan.optimize.RelNode> \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.reuse.ScanReuserUtils",
    "source_method": "isIgnoreDigest",
    "target_class": "org.apache.flink.table.planner.plan.abilities.source.FilterPushDownSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.reuse.ScanReuserUtils",
    "source_method": "containsRexNodeSpecAfterProjection",
    "target_class": "org.apache.flink.table.planner.plan.abilities.source.SourceAbilitySpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.reuse.ScanReuserUtils",
    "source_method": "adjustWatermarkIndex",
    "target_class": "org.apache.flink.table.types.logical.RowType, org.apache.flink.table.types.logical.RowType, org.apache.flink.table.planner.plan.abilities.source.WatermarkPushDownSpec):org.apache.flink.table.planner.plan.abilities.source.WatermarkPushDownSpec \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.reuse.ScanReuserUtils",
    "source_method": "adjustRexNodeIndex",
    "target_class": "org.apache.flink.table.types.logical.RowType, java.util.List<org.apache.flink.table.planner.plan.reuse.RexNode>):java.util.List<org.apache.flink.table.planner.plan.reuse.RexNode> \t org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.reuse.ScanReuserUtils",
    "source_method": "projectedFields",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.reuse.ScanReuserUtils",
    "source_method": "metadataKeys",
    "target_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.reuse.ScanReuserUtils",
    "source_method": "concatProjectedFields",
    "target_class": "org.apache.flink.table.types.logical.RowType, int[][], java.util.List<java.lang.String>):int[][] \t org.apache.flink.table.planner.connectors.DynamicSourceUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.reuse.ScanReuser",
    "source_method": "applyPhysicalAndMetadataPushDown",
    "target_class": "org.apache.flink.table.types.logical.RowType, java.util.List<org.apache.flink.table.planner.plan.abilities.source.SourceAbilitySpec>, int[][], int[][], java.util.List<java.lang.String>):org.apache.flink.table.types.logical.RowType \t org.apache.flink.table.connector.Projection"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.fusion.OpFusionCodegenSpecGenerator",
    "source_method": "setup",
    "target_class": "org.apache.flink.table.planner.plan.fusion.OpFusionCodegenSpecGenerator.Context"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.physical.batch.runtimefilter.BatchPhysicalRuntimeFilter",
    "source_method": "getInputProperties",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.InputProperty"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.StateMetadata",
    "source_method": "getOneInputOperatorDefaultMeta",
    "target_class": "java.lang.String):java.util.List<org.apache.flink.table.planner.plan.nodes.exec.StateMetadata> \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.StateMetadata",
    "source_method": "getMultiInputOperatorDefaultMeta",
    "target_class": "org.apache.flink.configuration.ReadableConfig, java.lang.String[]):java.util.List<org.apache.flink.table.planner.plan.nodes.exec.StateMetadata> \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.StateMetadata",
    "source_method": "getStateTtlForMultiInputOperator",
    "target_class": "int, java.util.List<org.apache.flink.table.planner.plan.nodes.exec.StateMetadata>):java.util.List<java.lang.Long> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.StateMetadata",
    "source_method": "validateStateMetadata",
    "target_class": "java.util.List<org.apache.flink.table.planner.plan.nodes.exec.StateMetadata>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecMatch",
    "source_method": "translateTimeBound",
    "target_class": "org.apache.flink.streaming.api.windowing.time.Time"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecMatch.PatternVisitor",
    "source_method": "applyQuantifier",
    "target_class": "int, int, boolean):org.apache.flink.cep.pattern.Pattern<org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData> \t org.apache.flink.cep.pattern.Pattern"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecLegacyTableSourceScan",
    "source_method": "computeIndexMapping",
    "target_class": "org.apache.flink.table.api.TableSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "applyConstraintValidations",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig, org.apache.flink.table.types.logical.RowType):org.apache.flink.api.dag.Transformation<org.apache.flink.table.data.RowData> \t org.apache.flink.table.runtime.operators.sink.ConstraintEnforcer.Builder"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "getNotNullFieldIndices",
    "target_class": "org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "getFieldInfoForLengthEnforcer",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink.LengthEnforcerType):java.util.List<org.apache.flink.table.runtime.operators.sink.ConstraintEnforcer.FieldInfo> \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "deriveSinkParallelism",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink.SinkRuntimeProvider):int \t org.apache.flink.table.planner.plan.nodes.exec.spec.DynamicTableSinkSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "applyKeyBy",
    "target_class": "java.lang.ClassLoader, org.apache.flink.api.dag.Transformation<org.apache.flink.table.data.RowData>, int[], int, int, boolean):org.apache.flink.api.dag.Transformation<org.apache.flink.table.data.RowData> \t org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "applyRowKindSetter",
    "target_class": "org.apache.flink.types.RowKind, org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig):org.apache.flink.api.dag.Transformation<org.apache.flink.table.data.RowData> \t org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "applySinkProvider",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment, org.apache.flink.table.connector.sink.DynamicTableSink.SinkRuntimeProvider, int, int, org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig, java.lang.ClassLoader):org.apache.flink.api.dag.Transformation<?> \t org.apache.flink.util.TemporaryClassLoaderContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "createProviderContext",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "createSinkFunctionTransformation",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment, org.apache.flink.api.dag.Transformation<org.apache.flink.table.data.RowData>, int, org.apache.flink.table.planner.plan.nodes.exec.utils.TransformationMetadata, int):org.apache.flink.api.dag.Transformation<?> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "applyRowtimeTransformation",
    "target_class": "int, int, org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig):org.apache.flink.api.dag.Transformation<org.apache.flink.table.data.RowData> \t org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "getPrimaryKeyIndices",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):int[] \t org.apache.flink.table.catalog.UniqueConstraint"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "getPhysicalRowType",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink",
    "source_method": "getTargetRowKind",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.spec.DynamicTableSinkSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecLegacySink",
    "source_method": "getRowtimeIndex",
    "target_class": "org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecTableSourceScan",
    "source_method": "createProviderContext",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecTableSourceScan",
    "source_method": "createSourceFunctionTransformation",
    "target_class": "org.apache.flink.streaming.api.functions.source.SourceFunction<org.apache.flink.table.data.RowData>, boolean, java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation<org.apache.flink.table.data.RowData>):org.apache.flink.api.dag.Transformation<org.apache.flink.table.data.RowData> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecLookupJoin",
    "source_method": "setSingletonParallelism",
    "target_class": "org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecDeduplicate.DeduplicateOperatorTranslator",
    "source_method": "generateInsert",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecDeduplicate.DeduplicateOperatorTranslator",
    "source_method": "isMiniBatchEnabled",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecDeduplicate.DeduplicateOperatorTranslator",
    "source_method": "isCompactChanges",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecIntervalJoin",
    "source_method": "createProcTimeJoin",
    "target_class": "org.apache.flink.api.dag.Transformation<org.apache.flink.table.data.RowData>, org.apache.flink.table.runtime.typeutils.InternalTypeInfo<org.apache.flink.table.data.RowData>, org.apache.flink.table.runtime.operators.join.interval.IntervalJoinFunction, org.apache.flink.table.planner.plan.nodes.exec.spec.JoinSpec, org.apache.flink.table.planner.plan.nodes.exec.spec.IntervalJoinSpec.WindowBounds, long, org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig):org.apache.flink.streaming.api.transformations.TwoInputTransformation<org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData> \t org.apache.flink.table.planner.plan.nodes.exec.spec.IntervalJoinSpec.WindowBounds"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecIntervalJoin",
    "source_method": "createRowTimeJoin",
    "target_class": "org.apache.flink.api.dag.Transformation<org.apache.flink.table.data.RowData>, org.apache.flink.table.runtime.typeutils.InternalTypeInfo<org.apache.flink.table.data.RowData>, org.apache.flink.table.runtime.operators.join.interval.IntervalJoinFunction, org.apache.flink.table.planner.plan.nodes.exec.spec.JoinSpec, org.apache.flink.table.planner.plan.nodes.exec.spec.IntervalJoinSpec.WindowBounds, long, org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig):org.apache.flink.streaming.api.transformations.TwoInputTransformation<org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData> \t org.apache.flink.table.planner.plan.nodes.exec.spec.IntervalJoinSpec.WindowBounds"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecPythonGroupWindowAggregate",
    "source_method": "createPandasPythonStreamWindowGroupOneInputTransformation",
    "target_class": "org.apache.flink.table.types.logical.RowType, org.apache.flink.table.types.logical.RowType, int, org.apache.flink.table.runtime.operators.window.assigners.WindowAssigner<?>, org.apache.flink.table.runtime.operators.window.triggers.Trigger<?>, long, org.apache.flink.configuration.Configuration, org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig, java.lang.ClassLoader, java.time.ZoneId):org.apache.flink.streaming.api.transformations.OneInputTransformation<org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData> \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecTemporalJoin",
    "source_method": "getLeftKeySelector",
    "target_class": "org.apache.flink.table.types.logical.RowType):org.apache.flink.table.runtime.keyselector.RowDataKeySelector \t org.apache.flink.table.planner.plan.nodes.exec.spec.JoinSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecTemporalJoin",
    "source_method": "getRightKeySelector",
    "target_class": "org.apache.flink.table.types.logical.RowType):org.apache.flink.table.runtime.keyselector.RowDataKeySelector \t org.apache.flink.table.planner.plan.nodes.exec.spec.JoinSpec"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecTemporalJoin",
    "source_method": "createJoinOperator",
    "target_class": "org.apache.flink.table.types.logical.RowType, org.apache.flink.table.types.logical.RowType, org.apache.flink.table.runtime.generated.GeneratedJoinCondition):org.apache.flink.streaming.api.operators.TwoInputStreamOperator<org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData> \t org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecWindowAggregateBase",
    "source_method": "createSliceAssigner",
    "target_class": "java.time.ZoneId):org.apache.flink.table.runtime.operators.window.slicing.SliceAssigner \t org.apache.flink.table.planner.plan.logical.WindowingStrategy"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecWindowAggregateBase",
    "source_method": "createSliceAssigner",
    "target_class": "int, java.time.ZoneId):org.apache.flink.table.runtime.operators.window.slicing.SliceAssigner \t org.apache.flink.table.runtime.operators.window.slicing.SliceAssigners.HoppingSliceAssigner"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecHashJoin",
    "source_method": "getLargeManagedMemory",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig):long \t org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecExecutionOrderEnforcer",
    "source_method": "ignoreExchange",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecEdge"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecTableSourceScan",
    "source_method": "getDynamicFilteringDataCollector",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecPythonGroupWindowAggregate",
    "source_method": "createPythonOneInputTransformation",
    "target_class": "org.apache.flink.table.types.logical.RowType, org.apache.flink.table.types.logical.RowType, int, long, long, org.apache.flink.configuration.Configuration, org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig, java.lang.ClassLoader):org.apache.flink.streaming.api.transformations.OneInputTransformation<org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData> \t org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecExchange",
    "source_method": "getHashDistributionDescription",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.InputProperty.HashDistribution"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecLegacySink",
    "source_method": "validateType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecSink",
    "source_method": "getPhysicalRowType",
    "target_class": "int[]):org.apache.flink.table.types.logical.RowType \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecEdge",
    "source_method": "getOutputType",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecEdge.Builder",
    "source_method": "from",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecEdge"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecEdge.Builder",
    "source_method": "fromRequiredDistribution",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.InputProperty.RequiredDistribution"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig",
    "source_method": "ofTableConfig",
    "target_class": "boolean):org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig \t org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ResolvedCatalogTableJsonSerializer",
    "source_method": "serialize",
    "target_class": "boolean, org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator, org.apache.flink.table.planner.plan.nodes.exec.serde.SerializerProvider):void \t org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RelDataTypeJsonDeserializer",
    "source_method": "deserialize",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.planner.plan.nodes.exec.serde.RelDataType \t org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonSerdeUtil",
    "source_method": "createObjectWriter",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonSerdeUtil",
    "source_method": "loadClass",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext, java.lang.String):java.lang.Class<?> \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.DataTypeJsonDeserializer",
    "source_method": "deserializeWithCompactSerialization",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.DataTypeJsonDeserializer",
    "source_method": "deserializeClass",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonNode, org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonDeserializer",
    "source_method": "deserializeWithCompactSerialization",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonDeserializer",
    "source_method": "deserializeWithExtendedSerialization",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonDeserializer",
    "source_method": "deserializeZeroLengthString",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonNode):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.VarBinaryType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonDeserializer",
    "source_method": "deserializeTimestamp",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonNode):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.TimestampKind"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonDeserializer",
    "source_method": "deserializeDistinctTypeFromPlan",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonNode, org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.DistinctType.Builder"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonDeserializer",
    "source_method": "deserializeUserDefinedTypeFromCatalog",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonDeserializer",
    "source_method": "deserializeStructuredTypeFromPlan",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.StructuredType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonDeserializer",
    "source_method": "deserializeSpecializedRaw",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.planner.plan.nodes.exec.serde.JsonSerdeUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonPlanGraph",
    "source_method": "fromExecNodeGraph",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonPlanEdge"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonPlanGraph",
    "source_method": "convertToExecNodeGraph",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonPlanEdge",
    "source_method": "fromExecEdge",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecEdge"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonSerializer",
    "source_method": "serializeRow",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator, org.apache.flink.table.planner.plan.nodes.exec.serde.SerializerProvider, boolean):void \t org.apache.flink.table.types.logical.RowType.RowField"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonSerializer",
    "source_method": "serializeDistinctType",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator, org.apache.flink.table.planner.plan.nodes.exec.serde.SerializerProvider, boolean):void \t org.apache.flink.table.types.logical.UserDefinedType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonSerializer",
    "source_method": "serializeStructuredType",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator, org.apache.flink.table.planner.plan.nodes.exec.serde.SerializerProvider, boolean):void \t org.apache.flink.table.types.logical.StructuredType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonSerializer",
    "source_method": "serializeSpecializedRaw",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator, org.apache.flink.table.planner.plan.nodes.exec.serde.SerializerProvider):void \t org.apache.flink.table.types.logical.RawType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonSerializer",
    "source_method": "supportsCompactSerialization",
    "target_class": "boolean):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.LogicalTypeJsonSerializer",
    "source_method": "serializeTypeWithCompactSerialization",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.DataTypeJsonSerializer",
    "source_method": "serializeClass",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator):void \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.DataTypeJsonSerializer",
    "source_method": "isDefaultClass",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ColumnJsonDeserializer",
    "source_method": "deserializePhysicalColumn",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ObjectNode, org.apache.flink.table.planner.plan.nodes.exec.serde.ObjectCodec, org.apache.flink.table.planner.plan.nodes.exec.serde.DeserializationContext):org.apache.flink.table.catalog.Column.PhysicalColumn \t org.apache.flink.table.planner.plan.nodes.exec.serde.JsonSerdeUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ColumnJsonDeserializer",
    "source_method": "deserializeComputedColumn",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ObjectNode, org.apache.flink.table.planner.plan.nodes.exec.serde.ObjectCodec, org.apache.flink.table.planner.plan.nodes.exec.serde.DeserializationContext):org.apache.flink.table.catalog.Column.ComputedColumn \t org.apache.flink.table.planner.plan.nodes.exec.serde.JsonSerdeUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ColumnJsonDeserializer",
    "source_method": "deserializeMetadataColumn",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ObjectNode, org.apache.flink.table.planner.plan.nodes.exec.serde.ObjectCodec, org.apache.flink.table.planner.plan.nodes.exec.serde.DeserializationContext):org.apache.flink.table.catalog.Column.MetadataColumn \t org.apache.flink.table.planner.plan.nodes.exec.serde.JsonSerdeUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonSerializer",
    "source_method": "serializeLiteralValue",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SqlTypeName, org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator):void \t org.apache.flink.table.planner.typeutils.SymbolUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonSerializer",
    "source_method": "serializeSargValue",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SqlTypeName, org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator):void \t org.apache.flink.table.planner.typeutils.SymbolUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonSerializer",
    "source_method": "serializeCall",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator, org.apache.flink.table.planner.plan.nodes.exec.serde.SerializerProvider, org.apache.flink.table.api.config.TableConfigOptions.CatalogPlanCompilation):void \t org.apache.flink.table.api.config.TableConfigOptions.CatalogPlanCompilation"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonSerializer",
    "source_method": "serializeSqlOperator",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator, org.apache.flink.table.planner.plan.nodes.exec.serde.SerializerProvider, boolean):void \t org.apache.flink.table.planner.typeutils.SymbolUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonSerializer",
    "source_method": "serializeTemporaryFunction",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator, org.apache.flink.table.planner.plan.nodes.exec.serde.SerializerProvider):void \t org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonSerializer",
    "source_method": "serializePermanentFunction",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.JsonGenerator, org.apache.flink.table.planner.plan.nodes.exec.serde.SerializerProvider, boolean):void \t org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonSerializer",
    "source_method": "cannotSerializePermanentCatalogFunction",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ContextResolvedTableJsonDeserializer",
    "source_method": "isLookupForced",
    "target_class": "org.apache.flink.table.api.config.TableConfigOptions.CatalogPlanRestore"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ContextResolvedTableJsonDeserializer",
    "source_method": "isPlanEnforced",
    "target_class": "org.apache.flink.table.api.config.TableConfigOptions.CatalogPlanRestore"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ContextResolvedTableJsonDeserializer",
    "source_method": "lookupDisabled",
    "target_class": "org.apache.flink.table.api.config.TableConfigOptions.CatalogPlanRestore"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ContextResolvedTableJsonDeserializer",
    "source_method": "schemaNotMatching",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema, org.apache.flink.table.catalog.ResolvedSchema):org.apache.flink.table.api.TableException \t org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.ContextResolvedTableJsonDeserializer",
    "source_method": "missingTableFromCatalog",
    "target_class": "boolean):org.apache.flink.table.api.TableException \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "deserializeInputRef",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.planner.plan.nodes.exec.serde.RexNode \t org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "deserializeLiteral",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.planner.plan.nodes.exec.serde.RexNode \t org.apache.flink.table.planner.plan.nodes.exec.serde.RelDataTypeJsonDeserializer"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "deserializeSarg",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RelDataType, org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.planner.plan.nodes.exec.serde.RexNode \t org.apache.flink.table.planner.typeutils.SymbolUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "deserializeLiteralValue",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SqlTypeName, org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):java.lang.Object \t org.apache.flink.table.planner.typeutils.SymbolUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "deserializeFieldAccess",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.planner.plan.nodes.exec.serde.RexNode \t org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "deserializeCorrelVariable",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.planner.plan.nodes.exec.serde.RexNode \t org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "deserializePatternFieldRef",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.planner.plan.nodes.exec.serde.RexNode \t org.apache.flink.table.planner.plan.nodes.exec.serde.RelDataTypeJsonDeserializer"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "deserializeCall",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.planner.plan.nodes.exec.serde.RexNode \t org.apache.flink.table.planner.plan.nodes.exec.serde.RelDataTypeJsonDeserializer"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "deserializeFunctionClass",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext):org.apache.flink.table.planner.plan.nodes.exec.serde.SqlOperator \t org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "isTemporary",
    "target_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "lookupOptionalSqlOperator",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.SqlSyntax, org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext, boolean):java.util.Optional<org.apache.flink.table.planner.plan.nodes.exec.serde.SqlOperator> \t org.apache.flink.table.planner.plan.nodes.exec.serde.SerdeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "lookupDisabled",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.serde.RexNodeJsonDeserializer",
    "source_method": "missingFunctionFromCatalog",
    "target_class": "boolean):org.apache.flink.table.api.TableException \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.DynamicFilteringDependencyProcessor",
    "source_method": "createExchange",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.InputProperty, org.apache.flink.table.api.TableConfig):org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecExchange \t org.apache.flink.table.planner.plan.nodes.exec.ExecEdge"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.MultipleInputNodeCreationProcessor",
    "source_method": "wrapExecNodes",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.MultipleInputNodeCreationProcessor",
    "source_method": "canBeRootOfMultipleInputGroup",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.MultipleInputNodeCreationProcessor.ExecNodeWrapper):boolean \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.MultipleInputNodeCreationProcessor",
    "source_method": "isChainableSource",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.ProcessorContext):boolean \t org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecBoundedStreamScan"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.MultipleInputNodeCreationProcessor",
    "source_method": "createMultipleInputNode",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.MultipleInputNodeCreationProcessor.MultipleInputGroup, java.util.Map<org.apache.flink.table.planner.plan.nodes.exec.processor.MultipleInputNodeCreationProcessor.ExecNodeWrapper,org.apache.flink.table.planner.plan.nodes.exec.ExecNode<?>>):org.apache.flink.table.planner.plan.nodes.exec.ExecNode<?> \t org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.MultipleInputNodeCreationProcessor",
    "source_method": "createBatchMultipleInputNode",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.MultipleInputNodeCreationProcessor.MultipleInputGroup, java.util.List<org.apache.flink.api.java.tuple.Tuple3<org.apache.flink.table.planner.plan.nodes.exec.ExecNode<?>,org.apache.flink.table.planner.plan.nodes.exec.InputProperty,org.apache.flink.table.planner.plan.nodes.exec.ExecEdge>>):org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecMultipleInput \t org.apache.flink.table.planner.plan.nodes.exec.InputProperty"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputPriorityGraphGenerator",
    "source_method": "createTopologyGraph",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputPriorityGraphGenerator",
    "source_method": "addTopologyEdges",
    "target_class": "int, int):void \t org.apache.flink.table.planner.plan.nodes.exec.processor.utils.TopologyGraph"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputPriorityGraphGenerator",
    "source_method": "calculatePipelinedAncestors",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputPriorityConflictResolver",
    "source_method": "isConflictCausedByExchange",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecExchange):boolean \t org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputPriorityConflictResolver.ConflictCausedByExchangeChecker"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputPriorityConflictResolver",
    "source_method": "createExchange",
    "target_class": "int):org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecExchange \t org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputPriorityConflictResolver",
    "source_method": "getDynamicFilteringSourceNodes",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.visitor.AbstractExecNodeExactlyOnceVisitor"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputOrderCalculator",
    "source_method": "calculateAllAncestors",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.visitor.AbstractExecNodeExactlyOnceVisitor"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputOrderCalculator",
    "source_method": "checkPipelinedPath",
    "target_class": "java.util.Set<org.apache.flink.table.planner.plan.nodes.exec.ExecNode<?>>):boolean \t org.apache.flink.table.planner.plan.nodes.exec.processor.utils.InputOrderCalculator.PipelinedPathChecker"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.ForwardHashExchangeProcessor",
    "source_method": "createExchangeWithKeepInputAsIsDistribution",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.InputProperty, boolean, org.apache.flink.table.types.logical.RowType):org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecExchange \t org.apache.flink.table.planner.plan.nodes.exec.InputProperty"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.processor.ForwardHashExchangeProcessor",
    "source_method": "updateOriginalEdgeInMultipleInput",
    "target_class": "int, org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecExchange):void \t org.apache.flink.table.planner.plan.nodes.exec.batch.BatchExecMultipleInput"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeContext",
    "source_method": "newContext",
    "target_class": "org.apache.flink.table.planner.plan.utils.ExecNodeMetadataUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeContext",
    "source_method": "newPersistedConfig",
    "target_class": "org.apache.flink.configuration.ReadableConfig):org.apache.flink.configuration.ReadableConfig \t org.apache.flink.table.planner.plan.utils.ExecNodeMetadataUtil"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeBase",
    "source_method": "inputsContainSingleton",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.InputProperty"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeBase",
    "source_method": "createTransformationUid",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig):java.lang.String \t org.apache.flink.table.planner.plan.nodes.exec.ExecNodeContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeBase",
    "source_method": "createFormattedTransformationDescription",
    "target_class": "org.apache.flink.configuration.ReadableConfig):java.lang.String \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeBase",
    "source_method": "createFormattedTransformationName",
    "target_class": "java.lang.String, org.apache.flink.configuration.ReadableConfig):java.lang.String \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.CommonPythonUtil",
    "source_method": "createPythonFunctionInfo",
    "target_class": "java.util.Map<org.apache.flink.table.planner.plan.nodes.exec.utils.RexNode,java.lang.Integer>, java.lang.ClassLoader):org.apache.flink.table.functions.python.PythonFunctionInfo \t org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.CommonPythonUtil",
    "source_method": "isPythonWorkerInProcessMode",
    "target_class": "java.lang.ClassLoader):boolean \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.CommonPythonUtil",
    "source_method": "extractPythonAggregateFunctionInfos",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.AggregateCall[]):org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.table.functions.python.PythonAggregateFunctionInfo[],org.apache.flink.table.runtime.dataview.DataViewSpec[][]> \t org.apache.flink.table.types.inference.TypeStrategy"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.CommonPythonUtil",
    "source_method": "extractPythonAggregateFunctionInfosFromAggregateCall",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.CommonPythonUtil",
    "source_method": "extractDataViewSpecs",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.runtime.dataview.DataViewSpec[] \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.CommonPythonUtil",
    "source_method": "includesDataView",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodePlanDumper",
    "source_method": "treeToString",
    "target_class": "java.util.List<org.apache.flink.table.planner.plan.nodes.exec.ExecNode<?>>, boolean):java.lang.String \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodePlanDumper",
    "source_method": "dagToString",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodeUtil",
    "source_method": "setManagedMemoryWeight",
    "target_class": "long):void \t org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodeUtil",
    "source_method": "createOneInputTransformation",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.TransformationMetadata, org.apache.flink.streaming.api.operators.StreamOperator<O>, org.apache.flink.api.common.typeinfo.TypeInformation<O>, int, long, boolean):org.apache.flink.streaming.api.transformations.OneInputTransformation<I,O> \t org.apache.flink.streaming.api.operators.SimpleOperatorFactory"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodeUtil",
    "source_method": "createTwoInputTransformation",
    "target_class": "org.apache.flink.api.dag.Transformation<IN2>, org.apache.flink.table.planner.plan.nodes.exec.utils.TransformationMetadata, org.apache.flink.streaming.api.operators.TwoInputStreamOperator<IN1,IN2,O>, org.apache.flink.api.common.typeinfo.TypeInformation<O>, int, long):org.apache.flink.streaming.api.transformations.TwoInputTransformation<IN1,IN2,O> \t org.apache.flink.streaming.api.operators.SimpleOperatorFactory"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodeUtil",
    "source_method": "createTwoInputTransformation",
    "target_class": "org.apache.flink.api.dag.Transformation<IN2>, org.apache.flink.table.planner.plan.nodes.exec.utils.TransformationMetadata, org.apache.flink.streaming.api.operators.TwoInputStreamOperator<IN1,IN2,O>, org.apache.flink.api.common.typeinfo.TypeInformation<O>, int, long, boolean):org.apache.flink.streaming.api.transformations.TwoInputTransformation<IN1,IN2,O> \t org.apache.flink.streaming.api.operators.SimpleOperatorFactory"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodeUtil",
    "source_method": "createTwoInputTransformation",
    "target_class": "org.apache.flink.api.dag.Transformation<IN2>, java.lang.String, java.lang.String, org.apache.flink.streaming.api.operators.TwoInputStreamOperator<IN1,IN2,O>, org.apache.flink.api.common.typeinfo.TypeInformation<O>, int, long):org.apache.flink.streaming.api.transformations.TwoInputTransformation<IN1,IN2,O> \t org.apache.flink.streaming.api.operators.SimpleOperatorFactory"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodeUtil",
    "source_method": "createTwoInputTransformation",
    "target_class": "org.apache.flink.api.dag.Transformation<I2>, org.apache.flink.table.planner.plan.nodes.exec.utils.TransformationMetadata, org.apache.flink.streaming.api.operators.StreamOperatorFactory<O>, org.apache.flink.api.common.typeinfo.TypeInformation<O>, int, long):org.apache.flink.streaming.api.transformations.TwoInputTransformation<I1,I2,O> \t org.apache.flink.table.planner.plan.nodes.exec.utils.TransformationMetadata"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodeUtil",
    "source_method": "createTwoInputTransformation",
    "target_class": "org.apache.flink.api.dag.Transformation<I2>, org.apache.flink.table.planner.plan.nodes.exec.utils.TransformationMetadata, org.apache.flink.streaming.api.operators.StreamOperatorFactory<O>, org.apache.flink.api.common.typeinfo.TypeInformation<O>, int, long, boolean):org.apache.flink.streaming.api.transformations.TwoInputTransformation<I1,I2,O> \t org.apache.flink.table.planner.plan.nodes.exec.utils.TransformationMetadata"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodeUtil",
    "source_method": "getMultipleInputDescription",
    "target_class": "java.util.List<org.apache.flink.table.planner.plan.nodes.exec.ExecNode<?>>, java.util.List<org.apache.flink.table.planner.plan.nodes.exec.InputProperty>):java.lang.String \t org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodePlanDumper"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.utils.ExecNodeUtil",
    "source_method": "makeLegacySourceTransformationsBounded",
    "target_class": "org.apache.flink.streaming.api.transformations.LegacySourceTransformation"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.spec.SortSpec",
    "source_method": "getFieldTypes",
    "target_class": "org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.visitor.AbstractExecNodeExactlyOnceVisitor",
    "source_method": "visitInputs",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.nodes.exec.visitor.ExecNodeVisitorImpl",
    "source_method": "visitInputs",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.schema.StructuredRelDataType",
    "source_method": "create",
    "target_class": "org.apache.flink.table.types.logical.StructuredType):org.apache.flink.table.planner.plan.schema.StructuredRelDataType \t org.apache.flink.table.types.logical.StructuredType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.schema.StructuredRelDataType",
    "source_method": "createSqlIdentifier",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.schema.StructuredRelDataType",
    "source_method": "createRelDataTypeComparability",
    "target_class": "org.apache.flink.table.types.logical.StructuredType"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.schema.CatalogSourceTable",
    "source_method": "createAnonymous",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedTable, boolean):org.apache.flink.table.planner.plan.schema.CatalogSourceTable \t org.apache.flink.table.planner.calcite.FlinkRelBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.schema.CatalogSourceTable",
    "source_method": "getCatalogTable",
    "target_class": "org.apache.flink.table.planner.catalog.CatalogSchemaTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.PushWatermarkIntoTableSourceScanRuleBase",
    "source_method": "parseWatermarkParams",
    "target_class": "org.apache.flink.configuration.Configuration):org.apache.flink.table.watermark.WatermarkParams \t org.apache.flink.table.watermark.WatermarkParams.WatermarkParamsBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.PushWatermarkIntoTableSourceScanRuleBase",
    "source_method": "getOptions",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.configuration.Configuration):java.util.Optional<T> \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.PushProjectIntoTableSourceScanRule",
    "source_method": "requiresPrimaryKey",
    "target_class": "org.apache.flink.table.api.TableConfig):boolean \t org.apache.flink.table.planner.connectors.DynamicSourceUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.PushPartitionIntoTableSourceScanRule",
    "source_method": "readPartitionFromCatalogWithoutFilterAndPrune",
    "target_class": "org.apache.flink.table.catalog.ObjectPath, java.util.function.Function<java.util.List<java.util.Map<java.lang.String,java.lang.String>>,java.util.List<java.util.Map<java.lang.String,java.lang.String>>>):java.util.List<java.util.Map<java.lang.String,java.lang.String>> \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule",
    "source_method": "getBestPlan",
    "target_class": "org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule",
    "source_method": "addOuterJoinToTop",
    "target_class": "org.apache.flink.table.planner.plan.rules.logical.LoptMultiJoin, org.apache.calcite.tools.RelBuilder):org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan \t org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule",
    "source_method": "addCrossJoinToTop",
    "target_class": "org.apache.flink.table.planner.plan.rules.logical.LoptMultiJoin, org.apache.calcite.tools.RelBuilder):org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan \t org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule",
    "source_method": "createTopProject",
    "target_class": "org.apache.flink.table.planner.plan.rules.logical.LoptMultiJoin, org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan, java.util.List<java.lang.String>):org.apache.flink.table.planner.plan.rules.logical.RelNode \t org.apache.calcite.tools.RelBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule",
    "source_method": "foundNextLevel",
    "target_class": "java.util.List<java.util.Map<java.util.Set<java.lang.Integer>,org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan>>, org.apache.flink.table.planner.plan.rules.logical.LoptMultiJoin):java.util.Map<java.util.Set<java.lang.Integer>,org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan> \t org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule",
    "source_method": "buildInnerJoin",
    "target_class": "org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan, org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan, org.apache.flink.table.planner.plan.rules.logical.LoptMultiJoin):java.util.Optional<org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan> \t org.apache.flink.table.planner.plan.rules.logical.FlinkBushyJoinReorderRule.JoinPlan"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.SubQueryDecorrelator",
    "source_method": "decorrelateQuery",
    "target_class": "org.apache.flink.table.planner.plan.rules.logical.SubQueryDecorrelator.CorelMap"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.FlinkAggregateProjectMergeRule",
    "source_method": "newApply",
    "target_class": "org.apache.flink.table.planner.plan.rules.logical.Aggregate, org.apache.flink.table.planner.plan.rules.logical.Project):org.apache.flink.table.planner.plan.rules.logical.RelNode \t org.apache.calcite.tools.RelBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.rules.logical.RemoveUnreachableCoalesceArgumentsRule",
    "source_method": "operatorIsCoalesce",
    "target_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.abilities.source.AggregatePushDownSpec",
    "source_method": "apply",
    "target_class": "java.util.List<int[]>, java.util.List<org.apache.flink.table.planner.plan.abilities.source.AggregateCall>, org.apache.flink.table.types.logical.RowType, org.apache.flink.table.connector.source.DynamicTableSource, org.apache.flink.table.planner.plan.abilities.source.SourceAbilityContext):boolean \t org.apache.flink.table.planner.plan.abilities.source.SourceAbilityContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.abilities.source.AggregatePushDownSpec",
    "source_method": "buildAggregateExpressions",
    "target_class": "org.apache.flink.table.types.logical.RowType, java.util.List<org.apache.flink.table.planner.plan.abilities.source.AggregateCall>):java.util.List<org.apache.flink.table.expressions.AggregateExpression> \t org.apache.flink.table.planner.plan.abilities.source.SourceAbilityContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.abilities.source.FilterPushDownSpec",
    "source_method": "apply",
    "target_class": "org.apache.flink.table.connector.source.DynamicTableSource, org.apache.flink.table.planner.plan.abilities.source.SourceAbilityContext):org.apache.flink.table.connector.source.abilities.SupportsFilterPushDown.Result \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.abilities.source.SourceAbilityContext",
    "source_method": "from",
    "target_class": "org.apache.flink.table.planner.utils.ShortcutUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.abilities.source.WatermarkPushDownSpec",
    "source_method": "calculateIdleTimeoutMillis",
    "target_class": "org.apache.flink.table.watermark.WatermarkParams"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.QueryOperationConverter.SingleRelVisitor",
    "source_method": "convertToWindowProperty",
    "target_class": "org.apache.flink.table.runtime.groupwindow.WindowReference):org.apache.flink.table.runtime.groupwindow.NamedWindowProperty \t org.apache.flink.table.expressions.CallExpression"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.QueryOperationConverter.SingleRelVisitor",
    "source_method": "toLogicalWindow",
    "target_class": "org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.QueryOperationConverter",
    "source_method": "convertExprToRexNode",
    "target_class": "org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.LookupJoinUtil.RetryLookupOptions",
    "source_method": "fromJoinHint",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.LookupJoinUtil",
    "source_method": "getMergedAsyncOptions",
    "target_class": "org.apache.flink.table.api.TableConfig, org.apache.flink.table.connector.ChangelogMode):org.apache.flink.table.planner.plan.utils.LookupJoinUtil.AsyncLookupOptions \t org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.LookupJoinUtil",
    "source_method": "preferAsync",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.LookupJoinUtil",
    "source_method": "convert",
    "target_class": "org.apache.flink.table.api.config.ExecutionConfigOptions.AsyncOutputMode):org.apache.flink.streaming.api.datastream.AsyncDataStream.OutputMode \t org.apache.flink.table.connector.ChangelogMode"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.LookupJoinUtil",
    "source_method": "createFullCache",
    "target_class": "int[], java.lang.ClassLoader, org.apache.flink.table.types.logical.RowType):org.apache.flink.table.runtime.functions.table.lookup.fullcache.LookupFullCache \t org.apache.flink.table.runtime.typeutils.InternalTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.SorMergeJoinOperatorUtil",
    "source_method": "getSortMergeJoinFunction",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig, org.apache.flink.table.runtime.operators.join.FlinkJoinType, org.apache.flink.table.types.logical.RowType, org.apache.flink.table.types.logical.RowType, int[], int[], org.apache.flink.table.types.logical.RowType, boolean, boolean[], org.apache.flink.table.runtime.generated.GeneratedJoinCondition, double):org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction \t org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.KeySelectorUtil",
    "source_method": "getRowDataSelector",
    "target_class": "int[], org.apache.flink.table.runtime.typeutils.InternalTypeInfo<org.apache.flink.table.data.RowData>, java.lang.Class<? extends org.apache.flink.table.data.RowData>):org.apache.flink.table.runtime.keyselector.RowDataKeySelector \t org.apache.flink.table.runtime.typeutils.InternalTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.RankProcessStrategy",
    "source_method": "analyzeRankProcessStrategies",
    "target_class": "org.apache.flink.table.planner.plan.utils.ImmutableBitSet, org.apache.flink.table.planner.plan.utils.RelCollation):java.util.List<org.apache.flink.table.planner.plan.utils.RankProcessStrategy> \t org.apache.flink.table.planner.plan.metadata.FlinkRelMetadataQuery"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.AsyncUtil",
    "source_method": "getAsyncOptions",
    "target_class": "org.apache.flink.table.planner.plan.nodes.exec.ExecNodeConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.AsyncUtil",
    "source_method": "getResultRetryStrategy",
    "target_class": "java.time.Duration, int):org.apache.flink.streaming.api.functions.async.AsyncRetryStrategy<org.apache.flink.table.data.RowData> \t org.apache.flink.streaming.util.retryable.AsyncRetryStrategies.FixedDelayRetryStrategyBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.AsyncUtil.FunctionFinder",
    "source_method": "isImmediateAsyncCall",
    "target_class": "org.apache.flink.table.functions.FunctionDefinition"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.ExecNodeMetadataUtil",
    "source_method": "newPersistedConfig",
    "target_class": "org.apache.flink.configuration.ReadableConfig, java.util.stream.Stream<org.apache.flink.configuration.ConfigOption<?>>):org.apache.flink.configuration.ReadableConfig \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.RexLiteralUtil",
    "source_method": "toFlinkInternalValue",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):java.lang.Object \t org.apache.flink.table.planner.utils.TimestampStringUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.utils.WindowTableFunctionUtil",
    "source_method": "createWindowAssigner",
    "target_class": "org.apache.flink.table.planner.plan.logical.WindowingStrategy"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.trait.ModifyKindSet",
    "source_method": "intersect",
    "target_class": "org.apache.flink.table.planner.plan.trait.ModifyKindSet.Builder"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.trait.ModifyKindSet",
    "source_method": "toChangelogMode",
    "target_class": "org.apache.flink.table.connector.ChangelogMode.Builder"
  },
  {
    "source_class": "org.apache.flink.table.planner.plan.trait.ModifyKindSet",
    "source_method": "union",
    "target_class": "org.apache.flink.table.planner.plan.trait.ModifyKindSet.Builder"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.DefaultExecutor",
    "source_method": "configureBatchSpecificProperties",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.table.planner.delegation.DefaultExecutor",
    "source_method": "setJobName",
    "target_class": "java.lang.String):void \t org.apache.flink.streaming.api.graph.StreamGraph"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlProcedure",
    "source_method": "of",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedProcedure):org.apache.flink.table.planner.functions.bridging.BridgingSqlProcedure \t org.apache.flink.table.planner.functions.bridging.BridgingUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingUtils",
    "source_method": "createName",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedProcedure"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingUtils",
    "source_method": "extractName",
    "target_class": "org.apache.flink.table.functions.FunctionIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingUtils",
    "source_method": "extractUserDefinedFunction",
    "target_class": "org.apache.flink.table.functions.TableAggregateFunctionDefinition"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingUtils",
    "source_method": "createSqlIdentifier",
    "target_class": "org.apache.flink.table.functions.FunctionIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingUtils",
    "source_method": "createSqlIdentifier",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedProcedure"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingUtils",
    "source_method": "createParamTypes",
    "target_class": "org.apache.flink.table.types.inference.TypeInference):java.util.List<org.apache.flink.table.planner.functions.bridging.RelDataType> \t org.apache.flink.table.types.inference.TypeInference"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingUtils",
    "source_method": "createSqlFunctionCategory",
    "target_class": "org.apache.flink.table.functions.FunctionIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction",
    "source_method": "of",
    "target_class": "org.apache.flink.table.planner.functions.bridging.FlinkTypeFactory, org.apache.flink.table.planner.calcite.RexFactory, org.apache.flink.table.planner.functions.bridging.SqlKind, org.apache.flink.table.catalog.ContextResolvedFunction, org.apache.flink.table.types.inference.TypeInference):org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction \t org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction",
    "source_method": "of",
    "target_class": "org.apache.flink.table.planner.functions.bridging.FlinkTypeFactory, org.apache.flink.table.catalog.ContextResolvedFunction):org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction \t org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction",
    "source_method": "of",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedFunction):org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction \t org.apache.flink.table.planner.utils.ShortcutUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction",
    "source_method": "of",
    "target_class": "org.apache.flink.table.functions.BuiltInFunctionDefinition):org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction \t org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlAggFunction",
    "source_method": "of",
    "target_class": "org.apache.flink.table.planner.functions.bridging.FlinkTypeFactory, org.apache.flink.table.planner.functions.bridging.SqlKind, org.apache.flink.table.catalog.ContextResolvedFunction, org.apache.flink.table.types.inference.TypeInference):org.apache.flink.table.planner.functions.bridging.BridgingSqlAggFunction \t org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlAggFunction",
    "source_method": "of",
    "target_class": "org.apache.flink.table.planner.functions.bridging.FlinkTypeFactory, org.apache.flink.table.catalog.ContextResolvedFunction):org.apache.flink.table.planner.functions.bridging.BridgingSqlAggFunction \t org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlAggFunction",
    "source_method": "createOverWindowRequirement",
    "target_class": "org.apache.flink.table.functions.FunctionRequirement"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.sql.FlinkSqlOperatorTable",
    "source_method": "dynamicFunctions",
    "target_class": "org.apache.flink.table.planner.functions.sql.FlinkTimestampWithPrecisionDynamicFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.ArrayToArrayCastRule",
    "source_method": "isValidArrayCasting",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.planner.functions.casting.CastRuleProvider"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.ArrayToArrayCastRule",
    "source_method": "arrayElementType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.MapToMapAndMultisetToMultisetCastRule",
    "source_method": "isValidMapToMapOrMultisetToMultisetCasting",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.RowToStringCastRule",
    "source_method": "matches",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.planner.functions.casting.CastRuleProvider"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.RowToStringCastRule",
    "source_method": "getDelimiter",
    "target_class": "org.apache.flink.table.planner.functions.casting.CastRuleUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.MapAndMultisetToStringCastRule",
    "source_method": "isMapOrMultiset",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.BinaryToBinaryCastRule",
    "source_method": "couldPad",
    "target_class": "int):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.BinaryToBinaryCastRule",
    "source_method": "trimOrPadByteArray",
    "target_class": "int, java.lang.String, org.apache.flink.table.planner.functions.casting.CastRuleUtils.CodeWriter):void \t org.apache.flink.table.planner.functions.casting.CastRuleUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CharVarCharTrimPadCastRule",
    "source_method": "stringExceedsLength",
    "target_class": "int):java.lang.String \t org.apache.flink.table.planner.functions.casting.CastRuleUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CharVarCharTrimPadCastRule",
    "source_method": "stringShouldPad",
    "target_class": "int):java.lang.String \t org.apache.flink.table.planner.functions.casting.CastRuleUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CharVarCharTrimPadCastRule",
    "source_method": "couldPad",
    "target_class": "int):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CharVarCharTrimPadCastRule",
    "source_method": "padStringIfNeeded",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, boolean, int, java.lang.String, org.apache.flink.table.planner.functions.casting.CodeGeneratorContext):void \t org.apache.flink.table.planner.functions.casting.CastRuleUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.StructuredToStringCastRule",
    "source_method": "matches",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.planner.functions.casting.CastRuleProvider"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CastRuleUtils",
    "source_method": "strLiteral",
    "target_class": "org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CastRuleUtils.CodeWriter",
    "source_method": "append",
    "target_class": "org.apache.flink.table.planner.functions.casting.CastCodeBlock"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CastRuleProvider",
    "source_method": "cast",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.types.logical.LogicalType, java.lang.Object):java.lang.Object \t org.apache.flink.table.data.utils.CastExecutor"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CastRuleProvider",
    "source_method": "generateAlwaysNonNullCodeBlock",
    "target_class": "java.lang.String, org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.planner.functions.casting.CastCodeBlock \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CastRuleProvider",
    "source_method": "addRule",
    "target_class": "org.apache.flink.table.planner.functions.casting.CastRule"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.CastRuleProvider",
    "source_method": "internalResolve",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.planner.functions.casting.CastRule<?,?> \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.IdentityCastRule",
    "source_method": "isIdentityCast",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.RowDataToStringConverterImpl",
    "source_method": "init",
    "target_class": "org.apache.flink.table.data.RowData.FieldGetter"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.RowToRowCastRule",
    "source_method": "matches",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.planner.functions.casting.CastRuleProvider"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.casting.NumericPrimitiveCastRule",
    "source_method": "matches",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.aggfunctions.RankLikeAggFunctionBase",
    "source_method": "generateInitLiteral",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.aggfunctions.SingleValueAggFunction",
    "source_method": "throwException",
    "target_class": "org.apache.flink.table.planner.expressions.ExpressionBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.inference.CallBindingCallContext",
    "source_method": "convertOutputType",
    "target_class": "org.apache.flink.table.planner.functions.inference.RelDataType):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.utils.TypeConversions"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.inference.AbstractSqlCallContext",
    "source_method": "getLiteralValueAs",
    "target_class": "java.lang.Class<T>):T \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.functions.inference.TypeInferenceOperandChecker",
    "source_method": "checkOperandTypesOrError",
    "target_class": "org.apache.flink.table.types.inference.CallContext):boolean \t org.apache.flink.table.types.inference.CallContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.ExternalDynamicSink",
    "source_method": "generateOperatorDesc",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "convertDataStreamToRel",
    "target_class": "org.apache.flink.configuration.ReadableConfig, org.apache.flink.table.planner.calcite.FlinkRelBuilder, org.apache.flink.table.catalog.ContextResolvedTable, org.apache.flink.streaming.api.datastream.DataStream<?>, org.apache.flink.table.types.DataType, boolean, org.apache.flink.table.connector.ChangelogMode):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.catalog.ContextResolvedTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "createMetadataKeysToMetadataColumnsMap",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "isUpsertSource",
    "target_class": "org.apache.flink.table.connector.source.DynamicTableSource):boolean \t org.apache.flink.table.connector.ChangelogMode"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "isSourceChangeEventsDuplicate",
    "target_class": "org.apache.flink.table.connector.source.DynamicTableSource, org.apache.flink.table.api.TableConfig):boolean \t org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "pushWatermarkAssigner",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):void \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "pushGeneratedProjection",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):void \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "pushMetadataProjection",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):void \t org.apache.calcite.tools.RelBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "pushTableScan",
    "target_class": "org.apache.flink.table.planner.calcite.FlinkRelBuilder, org.apache.flink.table.catalog.ContextResolvedTable, org.apache.flink.table.planner.connectors.FlinkStatistic, java.util.List<org.apache.flink.table.planner.connectors.RelHint>, org.apache.flink.table.connector.source.DynamicTableSource, java.util.List<org.apache.flink.table.planner.plan.abilities.source.SourceAbilitySpec>):void \t org.apache.flink.table.planner.utils.ShortcutUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "extractMetadataColumns",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "validateAndApplyMetadata",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema, org.apache.flink.table.connector.source.DynamicTableSource, java.util.List<org.apache.flink.table.planner.plan.abilities.source.SourceAbilitySpec>):void \t org.apache.flink.table.connector.source.abilities.SupportsReadingMetadata"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "validateScanSourceForStreaming",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema, org.apache.flink.table.connector.source.ScanTableSource, org.apache.flink.table.connector.ChangelogMode, org.apache.flink.configuration.ReadableConfig):void \t org.apache.flink.table.connector.ChangelogMode"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "validateScanSourceForBatch",
    "target_class": "org.apache.flink.table.connector.ChangelogMode, org.apache.flink.table.connector.source.ScanTableSource.ScanRuntimeProvider):void \t org.apache.flink.table.connector.ChangelogMode"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "validateWatermarks",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):void \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSourceUtils",
    "source_method": "prepareRowLevelModificationScan",
    "target_class": "org.apache.flink.table.planner.utils.RowLevelModificationContextUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.ExternalDynamicSource",
    "source_method": "generateOperatorDesc",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "convertCollectToRel",
    "target_class": "org.apache.flink.table.planner.connectors.RelNode, org.apache.flink.table.operations.CollectModifyOperation, org.apache.flink.configuration.ReadableConfig, java.lang.ClassLoader):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "convertExternalToRel",
    "target_class": "org.apache.flink.table.planner.connectors.RelNode, org.apache.flink.table.operations.ExternalModifyOperation):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.operations.ExternalModifyOperation"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "convertSinkToRel",
    "target_class": "org.apache.flink.table.planner.connectors.RelNode, org.apache.flink.table.operations.SinkModifyOperation, org.apache.flink.table.connector.sink.DynamicTableSink):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.operations.SinkModifyOperation"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "convertSinkToRel",
    "target_class": "org.apache.flink.table.planner.connectors.RelNode, java.util.Map<java.lang.String,java.lang.String>, org.apache.flink.table.catalog.ContextResolvedTable, java.util.Map<java.lang.String,java.lang.String>, int[][], boolean, org.apache.flink.table.connector.sink.DynamicTableSink):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.catalog.ContextResolvedTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "validateSchemaAndApplyImplicitCast",
    "target_class": "org.apache.flink.table.types.logical.RowType, java.lang.String, org.apache.flink.table.planner.connectors.FlinkTypeFactory):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.types.logical.utils.LogicalTypeCasts"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "convertDelete",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink, org.apache.flink.table.catalog.ContextResolvedTable, java.lang.String, org.apache.flink.table.catalog.DataTypeFactory, org.apache.flink.table.planner.connectors.FlinkTypeFactory, java.util.List<org.apache.flink.table.planner.plan.abilities.sink.SinkAbilitySpec>):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.planner.utils.RowLevelModificationContextUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "convertUpdate",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink, org.apache.flink.table.catalog.ContextResolvedTable, java.lang.String, org.apache.flink.table.catalog.DataTypeFactory, org.apache.flink.table.planner.connectors.FlinkTypeFactory, java.util.List<org.apache.flink.table.planner.plan.abilities.sink.SinkAbilitySpec>):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.planner.utils.RowLevelModificationContextUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "getUpdatedColumns",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):java.util.List<org.apache.flink.table.catalog.Column> \t org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "getPhysicalColumnIndices",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):int[] \t org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "getRequireColumnsIndexAndExtraMetaCols",
    "target_class": "java.util.List<org.apache.flink.table.catalog.Column>, org.apache.flink.table.catalog.ResolvedSchema):org.apache.flink.api.java.tuple.Tuple2<java.util.List<java.lang.Integer>,java.util.List<org.apache.flink.table.catalog.Column.MetadataColumn>> \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "projectColumnsForUpdate",
    "target_class": "int, org.apache.flink.table.catalog.ResolvedSchema, java.util.List<java.lang.Integer>, org.apache.flink.table.connector.sink.abilities.SupportsRowLevelUpdate.RowLevelUpdateMode, java.lang.String, org.apache.flink.table.catalog.DataTypeFactory, org.apache.flink.table.planner.connectors.FlinkTypeFactory):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "addExtraMetaCols",
    "target_class": "org.apache.calcite.rel.logical.LogicalTableScan, java.lang.String, java.util.List<org.apache.flink.table.catalog.Column.MetadataColumn>, org.apache.flink.table.planner.connectors.FlinkTypeFactory):org.apache.flink.table.catalog.ResolvedSchema \t org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "projectColumnsForDelete",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema, java.util.List<java.lang.Integer>, java.lang.String, org.apache.flink.table.catalog.DataTypeFactory, org.apache.flink.table.planner.connectors.FlinkTypeFactory):org.apache.flink.table.planner.connectors.RelNode \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "fixCollectDataType",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "pushMetadataProjection",
    "target_class": "org.apache.flink.table.planner.connectors.FlinkTypeFactory, org.apache.flink.table.catalog.ResolvedSchema, org.apache.flink.table.connector.sink.DynamicTableSink):void \t org.apache.calcite.tools.RelBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "prepareDynamicSink",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>, boolean, org.apache.flink.table.connector.sink.DynamicTableSink, org.apache.flink.table.catalog.ResolvedCatalogTable, java.util.List<org.apache.flink.table.planner.plan.abilities.sink.SinkAbilitySpec>):void \t org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "createRequiredMetadataColumns",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink):java.util.List<org.apache.flink.table.catalog.Column.MetadataColumn> \t org.apache.flink.table.catalog.Column.MetadataColumn"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "createSchemaMismatchException",
    "target_class": "java.lang.String, java.util.List<org.apache.flink.table.types.logical.RowType.RowField>, java.util.List<org.apache.flink.table.types.logical.RowType.RowField>):org.apache.flink.table.api.ValidationException \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "fixSinkDataType",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "extractPhysicalColumns",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "extractPersistedMetadataColumns",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "adjustByVirtualColumns",
    "target_class": "int):int \t org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "validateAndApplyMetadata",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink, org.apache.flink.table.catalog.ResolvedSchema, java.util.List<org.apache.flink.table.planner.plan.abilities.sink.SinkAbilitySpec>):void \t org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.connectors.DynamicSinkUtils",
    "source_method": "createConsumedType",
    "target_class": "org.apache.flink.table.connector.sink.DynamicTableSink):org.apache.flink.table.types.logical.RowType \t org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.calcite.FlinkRelBuilder",
    "source_method": "of",
    "target_class": "org.apache.flink.table.planner.calcite.RelOptCluster, org.apache.flink.table.planner.calcite.RelOptSchema):org.apache.flink.table.planner.calcite.FlinkRelBuilder \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.calcite.FlinkRelBuilder",
    "source_method": "pushFunctionScan",
    "target_class": "org.apache.flink.table.planner.calcite.SqlOperator, int, java.lang.Iterable<org.apache.flink.table.planner.calcite.RexNode>, java.util.List<java.lang.String>):org.apache.calcite.tools.RelBuilder \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.ColumnReferenceFinder",
    "source_method": "findReferencedColumn",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):java.util.Set<java.lang.String> \t org.apache.flink.table.planner.expressions.ColumnReferenceFinder.ColumnReferenceVisitor"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.ColumnReferenceFinder",
    "source_method": "findWatermarkReferencedColumn",
    "target_class": "org.apache.flink.table.planner.expressions.ColumnReferenceFinder.ColumnReferenceVisitor"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.ColumnReferenceFinder.ColumnReferenceVisitor",
    "source_method": "visit",
    "target_class": "org.apache.flink.table.expressions.LocalReferenceExpression"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.converter.OverConvertRule",
    "source_method": "isRows",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.converter.OverConvertRule",
    "source_method": "createLiteralBound",
    "target_class": "org.apache.flink.table.expressions.ValueLiteralExpression, org.apache.flink.table.planner.expressions.converter.SqlKind):org.apache.flink.table.planner.expressions.converter.RexWindowBound \t org.apache.flink.table.expressions.ValueLiteralExpression"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.converter.ExpressionConverter",
    "source_method": "extractValue",
    "target_class": "java.lang.Class<T>):T \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.converter.converters.IsJsonConverter",
    "source_method": "getJsonTypeArgument",
    "target_class": "org.apache.flink.table.expressions.CallExpression"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.converter.converters.JsonConverterUtil",
    "source_method": "getOnNullArgument",
    "target_class": "int):org.apache.flink.table.planner.expressions.converter.converters.SqlJsonConstructorNullClause \t org.apache.flink.table.expressions.CallExpression"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.ExpressionBuilder",
    "source_method": "literal",
    "target_class": "org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.ExpressionBuilder",
    "source_method": "literal",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.expressions.ValueLiteralExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.ExpressionBuilder",
    "source_method": "call",
    "target_class": "org.apache.flink.table.expressions.Expression[]):org.apache.flink.table.expressions.UnresolvedCallExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.ExpressionBuilder",
    "source_method": "call",
    "target_class": "java.util.List<org.apache.flink.table.expressions.Expression>):org.apache.flink.table.expressions.UnresolvedCallExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.DeclarativeExpressionResolver",
    "source_method": "toRexInputRef",
    "target_class": "int, org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.expressions.ResolvedExpression \t org.apache.calcite.tools.RelBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.expressions.DeclarativeExpressionResolver",
    "source_method": "toRexDistinctKey",
    "target_class": "java.lang.String, org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.expressions.ResolvedExpression \t org.apache.calcite.tools.RelBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.hint.FlinkHintStrategies",
    "source_method": "createHintStrategyTable",
    "target_class": "org.apache.flink.table.planner.hint.StateTtlHint"
  },
  {
    "source_class": "org.apache.flink.table.planner.hint.FlinkHints",
    "source_method": "getTableName",
    "target_class": "org.apache.flink.table.planner.plan.schema.FlinkPreparingTableBase"
  },
  {
    "source_class": "org.apache.flink.table.planner.hint.FlinkHints",
    "source_method": "isQueryHint",
    "target_class": "org.apache.flink.table.planner.hint.JoinStrategy"
  },
  {
    "source_class": "org.apache.flink.table.planner.hint.FlinkHints",
    "source_method": "isKVQueryHint",
    "target_class": "org.apache.flink.table.planner.hint.StateTtlHint"
  },
  {
    "source_class": "org.apache.flink.table.planner.analyze.GroupAggregationAnalyzer",
    "source_method": "getAdviceContent",
    "target_class": "org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.catalog.DatabaseCalciteSchema",
    "source_method": "extractTableStats",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier):org.apache.flink.table.plan.stats.TableStats \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.planner.catalog.FunctionCatalogOperatorTable",
    "source_method": "convertToBridgingSqlFunction",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedFunction):java.util.Optional<org.apache.flink.table.planner.catalog.SqlFunction> \t org.apache.flink.table.types.inference.TypeInference"
  },
  {
    "source_class": "org.apache.flink.table.planner.catalog.CatalogSchemaTable",
    "source_method": "findAndCreateTableSource",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.TableConfigUtils",
    "source_method": "isOperatorDisabled",
    "target_class": "org.apache.flink.table.planner.plan.utils.OperatorType):boolean \t org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.TableConfigUtils",
    "source_method": "getAggPhaseStrategy",
    "target_class": "org.apache.flink.table.planner.utils.AggregatePhaseStrategy"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.TableConfigUtils",
    "source_method": "getCalciteConfig",
    "target_class": "org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.TableConfigUtils",
    "source_method": "getLocalTimeZone",
    "target_class": "org.apache.flink.table.api.internal.TableConfigValidation"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.TableConfigUtils",
    "source_method": "getMaxIdleStateRetentionTime",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.DynamicPartitionPruningUtils",
    "source_method": "isDppDimSide",
    "target_class": "org.apache.flink.table.planner.utils.DynamicPartitionPruningUtils.DppDimSideChecker"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.DynamicPartitionPruningUtils",
    "source_method": "canConvertAndConvertDppFactSide",
    "target_class": "org.apache.flink.table.planner.utils.ImmutableIntList, org.apache.flink.table.planner.utils.RelNode, org.apache.flink.table.planner.utils.ImmutableIntList):org.apache.flink.api.java.tuple.Tuple2<java.lang.Boolean,org.apache.flink.table.planner.utils.RelNode> \t org.apache.flink.table.planner.utils.DynamicPartitionPruningUtils.DppFactSideChecker"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.DynamicPartitionPruningUtils.DppDimSideChecker",
    "source_method": "setTables",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedTable"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.DynamicPartitionPruningUtils.DppFactSideChecker",
    "source_method": "isNewSource",
    "target_class": "org.apache.flink.table.runtime.connector.source.ScanRuntimeProviderContext"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.OperationConverterUtils",
    "source_method": "buildModifyColumnChange",
    "target_class": "org.apache.flink.table.catalog.Column, org.apache.flink.table.catalog.TableChange.ColumnPosition):java.util.List<org.apache.flink.table.catalog.TableChange> \t org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.OperationConverterUtils",
    "source_method": "getComment",
    "target_class": "org.apache.flink.sql.parser.ddl.SqlTableColumn"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.StreamExchangeModeUtils",
    "source_method": "getBatchStreamExchangeMode",
    "target_class": "org.apache.flink.streaming.api.transformations.StreamExchangeMode):org.apache.flink.streaming.api.transformations.StreamExchangeMode \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.StreamExchangeModeUtils",
    "source_method": "getGlobalStreamExchangeMode",
    "target_class": "org.apache.flink.streaming.api.graph.GlobalStreamExchangeMode"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.StreamExchangeModeUtils",
    "source_method": "convertLegacyShuffleMode",
    "target_class": "org.apache.flink.streaming.api.graph.GlobalStreamExchangeMode"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.CatalogTableStatisticsConverter",
    "source_method": "convertToTableStats",
    "target_class": "org.apache.flink.table.catalog.stats.CatalogColumnStatistics):org.apache.flink.table.plan.stats.TableStats \t org.apache.flink.table.plan.stats.TableStats"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.CatalogTableStatisticsConverter",
    "source_method": "convertToAccumulatedTableStates",
    "target_class": "java.util.List<org.apache.flink.table.catalog.stats.CatalogColumnStatistics>, java.util.Set<java.lang.String>):org.apache.flink.table.plan.stats.TableStats \t org.apache.flink.table.plan.stats.TableStats"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.CatalogTableStatisticsConverter",
    "source_method": "convertToColumnStats",
    "target_class": "org.apache.flink.table.plan.stats.ColumnStats.Builder"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.ShortcutUtils",
    "source_method": "unwrapTypeFactory",
    "target_class": "org.apache.calcite.tools.RelBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.ShortcutUtils",
    "source_method": "unwrapContext",
    "target_class": "org.apache.calcite.tools.RelBuilder"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.ShortcutUtils",
    "source_method": "unwrapFunctionDefinition",
    "target_class": "org.apache.flink.table.expressions.CallExpression"
  },
  {
    "source_class": "org.apache.flink.table.planner.utils.ShortcutUtils",
    "source_method": "unwrapFunctionDefinition",
    "target_class": "org.apache.flink.table.planner.functions.bridging.BridgingSqlFunction"
  },
  {
    "source_class": "org.apache.flink.table.planner.codegen.AsyncCodeGenerator",
    "source_method": "generateProcessCode",
    "target_class": "org.apache.flink.table.types.logical.RowType, org.apache.flink.table.types.logical.RowType, java.util.List<org.apache.flink.table.planner.codegen.RexNode>, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):java.lang.String \t org.apache.flink.table.types.logical.utils.LogicalTypeChecks"
  },
  {
    "source_class": "org.apache.flink.table.planner.loader.PlannerModule",
    "source_method": "addUrlToClassLoader",
    "target_class": "org.apache.flink.table.planner.loader.PlannerModule.PlannerComponentClassLoader"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.ColumnInfo",
    "source_method": "fromLogicalType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.jdbc.ColumnInfo \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.DriverUri",
    "source_method": "mergeDynamicProperties",
    "target_class": "java.util.Properties):java.util.Properties \t org.apache.flink.table.jdbc.utils.DriverUtils"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.DriverUri",
    "source_method": "parseDriverUrl",
    "target_class": "org.apache.flink.table.jdbc.utils.DriverUtils"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.FlinkDatabaseMetaData",
    "source_method": "catalogs",
    "target_class": "org.apache.flink.table.client.gateway.Executor"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.FlinkDatabaseMetaData",
    "source_method": "getSchemasForCatalog",
    "target_class": "java.util.Map<java.lang.String,java.util.List<java.lang.String>>, java.lang.String, java.lang.String):void \t org.apache.flink.table.client.gateway.StatementResult"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.FlinkDatabaseMetaData",
    "source_method": "schemas",
    "target_class": "org.apache.flink.table.client.gateway.Executor"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.FlinkResultSet",
    "source_method": "createFieldGetterList",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.FlinkResultSet",
    "source_method": "checkValidRow",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.FlinkResultSet",
    "source_method": "checkValidColumn",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.FlinkConnection",
    "source_method": "setSessionCatalog",
    "target_class": "org.apache.flink.table.client.gateway.Executor"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.FlinkConnection",
    "source_method": "setSessionSchema",
    "target_class": "org.apache.flink.table.client.gateway.Executor"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.utils.DatabaseMetaDataUtils",
    "source_method": "createCatalogsResultSet",
    "target_class": "org.apache.flink.table.client.gateway.StatementResult):org.apache.flink.table.jdbc.FlinkResultSet \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.jdbc.utils.DatabaseMetaDataUtils",
    "source_method": "createSchemasResultSet",
    "target_class": "java.util.List<java.lang.String>, java.util.Map<java.lang.String,java.util.List<java.lang.String>>):org.apache.flink.table.jdbc.FlinkResultSet \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.formats.raw.RawFormatSerializationSchema",
    "source_method": "createConverter",
    "target_class": "java.lang.String, boolean):org.apache.flink.formats.raw.RawFormatSerializationSchema.SerializationRuntimeConverter \t org.apache.flink.formats.raw.RawFormatSerializationSchema.SerializationRuntimeConverter"
  },
  {
    "source_class": "org.apache.flink.formats.raw.RawFormatSerializationSchema",
    "source_method": "createRawValueConverter",
    "target_class": "org.apache.flink.table.types.logical.RawType"
  },
  {
    "source_class": "org.apache.flink.formats.raw.RawFormatFactory",
    "source_method": "checkFieldType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.formats.raw.RawFormatFactory",
    "source_method": "isBigEndian",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.formats.raw.RawFormatFactory",
    "source_method": "validateAndGetCharsetName",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.formats.raw.RawFormatDeserializationSchema",
    "source_method": "createConverter",
    "target_class": "java.lang.String, boolean):org.apache.flink.formats.raw.RawFormatDeserializationSchema.DeserializationRuntimeConverter \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.MapMapConverter",
    "source_method": "createForMapType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.MapMapConverter",
    "source_method": "createForMultisetType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.ArrayListConverter",
    "source_method": "create",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.RowRowConverter",
    "source_method": "create",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.RawByteArrayConverter",
    "source_method": "create",
    "target_class": "org.apache.flink.table.types.logical.RawType"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.ArrayObjectArrayConverter",
    "source_method": "allocateWriter",
    "target_class": "org.apache.flink.table.data.writer.BinaryArrayWriter"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.ArrayObjectArrayConverter",
    "source_method": "completeWriter",
    "target_class": "org.apache.flink.table.data.writer.BinaryArrayWriter"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.ArrayObjectArrayConverter",
    "source_method": "createForElement",
    "target_class": "org.apache.flink.table.data.writer.BinaryWriter"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.ArrayObjectArrayConverter",
    "source_method": "createGenericToJavaArrayConverter",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.DecimalBigDecimalConverter",
    "source_method": "create",
    "target_class": "org.apache.flink.table.types.logical.DecimalType"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.RawObjectConverter",
    "source_method": "create",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.DataStructureConverters",
    "source_method": "getConverterInternal",
    "target_class": "org.apache.flink.table.data.conversion.StructuredObjectConverter"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.StructuredObjectConverter",
    "source_method": "createOrError",
    "target_class": "org.apache.flink.table.data.conversion.DataStructureConverters"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.StructuredObjectConverter",
    "source_method": "getterExpr",
    "target_class": "int, java.lang.String, java.lang.Class<?>):java.lang.String \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.StructuredObjectConverter",
    "source_method": "setterExpr",
    "target_class": "int, java.lang.String):java.lang.String \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.conversion.StructuredObjectConverter",
    "source_method": "castExpr",
    "target_class": "java.lang.Class<?>):java.lang.String \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "doubleValue",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "signum",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "negate",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "abs",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "floor",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "ceil",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "add",
    "target_class": "org.apache.flink.table.data.DecimalData, int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "subtract",
    "target_class": "org.apache.flink.table.data.DecimalData, int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "multiply",
    "target_class": "org.apache.flink.table.data.DecimalData, int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "divide",
    "target_class": "org.apache.flink.table.data.DecimalData, int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "mod",
    "target_class": "org.apache.flink.table.data.DecimalData, int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "divideToIntegralValue",
    "target_class": "org.apache.flink.table.data.DecimalData, int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "castToIntegral",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "castToDecimal",
    "target_class": "int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "castFrom",
    "target_class": "int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "castFrom",
    "target_class": "int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "castFrom",
    "target_class": "int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "castFrom",
    "target_class": "int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "castToBoolean",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "sign",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "compare",
    "target_class": "org.apache.flink.table.data.DecimalData):int \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "compare",
    "target_class": "long):int \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalDataUtils",
    "source_method": "sround",
    "target_class": "int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "getTmpBytes",
    "target_class": "int):byte[] \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "splitByWholeSeparatorPreserveAllTokens",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData):org.apache.flink.table.data.binary.BinaryStringData[] \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "toBoolean",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "hash",
    "target_class": "java.security.MessageDigest):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "toDecimalFromBytes",
    "target_class": "int, byte[], int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "toBigPrecisionDecimal",
    "target_class": "int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "toDouble",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "toFloat",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "toDate",
    "target_class": "org.apache.flink.table.utils.DateTimeUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "toTime",
    "target_class": "org.apache.flink.table.utils.DateTimeUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "toTimestamp",
    "target_class": "int):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.utils.DateTimeUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "toTimestamp",
    "target_class": "int, java.util.TimeZone):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.utils.DateTimeUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "keyValue",
    "target_class": "byte, byte, org.apache.flink.table.data.binary.BinaryStringData):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "findValueOfKey",
    "target_class": "byte, org.apache.flink.table.data.binary.BinaryStringData, int, int):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "findValueOfKeySlow",
    "target_class": "byte, org.apache.flink.table.data.binary.BinaryStringData, int, int):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "substringSQL",
    "target_class": "int, int):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "concat",
    "target_class": "org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "concatWs",
    "target_class": "java.lang.Iterable<org.apache.flink.table.data.binary.BinaryStringData>):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "reverse",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "reverseMultiSegs",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "trimLeftSlow",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "isSpaceString",
    "target_class": "org.apache.flink.table.data.binary.LazyBinaryFormat"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "trimLeftSlow",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "trimRightSlow",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "trimRightSlow",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringDataUtil",
    "source_method": "safeToString",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.data.util.RowDataUtil",
    "source_method": "isAccumulateMsg",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.data.util.RowDataUtil",
    "source_method": "isRetractMsg",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.data.util.MapDataUtil",
    "source_method": "convertToJavaMap",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.types.logical.LogicalType):java.util.Map<java.lang.Object,java.lang.Object> \t org.apache.flink.table.data.ArrayData"
  },
  {
    "source_class": "org.apache.flink.table.data.util.DataFormatConverters",
    "source_method": "getConverterForDataType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.data.util.DataFormatConverters",
    "source_method": "getPrecision",
    "target_class": "org.apache.flink.table.types.logical.DecimalType"
  },
  {
    "source_class": "org.apache.flink.table.data.util.DataFormatConverters",
    "source_method": "getDateTimePrecision",
    "target_class": "org.apache.flink.table.types.logical.LocalZonedTimestampType"
  },
  {
    "source_class": "org.apache.flink.table.data.util.DataFormatConverters",
    "source_method": "genericArrayToJavaArray",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):T[] \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.data.util.DataFormatConverters",
    "source_method": "arrayDataToJavaArray",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter, java.lang.Class<T>, org.apache.flink.table.data.util.DataFormatConverters.DataFormatConverter<java.lang.Object,T>):T[] \t org.apache.flink.table.data.util.DataFormatConverters.DataFormatConverter"
  },
  {
    "source_class": "org.apache.flink.table.data.util.DataFormatConverters.MapConverter",
    "source_method": "toBinaryMap",
    "target_class": "org.apache.flink.table.data.util.DataFormatConverters.DataFormatConverter"
  },
  {
    "source_class": "org.apache.flink.table.data.writer.BinaryWriter",
    "source_method": "createValueSetter",
    "target_class": "org.apache.flink.table.data.writer.AbstractBinaryWriter"
  },
  {
    "source_class": "org.apache.flink.table.data.writer.BinaryArrayWriter",
    "source_method": "createNullSetter",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.data.writer.AbstractBinaryWriter",
    "source_method": "zeroBytes",
    "target_class": "int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.writer.AbstractBinaryWriter",
    "source_method": "zeroOutPaddingBytes",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.writer.AbstractBinaryWriter",
    "source_method": "writeMultiSegmentsToVarLenPart",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.writer.AbstractBinaryWriter",
    "source_method": "writeBytesToFixLenPart",
    "target_class": "int, byte[], int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.writer.BinaryRowWriter",
    "source_method": "writeRowKind",
    "target_class": "org.apache.flink.types.RowKind"
  },
  {
    "source_class": "org.apache.flink.table.runtime.io.CompressedBlockChannelWriter",
    "source_method": "compressBuffer",
    "target_class": "int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.io.CompressedBlockChannelReader",
    "source_method": "decompressBuffer",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.io.CompressedHeaderlessChannelWriterOutputView",
    "source_method": "writeCompressed",
    "target_class": "int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isNumeric",
    "target_class": "org.apache.flink.table.types.logical.LogicalTypeRoot"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isTimePoint",
    "target_class": "org.apache.flink.table.types.logical.LogicalTypeRoot"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isRowTime",
    "target_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isProcTime",
    "target_class": "org.apache.flink.table.types.logical.LocalZonedTimestampType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isTimeInterval",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isCharacterString",
    "target_class": "org.apache.flink.table.types.logical.LogicalTypeRoot"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isBinaryString",
    "target_class": "org.apache.flink.table.types.logical.LogicalTypeRoot"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isTimestamp",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isTimestampWithLocalZone",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isBoolean",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isDecimal",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isInteger",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isLong",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isArray",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isMap",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isMultiset",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isRaw",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isRow",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isStructuredType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isMutable",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.TypeCheckUtils",
    "source_method": "isReference",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.MapDataSerializer",
    "source_method": "toBinaryMap",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.InternalTypeInfo",
    "source_method": "of",
    "target_class": "org.apache.flink.table.types.logical.utils.LogicalTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.ArrayDataSerializer",
    "source_method": "copyGenericArray",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.ArrayDataSerializer",
    "source_method": "copyColumnarArray",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.ArrayDataSerializer",
    "source_method": "toBinaryArray",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer",
    "source_method": "serializeWithoutLength",
    "target_class": "org.apache.flink.core.memory.MemorySegmentWritable):void \t org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer",
    "source_method": "serializeWithoutLengthSlow",
    "target_class": "org.apache.flink.core.memory.MemorySegmentWritable):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer",
    "source_method": "copyFromPagesToView",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.runtime.memory.AbstractPagedInputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer",
    "source_method": "pointTo",
    "target_class": "org.apache.flink.table.data.binary.BinaryRowData, org.apache.flink.runtime.memory.AbstractPagedInputView):void \t org.apache.flink.runtime.memory.AbstractPagedInputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer",
    "source_method": "pointToMultiSegments",
    "target_class": "org.apache.flink.runtime.memory.AbstractPagedInputView, int, int, org.apache.flink.core.memory.MemorySegment, int):void \t org.apache.flink.runtime.memory.AbstractPagedInputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer",
    "source_method": "checkSkipWriteForFixLengthPart",
    "target_class": "org.apache.flink.runtime.memory.AbstractPagedOutputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer",
    "source_method": "checkSkipReadForFixLengthPart",
    "target_class": "org.apache.flink.runtime.memory.AbstractPagedInputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.StringDataSerializer",
    "source_method": "deserializeInternal",
    "target_class": "org.apache.flink.table.data.StringData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.InternalSerializers",
    "source_method": "createInternal",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.ExternalSerializer",
    "source_method": "of",
    "target_class": "boolean):org.apache.flink.table.runtime.typeutils.ExternalSerializer<I,E> \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.ExternalSerializer",
    "source_method": "hasBinaryData",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.ExternalTypeInfo",
    "source_method": "createExternalTypeSerializer",
    "target_class": "boolean):org.apache.flink.api.common.typeutils.TypeSerializer<T> \t org.apache.flink.table.runtime.typeutils.ExternalSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.typeutils.RowDataSerializer",
    "source_method": "copyRowData",
    "target_class": "org.apache.flink.table.data.RowData):org.apache.flink.table.data.RowData \t org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.MapEntriesFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArrayRemoveFunction",
    "source_method": "eval",
    "target_class": "java.lang.Object):org.apache.flink.table.data.ArrayData \t org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArrayPositionFunction",
    "source_method": "eval",
    "target_class": "java.lang.Object):java.lang.Integer \t org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArrayMinFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArrayDistinctFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.MapValuesFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.MapData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.MapFromArraysFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.ArrayData):org.apache.flink.table.data.MapData \t org.apache.flink.table.data.ArrayData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArrayUnionFunction",
    "source_method": "distinct",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter, java.lang.invoke.MethodHandle, java.lang.Boolean[], java.util.List):java.util.List \t org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.TypeOfFunction",
    "source_method": "createTypeString",
    "target_class": "boolean):java.lang.String \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArraySliceFunction",
    "source_method": "eval",
    "target_class": "java.lang.Integer, java.lang.Integer):org.apache.flink.table.data.ArrayData \t org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArrayReverseFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.MapKeysFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.MapData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArrayConcatFunction",
    "source_method": "appendElements",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter, java.util.List<java.lang.Object>):void \t org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArrayMaxFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.scalar.ArrayContainsFunction",
    "source_method": "eval",
    "target_class": "java.lang.Object):java.lang.Boolean \t org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.CleanupState",
    "source_method": "registerProcessingCleanupTimer",
    "target_class": "long, long, long, org.apache.flink.streaming.api.TimerService):void \t org.apache.flink.streaming.api.TimerService"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.KeyedProcessFunctionWithCleanupState",
    "source_method": "registerProcessingCleanupTimer",
    "target_class": "long):void \t org.apache.flink.streaming.api.functions.KeyedProcessFunction.Context"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.KeyedProcessFunctionWithCleanupState",
    "source_method": "isProcessingTimeTimer",
    "target_class": "org.apache.flink.streaming.api.functions.KeyedProcessFunction.OnTimerContext"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.KeyedProcessFunctionWithCleanupState",
    "source_method": "needToCleanupState",
    "target_class": "org.apache.flink.api.common.state.ValueState"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.hyperloglog.XXH64",
    "source_method": "hashBytesByWords",
    "target_class": "int, int, long):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.ListAggWithRetractAggFunction",
    "source_method": "accumulate",
    "target_class": "org.apache.flink.table.data.StringData):void \t org.apache.flink.table.runtime.functions.aggregate.ListAggWithRetractAggFunction.ListAggWithRetractAccumulator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.ListAggWithRetractAggFunction",
    "source_method": "retract",
    "target_class": "org.apache.flink.table.data.StringData):void \t org.apache.flink.table.runtime.functions.aggregate.ListAggWithRetractAggFunction.ListAggWithRetractAccumulator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.ListAggWithRetractAggFunction",
    "source_method": "merge",
    "target_class": "java.lang.Iterable<org.apache.flink.table.runtime.functions.aggregate.ListAggWithRetractAggFunction.ListAggWithRetractAccumulator>):void \t org.apache.flink.table.runtime.functions.aggregate.ListAggWithRetractAggFunction.ListAggWithRetractAccumulator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.ListAggWithRetractAggFunction",
    "source_method": "resetAccumulator",
    "target_class": "org.apache.flink.table.runtime.functions.aggregate.ListAggWithRetractAggFunction.ListAggWithRetractAccumulator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.FirstValueAggFunction",
    "source_method": "accumulate",
    "target_class": "java.lang.Object):void \t org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.FirstValueAggFunction",
    "source_method": "accumulate",
    "target_class": "java.lang.Object, java.lang.Long):void \t org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.FirstValueAggFunction",
    "source_method": "resetAccumulator",
    "target_class": "org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.LastValueAggFunction",
    "source_method": "accumulate",
    "target_class": "java.lang.Object):void \t org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.LastValueAggFunction",
    "source_method": "accumulate",
    "target_class": "java.lang.Object, java.lang.Long):void \t org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.LastValueAggFunction",
    "source_method": "resetAccumulator",
    "target_class": "org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.JsonObjectAggFunction",
    "source_method": "assertKeyNotPresent",
    "target_class": "org.apache.flink.table.data.StringData):void \t org.apache.flink.table.api.dataview.MapView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.BatchApproxCountDistinctAggFunctions.ApproxCountDistinctAggFunction",
    "source_method": "merge",
    "target_class": "java.lang.Iterable<org.apache.flink.table.runtime.functions.aggregate.hyperloglog.HllBuffer>):void \t org.apache.flink.table.runtime.functions.aggregate.hyperloglog.HyperLogLogPlusPlus"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.aggregate.BatchApproxCountDistinctAggFunctions.ApproxCountDistinctAggFunction",
    "source_method": "resetAccumulator",
    "target_class": "org.apache.flink.table.runtime.functions.aggregate.hyperloglog.HyperLogLogPlusPlus"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlLikeChainChecker",
    "source_method": "utf8Length",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlLikeChainChecker",
    "source_method": "checkBegin",
    "target_class": "org.apache.flink.core.memory.MemorySegment[], int, int):boolean \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlLikeChainChecker",
    "source_method": "checkEnd",
    "target_class": "org.apache.flink.core.memory.MemorySegment[], int, int):boolean \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlLikeChainChecker",
    "source_method": "indexMiddle",
    "target_class": "org.apache.flink.core.memory.MemorySegment[], int, int):int \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "exp",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "power",
    "target_class": "org.apache.flink.table.data.DecimalData):double \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "power",
    "target_class": "org.apache.flink.table.data.DecimalData):double \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "power",
    "target_class": "double):double \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "cosh",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "acos",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "asin",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "atan",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "atan2",
    "target_class": "org.apache.flink.table.data.DecimalData):double \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "sin",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "sinh",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "cos",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "tan",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "tanh",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "cot",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "degrees",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "radians",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "log",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "log",
    "target_class": "org.apache.flink.table.data.DecimalData):double \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "log",
    "target_class": "double):double \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "log",
    "target_class": "org.apache.flink.table.data.DecimalData):double \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "log2",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "log10",
    "target_class": "org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "keyValue",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData, org.apache.flink.table.data.binary.BinaryStringData, org.apache.flink.table.data.binary.BinaryStringData):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "hash",
    "target_class": "java.lang.String, java.lang.String):java.lang.String \t org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "parseUrl",
    "target_class": "java.lang.String):java.lang.String \t org.apache.flink.table.utils.ThreadLocalCache"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "position",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData, int):int \t org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "instr",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData, int, int):int \t org.apache.flink.table.data.binary.BinaryStringDataUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "strToMap",
    "target_class": "java.lang.String, java.lang.String):java.util.Map<java.lang.String,java.lang.String> \t org.apache.flink.util.CollectionUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "regExp",
    "target_class": "java.lang.String):java.lang.Boolean \t org.apache.flink.table.utils.ThreadLocalCache"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "fromBase64",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "fromBase64",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "struncate",
    "target_class": "int):long \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "struncate",
    "target_class": "int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "struncate",
    "target_class": "int):float \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlFunctionUtils",
    "source_method": "struncate",
    "target_class": "int):double \t org.apache.flink.table.data.DecimalDataUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils",
    "source_method": "jsonExists",
    "target_class": "org.apache.flink.table.api.JsonExistsOnError):java.lang.Boolean \t org.apache.flink.table.runtime.functions.SqlJsonUtils.JsonPathContext"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils",
    "source_method": "jsonValue",
    "target_class": "org.apache.flink.table.api.JsonValueOnEmptyOrError, java.lang.Object, org.apache.flink.table.api.JsonValueOnEmptyOrError, java.lang.Object):java.lang.Object \t org.apache.flink.table.runtime.functions.SqlJsonUtils.JsonPathContext"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils",
    "source_method": "jsonValueExpression",
    "target_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils.JsonValueContext"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils",
    "source_method": "jsonApiCommonSyntax",
    "target_class": "java.lang.String):org.apache.flink.table.runtime.functions.SqlJsonUtils.JsonPathContext \t org.apache.flink.table.runtime.functions.SqlJsonUtils.JsonPathContext"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils.JsonPathContext",
    "source_method": "withUnknownException",
    "target_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils.PathMode"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils.JsonPathContext",
    "source_method": "withStrictException",
    "target_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils.PathMode"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.SqlJsonUtils.JsonPathContext",
    "source_method": "withJavaObj",
    "target_class": "java.lang.Object):org.apache.flink.table.runtime.functions.SqlJsonUtils.JsonPathContext \t org.apache.flink.table.runtime.functions.SqlJsonUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.lookup.CachingLookupFunction",
    "source_method": "updateLatestLoadTime",
    "target_class": "org.apache.flink.metrics.groups.CacheMetricGroup"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.lookup.CachingLookupFunction",
    "source_method": "initializeFullCache",
    "target_class": "org.apache.flink.table.functions.FunctionContext):void \t org.apache.flink.table.runtime.functions.table.lookup.fullcache.LookupFullCache"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.lookup.LookupCacheManager",
    "source_method": "clear",
    "target_class": "org.apache.flink.table.runtime.functions.table.lookup.LookupCacheManager.RefCountedCache"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.lookup.fullcache.CacheLoader",
    "source_method": "initializeMetrics",
    "target_class": "org.apache.flink.metrics.groups.CacheMetricGroup"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.lookup.fullcache.inputformat.InputFormatCacheLoader",
    "source_method": "createCacheLoadTask",
    "target_class": "java.util.concurrent.ConcurrentHashMap<org.apache.flink.table.data.RowData,java.util.Collection<org.apache.flink.table.data.RowData>>):org.apache.flink.table.runtime.functions.table.lookup.fullcache.inputformat.InputSplitCacheLoadTask \t org.apache.flink.api.common.io.InputFormat"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.ReplicateRowsFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.UnnestRowsFunction",
    "source_method": "getUnnestedType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.UnnestRowsFunction.CollectionUnnestTableFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.UnnestRowsFunction.CollectionUnnestTableFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.functions.table.UnnestRowsFunction.MapUnnestTableFunction",
    "source_method": "eval",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.PlannerTypeUtils",
    "source_method": "removeLegacyTypes",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.PlannerTypeUtils",
    "source_method": "isPrimitive",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.PlannerTypeUtils",
    "source_method": "isInteroperable",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.PlannerTypeUtils",
    "source_method": "isAssignable",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.TypeInfoLogicalTypeConverter",
    "source_method": "fromTypeInfoToLogicalType",
    "target_class": "org.apache.flink.table.types.utils.TypeConversions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.TypeInfoLogicalTypeConverter",
    "source_method": "fromLogicalTypeToTypeInfo",
    "target_class": "org.apache.flink.table.types.AbstractDataType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.LogicalTypeDataTypeConverter",
    "source_method": "fromLogicalTypeToDataType",
    "target_class": "org.apache.flink.table.types.utils.TypeConversions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.LogicalTypeDataTypeConverter",
    "source_method": "fromDataTypeToLogicalType",
    "target_class": "org.apache.flink.table.runtime.types.PlannerTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.TypeInfoDataTypeConverter",
    "source_method": "addDefaultTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.TypeInfoDataTypeConverter",
    "source_method": "fromDataTypeToTypeInfo",
    "target_class": "org.apache.flink.table.runtime.types.PlannerTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.ClassDataTypeConverter",
    "source_method": "fromClassToDataType",
    "target_class": "org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.table.runtime.types.ClassLogicalTypeConverter",
    "source_method": "getDefaultExternalClassForType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.MultipleInputStreamOperatorBase",
    "source_method": "createInput",
    "target_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapper"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.MultipleInputStreamOperatorBase",
    "source_method": "buildOperatorToInputCountMap",
    "target_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapper"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.MultipleInputStreamOperatorBase",
    "source_method": "createAllOperators",
    "target_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapper.Edge"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.MultipleInputStreamOperatorBase",
    "source_method": "createStreamConfig",
    "target_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapper<?>):org.apache.flink.streaming.api.graph.StreamConfig \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapperGenerator",
    "source_method": "calcParallelismAndResource",
    "target_class": "org.apache.flink.api.dag.Transformation"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapperGenerator",
    "source_method": "visitOneInputTransformation",
    "target_class": "org.apache.flink.streaming.api.transformations.OneInputTransformation"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapperGenerator",
    "source_method": "visitTwoInputTransformation",
    "target_class": "org.apache.flink.streaming.api.transformations.TwoInputTransformation"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapperGenerator",
    "source_method": "calculateManagedMemoryFraction",
    "target_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapper"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.input.InputSelectionHandler",
    "source_method": "buildInputSelection",
    "target_class": "org.apache.flink.streaming.api.operators.InputSelection.Builder"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.output.FirstInputOfTwoInputStreamOperatorOutput",
    "source_method": "pushToOperator",
    "target_class": "org.apache.flink.streaming.api.operators.TwoInputStreamOperator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.output.CopyingSecondInputOfTwoInputStreamOperatorOutput",
    "source_method": "pushToOperator",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.output.SecondInputOfTwoInputStreamOperatorOutput",
    "source_method": "pushToOperator",
    "target_class": "org.apache.flink.streaming.api.operators.TwoInputStreamOperator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.multipleinput.TableOperatorWrapper",
    "source_method": "createOperator",
    "target_class": "org.apache.flink.streaming.api.operators.StreamOperatorFactory"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.UpdatableTopNFunction",
    "source_method": "flushBufferToState",
    "target_class": "org.apache.flink.api.common.state.MapState"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.UpdatableTopNFunction",
    "source_method": "updateInnerRank",
    "target_class": "org.apache.flink.table.runtime.operators.rank.TopNBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.AbstractTopNFunction",
    "source_method": "initRankEnd",
    "target_class": "org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.AbstractTopNFunction",
    "source_method": "collectInsert",
    "target_class": "org.apache.flink.table.data.RowData):void \t org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.AbstractTopNFunction",
    "source_method": "collectDelete",
    "target_class": "org.apache.flink.table.data.RowData):void \t org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.AbstractTopNFunction",
    "source_method": "collectUpdateAfter",
    "target_class": "org.apache.flink.table.data.RowData):void \t org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.AbstractTopNFunction",
    "source_method": "collectUpdateBefore",
    "target_class": "org.apache.flink.table.data.RowData):void \t org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.AbstractTopNFunction",
    "source_method": "createOutputRow",
    "target_class": "long, org.apache.flink.types.RowKind):org.apache.flink.table.data.RowData \t org.apache.flink.table.data.utils.JoinedRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.window.WindowRankOperatorBuilder",
    "source_method": "build",
    "target_class": "org.apache.flink.table.runtime.keyselector.RowDataKeySelector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.rank.window.processors.WindowRankProcessor",
    "source_method": "createOutputRow",
    "target_class": "long):org.apache.flink.table.data.RowData \t org.apache.flink.table.data.utils.JoinedRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.TableStreamOperator",
    "source_method": "computeMemorySize",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.TableStreamOperator.ContextImpl",
    "source_method": "timestamp",
    "target_class": "org.apache.flink.streaming.runtime.streamrecord.StreamRecord"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.runtimefilter.util.RuntimeFilterUtils",
    "source_method": "createOnHeapBloomFilter",
    "target_class": "org.apache.flink.runtime.operators.util.BloomFilter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.runtimefilter.util.RuntimeFilterUtils",
    "source_method": "convertBloomFilterToRowData",
    "target_class": "org.apache.flink.runtime.operators.util.BloomFilter):org.apache.flink.table.data.RowData \t org.apache.flink.runtime.operators.util.BloomFilter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.runtimefilter.util.RuntimeFilterUtils",
    "source_method": "convertBloomFilterToRowData",
    "target_class": "byte[]):org.apache.flink.table.data.RowData \t org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.over.frame.SlidingOverFrame",
    "source_method": "accumulateBuffer",
    "target_class": "org.apache.flink.table.runtime.typeutils.RowDataSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.over.frame.UnboundedFollowingOverFrame",
    "source_method": "accumulateIterator",
    "target_class": "org.apache.flink.table.data.binary.BinaryRowData, org.apache.flink.table.runtime.util.ResettableExternalBuffer.BufferIterator):org.apache.flink.table.data.RowData \t org.apache.flink.table.runtime.typeutils.RowDataSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.over.frame.OverWindowFrame",
    "source_method": "getNextOrNull",
    "target_class": "org.apache.flink.table.data.binary.BinaryRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.over.BufferDataOverWindowOperator",
    "source_method": "processCurrentData",
    "target_class": "org.apache.flink.table.runtime.util.ResettableExternalBuffer.BufferIterator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.aggregate.window.combines.LocalAggCombiner",
    "source_method": "output",
    "target_class": "java.lang.Long, org.apache.flink.table.data.RowData):void \t org.apache.flink.table.data.utils.JoinedRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.aggregate.window.combines.GlobalAggCombiner",
    "source_method": "combineAccumulator",
    "target_class": "org.apache.flink.table.data.RowData):void \t org.apache.flink.table.runtime.operators.window.state.StateKeyContext"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.aggregate.window.processors.AbstractWindowAggProcessor",
    "source_method": "collect",
    "target_class": "org.apache.flink.table.data.utils.JoinedRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.aggregate.window.LocalSlicingWindowAggOperator",
    "source_method": "computeMemorySize",
    "target_class": "org.apache.flink.runtime.execution.Environment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.deduplicate.RowTimeDeduplicateFunction",
    "source_method": "deduplicateOnRowTime",
    "target_class": "org.apache.flink.table.data.RowData, org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>, boolean, boolean, int, boolean):void \t org.apache.flink.table.runtime.operators.deduplicate.DeduplicateFunctionHelper"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.deduplicate.RowTimeMiniBatchDeduplicateFunction",
    "source_method": "miniBatchDeduplicateOnRowTime",
    "target_class": "java.util.List<org.apache.flink.table.data.RowData>, org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>, boolean, boolean, int, boolean):void \t org.apache.flink.table.runtime.operators.deduplicate.DeduplicateFunctionHelper"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.deduplicate.DeduplicateFunctionHelper",
    "source_method": "processLastRowOnChangelog",
    "target_class": "boolean, org.apache.flink.api.common.state.ValueState<org.apache.flink.table.data.RowData>, org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>, boolean, org.apache.flink.table.runtime.generated.RecordEqualiser):void \t org.apache.flink.types.RowKind"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.deduplicate.DeduplicateFunctionHelper",
    "source_method": "updateDeduplicateResult",
    "target_class": "boolean, org.apache.flink.table.data.RowData, org.apache.flink.table.data.RowData, org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>):void \t org.apache.flink.types.RowKind"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.deduplicate.DeduplicateFunctionHelper",
    "source_method": "checkInsertOnly",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.wmassigners.RowTimeMiniBatchAssginerOperator",
    "source_method": "advanceWatermark",
    "target_class": "org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.wmassigners.WatermarkAssignerOperator",
    "source_method": "advanceWatermark",
    "target_class": "org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.wmassigners.WatermarkAssignerOperator",
    "source_method": "emitWatermarkStatus",
    "target_class": "org.apache.flink.streaming.api.operators.Output"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.BinaryIndexedSortable",
    "source_method": "compareRecords",
    "target_class": "long):int \t org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.RankOperator",
    "source_method": "emitInternal",
    "target_class": "org.apache.flink.table.runtime.util.StreamRecordCollector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.SortUtil",
    "source_method": "minNormalizedKey",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.SortUtil",
    "source_method": "maxNormalizedKey",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.SortUtil",
    "source_method": "putStringNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.SortUtil",
    "source_method": "putDecimalNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.SortUtil",
    "source_method": "putFloatNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.SortUtil",
    "source_method": "putDoubleNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.api.common.typeutils.base.NormalizedKeyUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.SortUtil",
    "source_method": "putBinaryNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.SortUtil",
    "source_method": "putTimestampNormalizedKey",
    "target_class": "org.apache.flink.core.memory.MemorySegment, int, int):void \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.BinaryInMemorySortBuffer",
    "source_method": "createBuffer",
    "target_class": "org.apache.flink.table.runtime.typeutils.AbstractRowDataSerializer<org.apache.flink.table.data.RowData>, org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer, org.apache.flink.table.runtime.generated.RecordComparator, org.apache.flink.table.runtime.util.MemorySegmentPool):org.apache.flink.table.runtime.operators.sort.BinaryInMemorySortBuffer \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.BinaryInMemorySortBuffer",
    "source_method": "getCapacity",
    "target_class": "org.apache.flink.table.runtime.util.MemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.BinaryExternalSorter",
    "source_method": "write",
    "target_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.BufferedKVExternalSorter",
    "source_method": "getKVIterator",
    "target_class": "org.apache.flink.table.runtime.operators.sort.SpillChannelManager"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sort.BufferedKVExternalSorter",
    "source_method": "close",
    "target_class": "org.apache.flink.table.runtime.operators.sort.SpillChannelManager"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sink.SinkUpsertMaterializer",
    "source_method": "addRow",
    "target_class": "org.apache.flink.table.data.RowData):void \t org.apache.flink.streaming.api.operators.TimestampedCollector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sink.SinkUpsertMaterializer",
    "source_method": "equalsIgnoreRowKind",
    "target_class": "org.apache.flink.table.data.RowData):boolean \t org.apache.flink.table.runtime.generated.RecordEqualiser"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sink.ConstraintEnforcer",
    "source_method": "processNotNullConstraint",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sink.ConstraintEnforcer",
    "source_method": "processCharConstraint",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.sink.ConstraintEnforcer",
    "source_method": "processBinaryConstraint",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.AggregateWindowOperator",
    "source_method": "collect",
    "target_class": "org.apache.flink.table.data.RowData, org.apache.flink.table.data.RowData):void \t org.apache.flink.streaming.api.operators.TimestampedCollector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.grouping.WindowsGrouping",
    "source_method": "hasTriggerWindow",
    "target_class": "org.apache.flink.table.runtime.operators.window.TimeWindow"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.grouping.WindowsGrouping",
    "source_method": "belongsToCurrentWindow",
    "target_class": "org.apache.flink.table.runtime.operators.window.TimeWindow"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.grouping.WindowsGrouping",
    "source_method": "evictForWindow",
    "target_class": "org.apache.flink.table.runtime.operators.window.TimeWindow):boolean \t org.apache.flink.table.runtime.operators.window.TimeWindow"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.grouping.WindowsGrouping",
    "source_method": "advanceNextWindowByWatermark",
    "target_class": "org.apache.flink.table.runtime.operators.window.TimeWindow"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.grouping.WindowsGrouping",
    "source_method": "getTimeValue",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.assigners.SessionWindowAssigner",
    "source_method": "mergeWindow",
    "target_class": "org.apache.flink.table.runtime.operators.window.TimeWindow, java.util.Collection<org.apache.flink.table.runtime.operators.window.TimeWindow>):org.apache.flink.table.runtime.operators.window.TimeWindow \t org.apache.flink.table.runtime.operators.window.TimeWindow"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.WindowOperatorBuilder",
    "source_method": "withEventTime",
    "target_class": "org.apache.flink.table.runtime.operators.window.assigners.InternalTimeWindowAssigner"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.WindowOperatorBuilder.TableAggregateWindowOperatorBuilder",
    "source_method": "build",
    "target_class": "org.apache.flink.table.runtime.operators.window.WindowOperatorBuilder"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.window.WindowOperatorBuilder.AggregateWindowOperatorBuilder",
    "source_method": "build",
    "target_class": "org.apache.flink.table.runtime.operators.window.WindowOperatorBuilder"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.interval.TimeIntervalJoin",
    "source_method": "removeExpiredRows",
    "target_class": "long, org.apache.flink.api.common.state.MapState<java.lang.Long,java.util.List<org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.table.data.RowData,java.lang.Boolean>>>, org.apache.flink.api.common.state.ValueState<java.lang.Long>, org.apache.flink.streaming.api.functions.co.KeyedCoProcessFunction<org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData>.OnTimerContext, boolean):void \t org.apache.flink.table.runtime.operators.join.OuterJoinPaddingUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.HashJoinOperator",
    "source_method": "collect",
    "target_class": "org.apache.flink.table.data.RowData):void \t org.apache.flink.util.Collector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.HashJoinOperator",
    "source_method": "initialSortMergeJoinFunction",
    "target_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.HashJoinOperator",
    "source_method": "processSortMergeJoinElement1",
    "target_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.HashJoinOperator",
    "source_method": "processSortMergeJoinElement2",
    "target_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinIterator",
    "source_method": "nextProbe",
    "target_class": "org.apache.flink.table.runtime.generated.Projection"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinIterator",
    "source_method": "nextBuffered",
    "target_class": "org.apache.flink.table.runtime.generated.Projection"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinIterator",
    "source_method": "bufferMatchingRows",
    "target_class": "org.apache.flink.table.runtime.util.ResettableExternalBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.stream.state.JoinInputSideSpec",
    "source_method": "withUniqueKey",
    "target_class": "org.apache.flink.api.java.functions.KeySelector<org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData>):org.apache.flink.table.runtime.operators.join.stream.state.JoinInputSideSpec \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.stream.state.JoinInputSideSpec",
    "source_method": "withUniqueKeyContainedByJoinKey",
    "target_class": "org.apache.flink.api.java.functions.KeySelector<org.apache.flink.table.data.RowData,org.apache.flink.table.data.RowData>):org.apache.flink.table.runtime.operators.join.stream.state.JoinInputSideSpec \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.stream.state.JoinRecordStateViews",
    "source_method": "create",
    "target_class": "java.lang.String, org.apache.flink.table.runtime.operators.join.stream.state.JoinInputSideSpec, org.apache.flink.table.runtime.typeutils.InternalTypeInfo<org.apache.flink.table.data.RowData>, long):org.apache.flink.table.runtime.operators.join.stream.state.JoinRecordStateView \t org.apache.flink.table.runtime.operators.join.stream.state.JoinInputSideSpec"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.stream.state.OuterJoinRecordStateViews",
    "source_method": "create",
    "target_class": "java.lang.String, org.apache.flink.table.runtime.operators.join.stream.state.JoinInputSideSpec, org.apache.flink.table.runtime.typeutils.InternalTypeInfo<org.apache.flink.table.data.RowData>, long):org.apache.flink.table.runtime.operators.join.stream.state.OuterJoinRecordStateView \t org.apache.flink.table.runtime.operators.join.stream.state.JoinInputSideSpec"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.stream.StreamingJoinOperator",
    "source_method": "processElement",
    "target_class": "org.apache.flink.table.runtime.operators.join.stream.state.JoinRecordStateView, org.apache.flink.table.runtime.operators.join.stream.state.JoinRecordStateView, boolean):void \t org.apache.flink.table.runtime.operators.join.stream.AbstractStreamingJoinOperator.AssociatedRecords"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.stream.StreamingJoinOperator",
    "source_method": "output",
    "target_class": "org.apache.flink.table.data.RowData, boolean):void \t org.apache.flink.streaming.api.operators.TimestampedCollector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.stream.StreamingJoinOperator",
    "source_method": "outputNullPadding",
    "target_class": "boolean):void \t org.apache.flink.table.data.utils.JoinedRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.stream.AbstractStreamingJoinOperator.AssociatedRecords",
    "source_method": "of",
    "target_class": "boolean, org.apache.flink.table.runtime.operators.join.stream.state.JoinRecordStateView, org.apache.flink.table.runtime.generated.JoinCondition):org.apache.flink.table.runtime.operators.join.stream.AbstractStreamingJoinOperator.AssociatedRecords \t org.apache.flink.table.runtime.operators.join.stream.state.OuterJoinRecordStateView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.BaseTwoInputStreamOperatorWithStateRetention",
    "source_method": "updateCleanupTimer",
    "target_class": "java.util.Optional<java.lang.Long>):void \t org.apache.flink.streaming.api.SimpleTimerService"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.BaseTwoInputStreamOperatorWithStateRetention",
    "source_method": "cleanupLastTimer",
    "target_class": "org.apache.flink.streaming.api.SimpleTimerService"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.TemporalRowTimeJoinOperator",
    "source_method": "collectJoinedRow",
    "target_class": "org.apache.flink.table.data.RowData):void \t org.apache.flink.streaming.api.operators.TimestampedCollector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.TemporalRowTimeJoinOperator",
    "source_method": "cleanupExpiredVersionInState",
    "target_class": "java.util.List<org.apache.flink.table.data.RowData>):void \t org.apache.flink.api.common.state.MapState"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.TemporalRowTimeJoinOperator",
    "source_method": "registerTimer",
    "target_class": "org.apache.flink.streaming.api.operators.InternalTimerService"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.TemporalRowTimeJoinOperator",
    "source_method": "getRightRowSorted",
    "target_class": "org.apache.flink.api.common.state.MapState"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.TemporalRowTimeJoinOperator",
    "source_method": "getNextLeftIndex",
    "target_class": "org.apache.flink.api.common.state.ValueState"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.TemporalRowTimeJoinOperator",
    "source_method": "getLeftTime",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.TemporalRowTimeJoinOperator",
    "source_method": "getRightTime",
    "target_class": "org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.temporal.TemporalProcessTimeJoinOperator",
    "source_method": "collectJoinedRow",
    "target_class": "org.apache.flink.table.data.RowData):void \t org.apache.flink.table.data.utils.JoinedRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.OuterJoinPaddingUtil",
    "source_method": "initLeftNullPaddingRow",
    "target_class": "org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.OuterJoinPaddingUtil",
    "source_method": "initRightNullPaddingRow",
    "target_class": "org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.OuterJoinPaddingUtil",
    "source_method": "padRight",
    "target_class": "org.apache.flink.table.data.utils.JoinedRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.OuterJoinPaddingUtil",
    "source_method": "padLeft",
    "target_class": "org.apache.flink.table.data.utils.JoinedRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.NullAwareJoinHelper",
    "source_method": "getNullFilterKeys",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.lookup.AsyncLookupJoinRunner.JoinedRowResultFuture",
    "source_method": "reset",
    "target_class": "org.apache.flink.streaming.api.functions.async.ResultFuture<org.apache.flink.table.data.RowData>):void \t org.apache.flink.table.runtime.collector.TableFunctionResultFuture"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.lookup.LookupJoinRunner",
    "source_method": "doFetch",
    "target_class": "org.apache.flink.table.runtime.generated.FilterCondition"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.lookup.LookupJoinRunner",
    "source_method": "padNullForLeftJoin",
    "target_class": "org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>):void \t org.apache.flink.table.data.RowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.lookup.ResultRetryStrategy",
    "source_method": "fixedDelayRetry",
    "target_class": "long, java.util.function.Predicate<java.util.Collection<org.apache.flink.table.data.RowData>>):org.apache.flink.table.runtime.operators.join.lookup.ResultRetryStrategy \t org.apache.flink.streaming.util.retryable.AsyncRetryStrategies.FixedDelayRetryStrategyBuilder"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.lookup.KeyedLookupJoinWrapper",
    "source_method": "initEmptyRow",
    "target_class": "org.apache.flink.table.data.binary.BinaryRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.lookup.KeyedLookupJoinWrapper",
    "source_method": "collectDeleteRow",
    "target_class": "org.apache.flink.table.data.RowData, org.apache.flink.util.Collector<org.apache.flink.table.data.RowData>):void \t org.apache.flink.util.Collector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.lookup.KeyedLookupJoinWrapper",
    "source_method": "updateState",
    "target_class": "org.apache.flink.api.common.state.ValueState"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction",
    "source_method": "open",
    "target_class": "org.apache.flink.streaming.runtime.tasks.StreamTask<?,?>, org.apache.flink.streaming.api.graph.StreamConfig, org.apache.flink.table.runtime.util.StreamRecordCollector, long, org.apache.flink.api.common.functions.RuntimeContext, org.apache.flink.metrics.groups.OperatorMetricGroup):void \t org.apache.flink.table.runtime.typeutils.AbstractRowDataSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction",
    "source_method": "getInputSerializer1",
    "target_class": "boolean, java.lang.ClassLoader, org.apache.flink.streaming.api.graph.StreamConfig):org.apache.flink.table.runtime.typeutils.AbstractRowDataSerializer \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction",
    "source_method": "getInputSerializer2",
    "target_class": "boolean, java.lang.ClassLoader, org.apache.flink.streaming.api.graph.StreamConfig):org.apache.flink.table.runtime.typeutils.AbstractRowDataSerializer \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction",
    "source_method": "innerJoin",
    "target_class": "boolean):void \t org.apache.flink.table.runtime.util.ResettableExternalBuffer.BufferIterator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction",
    "source_method": "oneSideOuterJoin",
    "target_class": "boolean, org.apache.flink.table.data.RowData):void \t org.apache.flink.table.runtime.operators.join.SortMergeOneSideOuterJoinIterator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction",
    "source_method": "fullOuterJoin",
    "target_class": "org.apache.flink.table.runtime.util.ResettableExternalBuffer.BufferIterator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction",
    "source_method": "joinWithCondition",
    "target_class": "org.apache.flink.table.data.RowData, boolean):boolean \t org.apache.flink.table.runtime.generated.JoinCondition"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction",
    "source_method": "collect",
    "target_class": "org.apache.flink.table.data.RowData, boolean):void \t org.apache.flink.table.data.utils.JoinedRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeJoinFunction",
    "source_method": "newBuffer",
    "target_class": "org.apache.flink.runtime.memory.MemoryManager"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.window.WindowJoinOperator",
    "source_method": "processElement",
    "target_class": "int, org.apache.flink.metrics.Meter, org.apache.flink.table.runtime.operators.window.state.WindowListState<java.lang.Long>):void \t org.apache.flink.streaming.runtime.streamrecord.StreamRecord"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.window.WindowJoinOperator.AbstractOuterJoinOperator",
    "source_method": "outputNullPadding",
    "target_class": "boolean):void \t org.apache.flink.streaming.api.operators.TimestampedCollector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.window.WindowJoinOperator.AbstractOuterJoinOperator",
    "source_method": "output",
    "target_class": "org.apache.flink.table.data.RowData, boolean):void \t org.apache.flink.streaming.api.operators.TimestampedCollector"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeFullOuterJoinIterator",
    "source_method": "bufferRows1",
    "target_class": "org.apache.flink.table.runtime.util.ResettableExternalBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeFullOuterJoinIterator",
    "source_method": "bufferRows2",
    "target_class": "org.apache.flink.table.runtime.util.ResettableExternalBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeFullOuterJoinIterator",
    "source_method": "nextRow1",
    "target_class": "org.apache.flink.table.runtime.generated.Projection"
  },
  {
    "source_class": "org.apache.flink.table.runtime.operators.join.SortMergeFullOuterJoinIterator",
    "source_method": "nextRow2",
    "target_class": "org.apache.flink.util.MutableObjectIterator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.StateConfigUtil",
    "source_method": "createTtlConfig",
    "target_class": "org.apache.flink.api.common.state.StateTtlConfig.Builder"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.TimeWindowUtil",
    "source_method": "getNextTriggerWatermark",
    "target_class": "long, java.time.ZoneId, boolean):long \t org.apache.flink.table.runtime.operators.window.TimeWindow"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.StringUtf8Utils",
    "source_method": "encodeUTF8",
    "target_class": "org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.StringUtf8Utils",
    "source_method": "decodeUTF8",
    "target_class": "int, int):java.lang.String \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.StringUtf8Utils",
    "source_method": "decodeUTF8",
    "target_class": "int, int):java.lang.String \t org.apache.flink.table.runtime.util.SegmentsUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.StringUtf8Utils",
    "source_method": "decodeUTF8Strict",
    "target_class": "int, int, char[]):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.LazyMemorySegmentPool",
    "source_method": "cleanCache",
    "target_class": "org.apache.flink.runtime.memory.MemoryManager"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "copyToBytes",
    "target_class": "int, byte[], int, int):byte[] \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "copyMultiSegmentsToBytes",
    "target_class": "int, byte[], int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "copyToUnsafe",
    "target_class": "int, java.lang.Object, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "copyMultiSegmentsToUnsafe",
    "target_class": "int, java.lang.Object, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "copyToView",
    "target_class": "int, int, org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "copyFromBytes",
    "target_class": "int, byte[], int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "copyMultiSegmentsFromBytes",
    "target_class": "int, byte[], int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getBytes",
    "target_class": "int, int):byte[] \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "equalsMultiSegments",
    "target_class": "int, org.apache.flink.core.memory.MemorySegment[], int, int):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "hashByWords",
    "target_class": "int, int):int \t org.apache.flink.table.runtime.util.MurmurHashUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "hashMultiSegByWords",
    "target_class": "int, int):int \t org.apache.flink.table.runtime.util.MurmurHashUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "hash",
    "target_class": "int, int):int \t org.apache.flink.table.runtime.util.MurmurHashUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "hashMultiSeg",
    "target_class": "int, int):int \t org.apache.flink.table.runtime.util.MurmurHashUtil"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "inFirstSegment",
    "target_class": "int, int):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "bitUnSet",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "bitSet",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "bitGet",
    "target_class": "int, int):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "bitUnSet",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "bitUnSetMultiSegments",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "bitSet",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "bitSetMultiSegments",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getBoolean",
    "target_class": "int):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getBooleanMultiSegments",
    "target_class": "int):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setBoolean",
    "target_class": "int, boolean):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setBooleanMultiSegments",
    "target_class": "int, boolean):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getByte",
    "target_class": "int):byte \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getByteMultiSegments",
    "target_class": "int):byte \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setByte",
    "target_class": "int, byte):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setByteMultiSegments",
    "target_class": "int, byte):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getInt",
    "target_class": "int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getIntMultiSegments",
    "target_class": "int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getIntSlowly",
    "target_class": "int, int, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setInt",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setIntMultiSegments",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setIntSlowly",
    "target_class": "int, int, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getLong",
    "target_class": "int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getLongMultiSegments",
    "target_class": "int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getLongSlowly",
    "target_class": "int, int, int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setLong",
    "target_class": "int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setLongMultiSegments",
    "target_class": "int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setLongSlowly",
    "target_class": "int, int, int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getShort",
    "target_class": "int):short \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getShortMultiSegments",
    "target_class": "int):short \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setShort",
    "target_class": "int, short):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setShortMultiSegments",
    "target_class": "int, short):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getFloat",
    "target_class": "int):float \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getFloatMultiSegments",
    "target_class": "int):float \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setFloat",
    "target_class": "int, float):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setFloatMultiSegments",
    "target_class": "int, float):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getDouble",
    "target_class": "int):double \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getDoubleMultiSegments",
    "target_class": "int):double \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setDouble",
    "target_class": "int, double):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setDoubleMultiSegments",
    "target_class": "int, double):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "getTwoByteSlowly",
    "target_class": "int, int, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "setTwoByteSlowly",
    "target_class": "int, int, int, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.SegmentsUtil",
    "source_method": "find",
    "target_class": "int, int, org.apache.flink.core.memory.MemorySegment[], int, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.BytesMap",
    "source_method": "free",
    "target_class": "org.apache.flink.table.runtime.util.LazyMemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.BytesMap",
    "source_method": "returnSegments",
    "target_class": "org.apache.flink.table.runtime.util.LazyMemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesMultiMap.RecordArea",
    "source_method": "updateValuePointer",
    "target_class": "int, int):void \t org.apache.flink.runtime.io.disk.RandomAccessInputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesMultiMap.RecordArea",
    "source_method": "valueIterator",
    "target_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesMultiMap.RecordArea.ValueIterator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesMultiMap",
    "source_method": "writePointer",
    "target_class": "int):long \t org.apache.flink.runtime.io.disk.SimpleCollectingOutputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesMultiMap",
    "source_method": "readPointer",
    "target_class": "org.apache.flink.runtime.memory.AbstractPagedInputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesMultiMap",
    "source_method": "skipPointer",
    "target_class": "org.apache.flink.runtime.io.disk.SimpleCollectingOutputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesMultiMap",
    "source_method": "skipPointer",
    "target_class": "org.apache.flink.runtime.memory.AbstractPagedInputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesMultiMap",
    "source_method": "checkSkipWriteForPointer",
    "target_class": "org.apache.flink.runtime.memory.AbstractPagedOutputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesMultiMap",
    "source_method": "checkSkipReadForPointer",
    "target_class": "org.apache.flink.runtime.memory.AbstractPagedInputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesHashMap",
    "source_method": "getUsedMemoryInBytes",
    "target_class": "org.apache.flink.table.runtime.util.collections.binary.BytesMap.RecordArea"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.collections.binary.AbstractBytesHashMap",
    "source_method": "getVariableLength",
    "target_class": "org.apache.flink.table.data.binary.BinaryRowData"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.ResettableExternalBuffer",
    "source_method": "memorySize",
    "target_class": "org.apache.flink.table.runtime.util.LazyMemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.ResettableExternalBuffer.InMemoryBuffer",
    "source_method": "write",
    "target_class": "org.apache.flink.runtime.io.disk.SimpleCollectingOutputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.FileChannelUtil",
    "source_method": "createInputView",
    "target_class": "org.apache.flink.table.runtime.io.ChannelWithMeta, java.util.List<org.apache.flink.runtime.io.disk.iomanager.FileIOChannel>, boolean, org.apache.flink.runtime.io.compression.BlockCompressionFactory, int, int):org.apache.flink.runtime.io.disk.iomanager.AbstractChannelReaderInputView \t org.apache.flink.runtime.io.disk.iomanager.IOManager"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.FileChannelUtil",
    "source_method": "createOutputView",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID, boolean, org.apache.flink.runtime.io.compression.BlockCompressionFactory, int, int):org.apache.flink.runtime.io.disk.iomanager.AbstractChannelWriterOutputView \t org.apache.flink.runtime.io.disk.iomanager.IOManager"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.FileChannelUtil",
    "source_method": "createBlockChannelWriter",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID, java.util.concurrent.LinkedBlockingQueue<org.apache.flink.core.memory.MemorySegment>, boolean, org.apache.flink.runtime.io.compression.BlockCompressionFactory, int, int):org.apache.flink.runtime.io.disk.iomanager.BlockChannelWriter<org.apache.flink.core.memory.MemorySegment> \t org.apache.flink.runtime.io.disk.iomanager.IOManager"
  },
  {
    "source_class": "org.apache.flink.table.runtime.util.FileChannelUtil",
    "source_method": "createBlockChannelReader",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID, java.util.concurrent.LinkedBlockingQueue<org.apache.flink.core.memory.MemorySegment>, boolean, org.apache.flink.runtime.io.compression.BlockCompressionFactory, int, int):org.apache.flink.runtime.io.disk.iomanager.BlockChannelReader<org.apache.flink.core.memory.MemorySegment> \t org.apache.flink.runtime.io.disk.iomanager.IOManager"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashTable",
    "source_method": "getCurrentProbeRow",
    "target_class": "org.apache.flink.table.runtime.hashtable.ProbeIterator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashTable",
    "source_method": "insertIntoTable",
    "target_class": "int):void \t org.apache.flink.table.runtime.hashtable.BinaryHashPartition"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashTable",
    "source_method": "applyCondition",
    "target_class": "org.apache.flink.table.runtime.generated.JoinCondition"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BaseHybridHashTable",
    "source_method": "maxNumPartition",
    "target_class": "org.apache.flink.table.runtime.util.LazyMemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BaseHybridHashTable",
    "source_method": "freeCurrent",
    "target_class": "org.apache.flink.table.runtime.util.LazyMemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BaseHybridHashTable",
    "source_method": "remainBuffers",
    "target_class": "org.apache.flink.table.runtime.util.LazyMemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BaseHybridHashTable",
    "source_method": "getUsedMemoryInBytes",
    "target_class": "org.apache.flink.table.runtime.util.LazyMemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BaseHybridHashTable",
    "source_method": "readAllBuffers",
    "target_class": "int):java.util.List<org.apache.flink.core.memory.MemorySegment> \t org.apache.flink.runtime.io.disk.iomanager.BlockChannelReader"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHybridHashTable",
    "source_method": "getCurrentProbeRow",
    "target_class": "org.apache.flink.table.runtime.hashtable.ProbeIterator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHybridHashTable",
    "source_method": "insertIntoTable",
    "target_class": "int, org.apache.flink.table.data.binary.BinaryRowData):void \t org.apache.flink.table.runtime.hashtable.LongHashPartition"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "getBucketBuffersByRowCount",
    "target_class": "int, int):int \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "valueIter",
    "target_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition.MatchIterator"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "updateIndex",
    "target_class": "int, long, int, org.apache.flink.core.memory.MemorySegment, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "getBuildSideBlockCount",
    "target_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "getProbeSideBlockCount",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.AbstractChannelWriterOutputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "getNumOccupiedMemorySegments",
    "target_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "spillPartition",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID, java.util.concurrent.LinkedBlockingQueue<org.apache.flink.core.memory.MemorySegment>):int \t org.apache.flink.table.runtime.hashtable.LongHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "finalizeBuildPhase",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.Enumerator):int \t org.apache.flink.table.runtime.hashtable.LongHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "finalizeProbePhase",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.AbstractChannelWriterOutputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "insertIntoProbeBuffer",
    "target_class": "org.apache.flink.table.data.binary.BinaryRowData):void \t org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "clearAllMemory",
    "target_class": "org.apache.flink.table.runtime.util.LazyMemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "shouldAdvance",
    "target_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer):boolean \t org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "deserializeFromPages",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.ChannelReaderInputView, org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.LongHashPartition",
    "source_method": "iteratorToDenseBucket",
    "target_class": "long, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.HashTableBloomFilter",
    "source_method": "setLocation",
    "target_class": "org.apache.flink.runtime.operators.util.BloomFilter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "getNumOccupiedMemorySegments",
    "target_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "getBuildSideBlockCount",
    "target_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "getBuildStageInputView",
    "target_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "getProbeSideBlockCount",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.AbstractChannelWriterOutputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "testHashBloomFilter",
    "target_class": "org.apache.flink.table.runtime.hashtable.HashTableBloomFilter"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "freeBloomFilter",
    "target_class": "org.apache.flink.table.runtime.util.MemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "insertIntoBuildBuffer",
    "target_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "insertIntoProbeBuffer",
    "target_class": "org.apache.flink.table.runtime.typeutils.BinaryRowDataSerializer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "spillPartition",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.ID, java.util.concurrent.LinkedBlockingQueue<org.apache.flink.core.memory.MemorySegment>):int \t org.apache.flink.table.runtime.hashtable.BinaryHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "finalizeBuildPhase",
    "target_class": "org.apache.flink.runtime.io.disk.iomanager.FileIOChannel.Enumerator):int \t org.apache.flink.table.runtime.hashtable.BinaryHashPartition.BuildSideBuffer"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashPartition",
    "source_method": "finalizeProbePhase",
    "target_class": "java.util.List<org.apache.flink.table.runtime.hashtable.BinaryHashPartition>, boolean):void \t org.apache.flink.runtime.io.disk.iomanager.AbstractChannelWriterOutputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashBucketArea",
    "source_method": "initMemorySegment",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashBucketArea",
    "source_method": "insertToBucket",
    "target_class": "int, int, int, boolean):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashBucketArea",
    "source_method": "findFirstSameBuildRow",
    "target_class": "int, int, org.apache.flink.table.data.binary.BinaryRowData):boolean \t org.apache.flink.runtime.io.disk.RandomAccessInputView"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashBucketArea",
    "source_method": "returnMemory",
    "target_class": "org.apache.flink.core.memory.MemorySegment[], org.apache.flink.core.memory.MemorySegment[]):void \t org.apache.flink.table.runtime.util.LazyMemorySegmentPool"
  },
  {
    "source_class": "org.apache.flink.table.runtime.hashtable.BinaryHashBucketArea",
    "source_method": "buildBloomFilterAndFree",
    "target_class": "int, org.apache.flink.core.memory.MemorySegment[]):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.result.ResultStore",
    "source_method": "isRetrieving",
    "target_class": "org.apache.flink.table.gateway.service.result.ResultStore.ResultRetrievalThread"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.result.ResultFetcher",
    "source_method": "fromTableResult",
    "target_class": "org.apache.flink.table.api.internal.TableResultInternal, boolean):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.core.execution.JobClient"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.result.ResultFetcher",
    "source_method": "fromResults",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema, java.util.List<org.apache.flink.table.data.RowData>):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.api.ResultKind"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.result.ResultFetcher",
    "source_method": "close",
    "target_class": "org.apache.flink.table.resource.ResourceManager"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.context.DefaultContext",
    "source_method": "collectCommandLineOptions",
    "target_class": "org.apache.flink.client.cli.CliFrontendParser"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.context.DefaultContext",
    "source_method": "createExecutionConfig",
    "target_class": "org.apache.flink.table.gateway.service.context.Options, java.util.List<org.apache.flink.client.cli.CustomCommandLine>, java.util.List<java.net.URL>):org.apache.flink.configuration.Configuration \t org.apache.flink.client.cli.ExecutionConfigAccessor"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.context.DefaultContext",
    "source_method": "load",
    "target_class": "java.util.List<java.net.URL>, boolean):org.apache.flink.table.gateway.service.context.DefaultContext \t org.apache.flink.core.plugin.PluginUtils"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.context.SessionContext",
    "source_method": "set",
    "target_class": "java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.context.SessionContext",
    "source_method": "invalidatePlanCacheIfExist",
    "target_class": "org.apache.flink.table.api.internal.PlanCacheManager"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.context.SessionContext",
    "source_method": "create",
    "target_class": "org.apache.flink.table.gateway.api.session.SessionHandle, org.apache.flink.table.gateway.api.session.SessionEnvironment, java.util.concurrent.ExecutorService):org.apache.flink.table.gateway.service.context.SessionContext \t org.apache.flink.table.gateway.service.context.DefaultContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.context.SessionContext",
    "source_method": "initializeConfiguration",
    "target_class": "org.apache.flink.table.gateway.api.session.SessionEnvironment, org.apache.flink.table.gateway.api.session.SessionHandle):org.apache.flink.configuration.Configuration \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.context.SessionContext",
    "source_method": "buildModuleManager",
    "target_class": "org.apache.flink.configuration.ReadableConfig, java.lang.ClassLoader):org.apache.flink.table.module.ModuleManager \t org.apache.flink.table.gateway.api.session.SessionEnvironment"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.context.SessionContext",
    "source_method": "buildCatalogManager",
    "target_class": "java.net.URLClassLoader, org.apache.flink.table.gateway.api.session.SessionEnvironment):org.apache.flink.table.catalog.CatalogManager \t org.apache.flink.table.factories.TableFactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.session.Session",
    "source_method": "getSessionHandle",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.session.Session",
    "source_method": "getSessionConfig",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.session.Session",
    "source_method": "createExecutor",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.session.Session",
    "source_method": "createExecutor",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.session.SessionManagerImpl",
    "source_method": "isSessionExpired",
    "target_class": "org.apache.flink.table.gateway.service.session.Session"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationManager",
    "source_method": "submitOperation",
    "target_class": "org.apache.flink.table.gateway.api.results.ResultSet"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationManager",
    "source_method": "submitOperation",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationManager",
    "source_method": "closeOperation",
    "target_class": "org.apache.flink.table.gateway.service.operation.OperationManager.Operation"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationManager.Operation",
    "source_method": "fetchResults",
    "target_class": "int):org.apache.flink.table.gateway.api.results.ResultSet \t org.apache.flink.table.gateway.service.result.ResultFetcher"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationManager.Operation",
    "source_method": "fetchResults",
    "target_class": "int):org.apache.flink.table.gateway.api.results.ResultSet \t org.apache.flink.table.gateway.service.result.ResultFetcher"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationManager.Operation",
    "source_method": "getResultSchema",
    "target_class": "org.apache.flink.table.gateway.service.result.ResultFetcher"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationManager",
    "source_method": "submitOperationInternal",
    "target_class": "org.apache.flink.table.gateway.service.operation.OperationManager.Operation):void \t org.apache.flink.table.gateway.service.operation.OperationManager.Operation"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "configureSession",
    "target_class": "java.lang.String):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.api.internal.TableEnvironmentInternal"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "executeStatement",
    "target_class": "java.lang.String):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "getCurrentCatalog",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "listCatalogs",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "listDatabases",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "listUserDefinedFunctions",
    "target_class": "java.lang.String):java.util.Set<org.apache.flink.table.gateway.api.results.FunctionInfo> \t org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "getFunctionDefinition",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "getTableEnvironment",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "getTableEnvironment",
    "target_class": "org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "lookupExecutor",
    "target_class": "java.lang.ClassLoader):org.apache.flink.table.delegation.Executor \t org.apache.flink.table.factories.FactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "createStreamTableEnvironment",
    "target_class": "org.apache.flink.table.api.EnvironmentSettings, org.apache.flink.table.api.TableConfig, org.apache.flink.table.delegation.Executor, org.apache.flink.table.catalog.CatalogManager, org.apache.flink.table.module.ModuleManager, org.apache.flink.table.resource.ResourceManager, org.apache.flink.table.catalog.FunctionCatalog):org.apache.flink.table.api.internal.TableEnvironmentInternal \t org.apache.flink.table.api.EnvironmentSettings"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "executeOperationInStatementSetState",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle, org.apache.flink.table.operations.Operation):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callExecutableOperation",
    "target_class": "org.apache.flink.table.operations.ExecutableOperation):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "tableConfig",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callSetOperation",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle, org.apache.flink.table.operations.command.SetOperation):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callResetOperation",
    "target_class": "org.apache.flink.table.operations.command.ResetOperation):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callBeginStatementSetOperation",
    "target_class": "org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callEndStatementSetOperation",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callModifyOperations",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle, java.util.List<org.apache.flink.table.operations.ModifyOperation>):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.api.internal.TableEnvironmentInternal"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callExecuteOperation",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle, org.apache.flink.table.operations.Operation):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.api.internal.TableEnvironmentInternal"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callOperation",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle, org.apache.flink.table.operations.Operation):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.api.internal.TableEnvironmentInternal"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "listTables",
    "target_class": "java.lang.String, boolean):java.util.Set<org.apache.flink.table.gateway.api.results.TableInfo> \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "listViews",
    "target_class": "java.lang.String):java.util.Set<org.apache.flink.table.gateway.api.results.TableInfo> \t org.apache.flink.table.gateway.service.context.SessionContext"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callStopJobOperation",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle, org.apache.flink.table.operations.command.StopJobOperation):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.table.operations.command.StopJobOperation"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "callShowJobsOperation",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle, org.apache.flink.table.operations.command.ShowJobsOperation):org.apache.flink.table.gateway.service.result.ResultFetcher \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.gateway.service.operation.OperationExecutor",
    "source_method": "runClusterAction",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle, org.apache.flink.table.gateway.service.operation.OperationExecutor.ClusterAction<ClusterID,Result>):Result \t org.apache.flink.client.deployment.ClusterClientFactory"
  },
  {
    "source_class": "org.apache.flink.table.gateway.SqlGateway",
    "source_method": "stop",
    "target_class": "org.apache.flink.table.gateway.service.session.SessionManager"
  },
  {
    "source_class": "org.apache.flink.table.gateway.SqlGateway",
    "source_method": "startSqlGateway",
    "target_class": "java.lang.String[]):void \t org.apache.flink.table.gateway.cli.SqlGatewayOptionsParser"
  },
  {
    "source_class": "org.apache.flink.table.gateway.rest.SqlGatewayRestEndpointFactory",
    "source_method": "rebuildRestEndpointOptions",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.gateway.rest.serde.ColumnInfo",
    "source_method": "toColumnInfo",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.gateway.rest.serde.ResultInfo",
    "source_method": "createResultInfo",
    "target_class": "org.apache.flink.table.gateway.rest.util.RowFormat, org.apache.flink.table.gateway.rest.util.RowDataLocalTimeZoneConverter):org.apache.flink.table.gateway.rest.serde.ResultInfo \t org.apache.flink.table.gateway.api.results.ResultSet"
  },
  {
    "source_class": "org.apache.flink.table.gateway.rest.serde.ResultInfo",
    "source_method": "convertToPlainText",
    "target_class": "org.apache.flink.table.utils.print.RowDataToStringConverter):org.apache.flink.table.data.RowData \t org.apache.flink.table.data.GenericRowData"
  },
  {
    "source_class": "org.apache.flink.table.gateway.rest.handler.operation.AbstractOperationHandler",
    "source_method": "getStatus",
    "target_class": "org.apache.flink.table.gateway.api.operation.OperationHandle):java.lang.String \t org.apache.flink.table.gateway.api.SqlGatewayService"
  },
  {
    "source_class": "org.apache.flink.table.gateway.rest.header.statement.FetchResultsHeaders",
    "source_method": "buildNextUri",
    "target_class": "java.lang.String, java.lang.String, java.lang.Long, org.apache.flink.table.gateway.rest.util.RowFormat):java.lang.String \t org.apache.flink.table.gateway.rest.util.SqlGatewayRestAPIVersion"
  },
  {
    "source_class": "org.apache.flink.table.gateway.rest.util.SqlGatewayRestAPIVersion",
    "source_method": "getDefaultVersion",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.gateway.rest.util.RowDataLocalTimeZoneConverter",
    "source_method": "getSessionTimeZone",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.gateway.api.endpoint.SqlGatewayEndpointFactoryUtils",
    "source_method": "createEndpointFactoryHelper",
    "target_class": "org.apache.flink.table.gateway.api.endpoint.SqlGatewayEndpointFactory.Context):org.apache.flink.table.gateway.api.endpoint.SqlGatewayEndpointFactoryUtils.EndpointFactoryHelper \t org.apache.flink.table.gateway.api.endpoint.SqlGatewayEndpointFactory.Context"
  },
  {
    "source_class": "org.apache.flink.table.gateway.api.endpoint.SqlGatewayEndpointFactoryUtils",
    "source_method": "validateSpecifiedEndpointsAreUnique",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.codesplit.JavaCodeSplitter",
    "source_method": "splitImpl",
    "target_class": "int, int):java.lang.String \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.sql.parser.SqlConstraintValidator",
    "source_method": "validate",
    "target_class": "org.apache.flink.sql.parser.ddl.constraint.SqlTableConstraint"
  },
  {
    "source_class": "org.apache.flink.sql.parser.SqlPartitionUtils",
    "source_method": "getPartitionKVs",
    "target_class": "org.apache.flink.sql.parser.SqlProperty"
  },
  {
    "source_class": "org.apache.flink.sql.parser.SqlUnparseUtils",
    "source_method": "unparseTableSchema",
    "target_class": "int, int, org.apache.flink.sql.parser.SqlNodeList, java.util.List<org.apache.flink.sql.parser.ddl.constraint.SqlTableConstraint>, org.apache.flink.sql.parser.ddl.SqlWatermark):void \t org.apache.flink.sql.parser.ddl.SqlWatermark"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.SingleSessionManager.EmbeddedSessionContext",
    "source_method": "create",
    "target_class": "org.apache.flink.table.gateway.api.session.SessionHandle, org.apache.flink.table.gateway.api.session.SessionEnvironment, java.util.concurrent.ExecutorService):org.apache.flink.table.client.gateway.SingleSessionManager.EmbeddedSessionContext \t org.apache.flink.table.client.util.ClientClassloaderUtil"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.result.CollectResultBase",
    "source_method": "isRetrieving",
    "target_class": "org.apache.flink.table.client.gateway.result.CollectResultBase.ResultRetrievalThread"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ExecutorImpl",
    "source_method": "sendRequest",
    "target_class": "U, R):java.util.concurrent.CompletableFuture<P> \t org.apache.flink.runtime.rest.messages.CustomHeadersDecorator"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ExecutorImpl",
    "source_method": "fetchUtilResultsReady",
    "target_class": "org.apache.flink.table.gateway.rest.message.statement.FetchResultsResponseBody"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ExecutorImpl",
    "source_method": "negotiateVersion",
    "target_class": "org.apache.flink.runtime.rest.messages.CustomHeadersDecorator"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ResultDescriptor",
    "source_method": "createResult",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ResultDescriptor",
    "source_method": "isMaterialized",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ResultDescriptor",
    "source_method": "isTableauMode",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ResultDescriptor",
    "source_method": "isStreamingMode",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ResultDescriptor",
    "source_method": "maxColumnWidth",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ResultDescriptor",
    "source_method": "isPrintQueryTimeCost",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.ResultDescriptor",
    "source_method": "getRowDataStringConverter",
    "target_class": "org.apache.flink.table.client.gateway.StatementResult"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.TypedResult",
    "source_method": "empty",
    "target_class": "org.apache.flink.table.client.gateway.TypedResult.ResultType"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.TypedResult",
    "source_method": "payload",
    "target_class": "org.apache.flink.table.client.gateway.TypedResult.ResultType"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.TypedResult",
    "source_method": "endOfStream",
    "target_class": "org.apache.flink.table.client.gateway.TypedResult.ResultType"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.DefaultContextUtils",
    "source_method": "buildDefaultContext",
    "target_class": "org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.DefaultContextUtils",
    "source_method": "buildDefaultContext",
    "target_class": "org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.table.client.gateway.DefaultContextUtils",
    "source_method": "discoverDependencies",
    "target_class": "java.util.List<java.net.URL>):java.util.List<java.net.URL> \t org.apache.flink.util.JarUtils"
  },
  {
    "source_class": "org.apache.flink.table.client.SqlClient",
    "source_method": "start",
    "target_class": "org.apache.flink.table.client.gateway.Executor"
  },
  {
    "source_class": "org.apache.flink.table.client.SqlClient",
    "source_method": "startClient",
    "target_class": "java.util.function.Supplier<org.apache.flink.table.client.Terminal>):void \t org.apache.flink.table.client.cli.CliOptionsParser"
  },
  {
    "source_class": "org.apache.flink.table.client.SqlClient.EmbeddedGateway",
    "source_method": "create",
    "target_class": "org.apache.flink.table.gateway.api.endpoint.SqlGatewayEndpointFactoryUtils"
  },
  {
    "source_class": "org.apache.flink.table.client.SqlClient.EmbeddedGateway",
    "source_method": "closePort",
    "target_class": "org.apache.flink.util.NetUtils.Port"
  },
  {
    "source_class": "org.apache.flink.table.client.SqlClient",
    "source_method": "readExecutionContent",
    "target_class": "org.apache.flink.table.client.cli.CliOptions"
  },
  {
    "source_class": "org.apache.flink.table.client.util.ClientClassloaderUtil",
    "source_method": "buildUserClassLoader",
    "target_class": "java.lang.ClassLoader, org.apache.flink.configuration.Configuration):org.apache.flink.util.FlinkUserCodeClassLoader \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliResultView",
    "source_method": "openRow",
    "target_class": "org.apache.flink.table.client.gateway.ResultDescriptor"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliStrings",
    "source_method": "messageError",
    "target_class": "java.lang.Throwable, boolean):org.apache.flink.table.client.cli.AttributedString \t org.apache.flink.util.ExceptionUtils"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.Printer",
    "source_method": "createClearCommandPrinter",
    "target_class": "org.apache.flink.table.client.cli.Printer.ClearCommandPrinter"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.Printer",
    "source_method": "createQuitCommandPrinter",
    "target_class": "org.apache.flink.table.client.cli.Printer.QuitCommandPrinter"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.Printer",
    "source_method": "createHelpCommandPrinter",
    "target_class": "org.apache.flink.table.client.cli.Printer.HelpCommandPrinter"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.Printer",
    "source_method": "createInitializationCommandPrinter",
    "target_class": "org.apache.flink.table.client.cli.Printer.InitializationCommandPrinter"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.Printer.StatementResultPrinter",
    "source_method": "printQuery",
    "target_class": "org.apache.flink.table.client.cli.CliTableauResultView"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.Printer",
    "source_method": "printInfo",
    "target_class": "java.lang.String):void \t org.apache.flink.table.client.cli.CliStrings"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.parser.SqlClientSyntaxHighlighter",
    "source_method": "getHighlightedOutput",
    "target_class": "org.apache.flink.table.client.cli.parser.SyntaxHighlightStyle, org.apache.flink.table.api.SqlDialect):org.apache.flink.table.client.cli.parser.AttributedString \t org.apache.flink.table.client.cli.parser.SqlClientParserState"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.parser.SqlClientSyntaxHighlighter",
    "source_method": "handleWord",
    "target_class": "org.apache.flink.table.client.cli.parser.AttributedStringBuilder, org.apache.flink.table.client.cli.parser.SqlClientParserState, org.apache.flink.table.client.cli.parser.SyntaxHighlightStyle):void \t org.apache.flink.table.client.cli.parser.SyntaxHighlightStyle"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliTableResultView",
    "source_method": "updatePage",
    "target_class": "org.apache.flink.table.client.gateway.result.MaterializedResult"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliTableauResultView",
    "source_method": "waitBatchResults",
    "target_class": "org.apache.flink.table.client.gateway.TypedResult"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliTableauResultView",
    "source_method": "calculateTimeCostInPrintFormat",
    "target_class": "long):java.lang.String \t org.apache.flink.table.client.gateway.ResultDescriptor"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliOptionsParser",
    "source_method": "parseGatewayAddress",
    "target_class": "org.apache.flink.util.NetUtils"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliOptionsParser",
    "source_method": "checkUrls",
    "target_class": "org.apache.flink.table.client.cli.Option):java.util.List<java.net.URL> \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliOptionsParser",
    "source_method": "checkFilePath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliUtils",
    "source_method": "formatTwoLineHelpOptions",
    "target_class": "java.util.List<org.apache.flink.api.java.tuple.Tuple2<java.lang.String,java.lang.String>>):java.util.List<org.apache.flink.table.client.cli.AttributedString> \t org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliUtils",
    "source_method": "typesToString",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.client.cli.CliUtils",
    "source_method": "getSessionTimeZone",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow",
    "source_method": "slidingWindow",
    "target_class": "org.apache.flink.table.expressions.FieldReferenceExpression, org.apache.flink.table.expressions.ValueLiteralExpression, org.apache.flink.table.expressions.ValueLiteralExpression):org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow",
    "source_method": "tumblingWindow",
    "target_class": "org.apache.flink.table.expressions.FieldReferenceExpression, org.apache.flink.table.expressions.ValueLiteralExpression):org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow",
    "source_method": "sessionWindow",
    "target_class": "org.apache.flink.table.expressions.FieldReferenceExpression, org.apache.flink.table.expressions.ValueLiteralExpression):org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow",
    "source_method": "asSerializableString",
    "target_class": "org.apache.flink.table.expressions.FieldReferenceExpression"
  },
  {
    "source_class": "org.apache.flink.table.operations.OperationUtils",
    "source_method": "formatSelectColumns",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.operations.OperationUtils",
    "source_method": "formatPartitionSpec",
    "target_class": "org.apache.flink.table.catalog.CatalogPartitionSpec"
  },
  {
    "source_class": "org.apache.flink.table.operations.ProjectQueryOperation",
    "source_method": "alias",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.operations.JoinQueryOperation",
    "source_method": "calculateResultingSchema",
    "target_class": "org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.catalog.ResolvedSchema \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.operations.JoinQueryOperation",
    "source_method": "rightToSerializable",
    "target_class": "org.apache.flink.table.operations.QueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.ShowColumnsOperation",
    "source_method": "generateTableColumnsRows",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.operations.ShowColumnsOperation",
    "source_method": "isSchemaNonColumnComments",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.operations.ReplaceTableAsOperation",
    "source_method": "toSinkModifyOperation",
    "target_class": "org.apache.flink.table.operations.ddl.CreateTableOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.CreateTableASOperation",
    "source_method": "toSinkModifyOperation",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.operations.ddl.CreateCatalogFunctionOperation",
    "source_method": "getFunctionName",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.operations.ddl.DropCatalogFunctionOperation",
    "source_method": "getFunctionName",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.operations.QueryOperation",
    "source_method": "accept",
    "target_class": "org.apache.flink.table.operations.QueryOperationVisitor"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.ExecutableOperationUtils",
    "source_method": "createDynamicTableSink",
    "target_class": "java.util.function.Supplier<java.util.Optional<org.apache.flink.table.factories.DynamicTableSinkFactory>>, org.apache.flink.table.catalog.ObjectIdentifier, org.apache.flink.table.catalog.ResolvedCatalogTable, java.util.Map<java.lang.String,java.lang.String>, org.apache.flink.configuration.ReadableConfig, java.lang.ClassLoader, boolean):org.apache.flink.table.connector.sink.DynamicTableSink \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.CalculatedTableFactory.FunctionTableCallVisitor",
    "source_method": "extractSchema",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.CalculatedTableFactory.FunctionTableCallVisitor",
    "source_method": "adjustNames",
    "target_class": "java.util.List<java.lang.String>, java.lang.String):org.apache.flink.table.catalog.ResolvedSchema \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.SortOperationFactory",
    "source_method": "createLimitWithOffset",
    "target_class": "org.apache.flink.table.operations.QueryOperation, org.apache.flink.table.expressions.resolver.ExpressionResolver.PostResolverFactory):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.SortQueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.SortOperationFactory",
    "source_method": "createLimitWithFetch",
    "target_class": "org.apache.flink.table.operations.QueryOperation, org.apache.flink.table.expressions.resolver.ExpressionResolver.PostResolverFactory):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.SortQueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.ColumnOperationUtils",
    "source_method": "renameColumns",
    "target_class": "java.util.List<org.apache.flink.table.expressions.Expression>):java.util.List<org.apache.flink.table.expressions.Expression> \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.ColumnOperationUtils",
    "source_method": "addOrReplaceColumns",
    "target_class": "java.util.List<org.apache.flink.table.expressions.Expression>):java.util.List<org.apache.flink.table.expressions.Expression> \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.ValuesOperationFactory",
    "source_method": "convertTopLevelExpressionToExpectedRowType",
    "target_class": "java.util.List<org.apache.flink.table.types.DataType>, java.util.List<org.apache.flink.table.expressions.ResolvedExpression>):java.util.List<org.apache.flink.table.expressions.ResolvedExpression> \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.ValuesOperationFactory",
    "source_method": "convertRowToExpectedType",
    "target_class": "org.apache.flink.table.types.FieldsDataType, org.apache.flink.table.expressions.resolver.ExpressionResolver.PostResolverFactory):java.util.Optional<org.apache.flink.table.expressions.ResolvedExpression> \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.ValuesOperationFactory",
    "source_method": "convertArrayToExpectedType",
    "target_class": "org.apache.flink.table.types.CollectionDataType, org.apache.flink.table.expressions.resolver.ExpressionResolver.PostResolverFactory):java.util.Optional<org.apache.flink.table.expressions.ResolvedExpression> \t org.apache.flink.table.expressions.resolver.ExpressionResolver.PostResolverFactory"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.ValuesOperationFactory",
    "source_method": "convertMapToExpectedType",
    "target_class": "org.apache.flink.table.types.KeyValueDataType, org.apache.flink.table.expressions.resolver.ExpressionResolver.PostResolverFactory):java.util.Optional<org.apache.flink.table.expressions.ResolvedExpression> \t org.apache.flink.table.expressions.resolver.ExpressionResolver.PostResolverFactory"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationExpressionsUtils",
    "source_method": "extractAggregationsAndProperties",
    "target_class": "org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationExpressionsUtils",
    "source_method": "nameExpressions",
    "target_class": "org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationExpressionsUtils",
    "source_method": "extractName",
    "target_class": "org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "project",
    "target_class": "org.apache.flink.table.operations.QueryOperation, boolean):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "project",
    "target_class": "org.apache.flink.table.operations.QueryOperation, java.util.List<org.apache.flink.table.api.OverWindow>):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "projectInternal",
    "target_class": "org.apache.flink.table.operations.QueryOperation, boolean, java.util.List<org.apache.flink.table.api.OverWindow>):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "addColumns",
    "target_class": "java.util.List<org.apache.flink.table.expressions.Expression>, org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.QueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "renameColumns",
    "target_class": "org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.QueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "dropColumns",
    "target_class": "org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.QueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "aggregate",
    "target_class": "java.util.List<org.apache.flink.table.expressions.Expression>, org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "windowAggregate",
    "target_class": "org.apache.flink.table.api.GroupWindow, java.util.List<org.apache.flink.table.expressions.Expression>, java.util.List<org.apache.flink.table.expressions.Expression>, org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "windowAggregate",
    "target_class": "org.apache.flink.table.api.GroupWindow, java.util.List<org.apache.flink.table.expressions.Expression>, org.apache.flink.table.expressions.Expression, org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "join",
    "target_class": "org.apache.flink.table.operations.QueryOperation, org.apache.flink.table.operations.JoinQueryOperation.JoinType, java.util.Optional<org.apache.flink.table.expressions.Expression>, boolean):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.utils.JoinOperationFactory"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "joinLateral",
    "target_class": "org.apache.flink.table.expressions.Expression, org.apache.flink.table.operations.JoinQueryOperation.JoinType, java.util.Optional<org.apache.flink.table.expressions.Expression>):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.utils.CalculatedTableFactory"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "resolveSingleExpression",
    "target_class": "org.apache.flink.table.expressions.resolver.ExpressionResolver):org.apache.flink.table.expressions.ResolvedExpression \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "sort",
    "target_class": "org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "limitWithOffset",
    "target_class": "org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "limitWithFetch",
    "target_class": "org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.utils.SortOperationFactory"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "minus",
    "target_class": "org.apache.flink.table.operations.QueryOperation, boolean):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.utils.SetOperationFactory"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "intersect",
    "target_class": "org.apache.flink.table.operations.QueryOperation, boolean):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.utils.SetOperationFactory"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "union",
    "target_class": "org.apache.flink.table.operations.QueryOperation, boolean):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.utils.SetOperationFactory"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "values",
    "target_class": "org.apache.flink.table.expressions.Expression[]):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "valuesInternal",
    "target_class": "org.apache.flink.table.expressions.Expression[]):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder.ExtractAliasAndAggregate",
    "source_method": "extractAliases",
    "target_class": "org.apache.flink.table.expressions.UnresolvedCallExpression"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder.ExtractAliasAndAggregate",
    "source_method": "getAggregate",
    "target_class": "java.util.List<java.lang.String>):java.util.Optional<org.apache.flink.table.operations.utils.OperationTreeBuilder.AggregateWithAlias> \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder.ExtractAliasAndAggregate",
    "source_method": "validateAlias",
    "target_class": "org.apache.flink.table.expressions.ResolvedExpression, java.lang.Boolean):void \t org.apache.flink.table.expressions.ResolvedExpression"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "windowTableAggregate",
    "target_class": "org.apache.flink.table.api.GroupWindow, java.util.List<org.apache.flink.table.expressions.Expression>, org.apache.flink.table.expressions.Expression, org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.OperationTreeBuilder",
    "source_method": "aliasBackwardFields",
    "target_class": "java.util.List<java.lang.String>, int):org.apache.flink.table.operations.QueryOperation \t org.apache.flink.table.operations.QueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.SetOperationFactory",
    "source_method": "validateSetOperation",
    "target_class": "org.apache.flink.table.operations.QueryOperation, org.apache.flink.table.operations.QueryOperation):void \t org.apache.flink.table.operations.QueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.SetOperationFactory",
    "source_method": "createCommonTableSchema",
    "target_class": "org.apache.flink.table.operations.QueryOperation):org.apache.flink.table.catalog.ResolvedSchema \t org.apache.flink.table.operations.QueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "extractAggregateResultDataTypes",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "extractAggregateNames",
    "target_class": "java.util.List<java.lang.String>):java.util.stream.Stream<java.lang.String> \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "getValidatedTimeAttribute",
    "target_class": "org.apache.flink.table.expressions.resolver.ExpressionResolver):org.apache.flink.table.expressions.FieldReferenceExpression \t org.apache.flink.table.expressions.resolver.ExpressionResolver"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "validateBatchTimeAttribute",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "validateStreamTimeAttribute",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "validateAndCreateSessionWindow",
    "target_class": "java.lang.String, org.apache.flink.table.expressions.FieldReferenceExpression):org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "validateWindowIntervalType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "validateWindowProperties",
    "target_class": "org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow):void \t org.apache.flink.table.operations.WindowAggregateQueryOperation.ResolvedGroupWindow"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "validateGroupings",
    "target_class": "org.apache.flink.table.expressions.ResolvedExpression"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory.AggregationExpressionValidator",
    "source_method": "requiresOver",
    "target_class": "org.apache.flink.table.functions.FunctionDefinition"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory",
    "source_method": "extractTableAggFunctionAndAliases",
    "target_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory.TableAggFunctionCallResolver"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AggregateOperationFactory.TableAggFunctionCallResolver",
    "source_method": "validateAlias",
    "target_class": "org.apache.flink.table.expressions.CallExpression):void \t org.apache.flink.table.expressions.CallExpression"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.JoinOperationFactory",
    "source_method": "verifyConditionType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.JoinOperationFactory",
    "source_method": "validateNamesAmbiguity",
    "target_class": "org.apache.flink.table.operations.QueryOperation):void \t org.apache.flink.table.operations.QueryOperation"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.AliasOperationUtils",
    "source_method": "createAliasList",
    "target_class": "org.apache.flink.table.operations.QueryOperation):java.util.List<org.apache.flink.table.expressions.Expression> \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.operations.utils.ProjectionOperationFactory.TransitiveExtractNameVisitor",
    "source_method": "extractNameFromGet",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "isReferenceByPosition",
    "target_class": "org.apache.flink.table.expressions.Expression[]):boolean \t org.apache.flink.table.expressions.UnresolvedReferenceExpression"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "isIndexedComposite",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "getFieldNames",
    "target_class": "java.util.List<java.lang.String>):java.lang.String[] \t org.apache.flink.table.types.logical.utils.LogicalTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "validateInputTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "getFieldTypes",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "extractFieldInfoFromAtomicType",
    "target_class": "org.apache.flink.table.expressions.Expression[]):java.util.List<org.apache.flink.table.typeutils.FieldInfoUtils.FieldInfo> \t org.apache.flink.table.types.logical.TimestampKind"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils.IndexedExprToFieldInfo",
    "source_method": "visitAlias",
    "target_class": "org.apache.flink.table.expressions.UnresolvedCallExpression"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils.ExprToFieldInfo",
    "source_method": "createFieldInfo",
    "target_class": "java.lang.String):org.apache.flink.table.typeutils.FieldInfoUtils.FieldInfo \t org.apache.flink.table.expressions.UnresolvedReferenceExpression"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils.ExprToFieldInfo",
    "source_method": "createProctimeFieldInfo",
    "target_class": "java.lang.String):org.apache.flink.table.typeutils.FieldInfoUtils.FieldInfo \t org.apache.flink.table.expressions.UnresolvedReferenceExpression"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils.ExprToFieldInfo",
    "source_method": "createRowtimeFieldInfo",
    "target_class": "java.lang.String):org.apache.flink.table.typeutils.FieldInfoUtils.FieldInfo \t org.apache.flink.table.expressions.UnresolvedReferenceExpression"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "extractAlias",
    "target_class": "org.apache.flink.table.expressions.ExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "checkRowtimeType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "isRowtimeField",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "isProctimeField",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "isRowTimeExpression",
    "target_class": "org.apache.flink.table.expressions.UnresolvedCallExpression"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "isProcTimeExpression",
    "target_class": "org.apache.flink.table.expressions.UnresolvedCallExpression"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "createTimeAttributeField",
    "target_class": "org.apache.flink.table.types.logical.TimestampKind, java.lang.String):org.apache.flink.table.typeutils.FieldInfoUtils.FieldInfo \t org.apache.flink.table.typeutils.TimeIndicatorTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.typeutils.FieldInfoUtils",
    "source_method": "createTimeIndicatorType",
    "target_class": "org.apache.flink.table.types.AtomicDataType"
  },
  {
    "source_class": "org.apache.flink.table.functions.TemporalTableFunctionImpl",
    "source_method": "create",
    "target_class": "org.apache.flink.table.expressions.Expression, org.apache.flink.table.expressions.Expression):org.apache.flink.table.functions.TemporalTableFunction \t org.apache.flink.table.api.TableSchema"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "convertRow",
    "target_class": "org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "unwrapFromApi",
    "target_class": "org.apache.flink.table.api.ApiExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "unresolvedCall",
    "target_class": "java.util.List<org.apache.flink.table.expressions.Expression>):org.apache.flink.table.expressions.UnresolvedCallExpression \t org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "tableRef",
    "target_class": "org.apache.flink.table.api.Table):org.apache.flink.table.expressions.TableReferenceExpression \t org.apache.flink.table.api.Table"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "toMonthInterval",
    "target_class": "int):org.apache.flink.table.expressions.Expression \t org.apache.flink.table.expressions.ExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "intervalOfMillis",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "toMilliInterval",
    "target_class": "long):org.apache.flink.table.expressions.Expression \t org.apache.flink.table.expressions.ExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "intervalOfMonths",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "toRowInterval",
    "target_class": "org.apache.flink.table.expressions.ExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "isFunctionOfKind",
    "target_class": "org.apache.flink.table.functions.FunctionKind):boolean \t org.apache.flink.table.expressions.CallExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ApiExpressionUtils",
    "source_method": "isFunction",
    "target_class": "org.apache.flink.table.functions.BuiltInFunctionDefinition):boolean \t org.apache.flink.table.expressions.CallExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.LookupCallResolver",
    "source_method": "resolveChildren",
    "target_class": "org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.ExpressionResolver",
    "source_method": "concatenateRules",
    "target_class": "org.apache.flink.table.expressions.resolver.rules.ResolverRule"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.ExpressionResolver.PostResolverFactory",
    "source_method": "as",
    "target_class": "java.lang.String):org.apache.flink.table.expressions.CallExpression \t org.apache.flink.table.expressions.ResolvedExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.lookups.FieldReferenceLookup.FieldReference",
    "source_method": "toExpr",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.lookups.FieldReferenceLookup",
    "source_method": "prepareFieldsInInput",
    "target_class": "int):java.util.Map<java.lang.String,org.apache.flink.table.expressions.resolver.lookups.FieldReferenceLookup.FieldReference> \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.lookups.FieldReferenceLookup",
    "source_method": "isAliasedVirtualMetadataColumn",
    "target_class": "org.apache.flink.table.catalog.Column.MetadataColumn"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.lookups.FieldReferenceLookup",
    "source_method": "isDefaultVirtualMetadataColumn",
    "target_class": "org.apache.flink.table.catalog.Column.MetadataColumn"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.OverWindowResolverRule.ExpressionResolverVisitor",
    "source_method": "calculateOverWindowFollowing",
    "target_class": "org.apache.flink.table.expressions.resolver.LocalOverWindow"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ResolveSqlCallRule.TranslateSqlCallsVisitor",
    "source_method": "resolveChildren",
    "target_class": "org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ReferenceResolverRule.ExpressionResolverVisitor",
    "source_method": "failForField",
    "target_class": "org.apache.flink.table.expressions.UnresolvedReferenceExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ResolveCallByArgumentsRule.ResolvingCallVisitor",
    "source_method": "flattenCompositeType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ResolveCallByArgumentsRule.ResolvingCallVisitor",
    "source_method": "flattenLegacyCompositeType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ResolveCallByArgumentsRule.ResolvingCallVisitor",
    "source_method": "getOptionalTypeInference",
    "target_class": "org.apache.flink.table.types.inference.TypeInference"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ResolveCallByArgumentsRule.ResolvingCallVisitor",
    "source_method": "runTypeInference",
    "target_class": "org.apache.flink.table.expressions.UnresolvedCallExpression, org.apache.flink.table.types.inference.TypeInference, java.util.List<org.apache.flink.table.expressions.ResolvedExpression>, org.apache.flink.table.types.inference.TypeInferenceUtil.SurroundingInfo):org.apache.flink.table.expressions.ResolvedExpression \t org.apache.flink.table.expressions.UnresolvedCallExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ResolveCallByArgumentsRule.ResolvingCallVisitor",
    "source_method": "adaptArguments",
    "target_class": "java.util.List<org.apache.flink.table.expressions.ResolvedExpression>):java.util.List<org.apache.flink.table.expressions.ResolvedExpression> \t org.apache.flink.table.types.inference.TypeInferenceUtil.Result"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ResolveCallByArgumentsRule.ResolvingCallVisitor",
    "source_method": "prepareInlineUserDefinedFunction",
    "target_class": "org.apache.flink.table.functions.TableFunctionDefinition"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ExpandColumnFunctionsRule.ColumnFunctionsExpander",
    "source_method": "resolveArgsOfColumns",
    "target_class": "boolean):java.util.List<org.apache.flink.table.expressions.Expression> \t org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ExpandColumnFunctionsRule.ColumnsExpressionExpander",
    "source_method": "isIndexRangeCall",
    "target_class": "org.apache.flink.table.expressions.UnresolvedCallExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ExpandColumnFunctionsRule.ColumnsExpressionExpander",
    "source_method": "isNameRangeCall",
    "target_class": "org.apache.flink.table.expressions.UnresolvedCallExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.resolver.rules.ExpandColumnFunctionsRule",
    "source_method": "indexOfName",
    "target_class": "java.lang.String):int \t org.apache.flink.table.expressions.UnresolvedReferenceExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.UnresolvedCallExpression",
    "source_method": "getFunctionIdentifier",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.expressions.UnresolvedCallExpression",
    "source_method": "getFunctionDefinition",
    "target_class": "org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.expressions.UnresolvedCallExpression",
    "source_method": "resolve",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.expressions.CallExpression \t org.apache.flink.table.catalog.ContextResolvedFunction"
  },
  {
    "source_class": "org.apache.flink.table.factories.PlannerFactoryUtil",
    "source_method": "createPlanner",
    "target_class": "org.apache.flink.table.api.TableConfig, java.lang.ClassLoader, org.apache.flink.table.module.ModuleManager, org.apache.flink.table.catalog.CatalogManager, org.apache.flink.table.catalog.FunctionCatalog):org.apache.flink.table.delegation.Planner \t org.apache.flink.table.factories.FactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.factories.TableFactoryUtil",
    "source_method": "findAndCreateTableSource",
    "target_class": "org.apache.flink.table.factories.TableFactoryService"
  },
  {
    "source_class": "org.apache.flink.table.factories.TableFactoryUtil",
    "source_method": "findAndCreateTableSource",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier, org.apache.flink.table.catalog.CatalogTable, org.apache.flink.configuration.ReadableConfig, boolean):org.apache.flink.table.sources.TableSource<T> \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.factories.TableFactoryUtil",
    "source_method": "findAndCreateTableSink",
    "target_class": "org.apache.flink.table.factories.TableFactoryService"
  },
  {
    "source_class": "org.apache.flink.table.factories.TableFactoryUtil",
    "source_method": "createTableSinkForCatalogTable",
    "target_class": "org.apache.flink.table.factories.TableSinkFactory.Context):java.util.Optional<org.apache.flink.table.sinks.TableSink> \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.factories.TableFactoryUtil",
    "source_method": "isLegacyConnectorOptions",
    "target_class": "org.apache.flink.configuration.ReadableConfig, boolean, org.apache.flink.table.catalog.ObjectIdentifier, org.apache.flink.table.catalog.CatalogTable, boolean):boolean \t org.apache.flink.table.catalog.CatalogBaseTable"
  },
  {
    "source_class": "org.apache.flink.table.factories.TableFactoryUtil",
    "source_method": "findCatalogModificationListenerList",
    "target_class": "java.lang.ClassLoader):java.util.List<org.apache.flink.table.catalog.listener.CatalogModificationListener> \t org.apache.flink.table.factories.FactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.factories.TableFactoryUtil",
    "source_method": "findAndCreateCatalogStoreFactory",
    "target_class": "java.lang.ClassLoader):org.apache.flink.table.factories.CatalogStoreFactory \t org.apache.flink.table.factories.FactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.factories.TableFactoryUtil",
    "source_method": "buildCatalogStoreFactoryContext",
    "target_class": "java.lang.ClassLoader):org.apache.flink.table.factories.CatalogStoreFactory.Context \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.TableConfig",
    "source_method": "set",
    "target_class": "java.lang.String):org.apache.flink.table.api.TableConfig \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.TableConfig",
    "source_method": "addConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.TableConfig",
    "source_method": "getLocalTimeZone",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.TableConfig",
    "source_method": "setLocalTimeZone",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.TableConfig",
    "source_method": "getMaxGeneratedCodeLength",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.TableConfig",
    "source_method": "setIdleStateRetentionTime",
    "target_class": "org.apache.flink.api.common.time.Time):void \t org.apache.flink.api.common.time.Time"
  },
  {
    "source_class": "org.apache.flink.table.api.TableConfig",
    "source_method": "setIdleStateRetention",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.TableConfig",
    "source_method": "getMinIdleStateRetentionTime",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.TableConfig",
    "source_method": "getIdleStateRetention",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.FormatDescriptor",
    "source_method": "forFormat",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.FormatDescriptor.Builder",
    "source_method": "option",
    "target_class": "T):org.apache.flink.table.api.FormatDescriptor.Builder \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.api.TableDescriptor",
    "source_method": "forConnector",
    "target_class": "org.apache.flink.table.api.TableDescriptor.Builder"
  },
  {
    "source_class": "org.apache.flink.table.api.TableDescriptor.Builder",
    "source_method": "option",
    "target_class": "T):org.apache.flink.table.api.TableDescriptor.Builder \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableImpl",
    "source_method": "joinInternal",
    "target_class": "java.util.Optional<org.apache.flink.table.expressions.Expression>, org.apache.flink.table.operations.JoinQueryOperation.JoinType):org.apache.flink.table.api.internal.TableImpl \t org.apache.flink.table.operations.utils.OperationTreeBuilder"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableImpl",
    "source_method": "joinLateralInternal",
    "target_class": "java.util.Optional<org.apache.flink.table.expressions.Expression>, org.apache.flink.table.operations.JoinQueryOperation.JoinType):org.apache.flink.table.api.internal.TableImpl \t org.apache.flink.table.operations.utils.OperationTreeBuilder"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableImpl",
    "source_method": "addColumnsOperation",
    "target_class": "java.util.List<org.apache.flink.table.expressions.Expression>):org.apache.flink.table.api.Table \t org.apache.flink.table.operations.utils.OperationTreeBuilder"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableImpl",
    "source_method": "preprocessExpressions",
    "target_class": "org.apache.flink.table.expressions.Expression"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableResultImpl",
    "source_method": "awaitInternal",
    "target_class": "java.util.concurrent.TimeUnit):void \t org.apache.flink.table.api.internal.ResultProvider"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableResultImpl.Builder",
    "source_method": "build",
    "target_class": "org.apache.flink.table.api.internal.ResultProvider"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableResultUtils",
    "source_method": "buildTableResult",
    "target_class": "org.apache.flink.table.types.DataType[], java.lang.Object[][]):org.apache.flink.table.api.internal.TableResultInternal \t org.apache.flink.table.api.internal.TableResultImpl"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "create",
    "target_class": "org.apache.flink.table.api.EnvironmentSettings.Builder"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "create",
    "target_class": "org.apache.flink.table.factories.TableFactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "createTemporaryView",
    "target_class": "org.apache.flink.table.api.Table):void \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "scanInternal",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "getModifyOperation",
    "target_class": "java.util.List<org.apache.flink.core.execution.JobStatusHook>):org.apache.flink.table.operations.ModifyOperation \t org.apache.flink.table.operations.ReplaceTableAsOperation"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "getModifyOperation",
    "target_class": "java.util.List<org.apache.flink.core.execution.JobStatusHook>):org.apache.flink.table.operations.ModifyOperation \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "getSupportsStagingDynamicTableSink",
    "target_class": "org.apache.flink.table.catalog.Catalog, org.apache.flink.table.catalog.ResolvedCatalogTable):java.util.Optional<org.apache.flink.table.connector.sink.DynamicTableSink> \t org.apache.flink.table.operations.ddl.CreateTableOperation"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "executeInternal",
    "target_class": "org.apache.flink.table.operations.DeleteFromFilterOperation"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "executeInternal",
    "target_class": "java.util.List<java.lang.String>, java.util.List<org.apache.flink.core.execution.JobStatusHook>):org.apache.flink.table.api.internal.TableResultInternal \t org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "executeQueryOperation",
    "target_class": "org.apache.flink.table.operations.CollectModifyOperation, java.util.List<org.apache.flink.api.dag.Transformation<?>>):org.apache.flink.table.api.internal.TableResultInternal \t org.apache.flink.table.operations.CollectModifyOperation"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "validateTableSource",
    "target_class": "org.apache.flink.table.sources.TableSource"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "getTemporaryTable",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "createTable",
    "target_class": "org.apache.flink.table.catalog.FunctionCatalog"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.TableEnvironmentImpl",
    "source_method": "isRowLevelModification",
    "target_class": "org.apache.flink.table.operations.SinkModifyOperation"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.InsertResultProvider",
    "source_method": "close",
    "target_class": "org.apache.flink.core.execution.JobClient"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.InsertResultProvider",
    "source_method": "hasNext",
    "target_class": "org.apache.flink.core.execution.JobClient"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.AnalyzeTableUtil",
    "source_method": "analyzeTable",
    "target_class": "org.apache.flink.table.operations.ddl.AnalyzeTableOperation):org.apache.flink.table.api.internal.TableResultInternal \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.AnalyzeTableUtil",
    "source_method": "mergeColumnStatistics",
    "target_class": "org.apache.flink.table.catalog.stats.CatalogColumnStatistics):org.apache.flink.table.catalog.stats.CatalogColumnStatistics \t org.apache.flink.table.catalog.stats.CatalogColumnStatistics"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.AnalyzeTableUtil",
    "source_method": "convertToTableStatistics",
    "target_class": "org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.AnalyzeTableUtil",
    "source_method": "convertToColumnStatistics",
    "target_class": "java.util.List<org.apache.flink.table.catalog.Column>):org.apache.flink.table.catalog.stats.CatalogColumnStatistics \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.StaticResultProvider",
    "source_method": "rowToInternalRow",
    "target_class": "org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.ShowCreateUtil",
    "source_method": "buildShowCreateViewRow",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier, boolean):java.lang.String \t org.apache.flink.table.catalog.ResolvedCatalogBaseTable"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.ShowCreateUtil",
    "source_method": "buildCreateFormattedPrefix",
    "target_class": "boolean, org.apache.flink.table.catalog.ObjectIdentifier):java.lang.String \t org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.ShowCreateUtil",
    "source_method": "extractFormattedPrimaryKey",
    "target_class": "java.lang.String):java.util.Optional<java.lang.String> \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.ShowCreateUtil",
    "source_method": "getColumnString",
    "target_class": "org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.ShowCreateUtil",
    "source_method": "extractFormattedWatermarkSpecs",
    "target_class": "java.lang.String):java.util.Optional<java.lang.String> \t org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.ShowCreateUtil",
    "source_method": "extractFormattedComment",
    "target_class": "org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.ShowCreateUtil",
    "source_method": "extractFormattedPartitionedInfo",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.ShowCreateUtil",
    "source_method": "extractFormattedOptions",
    "target_class": "java.lang.String):java.util.Optional<java.lang.String> \t org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.internal.ShowCreateUtil",
    "source_method": "extractFormattedColumnNames",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "$",
    "target_class": "org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "lit",
    "target_class": "org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "lit",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "range",
    "target_class": "java.lang.String):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "range",
    "target_class": "int):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "timestampDiff",
    "target_class": "java.lang.Object, java.lang.Object):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "mapFromArrays",
    "target_class": "java.lang.Object):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "rowInterval",
    "target_class": "org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "rand",
    "target_class": "org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "randInteger",
    "target_class": "org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "randInteger",
    "target_class": "java.lang.Object):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "nullOf",
    "target_class": "org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "call",
    "target_class": "java.lang.Object[]):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "call",
    "target_class": "extends org.apache.flink.table.functions.UserDefinedFunction>, java.lang.Object[]):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.functions.UserDefinedFunctionHelper"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "apiCall",
    "target_class": "java.lang.Object[]):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "apiCallAtLeastOneArgument",
    "target_class": "java.lang.Object, java.lang.Object[]):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.Expressions",
    "source_method": "apiCallAtLeastTwoArgument",
    "target_class": "java.lang.Object, java.lang.Object, java.lang.Object[]):org.apache.flink.table.api.ApiExpression \t org.apache.flink.table.expressions.ApiExpressionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.EnvironmentSettings",
    "source_method": "getBuiltInCatalogName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.EnvironmentSettings",
    "source_method": "getBuiltInDatabaseName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.EnvironmentSettings",
    "source_method": "isStreamingMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.EnvironmentSettings.Builder",
    "source_method": "inBatchMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.EnvironmentSettings.Builder",
    "source_method": "inStreamingMode",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.EnvironmentSettings.Builder",
    "source_method": "withBuiltInCatalogName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.EnvironmentSettings.Builder",
    "source_method": "withBuiltInDatabaseName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.api.EnvironmentSettings.Builder",
    "source_method": "withConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogTableImpl",
    "source_method": "removeRedundant",
    "target_class": "org.apache.flink.table.api.TableSchema, java.util.List<java.lang.String>):java.util.Map<java.lang.String,java.lang.String> \t org.apache.flink.table.descriptors.DescriptorProperties"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DataTypeFactoryImpl",
    "source_method": "createSerializerExecutionConfig",
    "target_class": "org.apache.flink.configuration.ReadableConfig, org.apache.flink.api.common.ExecutionConfig):java.util.function.Supplier<org.apache.flink.api.common.ExecutionConfig> \t org.apache.flink.api.common.ExecutionConfig"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "createCatalog",
    "target_class": "org.apache.flink.table.catalog.CatalogDescriptor):void \t org.apache.flink.table.catalog.CatalogStoreHolder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "initCatalog",
    "target_class": "org.apache.flink.table.catalog.CatalogDescriptor):org.apache.flink.table.catalog.Catalog \t org.apache.flink.table.catalog.CatalogStoreHolder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "registerCatalog",
    "target_class": "org.apache.flink.table.catalog.Catalog):void \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "unregisterCatalog",
    "target_class": "boolean):void \t org.apache.flink.table.catalog.CatalogStoreHolder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "getCatalog",
    "target_class": "org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "getPermanentTable",
    "target_class": "java.lang.Long):java.util.Optional<org.apache.flink.table.catalog.ContextResolvedTable> \t org.apache.flink.table.catalog.CatalogBaseTable"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "listCatalogs",
    "target_class": "org.apache.flink.table.catalog.CatalogStoreHolder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "listTables",
    "target_class": "java.lang.String):java.util.Set<java.lang.String> \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "listTemporaryTablesInternal",
    "target_class": "java.lang.String):java.util.stream.Stream<java.util.Map.Entry<org.apache.flink.table.catalog.ObjectIdentifier,org.apache.flink.table.catalog.CatalogBaseTable>> \t org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "listViews",
    "target_class": "java.lang.String):java.util.Set<java.lang.String> \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "temporaryDatabaseExists",
    "target_class": "java.lang.String):boolean \t org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "permanentDatabaseExists",
    "target_class": "java.lang.String):boolean \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "createTable",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier, boolean):void \t org.apache.flink.table.catalog.listener.CatalogModificationListener"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "createTemporaryTable",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier, boolean):void \t org.apache.flink.table.catalog.ManagedTableListener"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "resolveCompactManagedTableOptions",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier, org.apache.flink.table.catalog.CatalogPartitionSpec):java.util.Map<java.lang.String,java.lang.String> \t org.apache.flink.table.catalog.ManagedTableListener"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "dropTemporaryTableInternal",
    "target_class": "java.util.function.Predicate<org.apache.flink.table.catalog.CatalogBaseTable>, boolean, boolean):void \t org.apache.flink.table.catalog.ManagedTableListener"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "getTemporaryOperationListener",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "alterTable",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier, boolean):void \t org.apache.flink.table.catalog.listener.CatalogModificationListener"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "alterTable",
    "target_class": "java.util.List<org.apache.flink.table.catalog.TableChange>, org.apache.flink.table.catalog.ObjectIdentifier, boolean):void \t org.apache.flink.table.catalog.listener.CatalogModificationListener"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "dropTableInternal",
    "target_class": "boolean, boolean):void \t org.apache.flink.table.catalog.ManagedTableListener"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "execute",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier, boolean, java.lang.String):void \t org.apache.flink.table.catalog.CatalogManager.ModifyCatalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "resolveCatalogTable",
    "target_class": "org.apache.flink.table.catalog.CatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "createDatabase",
    "target_class": "java.lang.String, org.apache.flink.table.catalog.CatalogDatabase, boolean):void \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "dropDatabase",
    "target_class": "java.lang.String, boolean, boolean):void \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogManager",
    "source_method": "alterDatabase",
    "target_class": "java.lang.String, org.apache.flink.table.catalog.CatalogDatabase, boolean):void \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.GenericInMemoryCatalog",
    "source_method": "isDatabaseEmpty",
    "target_class": "org.apache.flink.table.catalog.ObjectPath"
  },
  {
    "source_class": "org.apache.flink.table.catalog.GenericInMemoryCatalog",
    "source_method": "normalize",
    "target_class": "org.apache.flink.table.catalog.ObjectPath"
  },
  {
    "source_class": "org.apache.flink.table.catalog.GenericInMemoryCatalog",
    "source_method": "isFullPartitionSpec",
    "target_class": "org.apache.flink.table.catalog.CatalogPartitionSpec):boolean \t org.apache.flink.table.catalog.CatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DefaultSchemaResolver",
    "source_method": "resolvePhysicalColumn",
    "target_class": "org.apache.flink.table.catalog.DataTypeFactory"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DefaultSchemaResolver",
    "source_method": "resolveMetadataColumn",
    "target_class": "org.apache.flink.table.catalog.DataTypeFactory"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DefaultSchemaResolver",
    "source_method": "resolveComputedColumn",
    "target_class": "java.util.List<org.apache.flink.table.catalog.Column>):org.apache.flink.table.catalog.Column.ComputedColumn \t org.apache.flink.table.api.Schema.UnresolvedComputedColumn"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DefaultSchemaResolver",
    "source_method": "validateDuplicateMetadataKeys",
    "target_class": "org.apache.flink.table.api.Schema.UnresolvedMetadataColumn"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DefaultSchemaResolver",
    "source_method": "validateTimeColumn",
    "target_class": "java.util.List<org.apache.flink.table.catalog.Column>):org.apache.flink.table.catalog.Column \t org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DefaultSchemaResolver",
    "source_method": "adjustRowtimeAttribute",
    "target_class": "org.apache.flink.table.catalog.Column):org.apache.flink.table.catalog.Column \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DefaultSchemaResolver",
    "source_method": "resolvePrimaryKey",
    "target_class": "java.util.List<org.apache.flink.table.catalog.Column>):org.apache.flink.table.catalog.UniqueConstraint \t org.apache.flink.table.catalog.UniqueConstraint"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DefaultSchemaResolver",
    "source_method": "validatePrimaryKey",
    "target_class": "java.util.List<org.apache.flink.table.catalog.Column>):void \t org.apache.flink.table.catalog.UniqueConstraint"
  },
  {
    "source_class": "org.apache.flink.table.catalog.DefaultSchemaResolver",
    "source_method": "resolveExpression",
    "target_class": "org.apache.flink.table.expressions.Expression, org.apache.flink.table.types.DataType):org.apache.flink.table.expressions.ResolvedExpression \t org.apache.flink.table.expressions.resolver.ExpressionResolver.ExpressionResolverBuilder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ContextResolvedTable",
    "source_method": "permanent",
    "target_class": "org.apache.flink.table.catalog.Catalog, org.apache.flink.table.catalog.ResolvedCatalogBaseTable<?>):org.apache.flink.table.catalog.ContextResolvedTable \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ContextResolvedTable",
    "source_method": "getTable",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogBaseTable"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ContextResolvedTable",
    "source_method": "copy",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogBaseTable"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ContextResolvedTable",
    "source_method": "generateAnonymousStringIdentifier",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogBaseTable<?>):java.lang.String \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ConnectorCatalogTable",
    "source_method": "sink",
    "target_class": "boolean):org.apache.flink.table.catalog.ConnectorCatalogTable<?,T2> \t org.apache.flink.table.sinks.TableSink"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ConnectorCatalogTable",
    "source_method": "calculateSourceSchema",
    "target_class": "boolean):org.apache.flink.table.api.TableSchema \t org.apache.flink.table.api.TableSchema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ConnectorCatalogTable",
    "source_method": "updateRowtimeIndicators",
    "target_class": "java.lang.String[], org.apache.flink.table.types.DataType[]):void \t org.apache.flink.table.types.logical.TimestampKind"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ConnectorCatalogTable",
    "source_method": "updateProctimeIndicator",
    "target_class": "java.lang.String[], org.apache.flink.table.types.DataType[]):void \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ManagedTableListener",
    "source_method": "isManagedTable",
    "target_class": "org.apache.flink.table.catalog.CatalogBaseTable):boolean \t org.apache.flink.table.factories.TableFactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "unregisterFunctionJarResources",
    "target_class": "org.apache.flink.table.catalog.CatalogFunction"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "registerTemporaryCatalogFunction",
    "target_class": "org.apache.flink.table.catalog.CatalogFunction, boolean):void \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "dropTemporaryCatalogFunction",
    "target_class": "boolean):boolean \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "registerCatalogFunction",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.functions.UserDefinedFunction>, boolean):void \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "registerCatalogFunction",
    "target_class": "java.lang.String, java.util.List<org.apache.flink.table.resource.ResourceUri>, boolean):void \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "dropCatalogFunction",
    "target_class": "boolean):boolean \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "getUserDefinedFunctions",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "getUserDefinedFunctions",
    "target_class": "java.lang.String):java.util.Set<org.apache.flink.table.functions.FunctionIdentifier> \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "getCatalogFunctions",
    "target_class": "java.lang.String, java.lang.String):java.util.Collection<org.apache.flink.table.functions.FunctionIdentifier> \t org.apache.flink.table.functions.FunctionIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "getFunctions",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "getFunctions",
    "target_class": "java.lang.String):java.lang.String[] \t org.apache.flink.table.module.ModuleManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "lookupProcedure",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "lookupFunction",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "registerTempCatalogScalarFunction",
    "target_class": "org.apache.flink.table.functions.ScalarFunction):void \t org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "dropTempCatalogFunction",
    "target_class": "boolean):org.apache.flink.table.catalog.CatalogFunction \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "resolvePreciseFunctionReference",
    "target_class": "org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "resolvePreciseFunctionReference",
    "target_class": "org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "resolveAmbiguousFunctionReference",
    "target_class": "org.apache.flink.table.catalog.CatalogFunction"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "validateAndPrepareFunction",
    "target_class": "org.apache.flink.table.catalog.CatalogFunction):void \t org.apache.flink.table.resource.ResourceManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "getFunctionDefinition",
    "target_class": "org.apache.flink.table.catalog.CatalogFunction):org.apache.flink.table.functions.FunctionDefinition \t org.apache.flink.table.resource.ResourceManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "registerFunctionJarResources",
    "target_class": "java.util.List<org.apache.flink.table.resource.ResourceUri>):void \t org.apache.flink.table.resource.ResourceManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.FunctionCatalog",
    "source_method": "registerCatalogFunction",
    "target_class": "org.apache.flink.table.catalog.CatalogFunction, boolean):void \t org.apache.flink.table.catalog.CatalogManager"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "createProducingResult",
    "target_class": "org.apache.flink.table.api.Schema):org.apache.flink.table.catalog.SchemaTranslator.ProducingResult \t org.apache.flink.table.api.Schema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "createProducingResult",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema, org.apache.flink.table.types.AbstractDataType<?>):org.apache.flink.table.catalog.SchemaTranslator.ProducingResult \t org.apache.flink.table.catalog.DataTypeFactory"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "patchDataTypeWithoutMetadataRowtime",
    "target_class": "java.util.List<org.apache.flink.table.api.Schema.UnresolvedColumn>):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "extractProjections",
    "target_class": "org.apache.flink.table.api.Schema):java.util.List<java.lang.String> \t org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "createPatchedSchema",
    "target_class": "org.apache.flink.table.types.DataType, org.apache.flink.table.api.Schema):org.apache.flink.table.api.Schema \t org.apache.flink.table.api.Schema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "patchDataTypeFromColumn",
    "target_class": "org.apache.flink.table.types.DataType, org.apache.flink.table.api.Schema.UnresolvedPhysicalColumn):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "patchRowDataType",
    "target_class": "java.lang.String, org.apache.flink.table.types.DataType):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "patchStructuredDataType",
    "target_class": "java.lang.String, org.apache.flink.table.types.DataType):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "patchFields",
    "target_class": "java.util.List<org.apache.flink.table.types.DataType>, java.lang.String, org.apache.flink.table.types.DataType):org.apache.flink.table.api.DataTypes.Field[] \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.catalog.SchemaTranslator",
    "source_method": "addPhysicalSourceDataTypeFields",
    "target_class": "org.apache.flink.table.types.DataType, org.apache.flink.table.api.Schema.UnresolvedPrimaryKey):void \t org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.catalog.listener.CatalogContext",
    "source_method": "createContext",
    "target_class": "org.apache.flink.table.catalog.Catalog):org.apache.flink.table.catalog.listener.CatalogContext \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ContextResolvedFunction",
    "source_method": "permanent",
    "target_class": "org.apache.flink.table.functions.FunctionDefinition):org.apache.flink.table.catalog.ContextResolvedFunction \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ContextResolvedFunction",
    "source_method": "temporary",
    "target_class": "org.apache.flink.table.functions.FunctionDefinition):org.apache.flink.table.catalog.ContextResolvedFunction \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ContextResolvedFunction",
    "source_method": "fromCallExpression",
    "target_class": "org.apache.flink.table.expressions.CallExpression"
  },
  {
    "source_class": "org.apache.flink.table.resource.ResourceManager",
    "source_method": "createResourceManager",
    "target_class": "java.lang.ClassLoader, org.apache.flink.configuration.ReadableConfig):org.apache.flink.table.resource.ResourceManager \t org.apache.flink.util.FlinkUserCodeClassLoaders"
  },
  {
    "source_class": "org.apache.flink.table.resource.ResourceManager",
    "source_method": "unregisterFunctionResources",
    "target_class": "org.apache.flink.table.resource.ResourceManager.ResourceCounter"
  },
  {
    "source_class": "org.apache.flink.table.resource.ResourceManager",
    "source_method": "createUserClassLoader",
    "target_class": "org.apache.flink.util.MutableURLClassLoader"
  },
  {
    "source_class": "org.apache.flink.table.resource.ResourceManager",
    "source_method": "addJarConfiguration",
    "target_class": "org.apache.flink.table.api.TableConfig"
  },
  {
    "source_class": "org.apache.flink.table.resource.ResourceManager",
    "source_method": "copy",
    "target_class": "org.apache.flink.util.MutableURLClassLoader"
  },
  {
    "source_class": "org.apache.flink.table.resource.ResourceManager",
    "source_method": "exists",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.table.resource.ResourceManager",
    "source_method": "getURLFromPath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.table.resource.ResourceManager",
    "source_method": "isRemotePath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.table.resource.ResourceManager",
    "source_method": "checkResources",
    "target_class": "org.apache.flink.table.resource.ResourceType):void \t org.apache.flink.table.resource.ResourceUri"
  },
  {
    "source_class": "org.apache.flink.connector.datagen.table.DataGenTableSourceFactory",
    "source_method": "validateFieldOptions",
    "target_class": "org.apache.flink.table.types.DataType, org.apache.flink.configuration.ReadableConfig):void \t org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.connector.datagen.table.DataGenTableSource",
    "source_method": "createSource",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.connector.datagen.table.RandomGeneratorVisitor",
    "source_method": "getLengthOption",
    "target_class": "org.apache.flink.configuration.ConfigOptions.OptionBuilder"
  },
  {
    "source_class": "org.apache.flink.connector.datagen.table.RandomGeneratorVisitor",
    "source_method": "getRandomPastTimestampGenerator",
    "target_class": "org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.sources.CsvTableSource.Builder",
    "source_method": "field",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.sources.CsvTableSource.Builder \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.sources.CsvTableSource.CsvLookupFunction",
    "source_method": "getKey",
    "target_class": "java.util.List<java.lang.Integer>):java.lang.Object \t org.apache.flink.types.Row"
  },
  {
    "source_class": "org.apache.flink.table.sources.CsvTableSourceFactoryBase",
    "source_method": "createTableSource",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):org.apache.flink.table.sources.CsvTableSource \t org.apache.flink.table.api.TableSchema"
  },
  {
    "source_class": "org.apache.flink.table.sources.CsvTableSourceFactoryBase",
    "source_method": "getFieldLogicalTypes",
    "target_class": "org.apache.flink.table.api.TableSchema"
  },
  {
    "source_class": "org.apache.flink.table.api.bridge.java.internal.StreamTableEnvironmentImpl",
    "source_method": "create",
    "target_class": "org.apache.flink.table.api.EnvironmentSettings):org.apache.flink.table.api.bridge.java.StreamTableEnvironment \t org.apache.flink.table.factories.TableFactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.api.bridge.java.StreamTableEnvironment",
    "source_method": "create",
    "target_class": "org.apache.flink.table.api.EnvironmentSettings"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.SchemaValidator",
    "source_method": "deriveProctimeAttribute",
    "target_class": "org.apache.flink.table.descriptors.DescriptorProperties"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.SchemaValidator",
    "source_method": "deriveRowtimeAttributes",
    "target_class": "org.apache.flink.table.descriptors.RowtimeValidator"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.SchemaValidator",
    "source_method": "deriveTableSinkSchema",
    "target_class": "org.apache.flink.table.api.TableSchema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.SchemaValidator",
    "source_method": "deriveFieldMapping",
    "target_class": "java.util.Optional<org.apache.flink.api.common.typeinfo.TypeInformation<?>>):java.util.Map<java.lang.String,java.lang.String> \t org.apache.flink.table.api.TableSchema"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.RowtimeValidator",
    "source_method": "getRowtimeComponents",
    "target_class": "java.lang.String):java.util.Optional<org.apache.flink.api.java.tuple.Tuple2<org.apache.flink.table.sources.tsextractors.TimestampExtractor,org.apache.flink.table.sources.wmstrategies.WatermarkStrategy>> \t org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.sinks.CsvTableSinkFactoryBase",
    "source_method": "createTableSink",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>):org.apache.flink.table.sinks.CsvTableSink \t org.apache.flink.table.descriptors.DescriptorProperties"
  },
  {
    "source_class": "org.apache.flink.table.plan.stats.TableStats",
    "source_method": "mergeColumnStates",
    "target_class": "java.util.Set<java.lang.String>):java.util.Map<java.lang.String,org.apache.flink.table.plan.stats.ColumnStats> \t org.apache.flink.table.plan.stats.ColumnStats"
  },
  {
    "source_class": "org.apache.flink.table.functions.FunctionIdentifier",
    "source_method": "normalizeObjectIdentifier",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.functions.FunctionIdentifier",
    "source_method": "getFunctionName",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.functions.FunctionIdentifier",
    "source_method": "toList",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.functions.FunctionIdentifier",
    "source_method": "asSummaryString",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.functions.LegacyUserDefinedFunctionInference",
    "source_method": "getInputTypeStrategy",
    "target_class": "org.apache.flink.table.types.inference.CallContext"
  },
  {
    "source_class": "org.apache.flink.table.functions.LegacyUserDefinedFunctionInference",
    "source_method": "getInputTypeStrategy",
    "target_class": "org.apache.flink.table.types.inference.CallContext"
  },
  {
    "source_class": "org.apache.flink.table.functions.LegacyUserDefinedFunctionInference",
    "source_method": "getAccumulatorType",
    "target_class": "org.apache.flink.table.functions.ImperativeAggregateFunction"
  },
  {
    "source_class": "org.apache.flink.table.functions.LegacyUserDefinedFunctionInference",
    "source_method": "logicalTypesToExternalClasses",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.functions.LegacyUserDefinedFunctionInference",
    "source_method": "logicalTypesToInternalClasses",
    "target_class": "org.apache.flink.table.types.logical.utils.LogicalTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.functions.LegacyUserDefinedFunctionInference",
    "source_method": "parameterDataTypeEquals",
    "target_class": "org.apache.flink.table.types.DataType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.functions.LegacyUserDefinedFunctionInference",
    "source_method": "getSignatures",
    "target_class": "java.lang.String):java.util.List<org.apache.flink.table.types.inference.Signature> \t org.apache.flink.table.types.inference.Signature"
  },
  {
    "source_class": "org.apache.flink.table.functions.CallSyntaxUtils",
    "source_method": "getSymbolLiteral",
    "target_class": "java.lang.Class<T>):T \t org.apache.flink.table.expressions.ValueLiteralExpression"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "getReturnTypeOfAggregateFunction",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<T>):org.apache.flink.api.common.typeinfo.TypeInformation<T> \t org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "getAccumulatorTypeOfAggregateFunction",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<ACC>):org.apache.flink.api.common.typeinfo.TypeInformation<ACC> \t org.apache.flink.api.java.typeutils.TypeExtractor"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "getReturnTypeOfTableFunction",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<T>):org.apache.flink.api.common.typeinfo.TypeInformation<T> \t org.apache.flink.table.functions.TableFunction"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "instantiateFunction",
    "target_class": "org.apache.flink.configuration.ReadableConfig, java.lang.String, org.apache.flink.table.catalog.CatalogFunction):org.apache.flink.table.functions.UserDefinedFunction \t org.apache.flink.table.functions.python.utils.PythonFunctionUtils"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "isClassNameSerializable",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "generateInlineFunctionName",
    "target_class": "org.apache.flink.table.functions.UserDefinedFunction"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "validateClassForRuntime",
    "target_class": "extends org.apache.flink.table.functions.UserDefinedFunction>, java.lang.String, java.lang.Class<?>[], java.lang.Class<?>, java.lang.String):void \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "createSpecializedFunction",
    "target_class": "org.apache.flink.table.functions.FunctionDefinition, org.apache.flink.table.types.inference.CallContext, java.lang.ClassLoader, org.apache.flink.configuration.ReadableConfig, org.apache.flink.table.functions.SpecializedFunction.ExpressionEvaluatorFactory):org.apache.flink.table.functions.UserDefinedFunction \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "validateImplementationMethod",
    "target_class": "extends org.apache.flink.table.functions.UserDefinedFunction>, boolean, boolean, java.lang.String[]):void \t org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "validateAsyncImplementationMethod",
    "target_class": "extends org.apache.flink.table.functions.UserDefinedFunction>, java.lang.String[]):void \t org.apache.flink.api.java.typeutils.TypeExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "validateInstantiation",
    "target_class": "boolean):void \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.table.functions.UserDefinedFunctionHelper",
    "source_method": "cleanFunction",
    "target_class": "org.apache.flink.table.functions.UserDefinedFunction):void \t org.apache.flink.api.java.ClosureCleaner"
  },
  {
    "source_class": "org.apache.flink.table.functions.FunctionContext",
    "source_method": "getCachedFile",
    "target_class": "org.apache.flink.api.common.functions.RuntimeContext"
  },
  {
    "source_class": "org.apache.flink.table.functions.FunctionContext",
    "source_method": "getJobParameter",
    "target_class": "java.lang.String):java.lang.String \t org.apache.flink.api.common.functions.RuntimeContext"
  },
  {
    "source_class": "org.apache.flink.table.functions.FunctionContext",
    "source_method": "getUserCodeClassLoader",
    "target_class": "org.apache.flink.api.common.functions.RuntimeContext"
  },
  {
    "source_class": "org.apache.flink.table.functions.BuiltInFunctionDefinition",
    "source_method": "validateFunction",
    "target_class": "java.lang.Integer, boolean):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.functions.BuiltInFunctionDefinition.Builder",
    "source_method": "namedArguments",
    "target_class": "org.apache.flink.table.types.inference.TypeInference.Builder"
  },
  {
    "source_class": "org.apache.flink.table.functions.BuiltInFunctionDefinition.Builder",
    "source_method": "typedArguments",
    "target_class": "org.apache.flink.table.types.inference.TypeInference.Builder"
  },
  {
    "source_class": "org.apache.flink.table.functions.BuiltInFunctionDefinition.Builder",
    "source_method": "inputTypeStrategy",
    "target_class": "org.apache.flink.table.types.inference.TypeInference.Builder"
  },
  {
    "source_class": "org.apache.flink.table.functions.BuiltInFunctionDefinition.Builder",
    "source_method": "outputTypeStrategy",
    "target_class": "org.apache.flink.table.types.inference.TypeInference.Builder"
  },
  {
    "source_class": "org.apache.flink.table.functions.BuiltInFunctionDefinition.Builder",
    "source_method": "build",
    "target_class": "org.apache.flink.table.types.inference.TypeInference.Builder"
  },
  {
    "source_class": "org.apache.flink.table.functions.BuiltInFunctionDefinitions",
    "source_method": "getDefinitions",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.connector.source.SourceProvider",
    "source_method": "of",
    "target_class": "java.lang.Integer):org.apache.flink.table.connector.source.SourceProvider \t org.apache.flink.api.connector.source.Source"
  },
  {
    "source_class": "org.apache.flink.table.connector.source.DynamicFilteringData",
    "source_method": "matchRow",
    "target_class": "org.apache.flink.table.data.RowData):boolean \t org.apache.flink.table.types.logical.RowType"
  },
  {
    "source_class": "org.apache.flink.table.connector.source.DynamicFilteringData",
    "source_method": "hash",
    "target_class": "org.apache.flink.table.data.RowData.FieldGetter"
  },
  {
    "source_class": "org.apache.flink.table.connector.source.lookup.cache.DefaultLookupCache",
    "source_method": "fromConfig",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.connector.source.lookup.cache.DefaultLookupCache",
    "source_method": "withClock",
    "target_class": "org.apache.flink.util.clock.Clock"
  },
  {
    "source_class": "org.apache.flink.table.connector.source.lookup.cache.trigger.TimedCacheReloadTrigger",
    "source_method": "fromConfig",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.connector.source.lookup.cache.trigger.PeriodicCacheReloadTrigger",
    "source_method": "fromConfig",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.connector.Projection",
    "source_method": "fromFieldNames",
    "target_class": "java.util.List<java.lang.String>):org.apache.flink.table.connector.Projection \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.connector.Projection",
    "source_method": "all",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.sources.TableSourceValidation",
    "source_method": "validateRowtimeAttributesExistInSchema",
    "target_class": "org.apache.flink.table.api.TableSchema):void \t org.apache.flink.table.sources.RowtimeAttributeDescriptor"
  },
  {
    "source_class": "org.apache.flink.table.sources.TableSourceValidation",
    "source_method": "validateProctimeAttributesExistInSchema",
    "target_class": "org.apache.flink.table.api.TableSchema):void \t org.apache.flink.table.api.TableSchema"
  },
  {
    "source_class": "org.apache.flink.table.sources.TableSourceValidation",
    "source_method": "validateNotOverlapping",
    "target_class": "java.util.Optional<java.lang.String>):void \t org.apache.flink.table.sources.RowtimeAttributeDescriptor"
  },
  {
    "source_class": "org.apache.flink.table.sources.TableSourceValidation",
    "source_method": "validateLogicalToPhysicalMapping",
    "target_class": "org.apache.flink.table.api.TableSchema):void \t org.apache.flink.table.utils.TypeMappingUtils"
  },
  {
    "source_class": "org.apache.flink.table.sources.TableSourceValidation",
    "source_method": "validateTimestampExtractorArguments",
    "target_class": "org.apache.flink.table.sources.TableSource<?>):void \t org.apache.flink.table.sources.tsextractors.TimestampExtractorUtils"
  },
  {
    "source_class": "org.apache.flink.table.sources.TableSourceValidation",
    "source_method": "validateNoGeneratedColumns",
    "target_class": "org.apache.flink.table.utils.TableSchemaUtils"
  },
  {
    "source_class": "org.apache.flink.table.sources.tsextractors.TimestampExtractorUtils",
    "source_method": "mapToResolvedField",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema, java.lang.String):org.apache.flink.table.expressions.ResolvedFieldReference \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.RawType",
    "source_method": "restore",
    "target_class": "java.lang.String, java.lang.String):org.apache.flink.table.types.logical.RawType<?> \t org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.StructuredType.StructuredAttribute",
    "source_method": "asSummaryString",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.RowType.RowField",
    "source_method": "asSummaryString",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.RowType.RowField",
    "source_method": "asSerializableString",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "findCommonType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "findRoundDecimalType",
    "target_class": "int, int):org.apache.flink.table.types.logical.DecimalType \t org.apache.flink.table.types.logical.DecimalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "findAvgAggType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "findSumAggType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "adjustPrecisionScale",
    "target_class": "int):org.apache.flink.table.types.logical.DecimalType \t org.apache.flink.table.types.logical.DecimalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "findCommonCastableType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "areSimilarTypes",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "findExactlySameType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "findCommonTypePattern",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "findCommonRowType",
    "target_class": "org.apache.flink.table.types.logical.RowType.RowField"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "findCommonChildrenTypes",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "createCommonExactNumericType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "createCommonApproximateNumericType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "createCommonTimestampType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "createCommonDayTimeIntervalType",
    "target_class": "org.apache.flink.table.types.logical.DayTimeIntervalType):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.DayTimeIntervalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "createCommonYearMonthIntervalType",
    "target_class": "org.apache.flink.table.types.logical.YearMonthIntervalType):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.YearMonthIntervalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "createStringType",
    "target_class": "int):org.apache.flink.table.types.logical.LogicalType \t org.apache.flink.table.types.logical.BinaryType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "combinePrecision",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):int \t org.apache.flink.table.types.logical.utils.LogicalTypeChecks"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeMerging",
    "source_method": "combineLength",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):int \t org.apache.flink.table.types.logical.utils.LogicalTypeChecks"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "hasNested",
    "target_class": "java.util.function.Predicate<org.apache.flink.table.types.logical.LogicalType>):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "isRowtimeAttribute",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "isProctimeAttribute",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "canBeTimeAttributeType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "isCompositeType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "getLength",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "getPrecision",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "getScale",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "getYearPrecision",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "getDayPrecision",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "getFractionalPrecision",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "isSingleFieldInterval",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "getFieldCount",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "getFieldNames",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "getFieldTypes",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "hasWellDefinedString",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "areComparable",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.types.logical.StructuredType.StructuredComparison):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "areComparableWithNormalizedNullability",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.types.logical.StructuredType.StructuredComparison):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "areRawTypesComparable",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "areDistinctTypesComparable",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.types.logical.StructuredType.StructuredComparison):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "areStructuredTypesComparable",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.types.logical.StructuredType.StructuredComparison):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "areConstructedTypesComparable",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, org.apache.flink.table.types.logical.StructuredType.StructuredComparison):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeChecks",
    "source_method": "hasRequiredComparison",
    "target_class": "org.apache.flink.table.types.logical.StructuredType.StructuredComparison):java.lang.Boolean \t org.apache.flink.table.types.logical.StructuredType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeDuplicator",
    "source_method": "instantiateStructuredBuilder",
    "target_class": "org.apache.flink.table.types.logical.StructuredType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeDuplicator",
    "source_method": "duplicateStructuredAttributes",
    "target_class": "org.apache.flink.table.types.logical.StructuredType.StructuredAttribute"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeCasts",
    "source_method": "supportsAvoidingCast",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeCasts",
    "source_method": "supportsReinterpretCast",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeCasts",
    "source_method": "supportsCasting",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, boolean):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeCasts",
    "source_method": "supportsStructuredCasting",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, java.util.function.BiFunction<org.apache.flink.table.types.logical.LogicalType,org.apache.flink.table.types.logical.LogicalType,java.lang.Boolean>):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeCasts",
    "source_method": "supportsConstructedCasting",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, boolean):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeCasts",
    "source_method": "allTypes",
    "target_class": "org.apache.flink.table.types.logical.LogicalTypeRoot"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeUtils",
    "source_method": "removeTimeAttributes",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeUtils",
    "source_method": "toInternalConversionClass",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeUtils",
    "source_method": "toRowType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.logical.utils.LogicalTypeUtils",
    "source_method": "renameRowFields",
    "target_class": "java.util.List<java.lang.String>):org.apache.flink.table.types.logical.RowType \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.types.CollectionDataType",
    "source_method": "ensureArrayConversionClass",
    "target_class": "org.apache.flink.table.types.DataType, java.lang.Class<?>):java.lang.Class<?> \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeConversions",
    "source_method": "fromLegacyInfoToDataType",
    "target_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeConversions",
    "source_method": "fromDataTypeToLegacyInfo",
    "target_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeConversions",
    "source_method": "fromClassToDataType",
    "target_class": "org.apache.flink.table.types.utils.ClassDataTypeConverter"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeConversions",
    "source_method": "fromLogicalToDataType",
    "target_class": "org.apache.flink.table.types.utils.LogicalTypeDataTypeConverter"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeConversions",
    "source_method": "fromDataToLogicalType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "addMapping",
    "target_class": "org.apache.flink.table.types.DataType):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "toLegacyTypeInfo",
    "target_class": "org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "createLegacyType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):org.apache.flink.table.types.DataType \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToTimeAttributeType",
    "target_class": "org.apache.flink.table.typeutils.TimeIndicatorTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "canConvertToTimeAttributeTypeInfo",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToTimeAttributeTypeInfo",
    "target_class": "org.apache.flink.table.typeutils.TimeIndicatorTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToRowType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "canConvertToRowTypeInfo",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToRowTypeInfo",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToArrayType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "canConvertToObjectArrayTypeInfo",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToObjectArrayTypeInfo",
    "target_class": "org.apache.flink.api.java.typeutils.ObjectArrayTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToMultisetType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "canConvertToMultisetTypeInfo",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToMapType",
    "target_class": "org.apache.flink.api.java.typeutils.MapTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "canConvertToMapTypeInfo",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToMapTypeInfo",
    "target_class": "org.apache.flink.table.types.KeyValueDataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "canConvertToLegacyTypeInfo",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToLegacyTypeInfo",
    "target_class": "org.apache.flink.table.types.logical.LegacyTypeInformationType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "canConvertToRawTypeInfo",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "convertToRawTypeInfo",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LegacyTypeInfoDataTypeConverter",
    "source_method": "isRowData",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "projectRow",
    "target_class": "int[][]):org.apache.flink.table.types.DataType \t org.apache.flink.table.connector.Projection"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "projectRow",
    "target_class": "int[]):org.apache.flink.table.types.DataType \t org.apache.flink.table.connector.Projection"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "stripRowPrefix",
    "target_class": "java.lang.String):org.apache.flink.table.types.DataType \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "appendRowFields",
    "target_class": "java.util.List<org.apache.flink.table.api.DataTypes.Field>):org.apache.flink.table.types.DataType \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "toInternalDataType",
    "target_class": "org.apache.flink.table.types.utils.TypeConversions"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "toInternalDataType",
    "target_class": "org.apache.flink.table.types.logical.utils.LogicalTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "isInternal",
    "target_class": "boolean):boolean \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "replaceLogicalType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "removeTimeAttribute",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "transform",
    "target_class": "org.apache.flink.table.types.DataType, org.apache.flink.table.types.inference.TypeTransformation[]):org.apache.flink.table.types.DataType \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "expandCompositeTypeToSchema",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "flattenToDataTypes",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "flattenToNames",
    "target_class": "java.util.List<java.lang.String>):java.util.List<java.lang.String> \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "validateInputDataType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "validateOutputDataType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "createProctimeDataType",
    "target_class": "org.apache.flink.table.types.logical.TimestampKind"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils.DataTypeTransformer",
    "source_method": "createStructuredBuilder",
    "target_class": "org.apache.flink.table.types.logical.StructuredType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "expandCompositeType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "expandLegacyCompositeType",
    "target_class": "org.apache.flink.table.types.logical.LegacyTypeInformationType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.DataTypeUtils",
    "source_method": "expandCompositeType",
    "target_class": "org.apache.flink.table.types.DataType[]):org.apache.flink.table.catalog.ResolvedSchema \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LogicalTypeDataTypeConverter",
    "source_method": "toDataType",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.LogicalTypeDataTypeConverter",
    "source_method": "toLogicalType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeInfoDataTypeConverter",
    "source_method": "convertToRowType",
    "target_class": "org.apache.flink.api.java.typeutils.RowTypeInfo):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeInfoDataTypeConverter",
    "source_method": "convertToArrayType",
    "target_class": "java.lang.Class<?>, org.apache.flink.api.common.typeinfo.TypeInformation<?>):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeInfoDataTypeConverter",
    "source_method": "convertToMultisetType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeInfoDataTypeConverter",
    "source_method": "convertToMapType",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>, org.apache.flink.api.common.typeinfo.TypeInformation<?>):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeInfoDataTypeConverter",
    "source_method": "convertToStructuredType",
    "target_class": "org.apache.flink.api.common.typeutils.CompositeType<?>, boolean):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.TypeInfoDataTypeConverter",
    "source_method": "extractStructuredTypeFieldOrder",
    "target_class": "java.util.List<java.lang.reflect.Field>):java.util.List<java.lang.String> \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.ClassDataTypeConverter",
    "source_method": "extractDataType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.ValueDataTypeConverter",
    "source_method": "convertToCharType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.ValueDataTypeConverter",
    "source_method": "convertToBinaryType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.ValueDataTypeConverter",
    "source_method": "convertToDecimalType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.ValueDataTypeConverter",
    "source_method": "convertToYearMonthIntervalType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.ValueDataTypeConverter",
    "source_method": "convertToDayTimeIntervalType",
    "target_class": "int):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.ValueDataTypeConverter",
    "source_method": "extractElementTypeFromValues",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.utils.ValueDataTypeConverter",
    "source_method": "extractElementTypeFromClass",
    "target_class": "org.apache.flink.table.types.utils.ClassDataTypeConverter"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "correctVarArgMethod",
    "target_class": "org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "putExplicitMappings",
    "target_class": "java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate>, java.util.Set<org.apache.flink.table.types.extraction.FunctionSignatureTemplate>, java.util.function.Function<org.apache.flink.table.types.extraction.FunctionTemplate,org.apache.flink.table.types.extraction.FunctionResultTemplate>):void \t org.apache.flink.table.types.extraction.FunctionTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "putUniqueResultMappings",
    "target_class": "org.apache.flink.table.types.extraction.FunctionResultTemplate, java.util.Set<org.apache.flink.table.types.extraction.FunctionSignatureTemplate>, java.lang.reflect.Method):void \t org.apache.flink.table.types.extraction.BaseMappingExtractor.SignatureExtraction"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "putExtractedResultMappings",
    "target_class": "java.util.Set<org.apache.flink.table.types.extraction.FunctionSignatureTemplate>, org.apache.flink.table.types.extraction.BaseMappingExtractor.ResultExtraction, java.lang.reflect.Method):void \t org.apache.flink.table.types.extraction.BaseMappingExtractor.SignatureExtraction"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "putMapping",
    "target_class": "org.apache.flink.table.types.extraction.FunctionSignatureTemplate, org.apache.flink.table.types.extraction.FunctionResultTemplate):void \t org.apache.flink.table.types.extraction.FunctionResultTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "verifyMappingForMethod",
    "target_class": "java.util.Map<org.apache.flink.table.types.extraction.FunctionSignatureTemplate,org.apache.flink.table.types.extraction.FunctionResultTemplate>, org.apache.flink.table.types.extraction.BaseMappingExtractor.MethodVerification):void \t org.apache.flink.table.types.extraction.FunctionSignatureTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "tryExtractInputGroupArgument",
    "target_class": "int):java.util.Optional<org.apache.flink.table.types.extraction.FunctionArgumentTemplate> \t org.apache.flink.table.types.extraction.FunctionArgumentTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "extractDataTypeArgument",
    "target_class": "java.lang.Class<?>, java.lang.reflect.Method, int):org.apache.flink.table.types.extraction.FunctionArgumentTemplate \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "extractArgumentNames",
    "target_class": "int):java.lang.String[] \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor",
    "source_method": "createMethodNotFoundError",
    "target_class": "java.lang.Class<?>[], java.lang.Class<?>):org.apache.flink.table.api.ValidationException \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionResultTemplate",
    "source_method": "toClass",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionTemplate",
    "source_method": "createResultTemplate",
    "target_class": "org.apache.flink.table.annotation.DataTypeHint):org.apache.flink.table.types.extraction.FunctionResultTemplate \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionTemplate",
    "source_method": "createSignatureTemplate",
    "target_class": "org.apache.flink.table.annotation.DataTypeHint[], java.lang.String[], boolean):org.apache.flink.table.types.extraction.FunctionSignatureTemplate \t org.apache.flink.table.types.extraction.FunctionSignatureTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionTemplate",
    "source_method": "createArgumentTemplate",
    "target_class": "org.apache.flink.table.annotation.DataTypeHint):org.apache.flink.table.types.extraction.FunctionArgumentTemplate \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeTemplate",
    "source_method": "hintFlagToBoolean",
    "target_class": "org.apache.flink.table.annotation.HintFlag"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeTemplate",
    "source_method": "extractDataType",
    "target_class": "java.lang.String, java.lang.Class<?>, org.apache.flink.table.types.extraction.DataTypeTemplate):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "extractFromType",
    "target_class": "java.lang.reflect.Type):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "extractFromGeneric",
    "target_class": "java.lang.Class<?>, int, java.lang.reflect.Type):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "extractFromMethodParameter",
    "target_class": "java.lang.Class<?>, java.lang.reflect.Method, int):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "extractFromGenericMethodParameter",
    "target_class": "java.lang.Class<?>, java.lang.reflect.Method, int, int):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "extractFromMethodOutput",
    "target_class": "java.lang.Class<?>, java.lang.reflect.Method, java.lang.reflect.Type):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "extractDataTypeWithClassContext",
    "target_class": "org.apache.flink.table.types.extraction.DataTypeTemplate, java.lang.reflect.Type, java.lang.reflect.Type, java.lang.String):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "extractDataTypeOrRaw",
    "target_class": "java.util.List<java.lang.reflect.Type>, java.lang.reflect.Type):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "extractEnforcedRawType",
    "target_class": "java.lang.reflect.Type):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "extractPredefinedType",
    "target_class": "java.lang.reflect.Type):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "mergeFieldTemplate",
    "target_class": "java.lang.reflect.Field, org.apache.flink.table.types.extraction.DataTypeTemplate):org.apache.flink.table.types.extraction.DataTypeTemplate \t org.apache.flink.table.types.extraction.DataTypeTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "closestBridging",
    "target_class": "java.lang.Class<?>):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.DataTypeExtractor",
    "source_method": "handleDataViewHints",
    "target_class": "java.lang.Class<?>):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.ExtractionUtils",
    "source_method": "extractExecutableNames",
    "target_class": "org.apache.flink.table.types.extraction.ExtractionUtils.ParameterExtractor"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "extractGlobalFunctionTemplates",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.functions.UserDefinedFunction>):java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate> \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "extractProcedureGlobalFunctionTemplates",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.procedures.Procedure>):java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate> \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "extractLocalFunctionTemplates",
    "target_class": "java.lang.reflect.Method):java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate> \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "extractProcedureLocalFunctionTemplates",
    "target_class": "java.lang.reflect.Method):java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate> \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "asFunctionTemplates",
    "target_class": "java.util.Set<org.apache.flink.table.annotation.FunctionHint>):java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate> \t org.apache.flink.table.types.extraction.FunctionTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "asFunctionTemplatesForProcedure",
    "target_class": "java.util.Set<org.apache.flink.table.annotation.ProcedureHint>):java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate> \t org.apache.flink.table.types.extraction.FunctionTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "findResultOnlyTemplates",
    "target_class": "java.util.function.Function<org.apache.flink.table.types.extraction.FunctionTemplate,org.apache.flink.table.types.extraction.FunctionResultTemplate>):java.util.Set<org.apache.flink.table.types.extraction.FunctionResultTemplate> \t org.apache.flink.table.types.extraction.FunctionTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "findResultOnlyTemplate",
    "target_class": "java.util.Set<org.apache.flink.table.types.extraction.FunctionResultTemplate>, java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate>, java.util.function.Function<org.apache.flink.table.types.extraction.FunctionTemplate,org.apache.flink.table.types.extraction.FunctionResultTemplate>, java.lang.String):org.apache.flink.table.types.extraction.FunctionResultTemplate \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "findResultMappingTemplates",
    "target_class": "java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate>, java.util.function.Function<org.apache.flink.table.types.extraction.FunctionTemplate,org.apache.flink.table.types.extraction.FunctionResultTemplate>):java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate> \t org.apache.flink.table.types.extraction.FunctionTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TemplateUtils",
    "source_method": "findInputOnlyTemplates",
    "target_class": "java.util.Set<org.apache.flink.table.types.extraction.FunctionTemplate>, java.util.function.Function<org.apache.flink.table.types.extraction.FunctionTemplate,org.apache.flink.table.types.extraction.FunctionResultTemplate>):java.util.Set<org.apache.flink.table.types.extraction.FunctionSignatureTemplate> \t org.apache.flink.table.types.extraction.FunctionTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionSignatureTemplate",
    "source_method": "of",
    "target_class": "boolean, java.lang.String[]):org.apache.flink.table.types.extraction.FunctionSignatureTemplate \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "forScalarFunction",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.functions.ScalarFunction>):org.apache.flink.table.types.inference.TypeInference \t org.apache.flink.table.types.extraction.FunctionMappingExtractor"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "forAsyncScalarFunction",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.functions.AsyncScalarFunction>):org.apache.flink.table.types.inference.TypeInference \t org.apache.flink.table.types.extraction.FunctionMappingExtractor"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "forAggregateFunction",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.functions.AggregateFunction<?,?>>):org.apache.flink.table.types.inference.TypeInference \t org.apache.flink.table.types.extraction.FunctionMappingExtractor"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "forTableFunction",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.functions.TableFunction<?>>):org.apache.flink.table.types.inference.TypeInference \t org.apache.flink.table.types.extraction.FunctionMappingExtractor"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "forTableAggregateFunction",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.functions.TableAggregateFunction<?,?>>):org.apache.flink.table.types.inference.TypeInference \t org.apache.flink.table.types.extraction.FunctionMappingExtractor"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "forAsyncTableFunction",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.functions.AsyncTableFunction<?>>):org.apache.flink.table.types.inference.TypeInference \t org.apache.flink.table.types.extraction.FunctionMappingExtractor"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "forProcedure",
    "target_class": "java.lang.Class<? extends org.apache.flink.table.procedures.Procedure>):org.apache.flink.table.types.inference.TypeInference \t org.apache.flink.table.procedures.ProcedureDefinition"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "extractTypeInference",
    "target_class": "org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "extractTypeInference",
    "target_class": "org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "extractTypeInferenceOrError",
    "target_class": "org.apache.flink.table.types.extraction.FunctionMappingExtractor"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "extractTypeInferenceOrError",
    "target_class": "org.apache.flink.table.types.extraction.BaseMappingExtractor"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "configureNamedArguments",
    "target_class": "java.util.Map<org.apache.flink.table.types.extraction.FunctionSignatureTemplate,org.apache.flink.table.types.extraction.FunctionResultTemplate>):void \t org.apache.flink.table.types.inference.TypeInference.Builder"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "configureTypedArguments",
    "target_class": "java.util.Map<org.apache.flink.table.types.extraction.FunctionSignatureTemplate,org.apache.flink.table.types.extraction.FunctionResultTemplate>):void \t org.apache.flink.table.types.inference.TypeInference.Builder"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "translateResultTypeStrategy",
    "target_class": "org.apache.flink.table.types.extraction.FunctionSignatureTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.TypeInferenceExtractor",
    "source_method": "translateInputTypeStrategy",
    "target_class": "org.apache.flink.table.types.inference.InputTypeStrategies"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionMappingExtractor",
    "source_method": "createReturnTypeResultExtraction",
    "target_class": "org.apache.flink.table.types.extraction.FunctionResultTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionMappingExtractor",
    "source_method": "createGenericResultExtraction",
    "target_class": "extends org.apache.flink.table.functions.UserDefinedFunction>, int, boolean):org.apache.flink.table.types.extraction.BaseMappingExtractor.ResultExtraction \t org.apache.flink.table.types.extraction.FunctionResultTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionMappingExtractor",
    "source_method": "createGenericResultExtractionFromMethod",
    "target_class": "int, boolean):org.apache.flink.table.types.extraction.BaseMappingExtractor.ResultExtraction \t org.apache.flink.table.types.extraction.FunctionResultTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionMappingExtractor",
    "source_method": "extractHints",
    "target_class": "java.lang.reflect.Method):java.util.Optional<org.apache.flink.table.types.extraction.FunctionResultTemplate> \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionMappingExtractor",
    "source_method": "createParameterAndReturnTypeVerification",
    "target_class": "org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionMappingExtractor",
    "source_method": "createParameterWithArgumentVerification",
    "target_class": "org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionMappingExtractor",
    "source_method": "createGenericParameterWithArgumentAndReturnTypeVerification",
    "target_class": "java.lang.Class<?>, int, int):org.apache.flink.table.types.extraction.BaseMappingExtractor.MethodVerification \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionMappingExtractor",
    "source_method": "createParameterVerification",
    "target_class": "org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.ProcedureMappingExtractor",
    "source_method": "createReturnTypeResultExtraction",
    "target_class": "org.apache.flink.table.types.extraction.FunctionResultTemplate"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.ProcedureMappingExtractor",
    "source_method": "createParameterAndReturnTypeVerification",
    "target_class": "org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.types.extraction.FunctionArgumentTemplate",
    "source_method": "toConversionClass",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.ConstantArgumentCount",
    "source_method": "of",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.ConstantArgumentCount",
    "source_method": "between",
    "target_class": "int):org.apache.flink.table.types.inference.ConstantArgumentCount \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.ConstantArgumentCount",
    "source_method": "from",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.ConstantArgumentCount",
    "source_method": "to",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.ArrayComparableElementTypeStrategy",
    "source_method": "areComparable",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.ArrayComparableElementTypeStrategy",
    "source_method": "areComparableWithNormalizedNullability",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.CurrentWatermarkInputTypeStrategy",
    "source_method": "createExpectedSignature",
    "target_class": "org.apache.flink.table.types.logical.TimestampKind"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.OverTypeStrategy",
    "source_method": "isRowWindow",
    "target_class": "org.apache.flink.table.types.logical.LogicalTypeRoot, org.apache.flink.table.types.inference.strategies.OverTypeStrategy.FollowingPreceding):boolean \t org.apache.flink.table.types.inference.strategies.OverTypeStrategy.FollowingPreceding"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.OverTypeStrategy",
    "source_method": "validateFollowingPreceding",
    "target_class": "org.apache.flink.table.types.inference.strategies.OverTypeStrategy.FollowingPreceding, org.apache.flink.table.types.inference.CallContext):java.util.Optional<java.lang.String> \t org.apache.flink.table.types.inference.CallContext"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.SubQueryInputTypeStrategy",
    "source_method": "isComparableWithSubQuery",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.StrategyUtils",
    "source_method": "findDataType",
    "target_class": "boolean, org.apache.flink.table.types.DataType, org.apache.flink.table.types.logical.LogicalTypeRoot, java.lang.Boolean):java.util.Optional<org.apache.flink.table.types.DataType> \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.StrategyUtils",
    "source_method": "isDecimalComputation",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):boolean \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.StrategyUtils",
    "source_method": "findDataTypeOfRoot",
    "target_class": "org.apache.flink.table.types.logical.LogicalTypeRoot):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.StrategyUtils",
    "source_method": "extractLegacyArrayElement",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.SubsequenceInputTypeStrategy.SubsequenceStrategyBuilder",
    "source_method": "subsequence",
    "target_class": "org.apache.flink.table.types.inference.InputTypeStrategy"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.strategies.SubsequenceInputTypeStrategy.SubsequenceStrategyBuilder",
    "source_method": "finishWithVarying",
    "target_class": "org.apache.flink.table.types.inference.InputTypeStrategy"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeStrategies",
    "source_method": "aggArg0",
    "target_class": "boolean):org.apache.flink.table.types.inference.TypeStrategy \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "adaptArguments",
    "target_class": "org.apache.flink.table.types.inference.CallContext, org.apache.flink.table.types.DataType, boolean):org.apache.flink.table.types.inference.CallContext \t org.apache.flink.table.types.inference.TypeInference"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "inferOutputType",
    "target_class": "org.apache.flink.table.types.inference.TypeStrategy):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.inference.TypeStrategy"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "generateSignature",
    "target_class": "java.lang.String, org.apache.flink.table.functions.FunctionDefinition):java.lang.String \t org.apache.flink.table.types.inference.TypeInference"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "createInvalidInputException",
    "target_class": "org.apache.flink.table.types.inference.CallContext, org.apache.flink.table.api.ValidationException):org.apache.flink.table.api.ValidationException \t org.apache.flink.table.types.inference.CallContext"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "createInvalidCallException",
    "target_class": "org.apache.flink.table.api.ValidationException):org.apache.flink.table.api.ValidationException \t org.apache.flink.table.types.inference.CallContext"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "createUnexpectedException",
    "target_class": "java.lang.Throwable):org.apache.flink.table.api.TableException \t org.apache.flink.table.types.inference.CallContext"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "validateArgumentCount",
    "target_class": "int, boolean):boolean \t org.apache.flink.table.types.inference.ArgumentCount"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil.SurroundingInfo",
    "source_method": "of",
    "target_class": "org.apache.flink.table.functions.FunctionDefinition, org.apache.flink.table.types.inference.TypeInference, int, int, boolean):org.apache.flink.table.types.inference.TypeInferenceUtil.SurroundingInfo \t org.apache.flink.table.types.inference.TypeInferenceUtil"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "runTypeInferenceInternal",
    "target_class": "org.apache.flink.table.types.inference.CallContext, org.apache.flink.table.types.inference.TypeInferenceUtil.SurroundingInfo):org.apache.flink.table.types.inference.TypeInferenceUtil.Result \t org.apache.flink.table.types.inference.TypeInference"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "formatNamedOrTypedArguments",
    "target_class": "org.apache.flink.table.types.inference.TypeInference):java.lang.String \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "formatSignature",
    "target_class": "org.apache.flink.table.types.inference.Signature):java.lang.String \t org.apache.flink.table.types.inference.Signature"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "formatArgument",
    "target_class": "org.apache.flink.table.types.inference.Signature.Argument"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "inferInputTypes",
    "target_class": "org.apache.flink.table.types.inference.CallContext, org.apache.flink.table.types.DataType, boolean):org.apache.flink.table.types.inference.utils.AdaptedCallContext \t org.apache.flink.table.types.inference.TypeInference"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "inferAccumulatorType",
    "target_class": "org.apache.flink.table.types.DataType, org.apache.flink.table.types.inference.TypeStrategy):org.apache.flink.table.types.DataType \t org.apache.flink.table.functions.FunctionKind"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeInferenceUtil",
    "source_method": "isUnknown",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeTransformations",
    "source_method": "timeToSqlTypes",
    "target_class": "org.apache.flink.table.types.logical.LogicalTypeRoot"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeTransformations",
    "source_method": "legacyRawToTypeInfoRaw",
    "target_class": "org.apache.flink.table.types.inference.transforms.LegacyRawTypeTransformation"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.TypeTransformations",
    "source_method": "legacyToNonLegacy",
    "target_class": "org.apache.flink.table.types.inference.transforms.LegacyToNonLegacyTransformation"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.utils.AdaptedCallContext",
    "source_method": "isCasted",
    "target_class": "org.apache.flink.table.types.inference.CallContext"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.InputTypeStrategies",
    "source_method": "commonType",
    "target_class": "org.apache.flink.table.types.inference.ConstantArgumentCount"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.InputTypeStrategies",
    "source_method": "commonArrayType",
    "target_class": "org.apache.flink.table.types.inference.ConstantArgumentCount"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.InputTypeStrategies",
    "source_method": "commonMultipleArrayType",
    "target_class": "org.apache.flink.table.types.inference.ConstantArgumentCount"
  },
  {
    "source_class": "org.apache.flink.table.types.inference.InputTypeStrategies",
    "source_method": "arrayFullyComparableElementType",
    "target_class": "org.apache.flink.table.types.logical.StructuredType.StructuredComparison"
  },
  {
    "source_class": "org.apache.flink.table.types.DataType",
    "source_method": "getFieldDataTypes",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.DataType",
    "source_method": "performEarlyClassValidation",
    "target_class": "java.lang.Class<C>):java.lang.Class<C> \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.types.DataType",
    "source_method": "ensureConversionClass",
    "target_class": "java.lang.Class<?>):java.lang.Class<?> \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryRowData",
    "source_method": "isInFixedLengthPart",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryRowData",
    "source_method": "isMutable",
    "target_class": "org.apache.flink.table.types.logical.LogicalTypeRoot"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryRawValueData",
    "source_method": "fromBytes",
    "target_class": "int, int):org.apache.flink.table.data.binary.BinaryRawValueData<T> \t org.apache.flink.core.memory.MemorySegmentFactory"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryArrayData",
    "source_method": "calculateFixLengthPartSize",
    "target_class": "org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryArrayData",
    "source_method": "toObjectArray",
    "target_class": "org.apache.flink.table.data.ArrayData.ElementGetter"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryArrayData",
    "source_method": "fromPrimitiveArray",
    "target_class": "int, int, int):org.apache.flink.table.data.binary.BinaryArrayData \t org.apache.flink.core.memory.MemorySegmentFactory"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "fromBytes",
    "target_class": "int, int):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.core.memory.MemorySegmentFactory"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "compareMultiSegments",
    "target_class": "org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "numCharsMultiSegs",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "byteAt",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "copy",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "substringMultiSegs",
    "target_class": "int):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "contains",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "trimMultiSegs",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "indexOfMultiSegs",
    "target_class": "int):int \t org.apache.flink.table.data.binary.BinaryStringData.SegmentAndOffset"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "toUpperCase",
    "target_class": "org.apache.flink.table.data.binary.BinaryStringData.SegmentAndOffset"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "getByteOneSegment",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "inFirstSegment",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "matchAtOneSeg",
    "target_class": "int):boolean \t org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "matchAtVarSeg",
    "target_class": "int):boolean \t org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "copyBinaryStringInOneSeg",
    "target_class": "int):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "copyBinaryString",
    "target_class": "int):org.apache.flink.table.data.binary.BinaryStringData \t org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "firstSegmentAndOffset",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData",
    "source_method": "lastSegmentAndOffset",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryStringData.SegmentAndOffset",
    "source_method": "assignSegment",
    "target_class": "org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.StringUtf8Utils",
    "source_method": "encodeUTF8",
    "target_class": "org.apache.flink.table.data.binary.BinarySegmentUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.StringUtf8Utils",
    "source_method": "decodeUTF8",
    "target_class": "int, int):java.lang.String \t org.apache.flink.table.data.binary.BinarySegmentUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.StringUtf8Utils",
    "source_method": "decodeUTF8Strict",
    "target_class": "int, int, char[]):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryMapData",
    "source_method": "toJavaMap",
    "target_class": "org.apache.flink.table.types.logical.LogicalType):java.util.Map<?,?> \t org.apache.flink.table.data.binary.BinaryArrayData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinaryMapData",
    "source_method": "valueOf",
    "target_class": "org.apache.flink.table.data.binary.BinaryArrayData):org.apache.flink.table.data.binary.BinaryMapData \t org.apache.flink.core.memory.MemorySegmentFactory"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "copyToBytes",
    "target_class": "int, byte[], int, int):byte[] \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "copyMultiSegmentsToBytes",
    "target_class": "int, byte[], int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "copyToUnsafe",
    "target_class": "int, java.lang.Object, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "copyMultiSegmentsToUnsafe",
    "target_class": "int, java.lang.Object, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "copyToView",
    "target_class": "int, int, org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "copyFromBytes",
    "target_class": "int, byte[], int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "copyMultiSegmentsFromBytes",
    "target_class": "int, byte[], int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getBytes",
    "target_class": "int, int):byte[] \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "equalsMultiSegments",
    "target_class": "int, org.apache.flink.core.memory.MemorySegment[], int, int):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "hashByWords",
    "target_class": "int, int):int \t org.apache.flink.table.data.binary.MurmurHashUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "hashMultiSegByWords",
    "target_class": "int, int):int \t org.apache.flink.table.data.binary.MurmurHashUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "hash",
    "target_class": "int, int):int \t org.apache.flink.table.data.binary.MurmurHashUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "hashMultiSeg",
    "target_class": "int, int):int \t org.apache.flink.table.data.binary.MurmurHashUtils"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "inFirstSegment",
    "target_class": "int, int):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "bitUnSet",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "bitSet",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "bitGet",
    "target_class": "int, int):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "bitUnSet",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "bitUnSetMultiSegments",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "bitSet",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "bitSetMultiSegments",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getBooleanMultiSegments",
    "target_class": "int):boolean \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setBoolean",
    "target_class": "int, boolean):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setBooleanMultiSegments",
    "target_class": "int, boolean):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getByte",
    "target_class": "int):byte \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getByteMultiSegments",
    "target_class": "int):byte \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setByte",
    "target_class": "int, byte):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setByteMultiSegments",
    "target_class": "int, byte):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getIntMultiSegments",
    "target_class": "int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getIntSlowly",
    "target_class": "int, int, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setInt",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setIntMultiSegments",
    "target_class": "int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setIntSlowly",
    "target_class": "int, int, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getLongMultiSegments",
    "target_class": "int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getLongSlowly",
    "target_class": "int, int, int):long \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setLong",
    "target_class": "int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setLongMultiSegments",
    "target_class": "int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setLongSlowly",
    "target_class": "int, int, int, long):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getShort",
    "target_class": "int):short \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getShortMultiSegments",
    "target_class": "int):short \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setShort",
    "target_class": "int, short):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setShortMultiSegments",
    "target_class": "int, short):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getFloat",
    "target_class": "int):float \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getFloatMultiSegments",
    "target_class": "int):float \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setFloat",
    "target_class": "int, float):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setFloatMultiSegments",
    "target_class": "int, float):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getDouble",
    "target_class": "int):double \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getDoubleMultiSegments",
    "target_class": "int):double \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setDouble",
    "target_class": "int, double):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setDoubleMultiSegments",
    "target_class": "int, double):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "getTwoByteSlowly",
    "target_class": "int, int, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "setTwoByteSlowly",
    "target_class": "int, int, int, int, int):void \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "readDecimalData",
    "target_class": "int, long, int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "readTimestampData",
    "target_class": "int, long):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "readStringData",
    "target_class": "int, int, long):org.apache.flink.table.data.StringData \t org.apache.flink.table.data.binary.BinaryStringData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "readMapData",
    "target_class": "int, long):org.apache.flink.table.data.MapData \t org.apache.flink.table.data.binary.BinaryMapData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "readArrayData",
    "target_class": "int, long):org.apache.flink.table.data.ArrayData \t org.apache.flink.table.data.binary.BinaryArrayData"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "readRowData",
    "target_class": "int, int, long):org.apache.flink.table.data.RowData \t org.apache.flink.table.data.binary.BinarySection"
  },
  {
    "source_class": "org.apache.flink.table.data.binary.BinarySegmentUtils",
    "source_method": "find",
    "target_class": "int, int, org.apache.flink.core.memory.MemorySegment[], int, int):int \t org.apache.flink.core.memory.MemorySegment"
  },
  {
    "source_class": "org.apache.flink.table.data.utils.ProjectedRowData",
    "source_method": "from",
    "target_class": "org.apache.flink.table.connector.Projection"
  },
  {
    "source_class": "org.apache.flink.table.data.DecimalData",
    "source_method": "fromUnscaledLong",
    "target_class": "int, int):org.apache.flink.table.data.DecimalData \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ExpressionUtils",
    "source_method": "extractValue",
    "target_class": "java.lang.Class<V>):java.util.Optional<V> \t org.apache.flink.table.expressions.ValueLiteralExpression"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ValueLiteralExpression",
    "source_method": "deriveDataTypeFromValue",
    "target_class": "org.apache.flink.table.types.utils.ValueDataTypeConverter"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ValueLiteralExpression",
    "source_method": "validateValueDataType",
    "target_class": "org.apache.flink.table.types.DataType):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.expressions.ValueLiteralExpression",
    "source_method": "stringifyValue",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.table.expressions.CallExpression",
    "source_method": "permanent",
    "target_class": "org.apache.flink.table.functions.FunctionDefinition, java.util.List<org.apache.flink.table.expressions.ResolvedExpression>, org.apache.flink.table.types.DataType):org.apache.flink.table.expressions.CallExpression \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.expressions.CallExpression",
    "source_method": "permanent",
    "target_class": "java.util.List<org.apache.flink.table.expressions.ResolvedExpression>, org.apache.flink.table.types.DataType):org.apache.flink.table.expressions.CallExpression \t org.apache.flink.table.functions.FunctionIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.expressions.CallExpression",
    "source_method": "temporary",
    "target_class": "org.apache.flink.table.functions.FunctionDefinition, java.util.List<org.apache.flink.table.expressions.ResolvedExpression>, org.apache.flink.table.types.DataType):org.apache.flink.table.expressions.CallExpression \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.expressions.CallExpression",
    "source_method": "getSerializableFunctionName",
    "target_class": "org.apache.flink.table.functions.FunctionIdentifier"
  },
  {
    "source_class": "org.apache.flink.table.factories.ManagedTableFactory",
    "source_method": "discoverManagedTableFactory",
    "target_class": "org.apache.flink.table.factories.FactoryUtil"
  },
  {
    "source_class": "org.apache.flink.table.factories.FunctionDefinitionFactory",
    "source_method": "createFunctionDefinition",
    "target_class": "org.apache.flink.table.catalog.CatalogFunction, org.apache.flink.table.factories.FunctionDefinitionFactory.Context):org.apache.flink.table.functions.FunctionDefinition \t org.apache.flink.table.factories.FunctionDefinitionFactory.Context"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "createDynamicTableSource",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier, org.apache.flink.table.catalog.ResolvedCatalogTable, java.util.Map<java.lang.String,java.lang.String>, org.apache.flink.configuration.ReadableConfig, java.lang.ClassLoader, boolean):org.apache.flink.table.connector.source.DynamicTableSource \t org.apache.flink.table.factories.DynamicTableSourceFactory"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "createDynamicTableSink",
    "target_class": "org.apache.flink.table.catalog.ObjectIdentifier, org.apache.flink.table.catalog.ResolvedCatalogTable, java.util.Map<java.lang.String,java.lang.String>, org.apache.flink.configuration.ReadableConfig, java.lang.ClassLoader, boolean):org.apache.flink.table.connector.sink.DynamicTableSink \t org.apache.flink.table.factories.DynamicTableSinkFactory"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "createCatalog",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>, org.apache.flink.configuration.ReadableConfig, java.lang.ClassLoader):org.apache.flink.table.catalog.Catalog \t org.apache.flink.table.factories.CatalogFactory"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "createModule",
    "target_class": "java.util.Map<java.lang.String,java.lang.String>, org.apache.flink.configuration.ReadableConfig, java.lang.ClassLoader):org.apache.flink.table.module.Module \t org.apache.flink.table.factories.ModuleFactory.Context"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "discoverFactory",
    "target_class": "java.lang.Class<T>, java.lang.String):T \t org.apache.flink.table.factories.Factory"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "getFormatPrefix",
    "target_class": "java.lang.String):java.lang.String \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "getDynamicTableFactory",
    "target_class": "org.apache.flink.table.catalog.Catalog):java.util.Optional<T> \t org.apache.flink.table.catalog.Catalog"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "getCatalogFactory",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "stringifyOption",
    "target_class": "java.lang.String):java.lang.String \t org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "readOption",
    "target_class": "org.apache.flink.configuration.ConfigOption<T>):T \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "allKeysExpanded",
    "target_class": "org.apache.flink.configuration.ConfigOption<?>, java.util.Set<java.lang.String>):java.util.Set<java.lang.String> \t org.apache.flink.configuration.ConfigurationUtils"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "allKeys",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "fallbackKeys",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "deprecatedKeys",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil.FactoryHelper",
    "source_method": "validate",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil.FactoryHelper",
    "source_method": "validateExcept",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil.TableFactoryHelper",
    "source_method": "forwardOptions",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil.TableFactoryHelper",
    "source_method": "formatPrefix",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.String>):java.lang.String \t org.apache.flink.table.factories.Factory"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil.TableFactoryHelper",
    "source_method": "createFormatOptions",
    "target_class": "org.apache.flink.table.factories.FormatFactory):org.apache.flink.configuration.ReadableConfig \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil.TableFactoryHelper",
    "source_method": "checkFormatIdentifierMatchesWithEnrichingOptions",
    "target_class": "java.lang.String):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.table.factories.FactoryUtil",
    "source_method": "checkWatermarkOptions",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.table.api.dataview.ListView",
    "source_method": "newListViewDataType",
    "target_class": "org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.api.dataview.MapView",
    "source_method": "newMapViewDataType",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.types.DataType \t org.apache.flink.table.api.DataTypes"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "of",
    "target_class": "org.apache.flink.table.types.utils.TypeConversions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "of",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "of",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "of",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "INTERVAL",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "INTERVAL",
    "target_class": "org.apache.flink.table.api.DataTypes.Resolution):org.apache.flink.table.types.DataType \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "ARRAY",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "ARRAY",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "MULTISET",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "MULTISET",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "MAP",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.types.DataType \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "MAP",
    "target_class": "org.apache.flink.table.types.AbstractDataType<?>):org.apache.flink.table.types.UnresolvedDataType \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "ROW",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "ROW",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "RAW",
    "target_class": "org.apache.flink.table.catalog.DataTypeFactory"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "RAW",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "STRUCTURED",
    "target_class": "org.apache.flink.table.api.DataTypes.Field[]):org.apache.flink.table.types.DataType \t org.apache.flink.table.types.extraction.ExtractionUtils"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "SECOND",
    "target_class": "org.apache.flink.table.types.logical.DayTimeIntervalType"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "SECOND",
    "target_class": "org.apache.flink.table.api.DataTypes.Resolution.IntervalUnit"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "MINUTE",
    "target_class": "org.apache.flink.table.api.DataTypes.Resolution.IntervalUnit"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "HOUR",
    "target_class": "org.apache.flink.table.api.DataTypes.Resolution.IntervalUnit"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "DAY",
    "target_class": "org.apache.flink.table.api.DataTypes.Resolution.IntervalUnit"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "DAY",
    "target_class": "org.apache.flink.table.types.logical.DayTimeIntervalType"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "MONTH",
    "target_class": "org.apache.flink.table.api.DataTypes.Resolution.IntervalUnit"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "YEAR",
    "target_class": "org.apache.flink.table.api.DataTypes.Resolution.IntervalUnit"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "YEAR",
    "target_class": "org.apache.flink.table.api.DataTypes.Resolution.IntervalUnit"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "FIELD",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.api.DataTypes.Field \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "FIELD",
    "target_class": "org.apache.flink.table.types.DataType, java.lang.String):org.apache.flink.table.api.DataTypes.Field \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "FIELD",
    "target_class": "org.apache.flink.table.types.AbstractDataType<?>):org.apache.flink.table.api.DataTypes.UnresolvedField \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.DataTypes",
    "source_method": "FIELD",
    "target_class": "org.apache.flink.table.types.AbstractDataType<?>, java.lang.String):org.apache.flink.table.api.DataTypes.UnresolvedField \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "BOOLEAN",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "BYTE",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "SHORT",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "INT",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "LONG",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "FLOAT",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "DOUBLE",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "DECIMAL",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "SQL_DATE",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "LOCAL_DATE",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "LOCAL_TIME",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "LOCAL_DATE_TIME",
    "target_class": "org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "INTERVAL_MONTHS",
    "target_class": "org.apache.flink.table.typeutils.TimeIntervalTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "INTERVAL_MILLIS",
    "target_class": "org.apache.flink.table.typeutils.TimeIntervalTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "ROW",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<?>[]):org.apache.flink.api.common.typeinfo.TypeInformation<org.apache.flink.types.Row> \t org.apache.flink.api.common.typeinfo.Types"
  },
  {
    "source_class": "org.apache.flink.table.api.Types",
    "source_method": "OBJECT_ARRAY",
    "target_class": "org.apache.flink.api.java.typeutils.ObjectArrayTypeInfo"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "getFieldDataType",
    "target_class": "org.apache.flink.table.api.TableColumn"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "getTableColumn",
    "target_class": "org.apache.flink.table.api.TableColumn"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "toRowDataType",
    "target_class": "org.apache.flink.table.api.TableColumn"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "toPhysicalRowDataType",
    "target_class": "org.apache.flink.table.api.TableColumn"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "toPersistedRowDataType",
    "target_class": "org.apache.flink.table.api.TableColumn"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "toSchema",
    "target_class": "org.apache.flink.table.api.TableColumn"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "fromTypeInfo",
    "target_class": "org.apache.flink.api.common.typeutils.CompositeType"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "fromResolvedSchema",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "validateColumnsAndWatermarkSpecs",
    "target_class": "java.util.List<org.apache.flink.table.api.WatermarkSpec>):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "validatePrimaryKey",
    "target_class": "org.apache.flink.table.api.constraints.UniqueConstraint):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.api.TableSchema",
    "source_method": "validateAndCreateNameToTypeMapping",
    "target_class": "java.lang.String, org.apache.flink.table.types.logical.LogicalType, java.lang.String):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.api.TableColumn",
    "source_method": "physical",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.api.TableColumn.PhysicalColumn \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.TableColumn",
    "source_method": "computed",
    "target_class": "org.apache.flink.table.types.DataType, java.lang.String):org.apache.flink.table.api.TableColumn.ComputedColumn \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.TableColumn",
    "source_method": "metadata",
    "target_class": "org.apache.flink.table.types.DataType, java.lang.String):org.apache.flink.table.api.TableColumn.MetadataColumn \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.TableColumn",
    "source_method": "metadata",
    "target_class": "org.apache.flink.table.types.DataType, java.lang.String, boolean):org.apache.flink.table.api.TableColumn.MetadataColumn \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.api.Schema.Builder",
    "source_method": "fromSchema",
    "target_class": "org.apache.flink.table.api.Schema.UnresolvedPrimaryKey"
  },
  {
    "source_class": "org.apache.flink.table.api.Schema.Builder",
    "source_method": "fromResolvedSchema",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.api.Schema.Builder",
    "source_method": "fromRowDataType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.api.Schema.Builder",
    "source_method": "addResolvedColumns",
    "target_class": "org.apache.flink.table.catalog.Column.MetadataColumn"
  },
  {
    "source_class": "org.apache.flink.table.api.Schema.Builder",
    "source_method": "addResolvedWatermarkSpec",
    "target_class": "org.apache.flink.table.catalog.WatermarkSpec"
  },
  {
    "source_class": "org.apache.flink.table.catalog.Column",
    "source_method": "physical",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.catalog.Column.PhysicalColumn \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.Column",
    "source_method": "computed",
    "target_class": "org.apache.flink.table.expressions.ResolvedExpression):org.apache.flink.table.catalog.Column.ComputedColumn \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.Column",
    "source_method": "metadata",
    "target_class": "org.apache.flink.table.types.DataType, java.lang.String, boolean):org.apache.flink.table.catalog.Column.MetadataColumn \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ResolvedSchema",
    "source_method": "physical",
    "target_class": "java.util.List<org.apache.flink.table.types.DataType>):org.apache.flink.table.catalog.ResolvedSchema \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ResolvedSchema",
    "source_method": "getColumn",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ResolvedSchema",
    "source_method": "columnToField",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializeCatalogTable",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializeCatalogView",
    "target_class": "org.apache.flink.table.catalog.ResolvedCatalogView"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "deserializeCatalogTable",
    "target_class": "java.lang.String):org.apache.flink.table.catalog.CatalogTable \t org.apache.flink.table.catalog.CatalogTable"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "deserializeSchema",
    "target_class": "java.lang.String):org.apache.flink.table.api.Schema \t org.apache.flink.table.api.Schema"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "deserializeColumns",
    "target_class": "java.lang.String, org.apache.flink.table.api.Schema.Builder):void \t org.apache.flink.table.api.Schema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializePartitionKeys",
    "target_class": "java.util.List<java.lang.String>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializeResolvedSchema",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema):void \t org.apache.flink.table.catalog.ResolvedSchema"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializePrimaryKey",
    "target_class": "org.apache.flink.table.catalog.UniqueConstraint):void \t org.apache.flink.table.catalog.AbstractConstraint"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializeDataType",
    "target_class": "org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializeColumnComputations",
    "target_class": "org.apache.flink.table.catalog.Column.ComputedColumn"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializeColumnMetadataKeys",
    "target_class": "org.apache.flink.table.catalog.Column.MetadataColumn"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializeColumnVirtuality",
    "target_class": "org.apache.flink.table.catalog.Column.MetadataColumn"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "serializeColumnComments",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil",
    "source_method": "putIndexedProperties",
    "target_class": "java.lang.String, java.util.List<java.lang.String>, java.util.List<java.util.List<java.lang.String>>):void \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogTable",
    "source_method": "fromProperties",
    "target_class": "org.apache.flink.table.catalog.CatalogPropertiesUtil"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogStoreHolder.Builder",
    "source_method": "build",
    "target_class": "org.apache.flink.table.catalog.CatalogStoreHolder"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogStoreHolder",
    "source_method": "open",
    "target_class": "org.apache.flink.table.catalog.CatalogStore"
  },
  {
    "source_class": "org.apache.flink.table.catalog.TableChange",
    "source_method": "dropWatermark",
    "target_class": "org.apache.flink.table.catalog.TableChange.DropWatermark"
  },
  {
    "source_class": "org.apache.flink.table.catalog.TableChange.ModifyPhysicalColumnType",
    "source_method": "getNewType",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.catalog.TableChange.ModifyColumnName",
    "source_method": "createNewColumn",
    "target_class": "java.lang.String):org.apache.flink.table.catalog.Column \t org.apache.flink.table.catalog.Column.MetadataColumn"
  },
  {
    "source_class": "org.apache.flink.table.catalog.TableChange.ModifyColumnName",
    "source_method": "getOldColumnName",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.catalog.TableChange.ModifyColumnName",
    "source_method": "getNewColumnName",
    "target_class": "org.apache.flink.table.catalog.Column"
  },
  {
    "source_class": "org.apache.flink.table.catalog.TableChange.ColumnPosition",
    "source_method": "first",
    "target_class": "org.apache.flink.table.catalog.TableChange.First"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ObjectIdentifier",
    "source_method": "of",
    "target_class": "java.lang.String, java.lang.String):org.apache.flink.table.catalog.ObjectIdentifier \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ObjectIdentifier",
    "source_method": "ofAnonymous",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.ObjectPath",
    "source_method": "fromString",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.catalog.WatermarkSpec",
    "source_method": "asSummaryString",
    "target_class": "org.apache.flink.table.expressions.ResolvedExpression"
  },
  {
    "source_class": "org.apache.flink.table.catalog.CatalogBaseTable",
    "source_method": "getUnresolvedSchema",
    "target_class": "org.apache.flink.table.api.TableSchema"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Rowtime",
    "source_method": "timestampsFromField",
    "target_class": "org.apache.flink.table.descriptors.DescriptorProperties"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Rowtime",
    "source_method": "timestampsFromSource",
    "target_class": "org.apache.flink.table.descriptors.DescriptorProperties"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Rowtime",
    "source_method": "timestampsFromExtractor",
    "target_class": "org.apache.flink.table.sources.tsextractors.TimestampExtractor"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Rowtime",
    "source_method": "watermarksPeriodicAscending",
    "target_class": "org.apache.flink.table.descriptors.DescriptorProperties"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Rowtime",
    "source_method": "watermarksPeriodicBounded",
    "target_class": "org.apache.flink.table.descriptors.DescriptorProperties"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Rowtime",
    "source_method": "watermarksFromSource",
    "target_class": "org.apache.flink.table.descriptors.DescriptorProperties"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Rowtime",
    "source_method": "watermarksFromStrategy",
    "target_class": "org.apache.flink.table.sources.wmstrategies.WatermarkStrategy"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Schema",
    "source_method": "schema",
    "target_class": "org.apache.flink.table.api.TableSchema"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Schema",
    "source_method": "field",
    "target_class": "org.apache.flink.table.types.DataType):org.apache.flink.table.descriptors.Schema \t org.apache.flink.table.types.DataType"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Schema",
    "source_method": "isLegacyTypeString",
    "target_class": "org.apache.flink.table.types.logical.utils.LogicalTypeParser"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.Schema",
    "source_method": "rowtime",
    "target_class": "org.apache.flink.table.descriptors.Rowtime"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.DescriptorProperties",
    "source_method": "putTableSchema",
    "target_class": "org.apache.flink.table.api.TableSchema):void \t org.apache.flink.table.api.TableSchema"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.DescriptorProperties",
    "source_method": "putMemorySize",
    "target_class": "org.apache.flink.configuration.MemorySize):void \t org.apache.flink.configuration.MemorySize"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.DescriptorProperties",
    "source_method": "getOptionalTableSchema",
    "target_class": "org.apache.flink.table.api.TableSchema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.DescriptorProperties",
    "source_method": "validateDataType",
    "target_class": "java.lang.String, boolean):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.descriptors.DescriptorProperties",
    "source_method": "toString",
    "target_class": "org.apache.flink.table.utils.EncodingUtils"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "toTimestampData",
    "target_class": "int):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "timestampDataFromEpochMills",
    "target_class": "org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "toMillis",
    "target_class": "org.apache.flink.table.data.DecimalData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "parseTimestampData",
    "target_class": "int):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "parseTimestampData",
    "target_class": "int, java.util.TimeZone):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "parseTimestampData",
    "target_class": "java.lang.String):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "parseTimestampMillis",
    "target_class": "java.lang.String, java.util.TimeZone):long \t org.apache.flink.table.utils.ThreadLocalCache"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "parseTimestampTz",
    "target_class": "java.lang.String):long \t org.apache.flink.table.utils.ThreadLocalCache"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "formatTimestamp",
    "target_class": "int):java.lang.String \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "formatTimestamp",
    "target_class": "java.lang.String, java.time.ZoneId):java.lang.String \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "formatTimestampMillis",
    "target_class": "java.lang.String, java.util.TimeZone):java.lang.String \t org.apache.flink.table.utils.ThreadLocalCache"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "formatTimestampString",
    "target_class": "java.lang.String, java.lang.String, java.util.TimeZone):java.lang.String \t org.apache.flink.table.utils.ThreadLocalCache"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "internalParseTimestampMillis",
    "target_class": "java.lang.String, java.util.TimeZone):long \t org.apache.flink.table.utils.ThreadLocalCache"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "convertExtract",
    "target_class": "org.apache.flink.table.data.TimestampData, org.apache.flink.table.types.logical.LogicalType, java.util.TimeZone):long \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "getFactor",
    "target_class": "org.apache.flink.table.utils.DateTimeUtils.TimeUnit"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "formatTimestampTz",
    "target_class": "java.lang.String):java.lang.String \t org.apache.flink.table.utils.ThreadLocalCache"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "formatUnixTimestamp",
    "target_class": "java.lang.String, java.util.TimeZone):java.lang.String \t org.apache.flink.table.utils.ThreadLocalCache"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "timestampToTimestampWithLocalZone",
    "target_class": "java.util.TimeZone):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "timestampWithLocalZoneToTimestamp",
    "target_class": "java.util.TimeZone):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "timestampWithLocalZoneToDate",
    "target_class": "java.util.TimeZone):int \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "timestampWithLocalZoneToTime",
    "target_class": "java.util.TimeZone):int \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "dateToTimestampWithLocalZone",
    "target_class": "java.util.TimeZone):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "timeToTimestampWithLocalZone",
    "target_class": "java.util.TimeZone):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "truncate",
    "target_class": "int):org.apache.flink.table.data.TimestampData \t org.apache.flink.table.data.TimestampData"
  },
  {
    "source_class": "org.apache.flink.table.utils.DateTimeUtils",
    "source_method": "addMonths",
    "target_class": "int):int \t org.apache.flink.table.utils.DateTimeUtils.TimeUnitRange"
  },
  {
    "source_class": "org.apache.flink.table.utils.TypeStringUtils",
    "source_method": "writeTypeInfo",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.table.utils.TypeStringUtils",
    "source_method": "readTypeInfo",
    "target_class": "org.apache.flink.table.utils.TypeStringUtils.TokenConverter"
  },
  {
    "source_class": "org.apache.flink.table.utils.print.PrintStyle",
    "source_method": "tableauWithTypeInferredColumnWidths",
    "target_class": "org.apache.flink.table.utils.print.RowDataToStringConverter, int, boolean, boolean):org.apache.flink.table.utils.print.TableauStyle \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.utils.print.PrintStyle",
    "source_method": "tableauWithDataInferredColumnWidths",
    "target_class": "org.apache.flink.table.utils.print.RowDataToStringConverter, int, boolean, boolean):org.apache.flink.table.utils.print.TableauStyle \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.utils.print.TableauStyle",
    "source_method": "rowFieldsToString",
    "target_class": "org.apache.flink.table.utils.print.RowDataToStringConverter"
  },
  {
    "source_class": "org.apache.flink.table.utils.print.TableauStyle",
    "source_method": "columnWidthsByType",
    "target_class": "int, boolean, boolean):int[] \t org.apache.flink.table.types.logical.LocalZonedTimestampType"
  },
  {
    "source_class": "org.apache.flink.table.utils.PartitionPathUtils",
    "source_method": "extractPartitionSpecFromPath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.table.utils.PartitionPathUtils",
    "source_method": "listStatusWithoutHidden",
    "target_class": "org.apache.flink.core.fs.Path):org.apache.flink.core.fs.FileStatus[] \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.table.utils.PartitionPathUtils",
    "source_method": "searchPartSpecAndPaths",
    "target_class": "org.apache.flink.core.fs.Path, int):java.util.List<org.apache.flink.api.java.tuple.Tuple2<java.util.LinkedHashMap<java.lang.String,java.lang.String>,org.apache.flink.core.fs.Path>> \t org.apache.flink.core.fs.FileStatus"
  },
  {
    "source_class": "org.apache.flink.table.utils.PartitionPathUtils",
    "source_method": "convertStringToInternalValue",
    "target_class": "org.apache.flink.table.types.DataType):java.lang.Object \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.utils.PartitionPathUtils",
    "source_method": "getFileStatusRecurse",
    "target_class": "int, org.apache.flink.core.fs.FileSystem):org.apache.flink.core.fs.FileStatus[] \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.table.utils.PartitionPathUtils",
    "source_method": "listStatusRecursively",
    "target_class": "org.apache.flink.core.fs.FileStatus, int, int, java.util.List<org.apache.flink.core.fs.FileStatus>):void \t org.apache.flink.core.fs.FileSystem"
  },
  {
    "source_class": "org.apache.flink.table.utils.PartitionPathUtils",
    "source_method": "isHiddenFile",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.table.utils.TableSchemaUtils",
    "source_method": "getTableSchema",
    "target_class": "java.util.function.Function<org.apache.flink.table.api.TableColumn,java.lang.Boolean>):org.apache.flink.table.api.TableSchema \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.utils.TableSchemaUtils",
    "source_method": "containsPhysicalColumnsOnly",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.utils.TableSchemaUtils",
    "source_method": "checkOnlyPhysicalColumns",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.table.utils.TableSchemaUtils",
    "source_method": "getPrimaryKeyIndices",
    "target_class": "org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.utils.TableSchemaUtils",
    "source_method": "removeTimeAttributeFromResolvedSchema",
    "target_class": "org.apache.flink.table.types.utils.DataTypeUtils"
  },
  {
    "source_class": "org.apache.flink.table.utils.TableSchemaUtils",
    "source_method": "builderWithGivenSchema",
    "target_class": "org.apache.flink.table.api.TableSchema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.utils.TableSchemaUtils",
    "source_method": "dropConstraint",
    "target_class": "java.lang.String):org.apache.flink.table.api.TableSchema \t org.apache.flink.table.api.TableSchema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.utils.TableSchemaUtils",
    "source_method": "builderWithGivenColumns",
    "target_class": "org.apache.flink.table.api.TableSchema.Builder"
  },
  {
    "source_class": "org.apache.flink.table.utils.EncodingUtils",
    "source_method": "encodeObjectToString",
    "target_class": "org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.table.utils.EncodingUtils",
    "source_method": "decodeStringToObject",
    "target_class": "java.lang.ClassLoader):T \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.table.utils.EncodingUtils",
    "source_method": "decodeStringToObject",
    "target_class": "java.lang.Class<T>, java.lang.ClassLoader):T \t org.apache.flink.util.InstantiationUtil"
  },
  {
    "source_class": "org.apache.flink.table.utils.TypeMappingUtils",
    "source_method": "verifyTimeAttributeType",
    "target_class": "java.lang.String):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.table.utils.TypeMappingUtils",
    "source_method": "computeInCompositeType",
    "target_class": "org.apache.flink.table.catalog.ResolvedSchema, java.util.function.Function<java.lang.String,java.lang.String>):java.util.Map<org.apache.flink.table.api.TableColumn,java.lang.Integer> \t org.apache.flink.table.api.TableColumn"
  },
  {
    "source_class": "org.apache.flink.table.utils.TypeMappingUtils",
    "source_method": "checkIfCompatible",
    "target_class": "org.apache.flink.table.types.logical.LogicalType, java.util.function.Function<java.lang.Throwable,org.apache.flink.table.api.ValidationException>):void \t org.apache.flink.table.types.logical.LogicalType"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.ChangelogStreamWrapper",
    "source_method": "wrap",
    "target_class": "org.apache.flink.runtime.state.StreamCompressionDecorator"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.BatchingStateChangeUploadScheduler",
    "source_method": "asRetriableAction",
    "target_class": "org.apache.flink.changelog.fs.StateChangeUploadScheduler.UploadTask"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.FsStateChangelogStorageFactory",
    "source_method": "configure",
    "target_class": "java.io.File, java.time.Duration, int):void \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.StateChangeUploader.UploadTasksResult",
    "source_method": "complete",
    "target_class": "org.apache.flink.changelog.fs.StateChangeUploadScheduler.UploadTask"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.UploadResult",
    "source_method": "of",
    "target_class": "org.apache.flink.runtime.state.StreamStateHandle, org.apache.flink.changelog.fs.StateChangeSet, long, long):org.apache.flink.changelog.fs.UploadResult \t org.apache.flink.changelog.fs.StateChangeSet"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.StateChangeUploadScheduler",
    "source_method": "directScheduler",
    "target_class": "org.apache.flink.changelog.fs.StateChangeUploader.UploadTasksResult"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.StateChangeUploadScheduler",
    "source_method": "fromConfig",
    "target_class": "org.apache.flink.configuration.ReadableConfig, org.apache.flink.changelog.fs.ChangelogStorageMetricGroup, org.apache.flink.changelog.fs.TaskChangelogRegistry, org.apache.flink.runtime.state.LocalRecoveryConfig):org.apache.flink.changelog.fs.StateChangeUploadScheduler \t org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.ChangelogStreamHandleReaderWithCache",
    "source_method": "canBeCached",
    "target_class": "org.apache.flink.runtime.state.filesystem.FileStateHandle"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.RetryPolicy",
    "source_method": "fromConfig",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.FsStateChangelogWriter",
    "source_method": "handleUploadFailure",
    "target_class": "java.lang.Throwable):void \t org.apache.flink.api.common.operators.MailboxExecutor"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.FsStateChangelogWriter",
    "source_method": "handleUploadSuccess",
    "target_class": "long):void \t org.apache.flink.changelog.fs.TaskChangelogRegistry"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.FsStateChangelogWriter",
    "source_method": "ensureCanPersist",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.changelog.fs.FsStateChangelogWriter.UploadCompletionListener",
    "source_method": "onFailure",
    "target_class": "java.lang.Throwable):boolean \t org.apache.flink.runtime.state.changelog.SequenceNumberRange"
  },
  {
    "source_class": "org.apache.flink.runtime.util.HadoopUtils",
    "source_method": "getHadoopConfiguration",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.runtime.util.HadoopUtils",
    "source_method": "getMajorMinorBundledHadoopVersion",
    "target_class": "org.apache.flink.api.java.tuple.Tuple2"
  },
  {
    "source_class": "org.apache.flink.runtime.fs.hdfs.HadoopRecoverableFsDataOutputStream",
    "source_method": "ensureTruncateInitialized",
    "target_class": "org.apache.flink.runtime.util.HadoopUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.fs.hdfs.HadoopRecoverableFsDataOutputStream",
    "source_method": "truncate",
    "target_class": "org.apache.flink.runtime.fs.hdfs.Path, long):boolean \t org.apache.flink.runtime.util.HadoopUtils"
  },
  {
    "source_class": "org.apache.flink.runtime.fs.hdfs.HadoopRecoverableFsDataOutputStream",
    "source_method": "waitUntilLeaseIsRevoked",
    "target_class": "org.apache.flink.runtime.fs.hdfs.Path):boolean \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.fs.hdfs.HadoopFileSystem",
    "source_method": "toHadoopPath",
    "target_class": "org.apache.flink.core.fs.Path"
  },
  {
    "source_class": "org.apache.flink.runtime.fs.hdfs.HadoopFileSystem",
    "source_method": "getKindForScheme",
    "target_class": "org.apache.flink.core.fs.FileSystemKind"
  },
  {
    "source_class": "org.apache.flink.runtime.fs.hdfs.HadoopRecoverableWriter",
    "source_method": "generateStagingTempFilePath",
    "target_class": "org.apache.hadoop.fs.Path):org.apache.hadoop.fs.Path \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.runtime.fs.hdfs.HadoopFsFactory",
    "source_method": "limitIfConfigured",
    "target_class": "java.lang.String, org.apache.flink.configuration.Configuration):org.apache.flink.core.fs.FileSystem \t org.apache.flink.core.fs.LimitedConnectionsFileSystem.ConnectionLimitingSettings"
  },
  {
    "source_class": "org.apache.flink.fs.osshadoop.writer.OSSRecoverableFsDataOutputStream",
    "source_method": "uploadCurrentPart",
    "target_class": "org.apache.flink.fs.osshadoop.writer.OSSRecoverableMultipartUpload"
  },
  {
    "source_class": "org.apache.flink.fs.osshadoop.writer.OSSRecoverableWriter",
    "source_method": "recoverInProgressPart",
    "target_class": "org.apache.flink.fs.osshadoop.OSSAccessor"
  },
  {
    "source_class": "org.apache.flink.fs.osshadoop.writer.OSSRecoverableMultipartUpload",
    "source_method": "uploadSmallPart",
    "target_class": "org.apache.flink.core.fs.RefCountedFSOutputStream"
  },
  {
    "source_class": "org.apache.flink.fs.osshadoop.writer.OSSRecoverableMultipartUpload",
    "source_method": "createIncompletePartObjectNamePrefix",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.fs.gs.GSFileSystemOptions",
    "source_method": "getWriterTemporaryBucketName",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.fs.gs.GSFileSystemOptions",
    "source_method": "getWriterChunkSize",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.fs.gs.GSFileSystemOptions",
    "source_method": "isFileSinkEntropyEnabled",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.fs.gs.utils.ConfigUtils",
    "source_method": "getHadoopConfiguration",
    "target_class": "org.apache.flink.fs.gs.utils.ConfigUtils.ConfigContext):org.apache.hadoop.conf.Configuration \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.fs.gs.utils.ConfigUtils",
    "source_method": "getStorageCredentials",
    "target_class": "org.apache.flink.fs.gs.utils.ConfigUtils.ConfigContext):java.util.Optional<org.apache.flink.fs.gs.utils.GoogleCredentials> \t org.apache.flink.fs.gs.utils.ConfigUtils.ConfigContext"
  },
  {
    "source_class": "org.apache.flink.fs.gs.utils.BlobUtils",
    "source_method": "parseUri",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.fs.gs.utils.BlobUtils",
    "source_method": "getTemporaryBucketName",
    "target_class": "org.apache.flink.fs.gs.GSFileSystemOptions):java.lang.String \t org.apache.flink.fs.gs.GSFileSystemOptions"
  },
  {
    "source_class": "org.apache.flink.fs.gs.utils.BlobUtils",
    "source_method": "getTemporaryObjectPartialName",
    "target_class": "org.apache.flink.fs.gs.storage.GSBlobIdentifier"
  },
  {
    "source_class": "org.apache.flink.fs.gs.writer.GSRecoverableWriterCommitter",
    "source_method": "writeFinalBlob",
    "target_class": "org.apache.flink.fs.gs.storage.GSBlobStorage"
  },
  {
    "source_class": "org.apache.flink.fs.gs.writer.GSRecoverableFsDataOutputStream",
    "source_method": "createWriteChannel",
    "target_class": "org.apache.flink.fs.gs.storage.GSBlobStorage"
  },
  {
    "source_class": "org.apache.flink.fs.gs.writer.GSCommitRecoverableSerializer",
    "source_method": "serializeCommitRecoverable",
    "target_class": "java.io.DataOutputStream):void \t org.apache.flink.fs.gs.writer.GSCommitRecoverable"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.token.AbstractS3DelegationTokenReceiver",
    "source_method": "updateHadoopConfig",
    "target_class": "org.apache.flink.util.StringUtils"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.writer.S3RecoverableFsDataOutputStream",
    "source_method": "newStream",
    "target_class": "org.apache.flink.util.function.FunctionWithException<java.io.File,org.apache.flink.core.fs.RefCountedFileWithStream,java.io.IOException>, long):org.apache.flink.fs.s3.common.writer.S3RecoverableFsDataOutputStream \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.writer.S3RecoverableFsDataOutputStream",
    "source_method": "recoverStream",
    "target_class": "org.apache.flink.util.function.FunctionWithException<java.io.File,org.apache.flink.core.fs.RefCountedFileWithStream,java.io.IOException>, long, long):org.apache.flink.fs.s3.common.writer.S3RecoverableFsDataOutputStream \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.writer.S3RecoverableFsDataOutputStream",
    "source_method": "boundedBufferingFileStream",
    "target_class": "java.util.Optional<java.io.File>):org.apache.flink.core.fs.RefCountedBufferingFileStream \t org.apache.flink.core.fs.RefCountedBufferingFileStream"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.writer.S3RecoverableMultipartUploadFactory",
    "source_method": "recoverRecoverableUpload",
    "target_class": "org.apache.flink.fs.s3.common.writer.S3Recoverable"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.writer.S3RecoverableMultipartUploadFactory",
    "source_method": "recoverInProgressPart",
    "target_class": "org.apache.flink.fs.s3.common.writer.S3Recoverable"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.writer.S3RecoverableWriter",
    "source_method": "writer",
    "target_class": "org.apache.flink.util.function.FunctionWithException<java.io.File,org.apache.flink.core.fs.RefCountedFileWithStream,java.io.IOException>, org.apache.flink.fs.s3.common.writer.S3AccessHelper, java.util.concurrent.Executor, long, int):org.apache.flink.fs.s3.common.writer.S3RecoverableWriter \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.writer.RecoverableMultiPartUploadImpl",
    "source_method": "safelyUploadSmallPart",
    "target_class": "org.apache.flink.fs.s3.common.writer.S3AccessHelper"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.writer.RecoverableMultiPartUploadImpl",
    "source_method": "createIncompletePartObjectNamePrefix",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.fs.s3.common.writer.RecoverableMultiPartUploadImpl",
    "source_method": "newUpload",
    "target_class": "java.util.concurrent.Executor, java.lang.String):org.apache.flink.fs.s3.common.writer.RecoverableMultiPartUploadImpl \t org.apache.flink.fs.s3.common.writer.S3AccessHelper"
  },
  {
    "source_class": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser",
    "source_method": "parseBucketLocationResponse",
    "target_class": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.BucketLocationHandler"
  },
  {
    "source_class": "org.apache.flink.cep.configuration.SharedBufferCacheConfig",
    "source_method": "of",
    "target_class": "org.apache.flink.configuration.ReadableConfig"
  },
  {
    "source_class": "org.apache.flink.cep.CEP",
    "source_method": "pattern",
    "target_class": "org.apache.flink.cep.pattern.Pattern<T,?>, org.apache.flink.cep.EventComparator<T>):org.apache.flink.cep.PatternStream<T> \t org.apache.flink.cep.PatternStream"
  },
  {
    "source_class": "org.apache.flink.cep.PatternStreamBuilder",
    "source_method": "clean",
    "target_class": "org.apache.flink.streaming.api.datastream.DataStream"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.MigrationUtils",
    "source_method": "skipSerializedStates",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.MigrationUtils",
    "source_method": "deserializeComputationStates",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer<T>, org.apache.flink.core.memory.DataInputView):java.util.Queue<org.apache.flink.cep.nfa.ComputationState> \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.aftermatch.AfterMatchSkipStrategy",
    "source_method": "max",
    "target_class": "org.apache.flink.cep.nfa.sharedbuffer.EventId):org.apache.flink.cep.nfa.sharedbuffer.EventId \t org.apache.flink.cep.nfa.sharedbuffer.EventId"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.aftermatch.AfterMatchSkipStrategy",
    "source_method": "min",
    "target_class": "org.apache.flink.cep.nfa.sharedbuffer.EventId):org.apache.flink.cep.nfa.sharedbuffer.EventId \t org.apache.flink.cep.nfa.sharedbuffer.EventId"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.NFAStateSerializer",
    "source_method": "serializeSingleComputationState",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.NFAStateSerializer",
    "source_method": "deserializeSingleComputationState",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.NFAStateSerializer",
    "source_method": "copySingleComputationState",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.NFAStateSerializer",
    "source_method": "serializeStartEvent",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.NFAStateSerializer",
    "source_method": "deserializeStartEvent",
    "target_class": "org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.NFAStateSerializer",
    "source_method": "copyStartEvent",
    "target_class": "org.apache.flink.core.memory.DataOutputView):void \t org.apache.flink.api.common.typeutils.TypeSerializer"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.compiler.NFACompiler",
    "source_method": "compileFactory",
    "target_class": "boolean):org.apache.flink.cep.nfa.compiler.NFACompiler.NFAFactory<T> \t org.apache.flink.cep.nfa.compiler.NFACompiler.NFAFactoryCompiler"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.compiler.NFACompiler",
    "source_method": "canProduceEmptyMatches",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.compiler.NFACompiler.NFAFactoryCompiler",
    "source_method": "checkPatternNameUniqueness",
    "target_class": "org.apache.flink.cep.pattern.Pattern"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.compiler.NFACompiler.NFAFactoryCompiler",
    "source_method": "checkPatternNameUniqueness",
    "target_class": "org.apache.flink.cep.pattern.Pattern"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.compiler.NFAStateNameHandler",
    "source_method": "getOriginalNameFromInternal",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBufferAccessor",
    "source_method": "advanceTime",
    "target_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBuffer"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBufferAccessor",
    "source_method": "extractPatterns",
    "target_class": "org.apache.flink.cep.nfa.DeweyNumber):java.util.List<java.util.Map<java.lang.String,java.util.List<org.apache.flink.cep.nfa.sharedbuffer.EventId>>> \t org.apache.flink.cep.nfa.sharedbuffer.NodeId"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBufferAccessor",
    "source_method": "lockNode",
    "target_class": "org.apache.flink.cep.nfa.DeweyNumber):void \t org.apache.flink.cep.nfa.sharedbuffer.Lockable"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBufferAccessor",
    "source_method": "releaseNode",
    "target_class": "org.apache.flink.cep.nfa.DeweyNumber):void \t org.apache.flink.cep.nfa.sharedbuffer.SharedBufferEdge"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBuffer",
    "source_method": "migrateOldState",
    "target_class": "org.apache.flink.api.common.state.ValueState<org.apache.flink.cep.nfa.NFAState>):void \t org.apache.flink.cep.nfa.NFAState"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBuffer",
    "source_method": "copyEntries",
    "target_class": "org.apache.flink.api.common.state.MapState"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBuffer",
    "source_method": "lockPredecessorEdges",
    "target_class": "org.apache.flink.cep.nfa.sharedbuffer.Lockable"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBuffer",
    "source_method": "lockEdges",
    "target_class": "org.apache.flink.cep.nfa.DeweyNumber):void \t org.apache.flink.cep.nfa.sharedbuffer.Lockable"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBuffer",
    "source_method": "advanceTime",
    "target_class": "org.apache.flink.api.common.state.MapState"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBuffer",
    "source_method": "getEventCounters",
    "target_class": "org.apache.flink.api.common.state.MapState"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.NFA",
    "source_method": "isEquivalentState",
    "target_class": "org.apache.flink.cep.nfa.State<T>):boolean \t org.apache.flink.cep.nfa.State"
  },
  {
    "source_class": "org.apache.flink.cep.nfa.NFA.EventWrapper",
    "source_method": "getEventId",
    "target_class": "org.apache.flink.cep.nfa.sharedbuffer.SharedBufferAccessor"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.Pattern",
    "source_method": "begin",
    "target_class": "org.apache.flink.cep.nfa.aftermatch.AfterMatchSkipStrategy"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.Pattern",
    "source_method": "begin",
    "target_class": "org.apache.flink.cep.nfa.aftermatch.AfterMatchSkipStrategy):org.apache.flink.cep.pattern.Pattern<X,X> \t org.apache.flink.cep.pattern.Quantifier.ConsumingStrategy"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.Pattern",
    "source_method": "begin",
    "target_class": "org.apache.flink.cep.nfa.aftermatch.AfterMatchSkipStrategy):org.apache.flink.cep.pattern.GroupPattern<T,F> \t org.apache.flink.cep.pattern.Quantifier.ConsumingStrategy"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.Pattern",
    "source_method": "begin",
    "target_class": "org.apache.flink.cep.nfa.aftermatch.AfterMatchSkipStrategy"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.Pattern",
    "source_method": "checkIfNoNotPattern",
    "target_class": "org.apache.flink.cep.pattern.Quantifier"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.Pattern",
    "source_method": "checkIfQuantifierApplied",
    "target_class": "org.apache.flink.cep.pattern.Quantifier"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.conditions.SimpleCondition",
    "source_method": "of",
    "target_class": "org.apache.flink.api.common.functions.FilterFunction"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.conditions.BooleanConditions",
    "source_method": "trueFunction",
    "target_class": "org.apache.flink.cep.pattern.conditions.SimpleCondition"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.conditions.BooleanConditions",
    "source_method": "falseFunction",
    "target_class": "org.apache.flink.cep.pattern.conditions.SimpleCondition"
  },
  {
    "source_class": "org.apache.flink.cep.pattern.Quantifier",
    "source_method": "times",
    "target_class": "org.apache.flink.cep.pattern.Quantifier.QuantifierProperty"
  },
  {
    "source_class": "org.apache.flink.cep.operator.CepOperator",
    "source_method": "registerTimer",
    "target_class": "org.apache.flink.streaming.api.operators.InternalTimerService"
  },
  {
    "source_class": "org.apache.flink.cep.operator.CepOperator",
    "source_method": "getNFAState",
    "target_class": "org.apache.flink.cep.nfa.NFA"
  },
  {
    "source_class": "org.apache.flink.cep.operator.CepOperator",
    "source_method": "updateNFA",
    "target_class": "org.apache.flink.cep.nfa.NFAState"
  },
  {
    "source_class": "org.apache.flink.cep.operator.CepOperator",
    "source_method": "getSortedTimestamps",
    "target_class": "org.apache.flink.api.common.state.MapState"
  },
  {
    "source_class": "org.apache.flink.cep.operator.CepOperator",
    "source_method": "setTimestamp",
    "target_class": "org.apache.flink.cep.operator.CepOperator.ContextFunctionImpl"
  },
  {
    "source_class": "org.apache.flink.cep.operator.CepOperator",
    "source_method": "getLateRecordsNumber",
    "target_class": "org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.state.api.BootstrapTransformation",
    "source_method": "getConfig",
    "target_class": "org.apache.flink.runtime.state.StateBackend, org.apache.flink.configuration.Configuration, org.apache.flink.streaming.api.operators.StreamOperator<org.apache.flink.state.api.output.TaggedOperatorSubtaskState>):org.apache.flink.streaming.api.graph.StreamConfig \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.state.api.BootstrapTransformation",
    "source_method": "getParallelism",
    "target_class": "org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.WritableSavepoint",
    "source_method": "write",
    "target_class": "org.apache.flink.api.java.DataSet"
  },
  {
    "source_class": "org.apache.flink.state.api.WritableSavepoint",
    "source_method": "writeOperatorStates",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.core.fs.Path):org.apache.flink.api.java.DataSet<org.apache.flink.runtime.checkpoint.OperatorState> \t org.apache.flink.state.api.runtime.metadata.SavepointMetadata"
  },
  {
    "source_class": "org.apache.flink.state.api.ExistingSavepoint",
    "source_method": "readListState",
    "target_class": "java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation<T>):org.apache.flink.api.java.operators.DataSource<T> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.ExistingSavepoint",
    "source_method": "readListState",
    "target_class": "java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation<T>, org.apache.flink.api.common.typeutils.TypeSerializer<T>):org.apache.flink.api.java.operators.DataSource<T> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.ExistingSavepoint",
    "source_method": "readUnionState",
    "target_class": "java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation<T>):org.apache.flink.api.java.operators.DataSource<T> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.ExistingSavepoint",
    "source_method": "readUnionState",
    "target_class": "java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation<T>, org.apache.flink.api.common.typeutils.TypeSerializer<T>):org.apache.flink.api.java.operators.DataSource<T> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.ExistingSavepoint",
    "source_method": "readBroadcastState",
    "target_class": "java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation<K>, org.apache.flink.api.common.typeinfo.TypeInformation<V>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple2<K,V>> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.ExistingSavepoint",
    "source_method": "readBroadcastState",
    "target_class": "java.lang.String, org.apache.flink.api.common.typeinfo.TypeInformation<K>, org.apache.flink.api.common.typeinfo.TypeInformation<V>, org.apache.flink.api.common.typeutils.TypeSerializer<K>, org.apache.flink.api.common.typeutils.TypeSerializer<V>):org.apache.flink.api.java.operators.DataSource<org.apache.flink.api.java.tuple.Tuple2<K,V>> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.ExistingSavepoint",
    "source_method": "readKeyedState",
    "target_class": "org.apache.flink.state.api.functions.KeyedStateReaderFunction<K,OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<K>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>):org.apache.flink.api.java.operators.DataSource<OUT> \t org.apache.flink.api.java.ExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.ExistingSavepoint",
    "source_method": "window",
    "target_class": "org.apache.flink.streaming.api.windowing.assigners.WindowAssigner"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointWriter",
    "source_method": "readSavepointMetadata",
    "target_class": "org.apache.flink.runtime.checkpoint.metadata.CheckpointMetadata"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointWriter",
    "source_method": "createSavepointMetadata",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointWriter",
    "source_method": "removeOperator",
    "target_class": "org.apache.flink.state.api.runtime.metadata.SavepointMetadataV2"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointWriter",
    "source_method": "withOperator",
    "target_class": "org.apache.flink.state.api.StateBootstrapTransformation<T>):org.apache.flink.state.api.SavepointWriter \t org.apache.flink.state.api.runtime.metadata.SavepointMetadataV2"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointWriter",
    "source_method": "withConfiguration",
    "target_class": "T):org.apache.flink.state.api.SavepointWriter \t org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointWriter",
    "source_method": "getFinalOperatorStates",
    "target_class": "java.util.List<org.apache.flink.runtime.checkpoint.OperatorState>, org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.runtime.checkpoint.OperatorState>, java.lang.String):org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.runtime.checkpoint.OperatorState> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointWriter",
    "source_method": "writeOperatorStates",
    "target_class": "org.apache.flink.configuration.Configuration, org.apache.flink.core.fs.Path):java.util.Optional<org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.runtime.checkpoint.OperatorState>> \t org.apache.flink.state.api.runtime.metadata.SavepointMetadataV2"
  },
  {
    "source_class": "org.apache.flink.state.api.Savepoint",
    "source_method": "load",
    "target_class": "java.lang.String):org.apache.flink.state.api.ExistingSavepoint \t org.apache.flink.runtime.checkpoint.metadata.CheckpointMetadata"
  },
  {
    "source_class": "org.apache.flink.state.api.Savepoint",
    "source_method": "load",
    "target_class": "java.lang.String, org.apache.flink.runtime.state.StateBackend):org.apache.flink.state.api.ExistingSavepoint \t org.apache.flink.runtime.checkpoint.metadata.CheckpointMetadata"
  },
  {
    "source_class": "org.apache.flink.state.api.Savepoint",
    "source_method": "create",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.api.Savepoint",
    "source_method": "create",
    "target_class": "int):org.apache.flink.state.api.NewSavepoint \t org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.api.OperatorIdentifier",
    "source_method": "forUidHash",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.api.OperatorIdentifier",
    "source_method": "forUid",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointReader",
    "source_method": "read",
    "target_class": "java.lang.String):org.apache.flink.state.api.SavepointReader \t org.apache.flink.runtime.checkpoint.metadata.CheckpointMetadata"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointReader",
    "source_method": "read",
    "target_class": "java.lang.String, org.apache.flink.runtime.state.StateBackend):org.apache.flink.state.api.SavepointReader \t org.apache.flink.runtime.checkpoint.metadata.CheckpointMetadata"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointReader",
    "source_method": "readListState",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<T>, org.apache.flink.api.common.state.ListStateDescriptor<T>):org.apache.flink.streaming.api.datastream.DataStream<T> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointReader",
    "source_method": "readUnionState",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<T>, org.apache.flink.api.common.state.ListStateDescriptor<T>):org.apache.flink.streaming.api.datastream.DataStream<T> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointReader",
    "source_method": "readBroadcastState",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<K>, org.apache.flink.api.common.typeinfo.TypeInformation<V>, org.apache.flink.api.common.state.MapStateDescriptor<K,V>):org.apache.flink.streaming.api.datastream.DataStream<org.apache.flink.api.java.tuple.Tuple2<K,V>> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointReader",
    "source_method": "readKeyedState",
    "target_class": "org.apache.flink.state.api.functions.KeyedStateReaderFunction<K,OUT>, org.apache.flink.api.common.typeinfo.TypeInformation<K>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>):org.apache.flink.streaming.api.datastream.DataStream<OUT> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.SavepointReader",
    "source_method": "window",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.input.StreamOperatorContextBuilder",
    "source_method": "build",
    "target_class": "org.apache.flink.configuration.Configuration"
  },
  {
    "source_class": "org.apache.flink.state.api.input.SourceBuilder",
    "source_method": "fromFormat",
    "target_class": "org.apache.flink.api.common.io.InputFormat<OUT,?>, org.apache.flink.api.common.typeinfo.TypeInformation<OUT>):org.apache.flink.streaming.api.datastream.DataStreamSource<OUT> \t org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.state.api.input.OperatorStateInputFormat",
    "source_method": "getOperatorStateInputSplits",
    "target_class": "org.apache.flink.runtime.checkpoint.OperatorState"
  },
  {
    "source_class": "org.apache.flink.state.api.input.operator.WindowReaderOperator",
    "source_method": "reduce",
    "target_class": "org.apache.flink.state.api.functions.WindowReaderFunction<T,OUT,KEY,W>, org.apache.flink.api.common.typeinfo.TypeInformation<KEY>, org.apache.flink.api.common.typeutils.TypeSerializer<W>, org.apache.flink.api.common.typeinfo.TypeInformation<T>):org.apache.flink.state.api.input.operator.WindowReaderOperator<?,KEY,T,W,OUT> \t org.apache.flink.state.api.input.operator.window.WindowContents"
  },
  {
    "source_class": "org.apache.flink.state.api.input.operator.WindowReaderOperator",
    "source_method": "aggregate",
    "target_class": "org.apache.flink.state.api.functions.WindowReaderFunction<R,OUT,KEY,W>, org.apache.flink.api.common.typeinfo.TypeInformation<KEY>, org.apache.flink.api.common.typeutils.TypeSerializer<W>, org.apache.flink.api.common.typeinfo.TypeInformation<ACC>):org.apache.flink.state.api.input.operator.WindowReaderOperator<?,KEY,R,W,OUT> \t org.apache.flink.state.api.input.operator.window.WindowContents"
  },
  {
    "source_class": "org.apache.flink.state.api.input.operator.WindowReaderOperator",
    "source_method": "process",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<KEY>, org.apache.flink.api.common.typeutils.TypeSerializer<W>, org.apache.flink.api.common.typeinfo.TypeInformation<T>):org.apache.flink.state.api.input.operator.WindowReaderOperator<?,KEY,T,W,OUT> \t org.apache.flink.state.api.input.operator.window.WindowContents"
  },
  {
    "source_class": "org.apache.flink.state.api.input.operator.WindowReaderOperator",
    "source_method": "evictingWindow",
    "target_class": "org.apache.flink.api.common.typeinfo.TypeInformation<KEY>, org.apache.flink.api.common.typeutils.TypeSerializer<W>, org.apache.flink.api.common.typeinfo.TypeInformation<T>, org.apache.flink.api.common.ExecutionConfig):org.apache.flink.state.api.input.operator.WindowReaderOperator<?,KEY,org.apache.flink.streaming.runtime.streamrecord.StreamRecord<T>,W,OUT> \t org.apache.flink.api.common.typeinfo.TypeInformation"
  },
  {
    "source_class": "org.apache.flink.state.api.input.operator.window.WindowContents",
    "source_method": "reducingState",
    "target_class": "org.apache.flink.api.common.state.AppendingState"
  },
  {
    "source_class": "org.apache.flink.state.api.input.operator.window.WindowContents",
    "source_method": "aggregatingState",
    "target_class": "org.apache.flink.api.common.state.AppendingState"
  },
  {
    "source_class": "org.apache.flink.state.api.input.KeyedStateInputFormat",
    "source_method": "createKeyGroupRangeInputSplit",
    "target_class": "int, org.apache.flink.runtime.state.KeyGroupRange, java.lang.Integer):org.apache.flink.state.api.input.splits.KeyGroupRangeInputSplit \t org.apache.flink.runtime.checkpoint.StateAssignmentOperation"
  },
  {
    "source_class": "org.apache.flink.state.api.input.KeyedStateInputFormat",
    "source_method": "sortedKeyGroupRanges",
    "target_class": "int):java.util.List<org.apache.flink.runtime.state.KeyGroupRange> \t org.apache.flink.runtime.checkpoint.StateAssignmentOperation"
  },
  {
    "source_class": "org.apache.flink.state.api.runtime.SavepointLoader",
    "source_method": "loadSavepointMetadata",
    "target_class": "org.apache.flink.runtime.state.filesystem.AbstractFsCheckpointStorageAccess"
  },
  {
    "source_class": "org.apache.flink.state.api.runtime.metadata.SavepointMetadataV2",
    "source_method": "getOperatorState",
    "target_class": "org.apache.flink.state.api.OperatorIdentifier"
  },
  {
    "source_class": "org.apache.flink.state.api.runtime.metadata.SavepointMetadataV2",
    "source_method": "removeOperator",
    "target_class": "org.apache.flink.state.api.OperatorIdentifier"
  },
  {
    "source_class": "org.apache.flink.state.api.runtime.metadata.SavepointMetadataV2",
    "source_method": "addOperator",
    "target_class": "org.apache.flink.state.api.StateBootstrapTransformation<?>):void \t org.apache.flink.state.api.OperatorIdentifier"
  },
  {
    "source_class": "org.apache.flink.state.api.runtime.metadata.OperatorStateSpec",
    "source_method": "existing",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.api.runtime.metadata.OperatorStateSpec",
    "source_method": "newWithTransformation",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.api.runtime.metadata.OperatorStateSpecV2",
    "source_method": "existing",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.api.runtime.metadata.OperatorStateSpecV2",
    "source_method": "newWithTransformation",
    "target_class": "org.apache.flink.util.Preconditions"
  },
  {
    "source_class": "org.apache.flink.state.api.runtime.metadata.SavepointMetadata",
    "source_method": "getOperatorState",
    "target_class": "org.apache.flink.state.api.runtime.metadata.OperatorStateSpec"
  },
  {
    "source_class": "org.apache.flink.state.api.output.SnapshotUtils",
    "source_method": "snapshot",
    "target_class": "int, long, boolean, boolean, org.apache.flink.configuration.Configuration, org.apache.flink.core.fs.Path, org.apache.flink.core.execution.SavepointFormatType):org.apache.flink.state.api.output.TaggedOperatorSubtaskState \t org.apache.flink.streaming.api.operators.StreamOperator"
  },
  {
    "source_class": "org.apache.flink.state.api.output.SnapshotUtils",
    "source_method": "createStreamFactory",
    "target_class": "org.apache.flink.runtime.checkpoint.CheckpointOptions):org.apache.flink.runtime.state.CheckpointStreamFactory \t org.apache.flink.runtime.state.filesystem.AbstractFsCheckpointStorageAccess"
  },
  {
    "source_class": "org.apache.flink.state.api.output.SavepointOutputFormat",
    "source_method": "createSavepointLocation",
    "target_class": "org.apache.flink.runtime.state.filesystem.AbstractFsCheckpointStorageAccess"
  },
  {
    "source_class": "org.apache.flink.state.api.StateBootstrapTransformation",
    "source_method": "getConfig",
    "target_class": "org.apache.flink.runtime.state.StateBackend, org.apache.flink.configuration.Configuration, org.apache.flink.streaming.api.operators.StreamOperator<org.apache.flink.state.api.output.TaggedOperatorSubtaskState>):org.apache.flink.streaming.api.graph.StreamConfig \t org.apache.flink.streaming.api.graph.StreamConfig"
  },
  {
    "source_class": "org.apache.flink.state.api.StateBootstrapTransformation",
    "source_method": "getParallelism",
    "target_class": "org.apache.flink.streaming.api.environment.StreamExecutionEnvironment"
  },
  {
    "source_class": "org.apache.flink.tools.ci.optional.ShadeOptionalChecker",
    "source_method": "isOptional",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.optional.ShadeOptionalChecker",
    "source_method": "hasProvidedScope",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.optional.ShadeOptionalChecker",
    "source_method": "hasTestScope",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.optional.ShadeOptionalChecker",
    "source_method": "isCommonCompileDependency",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.licensecheck.NoticeFileChecker",
    "source_method": "combineAndFilterFlinkDependencies",
    "target_class": "java.util.Map<java.lang.String,java.util.Set<org.apache.flink.tools.ci.utils.shared.Dependency>>):java.util.Map<java.lang.String,java.util.Set<org.apache.flink.tools.ci.utils.shared.Dependency>> \t org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.licensecheck.NoticeFileChecker",
    "source_method": "ensureRequiredNoticeFiles",
    "target_class": "java.util.Collection<java.lang.String>):int \t org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.notice.NoticeParser",
    "source_method": "tryParsing",
    "target_class": "java.lang.String):java.util.Optional<org.apache.flink.tools.ci.utils.shared.Dependency> \t org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.shade.ShadeParser",
    "source_method": "parseShadeOutput",
    "target_class": "org.apache.flink.tools.ci.utils.shared.ParserUtils"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.shade.ShadeParser",
    "source_method": "parseDependency",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.deploy.DeployParser",
    "source_method": "parseDeployOutput",
    "target_class": "org.apache.flink.tools.ci.utils.shared.ParserUtils"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.shared.DependencyTree",
    "source_method": "addTransitiveDependencyTo",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency):org.apache.flink.tools.ci.utils.shared.DependencyTree \t org.apache.flink.tools.ci.utils.shared.DependencyTree.Node"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.shared.DependencyTree",
    "source_method": "getDirectDependencies",
    "target_class": "org.apache.flink.tools.ci.utils.shared.DependencyTree.Node"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.shared.DependencyTree",
    "source_method": "getPathTo",
    "target_class": "org.apache.flink.tools.ci.utils.shared.DependencyTree.Node"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.shared.DependencyTree",
    "source_method": "getKey",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.dependency.DependencyParser",
    "source_method": "parseDependencyCopyOutput",
    "target_class": "org.apache.flink.tools.ci.utils.shared.ParserUtils"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.dependency.DependencyParser",
    "source_method": "parseDependencyTreeOutput",
    "target_class": "org.apache.flink.tools.ci.utils.shared.ParserUtils"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.dependency.DependencyParser",
    "source_method": "parseTreeDependencyBlock",
    "target_class": "org.apache.flink.tools.ci.utils.shared.DependencyTree"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.dependency.DependencyParser",
    "source_method": "parseCopyDependency",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.utils.dependency.DependencyParser",
    "source_method": "parseTreeDependency",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.tools.ci.suffixcheck.ScalaSuffixChecker",
    "source_method": "dependsOnScala",
    "target_class": "org.apache.flink.tools.ci.utils.shared.Dependency"
  },
  {
    "source_class": "org.apache.flink.metrics.statsd.StatsDReporter",
    "source_method": "reportCounter",
    "target_class": "org.apache.flink.metrics.Counter):void \t org.apache.flink.metrics.Counter"
  },
  {
    "source_class": "org.apache.flink.metrics.statsd.StatsDReporter",
    "source_method": "reportHistogram",
    "target_class": "org.apache.flink.metrics.Histogram):void \t org.apache.flink.metrics.Histogram"
  },
  {
    "source_class": "org.apache.flink.metrics.influxdb.MetricMapper",
    "source_method": "map",
    "target_class": "java.time.Instant, org.apache.flink.metrics.Histogram):org.apache.flink.metrics.influxdb.Point \t org.apache.flink.metrics.HistogramStatistics"
  },
  {
    "source_class": "org.apache.flink.metrics.influxdb.InfluxdbReporterOptions",
    "source_method": "getString",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.String>):java.lang.String \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.metrics.influxdb.InfluxdbReporterOptions",
    "source_method": "getInteger",
    "target_class": "org.apache.flink.configuration.ConfigOption<java.lang.Integer>):int \t org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.metrics.influxdb.InfluxdbReporterOptions",
    "source_method": "getScheme",
    "target_class": "org.apache.flink.configuration.ConfigOption"
  },
  {
    "source_class": "org.apache.flink.metrics.datadog.DatadogHttpReporter",
    "source_method": "getTagsFromMetricGroup",
    "target_class": "org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.metrics.datadog.DatadogHttpReporter",
    "source_method": "getHostFromMetricGroup",
    "target_class": "org.apache.flink.metrics.MetricGroup"
  },
  {
    "source_class": "org.apache.flink.metrics.datadog.DHistogram",
    "source_method": "addTo",
    "target_class": "org.apache.flink.metrics.datadog.DSeries"
  },
  {
    "source_class": "org.apache.flink.metrics.prometheus.PrometheusPushGatewayReporterFactory",
    "source_method": "parseGroupingKey",
    "target_class": "org.apache.flink.util.StringUtils"
  }
]