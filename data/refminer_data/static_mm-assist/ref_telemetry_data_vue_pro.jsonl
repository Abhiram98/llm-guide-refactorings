{"id":"70372912-3c5f-4876-96c4-c87675aa556f","methodCount":4,"hostFunctionTelemetryData":{"hostFunctionSize":112,"lineStart":20,"lineEnd":131,"bodyLineStart":20,"language":"java","filePath":"/Users/fraolbatole/Documents/RunRefMiner/MM-Assist-oracle/ruoyi-vue-pro/yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmQueryWrapperUtils.java","sourceCode":"/**\n * CRM 查询工具类\n *\n * @author HUIHUI\n */\npublic class CrmQueryWrapperUtils {\n\n    /**\n     * 构造 CRM 数据类型数据分页查询条件\n     *\n     * @param query     连表查询对象\n     * @param bizType   数据类型 {@link CrmBizTypeEnum}\n     * @param bizId     数据编号\n     * @param userId    用户编号\n     * @param sceneType 场景类型\n     * @param pool      公海\n     * @return 是否 （是：需要执行查询，否：不需要查询调用方法直接返回空）\n     */\n    // TODO @puhui999：bizId 直接传递会不会简单点 回复：还是需要 SFunction 因为分页连表时不知道 bizId 是多少；是不是把 bizId 传入就好啦？\n    public static \u003cT extends MPJLambdaWrapper\u003c?\u003e, S\u003e boolean appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool) {\n        // 1. 构建数据权限连表条件\n        if (ObjUtil.notEqual(validateAdminUser(userId), Boolean.TRUE)) { // 管理员不需要数据权限\n            query.innerJoin(CrmPermissionDO.class, on -\u003e on.eq(CrmPermissionDO::getBizType, bizType)\n                    .eq(CrmPermissionDO::getBizId, bizId)\n                    .eq(CrmPermissionDO::getUserId, userId));\n        }\n        // 2.1 场景一：我负责的数据\n        if (CrmSceneTypeEnum.isOwner(sceneType)) {\n            query.eq(\"owner_user_id\", userId);\n        }\n        // 2.2 场景二：我参与的数据\n        if (CrmSceneTypeEnum.isInvolved(sceneType)) {\n            query.ne(\"owner_user_id\", userId)\n                    // TODO @puhui999：IN 是不是更合适哈；\n                    .and(q -\u003e q.eq(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.READ.getLevel())\n                            .or()\n                            .eq(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.WRITE.getLevel()));\n        }\n        // 2.3 场景三：下属负责的数据\n        if (CrmSceneTypeEnum.isSubordinate(sceneType)) {\n            // TODO @puhui999：要不如果没有下属，拼一个 owner_user_id in null，不返回结果就好啦；\n            List\u003cAdminUserRespDTO\u003e subordinateUsers \u003d getAdminUserApi().getUserListBySubordinate(userId);\n            if (CollUtil.isEmpty(subordinateUsers)) {\n                return false;\n            }\n            query.in(\"owner_user_id\", convertSet(subordinateUsers, AdminUserRespDTO::getId));\n        }\n\n        // 3. 拼接公海的查询条件\n        if (ObjUtil.equal(pool, Boolean.TRUE)) { // 情况一：公海\n            query.isNull(\"owner_user_id\");\n        } else { // 情况二：不是公海\n            query.isNotNull(\"owner_user_id\");\n        }\n        return true;\n    }\n\n    /**\n     * 构造 CRM 数据类型批量数据查询条件\n     *\n     * @param query   连表查询对象\n     * @param bizType 数据类型 {@link CrmBizTypeEnum}\n     * @param bizIds  数据编号\n     * @param userId  用户编号\n     */\n    public static \u003cT extends MPJLambdaWrapper\u003c?\u003e\u003e void appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId) {\n        if (ObjUtil.equal(validateAdminUser(userId), Boolean.TRUE)) {// 管理员不需要数据权限\n            return;\n        }\n\n        query.innerJoin(CrmPermissionDO.class, on -\u003e\n                on.eq(CrmPermissionDO::getBizType, bizType).in(CrmPermissionDO::getBizId, bizIds)\n                        .in(CollUtil.isNotEmpty(bizIds), CrmPermissionDO::getUserId, userId));\n    }\n\n    private static AdminUserApi getAdminUserApi() {\n        return AdminUserApiHolder.ADMIN_USER_API;\n    }\n\n    /**\n     * 校验用户是否是管理员\n     *\n     * @param userId 用户编号\n     * @return 是/否\n     */\n    private static boolean validateAdminUser(Long userId) {\n        // TODO 查询权限配置表用户的角色信息\n        // TODO @puhui999：查询用户的角色;CRM_ADMIN(\"crm_admin\", \"CRM 管理员\"),\n        //CrmPermissionConfig permissionConfig \u003d crmPermissionConfigService.getPermissionConfigByUserId(userId);\n        //if (permissionConfig \u003d\u003d null) {\n        //    return false;\n        //}\n        //// 校验是否为管理员\n        //if (permissionConfig.getIsAdmin()){\n        //    return true;\n        //}\n        return false;\n    }\n\n    /**\n     * 静态内部类实现 AdminUserApi 单例获取\n     *\n     * @author HUIHUI\n     */\n    private static class AdminUserApiHolder {\n\n        private static final AdminUserApi ADMIN_USER_API \u003d SpringUtil.getBean(AdminUserApi.class);\n\n    }\n\n}","methodCount":4},"candidatesTelemetryData":{"numberOfSuggestions":9,"candidates":[{"lineStart":77,"lineEnd":93,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class MyBatisUtils","description":"move method appendPermissionCondition to PsiClass:MyBatisUtils\nRationale: The appendPermissionCondition() method is designed to build query conditions for a database operation. Moving it to MyBatisUtils aligns with the class\u0027s purpose of providing utility methods for MyBatis operations, thus improving cohesion. This adheres to the Single Responsibility Principle by keeping database-related functionalities together. However, care should be taken to ensure that any dependencies on other classes are properly managed.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":77,"lineEnd":93,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class TenantUtils","description":"move method appendPermissionCondition to PsiClass:TenantUtils\nRationale: Since the method involves permission checks that could be related to tenant-based access control, moving it to TenantUtils could provide a more contextual utility. This aligns with the Open/Closed Principle by allowing for future extensions related to tenant permissions without modifying existing code. A consideration is that the method may become too specific to tenant logic, potentially reducing reusability.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":77,"lineEnd":93,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class AssertUtils","description":"move method appendPermissionCondition to PsiClass:AssertUtils\nRationale: If the method is primarily concerned with validating permissions as assertions, moving it to AssertUtils could improve its clarity and context. This aligns with the Single Responsibility Principle. However, if it doesn\u0027t fit well within the assertion paradigm, this could lead to a lack of cohesion within AssertUtils.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":99,"lineEnd":117,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method validateAdminUser to class SecurityFrameworkUtils","description":"move method validateAdminUser to PsiClass:SecurityFrameworkUtils\nRationale: The validateAdminUser() method is related to user permissions and roles, which aligns closely with security concerns. Moving it to SecurityFrameworkUtils adheres to the Single Responsibility Principle by consolidating security-related methods in one class. This improves cohesion and makes the method more reusable across different components that require user validation. However, care must be taken to ensure that the dependencies and services used for permission checks are properly injected into this class.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":99,"lineEnd":117,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method validateAdminUser to class CrmPermissionAspect","description":"move method validateAdminUser to PsiClass:CrmPermissionAspect\nRationale: Since the validateAdminUser() method is directly related to checking user roles and permissions, it fits well within CrmPermissionAspect. This class likely deals with permission management and user roles, making it a suitable candidate for this method. Moving it here improves cohesion and aligns with the Open/Closed Principle, as new permission checks can be added without modifying existing code. A consideration is ensuring that the method does not introduce tight coupling with other services.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":99,"lineEnd":117,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method validateAdminUser to class AssertUtils","description":"move method validateAdminUser to PsiClass:AssertUtils\nRationale: Although AssertUtils primarily focuses on assertions, moving validateAdminUser() here could provide a more comprehensive utility for validating user states. This aligns with the Interface Segregation Principle, as it allows for specific validation methods to be grouped together. However, this might dilute the purpose of AssertUtils, which is primarily for assertions rather than user role validation.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":26,"lineEnd":75,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class CrmPermissionAspect","description":"move method appendPermissionCondition to PsiClass:CrmPermissionAspect\nRationale: The appendPermissionCondition() method is closely related to managing data permissions, which aligns with the responsibilities of the CrmPermissionAspect class. Moving it here adheres to the Single Responsibility Principle, as it centralizes permission-related logic. This enhances cohesion and makes the method more contextually relevant. However, care must be taken to ensure that the method\u0027s dependencies are properly managed in the new context.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":26,"lineEnd":75,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class MyBatisUtils","description":"move method appendPermissionCondition to PsiClass:MyBatisUtils\nRationale: Since the method constructs query conditions for a database operation, relocating it to MyBatisUtils would enhance its relevance. This class is already focused on database interactions, making it a suitable home for query-building methods. This move aligns with the Open/Closed Principle, as it allows for extending query capabilities without modifying existing code. However, this could lead to a bloated utility class if not managed properly.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":26,"lineEnd":75,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class SecurityFrameworkUtils","description":"move method appendPermissionCondition to PsiClass:SecurityFrameworkUtils\nRationale: The method involves user permissions and roles, making SecurityFrameworkUtils a relevant target class. This aligns with the Interface Segregation Principle by ensuring that permission-related methods are grouped together, enhancing the maintainability of security features. However, it may make the SecurityFrameworkUtils class too broad if it starts to handle too many unrelated concerns.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":-1,"suggested_move_methods":[{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool)","target_class":"","rationale":""},{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId)","target_class":"","rationale":""},{"method_name":"validateAdminUser","method_signature":"private static validateAdminUser(Long userId)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId)","target_class":"","rationale":""},{"method_name":"validateAdminUser","method_signature":"private static validateAdminUser(Long userId)","target_class":"","rationale":""},{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"public static appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId)":{"first":{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId)","target_class":"","rationale":""},"second":0.31811570975105763},"private static validateAdminUser(Long userId)":{"first":{"method_name":"validateAdminUser","method_signature":"private static validateAdminUser(Long userId)","target_class":"","rationale":""},"second":0.3489965933055916},"public static appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool)":{"first":{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool)","target_class":"","rationale":""},"second":0.3843439899316835}},"llmMethodPriority":{"priority_method_names":["appendPermissionCondition","validateAdminUser","appendPermissionCondition"],"llm_response_time":1350},"targetClassMap":{"appendPermissionCondition":{"target_classes":[{"class_name":"OAuth2Utils","similarity_score":0.6088309374212558},{"class_name":"MapUtils","similarity_score":0.5669723179727424},{"class_name":"LocalDateTimeUtils","similarity_score":0.5796892746568648},{"class_name":"NumberUtils","similarity_score":0.43249288174995254},{"class_name":"ObjectUtils","similarity_score":0.6064056609461539},{"class_name":"IoUtils","similarity_score":0.5024307893737628},{"class_name":"FileUtils","similarity_score":0.5724795904904997},{"class_name":"CollectionUtils","similarity_score":0.48992316145764037},{"class_name":"MoneyUtils","similarity_score":0.5577678637501231},{"class_name":"BeanUtils","similarity_score":0.5019692058341195},{"class_name":"DateUtils","similarity_score":0.6186725210264998},{"class_name":"CacheUtils","similarity_score":0.536745470041023},{"class_name":"HttpUtils","similarity_score":0.5859335422549631},{"class_name":"PageUtils","similarity_score":0.48265887228647736},{"class_name":"ArrayUtils","similarity_score":0.5659802230619138},{"class_name":"ServletUtils","similarity_score":0.6075968838258529},{"class_name":"SetUtils","similarity_score":0.46735693440537485},{"class_name":"JsonUtils","similarity_score":0.5211860808677897},{"class_name":"TracerUtils","similarity_score":0.49996389280045506},{"class_name":"ValidationUtils","similarity_score":0.40692225562748163},{"class_name":"StrUtils","similarity_score":0.6319084070965583},{"class_name":"SpringExpressionUtils","similarity_score":0.6059114371339082},{"class_name":"SpringAopUtils","similarity_score":0.5687961534701194},{"class_name":"CrmPermissionAspect","similarity_score":0.7448715292610948},{"class_name":"CronUtils","similarity_score":0.5685352436149611},{"class_name":"IPUtils","similarity_score":0.488400857850941},{"class_name":"DataPermissionUtils","similarity_score":0.5709797232158591},{"class_name":"SecurityFrameworkUtils","similarity_score":0.6093073593073594},{"class_name":"JdbcUtils","similarity_score":0.5615852926312354},{"class_name":"ServiceExceptionUtil","similarity_score":0.5753944429483828},{"class_name":"MyBatisUtils","similarity_score":0.6160614135343576},{"class_name":"AreaUtils","similarity_score":0.659534866665875},{"class_name":"AssertUtils","similarity_score":0.7069231356957618},{"class_name":"ExcelUtils","similarity_score":0.5577377880819979},{"class_name":"TracerFrameworkUtils","similarity_score":0.5180290483020301},{"class_name":"SimpleTrie","similarity_score":0.6727267548750726},{"class_name":"TenantUtils","similarity_score":0.6465948467893685},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.48111848169743876},{"class_name":"WebFrameworkUtils","similarity_score":0.600983086138187},{"class_name":"RandomUtils","similarity_score":0.5305135668161987},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.4377251073954808},{"class_name":"DictDataServiceImplTest","similarity_score":0.5104170226578978},{"class_name":"DictTypeServiceImplTest","similarity_score":0.5141447495408111},{"class_name":"MailLogServiceImplTest","similarity_score":0.4657025968469133},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.46568582690734023},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.47754908230705423},{"class_name":"OAuth2OpenController","similarity_score":0.3941014828834508},{"class_name":"OAuth2TokenServiceImpl","similarity_score":0.583752621827416},{"class_name":"CodegenEngine","similarity_score":0.6437832221560461}],"target_classes_sorted_by_llm":["CrmPermissionAspect","MyBatisUtils","SecurityFrameworkUtils","AssertUtils","TenantUtils","DateUtils","CodegenEngine","StrUtils","AreaUtils","SimpleTrie"],"llm_response_time":8841,"similarity_computation_time":13,"similarity_metric":"voyage"},"validateAdminUser":{"target_classes":[{"class_name":"OAuth2Utils","similarity_score":0.4715646536793477},{"class_name":"NumberUtils","similarity_score":0.4360332556124589},{"class_name":"BeanUtils","similarity_score":0.43825049008927763},{"class_name":"ObjectUtils","similarity_score":0.4932398037943546},{"class_name":"IoUtils","similarity_score":0.47767040319084775},{"class_name":"ArrayUtils","similarity_score":0.4935916062593246},{"class_name":"FileUtils","similarity_score":0.5630122106881045},{"class_name":"CollectionUtils","similarity_score":0.3654517847704919},{"class_name":"TracerUtils","similarity_score":0.4975655973029363},{"class_name":"DateUtils","similarity_score":0.5807954605204207},{"class_name":"HttpUtils","similarity_score":0.4294798889913062},{"class_name":"LocalDateTimeUtils","similarity_score":0.5651443129381131},{"class_name":"PageUtils","similarity_score":0.43516891051214646},{"class_name":"ServletUtils","similarity_score":0.5469754812612343},{"class_name":"CacheUtils","similarity_score":0.4893560258812953},{"class_name":"SetUtils","similarity_score":0.41590019592802907},{"class_name":"JsonUtils","similarity_score":0.3809469927100049},{"class_name":"ValidationUtils","similarity_score":0.3524561704846094},{"class_name":"MapUtils","similarity_score":0.4596114824457873},{"class_name":"SpringAopUtils","similarity_score":0.5234757808487165},{"class_name":"SpringExpressionUtils","similarity_score":0.562440991821405},{"class_name":"StrUtils","similarity_score":0.5586540926908493},{"class_name":"MoneyUtils","similarity_score":0.5346175707469014},{"class_name":"TenantUtils","similarity_score":0.5274534194952658},{"class_name":"IPUtils","similarity_score":0.48556001923212816},{"class_name":"AssertUtils","similarity_score":0.6026505639799669},{"class_name":"ExcelUtils","similarity_score":0.4920015154284375},{"class_name":"AreaUtils","similarity_score":0.614613060803413},{"class_name":"TracerFrameworkUtils","similarity_score":0.4225771273642583},{"class_name":"SecurityFrameworkUtils","similarity_score":0.580023075124402},{"class_name":"CrmPermissionAspect","similarity_score":0.5761386739600728},{"class_name":"CronUtils","similarity_score":0.5167801547999514},{"class_name":"JdbcUtils","similarity_score":0.5363212185231927},{"class_name":"ServiceExceptionUtil","similarity_score":0.503508560321734},{"class_name":"DataPermissionUtils","similarity_score":0.4782248956397016},{"class_name":"SimpleTrie","similarity_score":0.5927404141509358},{"class_name":"WebFrameworkUtils","similarity_score":0.5386111553847056},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.48684408939821205},{"class_name":"RandomUtils","similarity_score":0.4391253872310437},{"class_name":"MyBatisUtils","similarity_score":0.5337385847743039},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.3616796154823609},{"class_name":"DictDataServiceImplTest","similarity_score":0.40802179164326285},{"class_name":"DictTypeServiceImplTest","similarity_score":0.39809632135200806},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.34514689378101554},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.4050496953855445},{"class_name":"OAuth2OpenController","similarity_score":0.392231001770954},{"class_name":"OAuth2TokenServiceImpl","similarity_score":0.45657803100204875},{"class_name":"TenantServiceImpl","similarity_score":0.46809250421915366},{"class_name":"ErrorCodeServiceTest","similarity_score":0.42817839363706683}],"target_classes_sorted_by_llm":["SecurityFrameworkUtils","CrmPermissionAspect","AssertUtils","AreaUtils","DateUtils","FileUtils","LocalDateTimeUtils","SpringExpressionUtils","StrUtils","SimpleTrie"],"llm_response_time":9704,"similarity_computation_time":31,"similarity_metric":"voyage"}}}
{"id":"821eb963-e94a-4666-bd38-de9d4c326cb8","methodCount":4,"hostFunctionTelemetryData":{"hostFunctionSize":48,"lineStart":25,"lineEnd":72,"bodyLineStart":25,"language":"java","filePath":"/Users/fraolbatole/Documents/RunRefMiner/MM-Assist-oracle/ruoyi-vue-pro/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/api/logger/OperateLogApiImpl.java","sourceCode":"/**\n * 操作日志 API 实现类\n *\n * @author 芋道源码\n */\n@Service\n@Validated\npublic class OperateLogApiImpl implements OperateLogApi {\n\n    @Resource\n    private OperateLogService operateLogService;\n    @Resource\n    private AdminUserService adminUserService;\n\n    @Override\n    public void createOperateLog(OperateLogCreateReqDTO createReqDTO) {\n        operateLogService.createOperateLog(createReqDTO);\n    }\n\n    @Override\n    @Async\n    public void createOperateLogV2(OperateLogV2CreateReqDTO createReqDTO) {\n        operateLogService.createOperateLogV2(createReqDTO);\n    }\n\n    @Override\n    public PageResult\u003cOperateLogV2RespDTO\u003e getOperateLogPage(OperateLogV2PageReqDTO pageReqVO) {\n        PageResult\u003cOperateLogV2DO\u003e operateLogPage \u003d operateLogService.getOperateLogPage(pageReqVO);\n        if (CollUtil.isEmpty(operateLogPage.getList())) {\n            return PageResult.empty();\n        }\n\n        // 获取用户\n        List\u003cAdminUserDO\u003e userList \u003d adminUserService.getUserList(convertSet(operateLogPage.getList(), OperateLogV2DO::getUserId));\n        return BeanUtils.toBean(operateLogPage, OperateLogV2RespDTO.class).setList(setUserInfo(operateLogPage.getList(), userList));\n    }\n\n    // TODO @puhui999：这种 convert 还是放到 convert 类里，\n    private static List\u003cOperateLogV2RespDTO\u003e setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList) {\n        Map\u003cLong, AdminUserDO\u003e userMap \u003d convertMap(userList, AdminUserDO::getId);\n        return convertList(logList, item -\u003e {\n            OperateLogV2RespDTO respDTO \u003d BeanUtils.toBean(item, OperateLogV2RespDTO.class);\n            findAndThen(userMap, item.getUserId(), user -\u003e respDTO.setUserName(user.getNickname()));\n            return respDTO;\n        });\n    }\n\n}","methodCount":4},"candidatesTelemetryData":{"numberOfSuggestions":3,"candidates":[{"lineStart":61,"lineEnd":69,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method setUserInfo to class CollectionUtils","description":"move method setUserInfo to PsiClass:CollectionUtils\nRationale: The setUserInfo() method is primarily focused on transforming collections of logs and users into a different format. Since CollectionUtils already has multiple utility methods for converting and filtering collections, moving this method here would adhere to the Single Responsibility Principle by centralizing collection-related transformations. This enhances cohesion and reusability of the method. A potential drawback is that it may clutter the utility class if not managed properly.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":61,"lineEnd":69,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method setUserInfo to class RandomUtils","description":"move method setUserInfo to PsiClass:RandomUtils\nRationale: Though RandomUtils is primarily for generating random data, if the method setUserInfo() could be used in a context where random test data is generated, it makes sense to place it here. However, this would only be appropriate if the method\u0027s usage context aligns with random data generation. This move might not fully align with the Single Responsibility Principle, as it mixes utility functions with data transformation.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":61,"lineEnd":69,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method setUserInfo to class HttpUtils","description":"move method setUserInfo to PsiClass:HttpUtils\nRationale: If the setUserInfo() method is part of a broader context involving HTTP responses and user information, moving it to HttpUtils could consolidate related functionalities. However, this class mainly deals with HTTP operations and not data transformation, making this a less ideal choice. This move could lead to a violation of the Single Responsibility Principle.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":-1,"suggested_move_methods":[{"method_name":"setUserInfo","method_signature":"private static setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"setUserInfo","method_signature":"private static setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"private static setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)":{"first":{"method_name":"setUserInfo","method_signature":"private static setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)","target_class":"","rationale":""},"second":0.32423322779989555}},"llmMethodPriority":{"priority_method_names":["setUserInfo"],"llm_response_time":873},"targetClassMap":{"setUserInfo":{"target_classes":[{"class_name":"OAuth2Utils","similarity_score":0.24902982761034387},{"class_name":"SingletonManager","similarity_score":0.35355339059327373},{"class_name":"CrmPermissionUtils","similarity_score":0.268833380424899},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.2929947819131522},{"class_name":"CronUtils","similarity_score":0.26},{"class_name":"NumberUtils","similarity_score":0.145},{"class_name":"TenantUtils","similarity_score":0.2280215288515179},{"class_name":"ObjectUtils","similarity_score":0.33375249583609284},{"class_name":"IoUtils","similarity_score":0.1068103492374468},{"class_name":"IPUtils","similarity_score":0.18888111940046642},{"class_name":"FileUtils","similarity_score":0.21079818004370826},{"class_name":"SpringAopUtils","similarity_score":0.35115822916575373},{"class_name":"SpringExpressionUtils","similarity_score":0.33319725113401716},{"class_name":"CollectionUtils","similarity_score":0.376050455665976},{"class_name":"ExcelUtils","similarity_score":0.1277592193777817},{"class_name":"DataPermissionUtils","similarity_score":0.3208030125549347},{"class_name":"BeanUtils","similarity_score":0.2939873661036668},{"class_name":"TracerFrameworkUtils","similarity_score":0.2456769074559977},{"class_name":"TracerUtils","similarity_score":0.14226567034279153},{"class_name":"SecurityFrameworkUtils","similarity_score":0.29137431235266753},{"class_name":"DateUtils","similarity_score":0.27981041544275326},{"class_name":"LocalDateTimeUtils","similarity_score":0.22179243810433674},{"class_name":"JdbcUtils","similarity_score":0.20237355602888257},{"class_name":"HttpUtils","similarity_score":0.37794270859336176},{"class_name":"PageUtils","similarity_score":0.18766297265136728},{"class_name":"ServiceExceptionUtil","similarity_score":0.28910292249502756},{"class_name":"ArrayUtils","similarity_score":0.31083919406376354},{"class_name":"ServletUtils","similarity_score":0.3327801641384986},{"class_name":"AreaUtils","similarity_score":0.3083249379342921},{"class_name":"AssertUtils","similarity_score":0.27353611548110407},{"class_name":"CacheUtils","similarity_score":0.2246057906511536},{"class_name":"SetUtils","similarity_score":0.20924574973887472},{"class_name":"StrUtils","similarity_score":0.3150127590242697},{"class_name":"JsonUtils","similarity_score":0.3523583366166244},{"class_name":"MapUtils","similarity_score":0.2501437826801545},{"class_name":"MyBatisUtils","similarity_score":0.26969452188566073},{"class_name":"MoneyUtils","similarity_score":0.13353332890039024},{"class_name":"ValidationUtils","similarity_score":0.3602815800195847},{"class_name":"RandomUtils","similarity_score":0.48953404416538976},{"class_name":"WebFrameworkUtils","similarity_score":0.3655254723924749},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.1852964218448318},{"class_name":"SimpleTrie","similarity_score":0.3102833427262501},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.34395245244173855},{"class_name":"DictDataServiceImplTest","similarity_score":0.38070480749886954},{"class_name":"DictTypeServiceImplTest","similarity_score":0.3609236495604711},{"class_name":"SmsLogServiceImplTest","similarity_score":0.3831744063717252},{"class_name":"SmsTemplateServiceImplTest","similarity_score":0.3666508167533815},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.3407445820978047},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.31180478223116176}],"target_classes_sorted_by_llm":["CollectionUtils","RandomUtils","HttpUtils","WebFrameworkUtils","ValidationUtils","SingletonManager","SmsLogServiceImplTest","DictDataServiceImplTest","DictTypeServiceImplTest","SmsTemplateServiceImplTest"],"llm_response_time":10516,"similarity_computation_time":23,"similarity_metric":"voyage"}}}
{"id":"3ea38e7f-c7b0-4876-a79b-a20ac654bceb","methodCount":8,"hostFunctionTelemetryData":{"hostFunctionSize":111,"lineStart":26,"lineEnd":136,"bodyLineStart":26,"language":"java","filePath":"/Users/fraolbatole/Documents/RunRefMiner/MM-Assist-oracle/ruoyi-vue-pro/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java","sourceCode":"/**\n * MyBatis 工具类\n */\npublic class MyBatisUtils {\n\n    private static final String MYSQL_ESCAPE_CHARACTER \u003d \"`\";\n\n    public static \u003cT\u003e Page\u003cT\u003e buildPage(PageParam pageParam) {\n        return buildPage(pageParam, null);\n    }\n\n    public static \u003cT\u003e Page\u003cT\u003e buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields) {\n        // 页码 + 数量\n        Page\u003cT\u003e page \u003d new Page\u003c\u003e(pageParam.getPageNo(), pageParam.getPageSize());\n        // 排序字段\n        if (!CollectionUtil.isEmpty(sortingFields)) {\n            page.addOrder(sortingFields.stream().map(sortingField -\u003e SortingField.ORDER_ASC.equals(sortingField.getOrder()) ?\n                    OrderItem.asc(sortingField.getField()) : OrderItem.desc(sortingField.getField()))\n                    .collect(Collectors.toList()));\n        }\n        return page;\n    }\n\n    /**\n     * 将拦截器添加到链中\n     * 由于 MybatisPlusInterceptor 不支持添加拦截器，所以只能全量设置\n     *\n     * @param interceptor 链\n     * @param inner       拦截器\n     * @param index       位置\n     */\n    public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index) {\n        List\u003cInnerInterceptor\u003e inners \u003d new ArrayList\u003c\u003e(interceptor.getInterceptors());\n        inners.add(index, inner);\n        interceptor.setInterceptors(inners);\n    }\n\n    /**\n     * 获得 Table 对应的表名\n     *\n     * 兼容 MySQL 转义表名 `t_xxx`\n     *\n     * @param table 表\n     * @return 去除转移字符后的表名\n     */\n    public static String getTableName(Table table) {\n        String tableName \u003d table.getName();\n        if (tableName.startsWith(MYSQL_ESCAPE_CHARACTER) \u0026\u0026 tableName.endsWith(MYSQL_ESCAPE_CHARACTER)) {\n            tableName \u003d tableName.substring(1, tableName.length() - 1);\n        }\n        return tableName;\n    }\n\n    /**\n     * 构建 Column 对象\n     *\n     * @param tableName  表名\n     * @param tableAlias 别名\n     * @param column     字段名\n     * @return Column 对象\n     */\n    public static Column buildColumn(String tableName, Alias tableAlias, String column) {\n        if (tableAlias !\u003d null) {\n            tableName \u003d tableAlias.getName();\n        }\n        return new Column(tableName + StringPool.DOT + column);\n    }\n\n\n    /**\n     * 构建排序字段（默认倒序）\n     *\n     * @param func 排序字段的 Lambda 表达式\n     * @param \u003cT\u003e  排序字段所属的类型\n     * @return 排序字段\n     */\n    public static \u003cT\u003e SortingField buildSortingField(Func1\u003cT, ?\u003e func) {\n        return buildSortingField(func, SortingField.ORDER_DESC);\n    }\n\n    /**\n     * 构建排序字段\n     *\n     * @param func  排序字段的 Lambda 表达式\n     * @param order 排序类型 {@link SortingField#ORDER_ASC} {@link SortingField#ORDER_DESC}\n     * @param \u003cT\u003e   排序字段所属的类型\n     * @return 排序字段\n     */\n    public static \u003cT\u003e SortingField buildSortingField(Func1\u003cT, ?\u003e func, String order) {\n        Object[] orderTypes \u003d {SortingField.ORDER_ASC, SortingField.ORDER_DESC};\n        Assert.isTrue(ArrayUtil.contains(orderTypes, order), String.format(\"字段的排序类型只能是%s/%s\", orderTypes));\n\n        String fieldName \u003d LambdaUtil.getFieldName(func);\n        return new SortingField(fieldName, order);\n    }\n\n    /**\n     * 构建默认的排序字段\n     * 如果排序字段为空，则设置排序字段；否则忽略\n     *\n     * @param sortablePageParam 排序分页查询参数\n     * @param func              排序字段的 Lambda 表达式\n     * @param \u003cT\u003e               排序字段所属的类型\n     */\n    public static \u003cT\u003e void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func) {\n        if (sortablePageParam !\u003d null \u0026\u0026 CollUtil.isEmpty(sortablePageParam.getSortingFields())) {\n            sortablePageParam.setSortingFields(List.of(buildSortingField(func)));\n        }\n    }\n\n}","methodCount":8},"candidatesTelemetryData":{"numberOfSuggestions":9,"candidates":[{"lineStart":36,"lineEnd":46,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method buildPage to class CollectionUtils","description":"move method buildPage to PsiClass:CollectionUtils\nRationale: The buildPage() method operates on collections and involves sorting, which aligns closely with the responsibilities of CollectionUtils. Moving this method here adheres to the Single Responsibility Principle, as it centralizes collection-related utilities. This enhances cohesion and reusability of collection operations. However, care should be taken to ensure that the method\u0027s static nature does not conflict with existing instance methods.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":36,"lineEnd":46,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method buildPage to class RandomUtils","description":"move method buildPage to PsiClass:RandomUtils\nRationale: Although RandomUtils primarily deals with random data generation, it could be argued that building a page may require randomness in some contexts (e.g., pagination of random datasets). However, this is a less direct fit than CollectionUtils. The move could add utility for generating random pages but may dilute the class\u0027s focus on randomness. The method\u0027s relevance to RandomUtils is weak, but it could serve niche use cases.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":36,"lineEnd":46,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method buildPage to class ObjectUtils","description":"move method buildPage to PsiClass:ObjectUtils\nRationale: ObjectUtils deals with various object-related operations. While not directly related to pagination or sorting, the utility nature of buildPage() aligns with the general purpose of ObjectUtils. This could promote reuse of utility methods across different object types. However, the move may introduce ambiguity regarding the class\u0027s responsibilities and dilute its focus.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":48,"lineEnd":60,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method addInterceptor to class JdbcUtils","description":"move method addInterceptor to PsiClass:JdbcUtils\nRationale: The addInterceptor() method deals with the configuration of interceptors, which is closely related to database operations and connection management. Moving it to JdbcUtils aligns with the Single Responsibility Principle, as JdbcUtils is responsible for database utilities. This would improve cohesion by grouping related functionalities together. However, care must be taken to ensure that the method does not introduce unnecessary dependencies on the database context.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":48,"lineEnd":60,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method addInterceptor to class TenantUtils","description":"move method addInterceptor to PsiClass:TenantUtils\nRationale: The method\u0027s purpose is to manage interceptors, which can be relevant in multi-tenant applications where interceptors may be used to handle tenant-specific logic. Relocating it to TenantUtils would enhance the class\u0027s utility in such contexts. This adheres to the Open/Closed Principle by allowing the class to be extended with additional tenant-related functionalities. However, it may lead to a bloated TenantUtils if not managed properly.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":48,"lineEnd":60,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method addInterceptor to class WebSocketFrameworkUtils","description":"move method addInterceptor to PsiClass:WebSocketFrameworkUtils\nRationale: If the interceptors are used in a WebSocket context, it makes sense to move the method here. This class is responsible for user session management and could benefit from having interceptor management as part of its functionality. This move supports the Interface Segregation Principle by keeping related functionalities together. However, it may obscure the class\u0027s primary purpose if not clearly documented.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":105,"lineEnd":119,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method buildSortingField to class AssertUtils","description":"move method buildSortingField to PsiClass:AssertUtils\nRationale: The method uses Assert.isTrue() to validate the order type, indicating a dependency on assertions. Moving buildSortingField() to AssertUtils could centralize validation logic related to sorting fields. This aligns with the Open/Closed Principle, allowing for easy extension of assertion logic. However, this may dilute the focus of AssertUtils, which primarily deals with assertions.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":105,"lineEnd":119,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method buildSortingField to class DateUtils","description":"move method buildSortingField to PsiClass:DateUtils\nRationale: The method\u0027s functionality involves creating a sorting field, which may be related to date sorting. DateUtils has methods for date manipulations, making it a potential candidate. This move would enhance cohesion regarding date-related operations. However, it may introduce confusion if the class\u0027s primary focus is not sorting.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":105,"lineEnd":119,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method buildSortingField to class JdbcUtils","description":"move method buildSortingField to PsiClass:JdbcUtils\nRationale: If sorting fields are often used in database queries, moving buildSortingField() to JdbcUtils could provide a more relevant context. This aligns with the Interface Segregation Principle, allowing specific utilities to manage their own sorting logic. However, it may risk overloading JdbcUtils with responsibilities that don\u0027t directly pertain to database operations.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":-1,"suggested_move_methods":[{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam)","target_class":"","rationale":""},{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields)","target_class":"","rationale":""},{"method_name":"addInterceptor","method_signature":"public static addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)","target_class":"","rationale":""},{"method_name":"getTableName","method_signature":"public static getTableName(Table table)","target_class":"","rationale":""},{"method_name":"buildColumn","method_signature":"public static buildColumn(String tableName, Alias tableAlias, String column)","target_class":"","rationale":""},{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func, String order)","target_class":"","rationale":""},{"method_name":"buildDefaultSortingField","method_signature":"public static buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields)","target_class":"","rationale":""},{"method_name":"addInterceptor","method_signature":"public static addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)","target_class":"","rationale":""},{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func, String order)","target_class":"","rationale":""},{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam)","target_class":"","rationale":""},{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},{"method_name":"buildDefaultSortingField","method_signature":"public static buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},{"method_name":"getTableName","method_signature":"public static getTableName(Table table)","target_class":"","rationale":""},{"method_name":"buildColumn","method_signature":"public static buildColumn(String tableName, Alias tableAlias, String column)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"public static buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields)":{"first":{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields)","target_class":"","rationale":""},"second":0.2338657973499652},"public static addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)":{"first":{"method_name":"addInterceptor","method_signature":"public static addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)","target_class":"","rationale":""},"second":0.2399369106984956},"public static buildSortingField(Func1\u003cT, ?\u003e func, String order)":{"first":{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func, String order)","target_class":"","rationale":""},"second":0.24093544077473367},"public static buildPage(PageParam pageParam)":{"first":{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam)","target_class":"","rationale":""},"second":0.2583012886763294},"public static buildSortingField(Func1\u003cT, ?\u003e func)":{"first":{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},"second":0.28658141295275935},"public static buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)":{"first":{"method_name":"buildDefaultSortingField","method_signature":"public static buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},"second":0.28866010686713695},"public static getTableName(Table table)":{"first":{"method_name":"getTableName","method_signature":"public static getTableName(Table table)","target_class":"","rationale":""},"second":0.3123310849040635},"public static buildColumn(String tableName, Alias tableAlias, String column)":{"first":{"method_name":"buildColumn","method_signature":"public static buildColumn(String tableName, Alias tableAlias, String column)","target_class":"","rationale":""},"second":0.3144188796071538}},"llmMethodPriority":{"priority_method_names":["buildPage","addInterceptor","buildSortingField","buildPage","buildSortingField","buildDefaultSortingField","getTableName","buildColumn"],"llm_response_time":2160},"targetClassMap":{"buildPage":{"target_classes":[{"class_name":"JdbcUtils","similarity_score":0.23970103953772243},{"class_name":"CronUtils","similarity_score":0.34112114616897665},{"class_name":"ExcelUtils","similarity_score":0.252218856848462},{"class_name":"DataPermissionUtils","similarity_score":0.3847243054823436},{"class_name":"RandomUtils","similarity_score":0.564320803917231},{"class_name":"SecurityFrameworkUtils","similarity_score":0.3787878787878788},{"class_name":"AssertUtils","similarity_score":0.34304762217471985},{"class_name":"WebFrameworkUtils","similarity_score":0.42557677497468005},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.2518464779559907},{"class_name":"TracerFrameworkUtils","similarity_score":0.3424747597107866},{"class_name":"TenantUtils","similarity_score":0.3143169394114986},{"class_name":"IPUtils","similarity_score":0.2136753753097867},{"class_name":"AreaUtils","similarity_score":0.3847286722217605},{"class_name":"ServiceExceptionUtil","similarity_score":0.3692114342252123},{"class_name":"DateUtils","similarity_score":0.3643533460796867},{"class_name":"FileUtils","similarity_score":0.29025250265523},{"class_name":"IoUtils","similarity_score":0.15181361981077723},{"class_name":"CollectionUtils","similarity_score":0.5082815797001805},{"class_name":"BeanUtils","similarity_score":0.4187871214128062},{"class_name":"ArrayUtils","similarity_score":0.41779631011479457},{"class_name":"CacheUtils","similarity_score":0.3433867185880575},{"class_name":"LocalDateTimeUtils","similarity_score":0.27492038770989524},{"class_name":"HttpUtils","similarity_score":0.4557260884205268},{"class_name":"PageUtils","similarity_score":0.2667325346846322},{"class_name":"NumberUtils","similarity_score":0.15457051935781754},{"class_name":"ServletUtils","similarity_score":0.4272196005874054},{"class_name":"SetUtils","similarity_score":0.3221930381127963},{"class_name":"ValidationUtils","similarity_score":0.416066575978661},{"class_name":"ObjectUtils","similarity_score":0.4723304208814696},{"class_name":"TracerUtils","similarity_score":0.18665318664550323},{"class_name":"JsonUtils","similarity_score":0.48160569042472107},{"class_name":"MapUtils","similarity_score":0.30386172666351663},{"class_name":"SpringAopUtils","similarity_score":0.39135119960978304},{"class_name":"MoneyUtils","similarity_score":0.18708463763285385},{"class_name":"SpringExpressionUtils","similarity_score":0.37085958652161627},{"class_name":"StrUtils","similarity_score":0.3937020965680127},{"class_name":"EncryptTypeHandler","similarity_score":0.4025283041019353},{"class_name":"SqlConstants","similarity_score":0.27477403519260085},{"class_name":"CrmPermissionUtils","similarity_score":0.27785644284835925},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.41994773777349353},{"class_name":"OAuth2Utils","similarity_score":0.36232615551921543},{"class_name":"SingletonManager","similarity_score":0.3467380462644282},{"class_name":"ExpressionIdempotentKeyResolver","similarity_score":0.46967496346459836},{"class_name":"DictConvert","similarity_score":0.46340100345861085},{"class_name":"ContextHolder","similarity_score":0.38043727971098684},{"class_name":"DataPermissionContextHolder","similarity_score":0.24040904335659663},{"class_name":"IdempotentRedisDAO","similarity_score":0.2558831578595795},{"class_name":"IdTypeEnvironmentPostProcessor","similarity_score":0.5012577647417465},{"class_name":"ILogRecordServiceImpl","similarity_score":0.4610054485521032}],"target_classes_sorted_by_llm":["CollectionUtils","RandomUtils","ObjectUtils","HttpUtils","ServletUtils","JsonUtils","DictConvert","ILogRecordServiceImpl","ExpressionIdempotentKeyResolver","IdTypeEnvironmentPostProcessor"],"llm_response_time":11087,"similarity_computation_time":128,"similarity_metric":"voyage"},"addInterceptor":{"target_classes":[{"class_name":"JdbcUtils","similarity_score":0.6869840411086889},{"class_name":"TenantUtils","similarity_score":0.6983452452117092},{"class_name":"WebFrameworkUtils","similarity_score":0.5593174603973814},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.6425121698551843},{"class_name":"ExcelUtils","similarity_score":0.598306943954691},{"class_name":"TracerFrameworkUtils","similarity_score":0.5518254055364691},{"class_name":"SecurityFrameworkUtils","similarity_score":0.6254251610789091},{"class_name":"AssertUtils","similarity_score":0.6786522658719175},{"class_name":"DataPermissionUtils","similarity_score":0.5204112059969136},{"class_name":"CronUtils","similarity_score":0.6218487810012563},{"class_name":"RandomUtils","similarity_score":0.25162811071707825},{"class_name":"IPUtils","similarity_score":0.6378239772692074},{"class_name":"ServiceExceptionUtil","similarity_score":0.6129333342679613},{"class_name":"AreaUtils","similarity_score":0.6378125294177287},{"class_name":"MapUtils","similarity_score":0.6275540033118727},{"class_name":"ValidationUtils","similarity_score":0.3409314411884125},{"class_name":"NumberUtils","similarity_score":0.6488856845230501},{"class_name":"IoUtils","similarity_score":0.6834509954326605},{"class_name":"ObjectUtils","similarity_score":0.42473311900196203},{"class_name":"SpringAopUtils","similarity_score":0.45313376004456124},{"class_name":"FileUtils","similarity_score":0.641174631346288},{"class_name":"SpringExpressionUtils","similarity_score":0.5882100203074948},{"class_name":"CollectionUtils","similarity_score":0.23715451894589432},{"class_name":"MoneyUtils","similarity_score":0.7488851235107663},{"class_name":"TracerUtils","similarity_score":0.66572709291716},{"class_name":"LocalDateTimeUtils","similarity_score":0.7133141986233539},{"class_name":"HttpUtils","similarity_score":0.3944972670967989},{"class_name":"PageUtils","similarity_score":0.5750335777679776},{"class_name":"ServletUtils","similarity_score":0.5514501891735686},{"class_name":"SetUtils","similarity_score":0.509162143323182},{"class_name":"BeanUtils","similarity_score":0.3765854419106987},{"class_name":"CacheUtils","similarity_score":0.34837082125540764},{"class_name":"ArrayUtils","similarity_score":0.5316525275004311},{"class_name":"StrUtils","similarity_score":0.5991247562310834},{"class_name":"JsonUtils","similarity_score":0.3409796261704485},{"class_name":"DateUtils","similarity_score":0.667940762871687},{"class_name":"EncryptTypeHandler","similarity_score":0.2817758658635439},{"class_name":"SqlConstants","similarity_score":0.5824139988122614},{"class_name":"SingletonManager","similarity_score":0.4014775342734831},{"class_name":"OAuth2Utils","similarity_score":0.5923216243879078},{"class_name":"CrmPermissionUtils","similarity_score":0.6179883071213349},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.6179634427022599},{"class_name":"ExpressionIdempotentKeyResolver","similarity_score":0.29594625455044954},{"class_name":"DictConvert","similarity_score":0.27048406140277037},{"class_name":"TenantContextHolder","similarity_score":0.6308537208594016},{"class_name":"IdempotentRedisDAO","similarity_score":0.5663938603238309},{"class_name":"IdTypeEnvironmentPostProcessor","similarity_score":0.2497663524261893},{"class_name":"ILogRecordServiceImpl","similarity_score":0.3257173681849407},{"class_name":"ContextHolder","similarity_score":0.45488043207663326}],"target_classes_sorted_by_llm":["JdbcUtils","TenantUtils","WebSocketFrameworkUtils","AssertUtils","DateUtils","NumberUtils","IoUtils","LocalDateTimeUtils","TracerUtils","MoneyUtils"],"llm_response_time":20276,"similarity_computation_time":111,"similarity_metric":"voyage"},"buildSortingField":{"target_classes":[{"class_name":"JdbcUtils","similarity_score":0.6745785200962754},{"class_name":"SecurityFrameworkUtils","similarity_score":0.6192973189377255},{"class_name":"CronUtils","similarity_score":0.6},{"class_name":"TenantUtils","similarity_score":0.6234086133625244},{"class_name":"DataPermissionUtils","similarity_score":0.4797723625263532},{"class_name":"RandomUtils","similarity_score":0.2927446111288045},{"class_name":"TracerFrameworkUtils","similarity_score":0.5197011503876875},{"class_name":"AssertUtils","similarity_score":0.6292479967474978},{"class_name":"ExcelUtils","similarity_score":0.5765937433867832},{"class_name":"WebFrameworkUtils","similarity_score":0.5721751315566097},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.6088311003473045},{"class_name":"ServiceExceptionUtil","similarity_score":0.6154171122418904},{"class_name":"AreaUtils","similarity_score":0.6367951375940807},{"class_name":"IPUtils","similarity_score":0.5947277228935969},{"class_name":"NumberUtils","similarity_score":0.6142857142857143},{"class_name":"ServletUtils","similarity_score":0.5699690983324516},{"class_name":"MapUtils","similarity_score":0.5775745148262704},{"class_name":"BeanUtils","similarity_score":0.3877551020408163},{"class_name":"ObjectUtils","similarity_score":0.4397970080598761},{"class_name":"SetUtils","similarity_score":0.49820416604493983},{"class_name":"SpringAopUtils","similarity_score":0.4560496482672127},{"class_name":"SpringExpressionUtils","similarity_score":0.584495177934673},{"class_name":"StrUtils","similarity_score":0.5896790563015886},{"class_name":"CollectionUtils","similarity_score":0.26603706193731047},{"class_name":"TracerUtils","similarity_score":0.6175268108286006},{"class_name":"MoneyUtils","similarity_score":0.6867428343448642},{"class_name":"DateUtils","similarity_score":0.6362777530185575},{"class_name":"LocalDateTimeUtils","similarity_score":0.6631667584515053},{"class_name":"PageUtils","similarity_score":0.5361799218610493},{"class_name":"ArrayUtils","similarity_score":0.5405899027195887},{"class_name":"CacheUtils","similarity_score":0.32869928093458733},{"class_name":"FileUtils","similarity_score":0.6336492912028134},{"class_name":"IoUtils","similarity_score":0.6527299120066193},{"class_name":"HttpUtils","similarity_score":0.4624708787822753},{"class_name":"ValidationUtils","similarity_score":0.332402648232355},{"class_name":"JsonUtils","similarity_score":0.36755908522596964},{"class_name":"SqlConstants","similarity_score":0.5128915728290658},{"class_name":"EncryptTypeHandler","similarity_score":0.3812012585551997},{"class_name":"CrmPermissionUtils","similarity_score":0.5728625224195262},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.5733983413906713},{"class_name":"SingletonManager","similarity_score":0.39395949237536215},{"class_name":"OAuth2Utils","similarity_score":0.6105557549520013},{"class_name":"DictConvert","similarity_score":0.3615483100350726},{"class_name":"TenantContextHolder","similarity_score":0.6004070726354883},{"class_name":"DataPermissionContextHolder","similarity_score":0.5671651899228913},{"class_name":"ExpressionIdempotentKeyResolver","similarity_score":0.339296849762032},{"class_name":"ContextHolder","similarity_score":0.43092870707154574},{"class_name":"IdTypeEnvironmentPostProcessor","similarity_score":0.30020460084365846},{"class_name":"ILogRecordServiceImpl","similarity_score":0.31331390348771637}],"target_classes_sorted_by_llm":["AssertUtils","DateUtils","JdbcUtils","FileUtils","SecurityFrameworkUtils","TenantUtils","AreaUtils","LocalDateTimeUtils","IoUtils","MoneyUtils"],"llm_response_time":9879,"similarity_computation_time":5,"similarity_metric":"voyage"}}}
{"id":"48698af1-8318-4d64-8001-799d5518a55e","methodCount":10,"hostFunctionTelemetryData":{"hostFunctionSize":108,"lineStart":20,"lineEnd":127,"bodyLineStart":20,"language":"java","filePath":"/Users/fraolbatole/Documents/RunRefMiner/MM-Assist-oracle/ruoyi-vue-pro/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/util/FlowableUtils.java","sourceCode":"/**\n * 流程引擎工具类封装\n *\n * @author: linjinp\n * @create: 2019-12-24 13:51\n **/\npublic class FlowableUtils {\n\n    /**\n     * 获取流程名称\n     *\n     * @param processDefinitionId\n     * @return\n     */\n    public static String getProcessDefinitionName(String processDefinitionId) {\n        RepositoryService repositoryService \u003d SpringUtil.getBean(RepositoryService.class);\n        ProcessDefinition processDefinition \u003d repositoryService.getProcessDefinition(processDefinitionId);\n        return processDefinition.getName();\n    }\n\n    public static ProcessDefinition getProcessDefinition(String processDefinitionId) {\n        RepositoryService repositoryService \u003d SpringUtil.getBean(RepositoryService.class);\n        return repositoryService.getProcessDefinition(processDefinitionId);\n    }\n\n    /**\n     * 获取节点数据\n     *\n     * @param processInstanceId\n     * @param nodeId\n     * @return\n     */\n    public static FlowNode getFlowNode(String processInstanceId, String nodeId) {\n\n        RuntimeService runtimeService \u003d SpringUtil.getBean(RuntimeService.class);\n        RepositoryService repositoryService \u003d SpringUtil.getBean(RepositoryService.class);\n\n        String definitionld \u003d runtimeService.createProcessInstanceQuery().processInstanceId(processInstanceId).singleResult().getProcessDefinitionId();        // 获取bpm（模型）对象\n        BpmnModel bpmnModel \u003d repositoryService.getBpmnModel(definitionld);\n        // 传节点定义key获取当前节点\n        FlowNode flowNode \u003d (FlowNode) bpmnModel.getFlowElement(nodeId);\n        return flowNode;\n    }\n\n    public static ExtensionElement generateFlowNodeIdExtension(String nodeId) {\n        ExtensionElement extensionElement \u003d new ExtensionElement();\n        extensionElement.setElementText(nodeId);\n        extensionElement.setName(\"nodeId\");\n        extensionElement.setNamespacePrefix(\"flowable\");\n        extensionElement.setNamespace(\"nodeId\");\n        return extensionElement;\n    }\n\n    public static String getNodeIdFromExtension(FlowElement flowElement) {\n        Map\u003cString, List\u003cExtensionElement\u003e\u003e extensionElements \u003d flowElement.getExtensionElements();\n        return extensionElements.get(\"nodeId\").get(0).getElementText();\n    }\n\n    public static Long getStartUserIdFromProcessInstance(ProcessInstance instance) {\n        if (null \u003d\u003d instance) {\n            return null;\n        }\n        return NumberUtils.parseLong(instance.getStartUserId());\n    }\n\n    public static String getTaskNameByTaskId(String taskId) {\n        TaskService taskService \u003d SpringUtil.getBean(TaskService.class);\n        Task task \u003d taskService.createTaskQuery().taskId(taskId).singleResult();\n        return task.getName();\n    }\n\n    // TODO @kyle：Utils 里不做查询；可以封装到 bpmTaskService 里\n    public static Map\u003cString/* taskId */, String/* taskName */\u003e getTaskNameByTaskIds(Collection\u003cString\u003e taskIds) {\n        TaskService taskService \u003d SpringUtil.getBean(TaskService.class);\n        List\u003cTask\u003e tasks \u003d taskService.createTaskQuery().taskIds(taskIds).list();\n        if (CollUtil.isNotEmpty(tasks)) {\n            Map\u003cString/* taskId */, String/* taskName */\u003e taskMap \u003d new HashMap\u003c\u003e(tasks.size());\n            for (Task task : tasks) {\n                taskMap.putIfAbsent(task.getId(), task.getName());\n            }\n            return taskMap;\n        }\n        return Collections.emptyMap();\n    }\n\n    public static String getProcessInstanceNameByTaskId(String processInstanceId) {\n        RuntimeService runtimeService \u003d SpringUtil.getBean(RuntimeService.class);\n        ProcessInstance processInstance \u003d runtimeService.createProcessInstanceQuery()\n                .processInstanceId(processInstanceId)\n                .singleResult();\n        return processInstance.getName();\n    }\n\n    // TODO @kyle：Utils 里不做查询；可以封装到 bpmTaskService 里\n    public static Map\u003cString/* processInstaneId */, String/* processInstaneName */\u003e getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds) {\n        RuntimeService runtimeService \u003d SpringUtil.getBean(RuntimeService.class);\n        List\u003cProcessInstance\u003e processInstances \u003d runtimeService.createProcessInstanceQuery().processInstanceIds(taskIds).list();\n        if (CollUtil.isNotEmpty(processInstances)) {\n            Map\u003cString/* processInstaneId */, String/* processInstaneName */\u003e processInstaneMap \u003d new HashMap\u003c\u003e(processInstances.size());\n            for (ProcessInstance processInstance : processInstances) {\n                processInstaneMap.putIfAbsent(processInstance.getId(), processInstance.getName());\n            }\n            return processInstaneMap;\n        }\n        return Collections.emptyMap();\n    }\n\n}","methodCount":10},"candidatesTelemetryData":{"numberOfSuggestions":9,"candidates":[{"lineStart":63,"lineEnd":70,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method generateFlowNodeIdExtension to class ObjectUtils","description":"move method generateFlowNodeIdExtension to PsiClass:ObjectUtils\nRationale: The generateFlowNodeIdExtension() method creates an ExtensionElement based on a nodeId, which is a utility function that doesn\u0027t rely on the state of the current class. Moving it to ObjectUtils aligns with the utility nature of the method, promoting reusability. This adheres to the Single Responsibility Principle by separating utility functions from business logic. However, it may lead to a bloated utility class if too many unrelated methods are added.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":63,"lineEnd":70,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method generateFlowNodeIdExtension to class BeanUtils","description":"move method generateFlowNodeIdExtension to PsiClass:BeanUtils\nRationale: The method generates an ExtensionElement, which can be considered a type of data transfer object. Moving it to BeanUtils would make sense as it fits within the realm of object creation and transformation. This aligns with the Dependency Inversion Principle, allowing clients to depend on abstractions rather than concrete implementations. A drawback could be that BeanUtils could become overly focused on specific object types, reducing its general utility.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":63,"lineEnd":70,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method generateFlowNodeIdExtension to class ValidationUtils","description":"move method generateFlowNodeIdExtension to PsiClass:ValidationUtils\nRationale: While primarily focused on validation, the generateFlowNodeIdExtension() method could be relevant for ensuring that the nodeId is valid before creating the ExtensionElement. This would enhance the method\u0027s utility by integrating validation directly into the object creation process. This move supports the Open/Closed Principle by allowing the addition of validation logic without altering existing code. However, it may lead to confusion if the class becomes too mixed in responsibilities.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":77,"lineEnd":82,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getStartUserIdFromProcessInstance to class ObjectUtils","description":"move method getStartUserIdFromProcessInstance to PsiClass:ObjectUtils\nRationale: The getStartUserIdFromProcessInstance() method is a utility function that processes data from the ProcessInstance object without relying on any state from its current class. Moving it to ObjectUtils aligns with the utility nature of the method, enhancing reusability and separation of concerns. This adheres to the Single Responsibility Principle, as ObjectUtils is already a collection of general-purpose utility methods. However, care should be taken to ensure that the ObjectUtils class does not become too bloated with unrelated methods.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":77,"lineEnd":82,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getStartUserIdFromProcessInstance to class BeanUtils","description":"move method getStartUserIdFromProcessInstance to PsiClass:BeanUtils\nRationale: The method extracts a specific attribute from the ProcessInstance object, which is akin to the functionality provided by BeanUtils for handling JavaBeans. This move would enhance the cohesion of BeanUtils by adding a method that deals with extracting properties from objects. It aligns with the Open/Closed Principle, as the class is open for extension through the addition of utility methods. However, it may lead to confusion if BeanUtils becomes too focused on non-bean-related utilities.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":77,"lineEnd":82,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getStartUserIdFromProcessInstance to class ValidationUtils","description":"move method getStartUserIdFromProcessInstance to PsiClass:ValidationUtils\nRationale: The method\u0027s purpose is to retrieve a user ID that is part of a process instance, which can be seen as a validation step in certain contexts. Moving it to ValidationUtils could make sense if it is framed within a broader validation context. This aligns with the Single Responsibility Principle by grouping related validation functions together. However, this might dilute the primary focus of ValidationUtils, which is more about validating data rather than extracting it.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":72,"lineEnd":75,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getNodeIdFromExtension to class CollectionUtils","description":"move method getNodeIdFromExtension to PsiClass:CollectionUtils\nRationale: The getNodeIdFromExtension() method operates on a collection of extension elements and retrieves a specific value from it. Moving it to CollectionUtils aligns with the utility nature of this class, which deals with collections. This adheres to the Single Responsibility Principle, as CollectionUtils can provide various collection-related operations, enhancing cohesiveness. However, it may clutter the utility class with domain-specific logic if overused.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":72,"lineEnd":75,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getNodeIdFromExtension to class JsonUtils","description":"move method getNodeIdFromExtension to PsiClass:JsonUtils\nRationale: While JsonUtils primarily deals with JSON operations, the extraction of a node ID from a flow element can be considered a form of data serialization. Moving this method here would allow JsonUtils to encompass more data manipulation tasks. This move would improve the method\u0027s reusability across different JSON-related operations. However, it could dilute the focus of JsonUtils, which should primarily handle JSON transformations.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":72,"lineEnd":75,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getNodeIdFromExtension to class ValidationUtils","description":"move method getNodeIdFromExtension to PsiClass:ValidationUtils\nRationale: The method retrieves a node ID, which can be considered a validation step for flow elements. Moving it to ValidationUtils would allow a centralized approach to validating and extracting information from various elements. This aligns with the Interface Segregation Principle, as clients can use ValidationUtils to validate multiple aspects of data. However, it may introduce dependencies on the flow element structure that are not directly related to validation.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":-1,"suggested_move_methods":[{"method_name":"getProcessDefinitionName","method_signature":"public static getProcessDefinitionName(String processDefinitionId)","target_class":"","rationale":""},{"method_name":"getProcessDefinition","method_signature":"public static getProcessDefinition(String processDefinitionId)","target_class":"","rationale":""},{"method_name":"getFlowNode","method_signature":"public static getFlowNode(String processInstanceId, String nodeId)","target_class":"","rationale":""},{"method_name":"generateFlowNodeIdExtension","method_signature":"public static generateFlowNodeIdExtension(String nodeId)","target_class":"","rationale":""},{"method_name":"getNodeIdFromExtension","method_signature":"public static getNodeIdFromExtension(FlowElement flowElement)","target_class":"","rationale":""},{"method_name":"getStartUserIdFromProcessInstance","method_signature":"public static getStartUserIdFromProcessInstance(ProcessInstance instance)","target_class":"","rationale":""},{"method_name":"getTaskNameByTaskId","method_signature":"public static getTaskNameByTaskId(String taskId)","target_class":"","rationale":""},{"method_name":"getTaskNameByTaskIds","method_signature":"public static getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)","target_class":"","rationale":""},{"method_name":"getProcessInstanceNameByTaskId","method_signature":"public static getProcessInstanceNameByTaskId(String processInstanceId)","target_class":"","rationale":""},{"method_name":"getProcessInstanceNameByTaskIds","method_signature":"public static getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"generateFlowNodeIdExtension","method_signature":"public static generateFlowNodeIdExtension(String nodeId)","target_class":"","rationale":""},{"method_name":"getStartUserIdFromProcessInstance","method_signature":"public static getStartUserIdFromProcessInstance(ProcessInstance instance)","target_class":"","rationale":""},{"method_name":"getNodeIdFromExtension","method_signature":"public static getNodeIdFromExtension(FlowElement flowElement)","target_class":"","rationale":""},{"method_name":"getTaskNameByTaskId","method_signature":"public static getTaskNameByTaskId(String taskId)","target_class":"","rationale":""},{"method_name":"getProcessInstanceNameByTaskId","method_signature":"public static getProcessInstanceNameByTaskId(String processInstanceId)","target_class":"","rationale":""},{"method_name":"getFlowNode","method_signature":"public static getFlowNode(String processInstanceId, String nodeId)","target_class":"","rationale":""},{"method_name":"getProcessDefinitionName","method_signature":"public static getProcessDefinitionName(String processDefinitionId)","target_class":"","rationale":""},{"method_name":"getProcessDefinition","method_signature":"public static getProcessDefinition(String processDefinitionId)","target_class":"","rationale":""},{"method_name":"getTaskNameByTaskIds","method_signature":"public static getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)","target_class":"","rationale":""},{"method_name":"getProcessInstanceNameByTaskIds","method_signature":"public static getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"public static generateFlowNodeIdExtension(String nodeId)":{"first":{"method_name":"generateFlowNodeIdExtension","method_signature":"public static generateFlowNodeIdExtension(String nodeId)","target_class":"","rationale":""},"second":0.38895558795273394},"public static getStartUserIdFromProcessInstance(ProcessInstance instance)":{"first":{"method_name":"getStartUserIdFromProcessInstance","method_signature":"public static getStartUserIdFromProcessInstance(ProcessInstance instance)","target_class":"","rationale":""},"second":0.4551924946659459},"public static getNodeIdFromExtension(FlowElement flowElement)":{"first":{"method_name":"getNodeIdFromExtension","method_signature":"public static getNodeIdFromExtension(FlowElement flowElement)","target_class":"","rationale":""},"second":0.48536674796006},"public static getTaskNameByTaskId(String taskId)":{"first":{"method_name":"getTaskNameByTaskId","method_signature":"public static getTaskNameByTaskId(String taskId)","target_class":"","rationale":""},"second":0.4861987413303277},"public static getProcessInstanceNameByTaskId(String processInstanceId)":{"first":{"method_name":"getProcessInstanceNameByTaskId","method_signature":"public static getProcessInstanceNameByTaskId(String processInstanceId)","target_class":"","rationale":""},"second":0.49011582624076994},"public static getFlowNode(String processInstanceId, String nodeId)":{"first":{"method_name":"getFlowNode","method_signature":"public static getFlowNode(String processInstanceId, String nodeId)","target_class":"","rationale":""},"second":0.5041595400266171},"public static getProcessDefinitionName(String processDefinitionId)":{"first":{"method_name":"getProcessDefinitionName","method_signature":"public static getProcessDefinitionName(String processDefinitionId)","target_class":"","rationale":""},"second":0.5399476313359193},"public static getProcessDefinition(String processDefinitionId)":{"first":{"method_name":"getProcessDefinition","method_signature":"public static getProcessDefinition(String processDefinitionId)","target_class":"","rationale":""},"second":0.5464590666470246},"public static getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)":{"first":{"method_name":"getTaskNameByTaskIds","method_signature":"public static getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)","target_class":"","rationale":""},"second":0.5947651614200067},"public static getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)":{"first":{"method_name":"getProcessInstanceNameByTaskIds","method_signature":"public static getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)","target_class":"","rationale":""},"second":0.6140998648980447}},"llmMethodPriority":{"priority_method_names":["generateFlowNodeIdExtension","getStartUserIdFromProcessInstance","getNodeIdFromExtension","getTaskNameByTaskId","getProcessInstanceNameByTaskId","getFlowNode","getProcessDefinitionName","getProcessDefinition","getTaskNameByTaskIds","getProcessInstanceNameByTaskIds"],"llm_response_time":2561},"targetClassMap":{"generateFlowNodeIdExtension":{"target_classes":[{"class_name":"CrmQueryWrapperUtils","similarity_score":0.2521203818109388},{"class_name":"SingletonManager","similarity_score":0.3470110468942836},{"class_name":"OAuth2Utils","similarity_score":0.2817260609598153},{"class_name":"ArrayUtils","similarity_score":0.33161658372236996},{"class_name":"CrmPermissionUtils","similarity_score":0.2604595860779547},{"class_name":"CollectionUtils","similarity_score":0.40773582049998003},{"class_name":"JsonUtils","similarity_score":0.3927689623453396},{"class_name":"BeanUtils","similarity_score":0.35296584820042987},{"class_name":"IoUtils","similarity_score":0.13703774196550636},{"class_name":"HttpUtils","similarity_score":0.3308851232848954},{"class_name":"TracerUtils","similarity_score":0.15795600590164086},{"class_name":"DateUtils","similarity_score":0.3016255855062704},{"class_name":"FileUtils","similarity_score":0.19650187321773246},{"class_name":"LocalDateTimeUtils","similarity_score":0.2571631790851889},{"class_name":"ServletUtils","similarity_score":0.3615362960818038},{"class_name":"CacheUtils","similarity_score":0.19926334924652145},{"class_name":"SetUtils","similarity_score":0.2684624220856098},{"class_name":"PageUtils","similarity_score":0.20280216158836656},{"class_name":"ObjectUtils","similarity_score":0.3322277470925477},{"class_name":"MapUtils","similarity_score":0.24349981556560787},{"class_name":"NumberUtils","similarity_score":0.14433756729740646},{"class_name":"SpringAopUtils","similarity_score":0.2995041904296594},{"class_name":"StrUtils","similarity_score":0.3214129633643958},{"class_name":"SpringExpressionUtils","similarity_score":0.2758268155435022},{"class_name":"ValidationUtils","similarity_score":0.40085003576613154},{"class_name":"MoneyUtils","similarity_score":0.16520465011377247},{"class_name":"CronUtils","similarity_score":0.27905263010831916},{"class_name":"AssertUtils","similarity_score":0.21482601273991547},{"class_name":"TenantUtils","similarity_score":0.23832880278728724},{"class_name":"AreaUtils","similarity_score":0.27253696486869805},{"class_name":"IPUtils","similarity_score":0.20029695636250497},{"class_name":"JdbcUtils","similarity_score":0.21637116120395775},{"class_name":"DataPermissionUtils","similarity_score":0.30386951709094717},{"class_name":"TracerFrameworkUtils","similarity_score":0.2727723627949905},{"class_name":"SecurityFrameworkUtils","similarity_score":0.27695585470349865},{"class_name":"ExcelUtils","similarity_score":0.12053151055354619},{"class_name":"ServiceExceptionUtil","similarity_score":0.31812750147779456},{"class_name":"SimpleTrie","similarity_score":0.2753481524109031},{"class_name":"MyBatisUtils","similarity_score":0.28859710374203046},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.22064818675347547},{"class_name":"WebFrameworkUtils","similarity_score":0.3779194896813389},{"class_name":"RandomUtils","similarity_score":0.41901927968008934},{"class_name":"CrmPermissionAspect","similarity_score":0.26834302436136526},{"class_name":"CodegenEngine","similarity_score":0.29247379459852646},{"class_name":"DictDataServiceImplTest","similarity_score":0.22985623329804655},{"class_name":"DictTypeServiceImplTest","similarity_score":0.207912147920706},{"class_name":"ConfigServiceImplTest","similarity_score":0.20756065482187772},{"class_name":"AdminUserServiceImplTest","similarity_score":0.2024430387675189},{"class_name":"TenantServiceImpl","similarity_score":0.3160979081695408}],"target_classes_sorted_by_llm":["ObjectUtils","BeanUtils","ValidationUtils","JsonUtils","CollectionUtils","WebFrameworkUtils","ServletUtils","RandomUtils","ArrayUtils","SingletonManager"],"llm_response_time":13195,"similarity_computation_time":19,"similarity_metric":"voyage"},"getStartUserIdFromProcessInstance":{"target_classes":[{"class_name":"OAuth2Utils","similarity_score":0.4473655108965719},{"class_name":"SingletonManager","similarity_score":0.46},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.4362383149189385},{"class_name":"MapUtils","similarity_score":0.3702105314053772},{"class_name":"ValidationUtils","similarity_score":0.5201299945855897},{"class_name":"HttpUtils","similarity_score":0.44687011342509003},{"class_name":"NumberUtils","similarity_score":0.16263455967290594},{"class_name":"IoUtils","similarity_score":0.21818715315713919},{"class_name":"ObjectUtils","similarity_score":0.6103413440783696},{"class_name":"FileUtils","similarity_score":0.27327084137959623},{"class_name":"CollectionUtils","similarity_score":0.6654057113016965},{"class_name":"MoneyUtils","similarity_score":0.24280025754826165},{"class_name":"TracerUtils","similarity_score":0.2630998990616065},{"class_name":"LocalDateTimeUtils","similarity_score":0.4098670158168714},{"class_name":"PageUtils","similarity_score":0.280927371029288},{"class_name":"ServletUtils","similarity_score":0.5819522092746461},{"class_name":"SetUtils","similarity_score":0.427437366993929},{"class_name":"ArrayUtils","similarity_score":0.5924949183836957},{"class_name":"JsonUtils","similarity_score":0.6315215061651702},{"class_name":"BeanUtils","similarity_score":0.6069748189869036},{"class_name":"CacheUtils","similarity_score":0.28200959516425306},{"class_name":"StrUtils","similarity_score":0.537666760849798},{"class_name":"SpringAopUtils","similarity_score":0.4627527713461423},{"class_name":"DateUtils","similarity_score":0.4808648316910078},{"class_name":"SpringExpressionUtils","similarity_score":0.31183151790385666},{"class_name":"CrmPermissionUtils","similarity_score":0.3827958507045014},{"class_name":"TenantUtils","similarity_score":0.3725097635723436},{"class_name":"IPUtils","similarity_score":0.2834724187363731},{"class_name":"WebFrameworkUtils","similarity_score":0.590254637960947},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.3275608910402092},{"class_name":"ExcelUtils","similarity_score":0.19682713252204917},{"class_name":"TracerFrameworkUtils","similarity_score":0.3741657386773941},{"class_name":"RandomUtils","similarity_score":0.6399802548594477},{"class_name":"SecurityFrameworkUtils","similarity_score":0.4321662605614612},{"class_name":"JdbcUtils","similarity_score":0.3285993428019716},{"class_name":"ServiceExceptionUtil","similarity_score":0.45742990051782906},{"class_name":"MyBatisUtils","similarity_score":0.3879816100406432},{"class_name":"AreaUtils","similarity_score":0.3718147594798222},{"class_name":"AssertUtils","similarity_score":0.35270567687291604},{"class_name":"SimpleTrie","similarity_score":0.4355564898955375},{"class_name":"CronUtils","similarity_score":0.3111269837220809},{"class_name":"DataPermissionUtils","similarity_score":0.4678615953055017},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.1453211620744014},{"class_name":"DictDataServiceImplTest","similarity_score":0.23928795645579543},{"class_name":"DictTypeServiceImplTest","similarity_score":0.23804486322744256},{"class_name":"PostServiceImplTest","similarity_score":0.21210023910827738},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.49424165057217234},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.4787549991450212},{"class_name":"OAuth2OpenController","similarity_score":0.192099063282191}],"target_classes_sorted_by_llm":["ObjectUtils","BeanUtils","ValidationUtils","WebFrameworkUtils","StrUtils","RandomUtils","ServletUtils","JsonUtils","ArrayUtils","CollectionUtils"],"llm_response_time":13205,"similarity_computation_time":17,"similarity_metric":"voyage"},"getNodeIdFromExtension":{"target_classes":[{"class_name":"SingletonManager","similarity_score":0.45434411125112145},{"class_name":"OAuth2Utils","similarity_score":0.4515428619256004},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.33712653633258444},{"class_name":"TracerUtils","similarity_score":0.2274942539625362},{"class_name":"ValidationUtils","similarity_score":0.5106511407263777},{"class_name":"NumberUtils","similarity_score":0.18898223650461363},{"class_name":"ObjectUtils","similarity_score":0.43498822829035566},{"class_name":"BeanUtils","similarity_score":0.45270933190328044},{"class_name":"SpringAopUtils","similarity_score":0.39214303531439504},{"class_name":"SpringExpressionUtils","similarity_score":0.370402127744094},{"class_name":"StrUtils","similarity_score":0.45162067103920644},{"class_name":"CollectionUtils","similarity_score":0.49304756659323457},{"class_name":"SetUtils","similarity_score":0.3514998201309975},{"class_name":"ServletUtils","similarity_score":0.5342229715030112},{"class_name":"MapUtils","similarity_score":0.30782243766543016},{"class_name":"MoneyUtils","similarity_score":0.2090935391890158},{"class_name":"HttpUtils","similarity_score":0.5034838866631398},{"class_name":"LocalDateTimeUtils","similarity_score":0.3367056383181036},{"class_name":"PageUtils","similarity_score":0.26553035902267297},{"class_name":"ArrayUtils","similarity_score":0.4341880276029774},{"class_name":"CacheUtils","similarity_score":0.2608969660436018},{"class_name":"CrmPermissionUtils","similarity_score":0.3410216481940268},{"class_name":"FileUtils","similarity_score":0.290478938135766},{"class_name":"JsonUtils","similarity_score":0.49117972817937733},{"class_name":"DateUtils","similarity_score":0.4049609475333195},{"class_name":"IoUtils","similarity_score":0.2018525868073155},{"class_name":"SimpleTrie","similarity_score":0.3387975647826425},{"class_name":"TracerFrameworkUtils","similarity_score":0.375},{"class_name":"TenantUtils","similarity_score":0.30461599279931145},{"class_name":"SecurityFrameworkUtils","similarity_score":0.3894810992789338},{"class_name":"WebFrameworkUtils","similarity_score":0.5291067161269939},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.30640515689471326},{"class_name":"ServiceExceptionUtil","similarity_score":0.44357385976204783},{"class_name":"MyBatisUtils","similarity_score":0.38664980214409717},{"class_name":"AreaUtils","similarity_score":0.33876707174981807},{"class_name":"AssertUtils","similarity_score":0.28887525602931263},{"class_name":"CronUtils","similarity_score":0.314970394174356},{"class_name":"ExcelUtils","similarity_score":0.18411492357966466},{"class_name":"JdbcUtils","similarity_score":0.32579080231029234},{"class_name":"IPUtils","similarity_score":0.25496554555567935},{"class_name":"DataPermissionUtils","similarity_score":0.3978585895596979},{"class_name":"RandomUtils","similarity_score":0.5593823723952593},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.2076792359316955},{"class_name":"DictDataServiceImplTest","similarity_score":0.33386912835377963},{"class_name":"DictTypeServiceImplTest","similarity_score":0.28445554890695546},{"class_name":"SmsLogServiceImplTest","similarity_score":0.3146226790420515},{"class_name":"SmsTemplateServiceImplTest","similarity_score":0.2578250841536644},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.5118550946799655},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.4545686450484948}],"target_classes_sorted_by_llm":["CollectionUtils","JsonUtils","ValidationUtils","WebFrameworkUtils","OAuth2AccessTokenRedisDAO","HttpUtils","SingletonManager","OAuth2CodeServiceImpl","ServletUtils","RandomUtils"],"llm_response_time":14842,"similarity_computation_time":6,"similarity_metric":"voyage"}}}
{"id":"f2915cb7-7e81-406e-9219-e41d8c5c3b29","methodCount":4,"hostFunctionTelemetryData":{"hostFunctionSize":53,"lineStart":17,"lineEnd":69,"bodyLineStart":17,"language":"java","filePath":"/Users/fraolbatole/Documents/RunRefMiner/MM-Assist-oracle/ruoyi-vue-pro/yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/permission/core/util/CrmPermissionUtils.java","sourceCode":"/**\n * 数据权限工具类\n *\n * @author HUIHUI\n */\npublic class CrmPermissionUtils {\n\n    /**\n     * 校验用户是否是 CRM 管理员\n     *\n     * @return 是/否\n     */\n    public static boolean isCrmAdmin() {\n        return SingletonManager.getPermissionApi().hasAnyRoles(getLoginUserId(), CrmPermissionRoleCodeEnum.CRM_ADMIN.getCode());\n    }\n\n    // TODO @puhui999：这个貌似直接放到 CrmPermissionService 会更好？\n    /**\n     * 校验权限\n     *\n     * @param bizType   数据类型，关联 {@link CrmBizTypeEnum}\n     * @param bizId     数据编号，关联 {@link CrmBizTypeEnum} 对应模块 DO#getId()\n     * @param userId    用户编号\n     * @param levelEnum 权限级别\n     * @return boolean\n     */\n    public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum) {\n        List\u003cCrmPermissionDO\u003e permissionList \u003d SingletonManager.getCrmPermissionService().getPermissionListByBiz(bizType, bizId);\n        return anyMatch(permissionList, permission -\u003e\n                ObjUtil.equal(permission.getUserId(), userId) \u0026\u0026 ObjUtil.equal(permission.getLevel(), levelEnum.getLevel()));\n    }\n\n    /**\n     * 静态内部类实现单例获取\n     *\n     * @author HUIHUI\n     */\n    private static class SingletonManager {\n\n        private static final PermissionApi PERMISSION_API \u003d SpringUtil.getBean(PermissionApi.class);\n        private static final CrmPermissionService CRM_PERMISSION_SERVICE \u003d SpringUtil.getBean(CrmPermissionService.class);\n\n        public static PermissionApi getPermissionApi() {\n            return PERMISSION_API;\n        }\n\n        public static CrmPermissionService getCrmPermissionService() {\n            return CRM_PERMISSION_SERVICE;\n        }\n\n    }\n\n}","methodCount":4},"candidatesTelemetryData":{"numberOfSuggestions":6,"candidates":[{"lineStart":33,"lineEnd":46,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method hasPermission to class CrmQueryWrapperUtils","description":"move method hasPermission to PsiClass:CrmQueryWrapperUtils\nRationale: The hasPermission() method is directly related to checking permissions, which aligns with the purpose of the CrmQueryWrapperUtils class. Moving this method here adheres to the Single Responsibility Principle, as it centralizes permission logic within a dedicated utility. This enhances cohesion and makes permission checks more reusable across different parts of the application. However, existing dependencies on SingletonManager may need to be refactored.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":33,"lineEnd":46,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method hasPermission to class TenantUtils","description":"move method hasPermission to PsiClass:TenantUtils\nRationale: The hasPermission() method involves user-level permissions, which can be considered part of tenant management in a multi-tenant application. Relocating it to TenantUtils could provide a clearer context for permission checks related to tenant-based operations. This move would improve the Separation of Concerns and maintain a clear boundary of responsibilities. However, it may not be directly related to tenant operations, which could confuse future developers.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":33,"lineEnd":46,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method hasPermission to class AssertUtils","description":"move method hasPermission to PsiClass:AssertUtils\nRationale: The hasPermission() method could be seen as a validation check, similar to assertions. Moving it to AssertUtils would allow for a centralized validation approach, enhancing the cohesiveness of validation-related methods. This aligns with the Single Responsibility Principle by keeping all assertion-like methods together. However, it may dilute the purpose of AssertUtils, which is primarily for assertion checks.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":23,"lineEnd":30,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method isCrmAdmin to class WebSocketFrameworkUtils","description":"move method isCrmAdmin to PsiClass:WebSocketFrameworkUtils\nRationale: The isCrmAdmin() method checks user permissions, which closely relates to user management functionalities provided by WebSocketFrameworkUtils. Moving it here adheres to the Single Responsibility Principle, as user role checks are part of managing user sessions. This improves cohesion since both functionalities revolve around user management. However, care should be taken to ensure that the SingletonManager dependency does not introduce tight coupling.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":23,"lineEnd":30,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method isCrmAdmin to class TenantUtils","description":"move method isCrmAdmin to PsiClass:TenantUtils\nRationale: The isCrmAdmin() method can be associated with tenant-specific permissions. By relocating it to TenantUtils, we align it with functionalities that manage tenant-specific data and permissions. This adheres to the Open/Closed Principle, allowing for future extensions related to tenant management. However, the method\u0027s static nature may require adjustments to maintain consistency within the TenantUtils context.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":23,"lineEnd":30,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method isCrmAdmin to class DateUtils","description":"move method isCrmAdmin to PsiClass:DateUtils\nRationale: Although DateUtils primarily deals with date manipulations, if user permissions are time-sensitive (e.g., permissions valid for certain periods), isCrmAdmin() could fit here. This move could enhance the utility of DateUtils by associating time-based roles with user management. However, this class may become bloated if it takes on too many unrelated responsibilities.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":-1,"suggested_move_methods":[{"method_name":"isCrmAdmin","method_signature":"public static isCrmAdmin()","target_class":"","rationale":""},{"method_name":"hasPermission","method_signature":"public static hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"hasPermission","method_signature":"public static hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)","target_class":"","rationale":""},{"method_name":"isCrmAdmin","method_signature":"public static isCrmAdmin()","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"public static hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)":{"first":{"method_name":"hasPermission","method_signature":"public static hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)","target_class":"","rationale":""},"second":0.22531566304729111},"public static isCrmAdmin()":{"first":{"method_name":"isCrmAdmin","method_signature":"public static isCrmAdmin()","target_class":"","rationale":""},"second":0.28267549832315825}},"llmMethodPriority":{"priority_method_names":["hasPermission","isCrmAdmin"],"llm_response_time":1137},"targetClassMap":{"hasPermission":{"target_classes":[{"class_name":"SingletonManager","similarity_score":0.36667939881128453},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.6383929941118209},{"class_name":"CrmPermissionAspect","similarity_score":0.24947647669920123},{"class_name":"OAuth2Utils","similarity_score":0.5540703193145262},{"class_name":"TracerFrameworkUtils","similarity_score":0.48387100808065},{"class_name":"TracerUtils","similarity_score":0.6171454569797131},{"class_name":"CronUtils","similarity_score":0.5660979185688902},{"class_name":"ValidationUtils","similarity_score":0.33084247073593187},{"class_name":"CollectionUtils","similarity_score":0.22801221648807163},{"class_name":"TenantUtils","similarity_score":0.6600231146442639},{"class_name":"BeanUtils","similarity_score":0.30732108086296617},{"class_name":"SpringAopUtils","similarity_score":0.4345512277932494},{"class_name":"SpringExpressionUtils","similarity_score":0.5399492471560389},{"class_name":"WebFrameworkUtils","similarity_score":0.5410855394827312},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.6215683733586876},{"class_name":"CacheUtils","similarity_score":0.3181757194272063},{"class_name":"DataPermissionUtils","similarity_score":0.4613795379939091},{"class_name":"SetUtils","similarity_score":0.4671833441849212},{"class_name":"ArrayUtils","similarity_score":0.4993376526969942},{"class_name":"DateUtils","similarity_score":0.6428450998737697},{"class_name":"AreaUtils","similarity_score":0.5949242726191573},{"class_name":"SecurityFrameworkUtils","similarity_score":0.587339367374206},{"class_name":"AssertUtils","similarity_score":0.6440420699921925},{"class_name":"HttpUtils","similarity_score":0.3694838710158018},{"class_name":"ServletUtils","similarity_score":0.5265163497288676},{"class_name":"LocalDateTimeUtils","similarity_score":0.7021736134656905},{"class_name":"ServiceExceptionUtil","similarity_score":0.5677590376280539},{"class_name":"RandomUtils","similarity_score":0.2545921805362247},{"class_name":"NumberUtils","similarity_score":0.6222755746100778},{"class_name":"ObjectUtils","similarity_score":0.4140292546652066},{"class_name":"StrUtils","similarity_score":0.5808922957825075},{"class_name":"ExcelUtils","similarity_score":0.5683580801556054},{"class_name":"PageUtils","similarity_score":0.7003442784347512},{"class_name":"MapUtils","similarity_score":0.5844730316346148},{"class_name":"MyBatisUtils","similarity_score":0.6420003374928271},{"class_name":"MoneyUtils","similarity_score":0.7097657682947003},{"class_name":"FileUtils","similarity_score":0.6120340733917816},{"class_name":"JdbcUtils","similarity_score":0.6656134474666205},{"class_name":"IoUtils","similarity_score":0.6769631350985078},{"class_name":"IPUtils","similarity_score":0.6021726575894709},{"class_name":"JsonUtils","similarity_score":0.30867918875611494},{"class_name":"SimpleTrie","similarity_score":0.5899719997933454},{"class_name":"CodegenEngine","similarity_score":0.29939316774542335},{"class_name":"DictDataServiceImplTest","similarity_score":0.155645211903368},{"class_name":"DictTypeServiceImplTest","similarity_score":0.12379525704237579},{"class_name":"SmsLogServiceImplTest","similarity_score":0.13874745679574788},{"class_name":"SmsTemplateServiceImplTest","similarity_score":0.12001658654077609},{"class_name":"ConfigServiceImplTest","similarity_score":0.12385856568642788},{"class_name":"TenantServiceImpl","similarity_score":0.19623329799626893}],"target_classes_sorted_by_llm":["CrmQueryWrapperUtils","TenantUtils","AssertUtils","MyBatisUtils","PageUtils","JdbcUtils","DateUtils","IoUtils","LocalDateTimeUtils","MoneyUtils"],"llm_response_time":13257,"similarity_computation_time":8,"similarity_metric":"voyage"},"isCrmAdmin":{"target_classes":[{"class_name":"SingletonManager","similarity_score":0.52},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.6044265809117823},{"class_name":"CrmPermissionAspect","similarity_score":0.32288592281010975},{"class_name":"OAuth2Utils","similarity_score":0.5853825302157271},{"class_name":"CronUtils","similarity_score":0.6033977866125205},{"class_name":"ExcelUtils","similarity_score":0.5117505445573278},{"class_name":"NumberUtils","similarity_score":0.5727564927611035},{"class_name":"BeanUtils","similarity_score":0.4587600376063806},{"class_name":"ObjectUtils","similarity_score":0.5533761519643884},{"class_name":"CacheUtils","similarity_score":0.4121678698554468},{"class_name":"FileUtils","similarity_score":0.6583342996872091},{"class_name":"ArrayUtils","similarity_score":0.6116076576863956},{"class_name":"CollectionUtils","similarity_score":0.40585931530638847},{"class_name":"AssertUtils","similarity_score":0.6257681363874317},{"class_name":"AreaUtils","similarity_score":0.6185645544073405},{"class_name":"MapUtils","similarity_score":0.6005637509465007},{"class_name":"MyBatisUtils","similarity_score":0.6641719087136434},{"class_name":"DataPermissionUtils","similarity_score":0.5671049640066687},{"class_name":"DateUtils","similarity_score":0.7037657172144437},{"class_name":"SecurityFrameworkUtils","similarity_score":0.6582997689947839},{"class_name":"MoneyUtils","similarity_score":0.7068185275293839},{"class_name":"HttpUtils","similarity_score":0.4074403975346409},{"class_name":"LocalDateTimeUtils","similarity_score":0.7525427175654033},{"class_name":"PageUtils","similarity_score":0.6714849356309811},{"class_name":"ServiceExceptionUtil","similarity_score":0.6436403024985382},{"class_name":"ServletUtils","similarity_score":0.652798565186342},{"class_name":"RandomUtils","similarity_score":0.4226284701902013},{"class_name":"SetUtils","similarity_score":0.6247161517603578},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.6878778711844393},{"class_name":"ValidationUtils","similarity_score":0.4776704031908477},{"class_name":"WebFrameworkUtils","similarity_score":0.6489134839694883},{"class_name":"TracerFrameworkUtils","similarity_score":0.5345224838248488},{"class_name":"TracerUtils","similarity_score":0.7273938385820886},{"class_name":"TenantUtils","similarity_score":0.6727415133172175},{"class_name":"JsonUtils","similarity_score":0.47117424874042},{"class_name":"JdbcUtils","similarity_score":0.6995986008041977},{"class_name":"IoUtils","similarity_score":0.6881287138032851},{"class_name":"IPUtils","similarity_score":0.6705212981648824},{"class_name":"StrUtils","similarity_score":0.683604881651886},{"class_name":"SpringExpressionUtils","similarity_score":0.5682263215136943},{"class_name":"SpringAopUtils","similarity_score":0.5417593420637763},{"class_name":"ErrorCodeServiceTest","similarity_score":0.17177852588813242},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.09688077471626762},{"class_name":"DictDataServiceImplTest","similarity_score":0.16187126466127336},{"class_name":"DictTypeServiceImplTest","similarity_score":0.1327557891076122},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.4077493617220422},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.4913538149119954},{"class_name":"OAuth2OpenController","similarity_score":0.23194183196294174},{"class_name":"OAuth2TokenServiceImpl","similarity_score":0.32151188209615666}],"target_classes_sorted_by_llm":["WebSocketFrameworkUtils","TenantUtils","DateUtils","JdbcUtils","TracerUtils","StrUtils","IoUtils","MoneyUtils","PageUtils","LocalDateTimeUtils"],"llm_response_time":13364,"similarity_computation_time":18,"similarity_metric":"voyage"}}}
