{"id":"22e1ef3c-d752-4d00-a01f-a67aea1f1cb9","methodCount":1,"hostFunctionTelemetryData":{"hostFunctionSize":31,"lineStart":30,"lineEnd":60,"bodyLineStart":30,"language":"java","filePath":"/Users/fraol/Documents/MM-assist-dataset/spring-boot/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.java","sourceCode":"/**\n * {@link EnableAutoConfiguration Auto-configuration} for {@link TaskExecutor}.\n *\n * @author Stephane Nicoll\n * @author Camille Vienot\n * @author Moritz Halbritter\n * @author Lasse Wulff\n * @since 2.1.0\n */\n@ConditionalOnClass(ThreadPoolTaskExecutor.class)\n@AutoConfiguration\n@EnableConfigurationProperties(TaskExecutionProperties.class)\n@Import({ TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration.class,\n\t\tTaskExecutorConfigurations.TaskExecutorBuilderConfiguration.class,\n\t\tTaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration.class,\n\t\tTaskExecutorConfigurations.TaskExecutorConfiguration.class })\npublic class TaskExecutionAutoConfiguration {\n\n\t/**\n\t * Bean name of the application {@link TaskExecutor}.\n\t */\n\tpublic static final String APPLICATION_TASK_EXECUTOR_BEAN_NAME \u003d \"applicationTaskExecutor\";\n\n\tpublic static AsyncTaskExecutor determineAsyncTaskExecutor(Map\u003cString, AsyncTaskExecutor\u003e taskExecutors) {\n\t\tif (taskExecutors.size() \u003d\u003d 1) {\n\t\t\treturn taskExecutors.values().iterator().next();\n\t\t}\n\t\treturn taskExecutors.get(APPLICATION_TASK_EXECUTOR_BEAN_NAME);\n\t}\n\n}","methodCount":1},"candidatesTelemetryData":{"numberOfSuggestions":3,"candidates":[{"lineStart":52,"lineEnd":57,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method determineAsyncTaskExecutor to class WebMvcAutoConfigurationAdapter","description":"move method determineAsyncTaskExecutor to PsiClass:WebMvcAutoConfigurationAdapter\nRationale: The determineAsyncTaskExecutor() method is related to task execution and configuration, which aligns with the responsibilities of the WebMvcAutoConfigurationAdapter class. Moving it here adheres to the Single Responsibility Principle, as it centralizes async task configuration logic. This enhances cohesion and makes the method more relevant to the class\u0027s purpose. However, care must be taken to ensure that the method\u0027s static nature does not conflict with instance-based configurations in this class.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":52,"lineEnd":57,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method determineAsyncTaskExecutor to class CommonConfiguration","description":"move method determineAsyncTaskExecutor to PsiClass:CommonConfiguration\nRationale: The method deals with determining the appropriate AsyncTaskExecutor, which is a configuration concern. Placing it in CommonConfiguration aligns with the class\u0027s role in managing application-wide configurations. This move enhances modularity and adheres to the Open/Closed Principle, allowing for easier extensions in the future. A potential drawback is that it may introduce unnecessary dependencies if CommonConfiguration is not intended to handle executor logic.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":52,"lineEnd":57,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method determineAsyncTaskExecutor to class AutoConfigurationMetadataLoader","description":"move method determineAsyncTaskExecutor to PsiClass:AutoConfigurationMetadataLoader\nRationale: The method\u0027s purpose is to determine the correct AsyncTaskExecutor based on a map, which relates to configuration metadata. Moving it to AutoConfigurationMetadataLoader aligns with its role in loading and managing configuration metadata. This enhances the class\u0027s cohesion and keeps configuration-related logic centralized. However, this class may become overloaded with responsibilities if not managed carefully.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":1,"suggested_move_methods":[],"llm_response_time":639},{"iteration_num":2,"suggested_move_methods":[],"llm_response_time":331},{"iteration_num":3,"suggested_move_methods":[],"llm_response_time":375},{"iteration_num":-1,"suggested_move_methods":[{"method_name":"determineAsyncTaskExecutor","method_signature":"public static determineAsyncTaskExecutor(Map\u003cString, AsyncTaskExecutor\u003e taskExecutors)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"determineAsyncTaskExecutor","method_signature":"public static determineAsyncTaskExecutor(Map\u003cString, AsyncTaskExecutor\u003e taskExecutors)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"public static determineAsyncTaskExecutor(Map\u003cString, AsyncTaskExecutor\u003e taskExecutors)":{"first":{"method_name":"determineAsyncTaskExecutor","method_signature":"public static determineAsyncTaskExecutor(Map\u003cString, AsyncTaskExecutor\u003e taskExecutors)","target_class":"","rationale":""},"second":0.5189608495869518}},"llmMethodPriority":{"priority_method_names":["determineAsyncTaskExecutor"],"llm_response_time":713},"targetClassMap":{"determineAsyncTaskExecutor":{"target_classes":[{"class_name":"SignalUtils","similarity_score":0.2886751345948129},{"class_name":"SystemPropertyUtils","similarity_score":0.4536246426900728},{"class_name":"TaskSchedulingAutoConfiguration","similarity_score":0.2930426312669155},{"class_name":"CertificateMatcher","similarity_score":0.5566907593729828},{"class_name":"CertificateMatchingTestSource","similarity_score":0.44191611768803346},{"class_name":"QuartzDataSourceScriptDatabaseInitializer","similarity_score":0.2769583725183299},{"class_name":"Chain","similarity_score":0.478179718015569},{"class_name":"SettingsCreator","similarity_score":0.4114406565333952},{"class_name":"KafkaAutoConfiguration","similarity_score":0.5089596929862775},{"class_name":"NoSuchBeanDefinitionFailureAnalyzerTests","similarity_score":0.48048534069317583},{"class_name":"R2dbcDataAutoConfiguration","similarity_score":0.4651302547095318},{"class_name":"R2dbcInitializationConfiguration","similarity_score":0.4364357804719848},{"class_name":"RabbitStreamConfiguration","similarity_score":0.33678765702728175},{"class_name":"AutoConfigurationMetadataLoader","similarity_score":0.5302373024798149},{"class_name":"AutoConfigurations","similarity_score":0.48766065222237814},{"class_name":"ChildConfiguration","similarity_score":0.3928371006591931},{"class_name":"OAuth2AuthorizationServerJwtAutoConfiguration","similarity_score":0.39508993800564},{"class_name":"OAuth2AuthorizationServerWebSecurityConfiguration","similarity_score":0.3996526269427267},{"class_name":"SampleConfiguration","similarity_score":0.5107539184552492},{"class_name":"OAuth2ClientPropertiesMapper","similarity_score":0.4936240647992437},{"class_name":"OAuth2ResourceServerAutoConfigurationTests","similarity_score":0.36291096645945975},{"class_name":"SimpleConnectionFactoryConfiguration","similarity_score":0.2581068347594779},{"class_name":"ReactiveOAuth2ResourceServerAutoConfigurationTests","similarity_score":0.3668273552191532},{"class_name":"ReactorAutoConfigurationTests","similarity_score":0.3452254816016825},{"class_name":"ClassProxyingConfiguration","similarity_score":0.43092875104518874},{"class_name":"PropertiesSslBundle","similarity_score":0.5194179442049331},{"class_name":"ValidationAutoConfiguration","similarity_score":0.30855672717672256},{"class_name":"ValidatorAdapter","similarity_score":0.6064287348433505},{"class_name":"BatchDataSourceScriptDatabaseInitializer","similarity_score":0.2201445162683988},{"class_name":"PropertyPlaceholderAutoConfiguration","similarity_score":0.2930426312669155},{"class_name":"OnBeanCondition","similarity_score":0.6060106349298698},{"class_name":"TestableInitialContextFactory","similarity_score":0.6059224584145861},{"class_name":"VanillaConfiguration","similarity_score":0.3928371006591931},{"class_name":"RedisUrlSyntaxException","similarity_score":0.4152846838656847},{"class_name":"TestConfiguration","similarity_score":0.38575837490522974},{"class_name":"AcknowledgeMode","similarity_score":0.2613220713080719},{"class_name":"Registration","similarity_score":0.24333213169614382},{"class_name":"PulsarAutoConfigurationIntegrationTests","similarity_score":0.4020654755466907},{"class_name":"OracleUcp","similarity_score":0.4086347063482534},{"class_name":"GraphQlTestDataFetchers","similarity_score":0.5141872122181115},{"class_name":"MongoDataAutoConfigurationTests","similarity_score":0.4761270993553014},{"class_name":"MongoDataConfiguration","similarity_score":0.4082482904638631},{"class_name":"PathRequest","similarity_score":0.39834026082832624},{"class_name":"PlaceholdersOverride","similarity_score":0.4213504858001922},{"class_name":"WebMvcAutoConfigurationAdapter","similarity_score":0.5601531651030528},{"class_name":"WebMvcIncludedConfiguration","similarity_score":0.38575837490522974},{"class_name":"Algorithm","similarity_score":0.4834937784152283},{"class_name":"WebServicesAutoConfiguration","similarity_score":0.5094336280849735},{"class_name":"CommonConfiguration","similarity_score":0.5477225575051662}],"target_classes_sorted_by_llm":["WebMvcAutoConfigurationAdapter","CommonConfiguration","AutoConfigurationMetadataLoader","OnBeanCondition","TestableInitialContextFactory","ValidatorAdapter","GraphQlTestDataFetchers","CertificateMatcher","PropertiesSslBundle","SampleConfiguration"],"llm_response_time":16825,"similarity_computation_time":108,"similarity_metric":"tfidf"}}}
{"id":"ec813468-f60c-40d1-85fd-a65c144978a6","methodCount":5,"hostFunctionTelemetryData":{"hostFunctionSize":55,"lineStart":115,"lineEnd":169,"bodyLineStart":115,"language":"java","filePath":"/Users/fraol/Documents/MM-assist-dataset/spring-boot/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/scheduling/ScheduledTasksEndpoint.java","sourceCode":"/**\n\t * Base class for descriptions of a {@link Task}.\n\t */\n\tpublic abstract static class TaskDescriptor {\n\n\t\tprivate static final Map\u003cClass\u003c? extends Task\u003e, Function\u003cTask, TaskDescriptor\u003e\u003e DESCRIBERS \u003d new LinkedHashMap\u003c\u003e();\n\n\t\tstatic {\n\t\t\tDESCRIBERS.put(FixedRateTask.class, (task) -\u003e new FixedRateTaskDescriptor((FixedRateTask) task));\n\t\t\tDESCRIBERS.put(FixedDelayTask.class, (task) -\u003e new FixedDelayTaskDescriptor((FixedDelayTask) task));\n\t\t\tDESCRIBERS.put(CronTask.class, (task) -\u003e new CronTaskDescriptor((CronTask) task));\n\t\t\tDESCRIBERS.put(TriggerTask.class, (task) -\u003e describeTriggerTask((TriggerTask) task));\n\t\t}\n\n\t\tprivate final TaskType type;\n\n\t\tprivate final RunnableDescriptor runnable;\n\n\t\tprivate static TaskDescriptor of(Task task) {\n\t\t\treturn DESCRIBERS.entrySet()\n\t\t\t\t.stream()\n\t\t\t\t.filter((entry) -\u003e entry.getKey().isInstance(task))\n\t\t\t\t.map((entry) -\u003e entry.getValue().apply(task))\n\t\t\t\t.findFirst()\n\t\t\t\t.orElse(null);\n\t\t}\n\n\t\tprivate static TaskDescriptor describeTriggerTask(TriggerTask triggerTask) {\n\t\t\tTrigger trigger \u003d triggerTask.getTrigger();\n\t\t\tif (trigger instanceof CronTrigger cronTrigger) {\n\t\t\t\treturn new CronTaskDescriptor(triggerTask, cronTrigger);\n\t\t\t}\n\t\t\tif (trigger instanceof PeriodicTrigger periodicTrigger) {\n\t\t\t\tif (periodicTrigger.isFixedRate()) {\n\t\t\t\t\treturn new FixedRateTaskDescriptor(triggerTask, periodicTrigger);\n\t\t\t\t}\n\t\t\t\treturn new FixedDelayTaskDescriptor(triggerTask, periodicTrigger);\n\t\t\t}\n\t\t\treturn new CustomTriggerTaskDescriptor(triggerTask);\n\t\t}\n\n\t\tprotected TaskDescriptor(TaskType type, Runnable runnable) {\n\t\t\tthis.type \u003d type;\n\t\t\tthis.runnable \u003d new RunnableDescriptor(runnable);\n\t\t}\n\n\t\tprivate TaskType getType() {\n\t\t\treturn this.type;\n\t\t}\n\n\t\tpublic final RunnableDescriptor getRunnable() {\n\t\t\treturn this.runnable;\n\t\t}\n\n\t}","methodCount":5},"candidatesTelemetryData":{"numberOfSuggestions":6,"candidates":[{"lineStart":132,"lineEnd":139,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method of to class ScheduledTasksEndpoint","description":"move method of to PsiClass:ScheduledTasksEndpoint\nRationale: The of(Task task) method is responsible for creating a TaskDescriptor based on the type of Task provided. Since ScheduledTasksEndpoint deals with scheduled tasks, it is appropriate to move this method here, as it aligns with the class\u0027s purpose of managing task descriptions. This move adheres to the Single Responsibility Principle, enhancing cohesion by keeping task-related logic together. However, care must be taken to ensure that the DESCRIBERS map is accessible in this context.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":132,"lineEnd":139,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method of to class DispatcherServletsMappingDescriptionProvider","description":"move method of to PsiClass:DispatcherServletsMappingDescriptionProvider\nRationale: This class is involved in describing mappings and handling various task-related descriptions. Moving the of(Task task) method here would centralize the logic for task descriptor creation, making it easier to maintain and extend. This aligns with the Open/Closed Principle, as it allows for new task types to be added without modifying existing code. However, the class may become too bloated if it takes on too many responsibilities.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":132,"lineEnd":139,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method of to class ContextBeansDescriptor","description":"move method of to PsiClass:ContextBeansDescriptor\nRationale: The ContextBeansDescriptor class manages bean descriptors, which could include task descriptors. Relocating the of(Task task) method here would enhance the cohesion of task-related logic within the context of bean management. This aligns with the Interface Segregation Principle, as it allows for more focused interfaces. However, the context of task descriptors may not fit perfectly with the overall purpose of this class.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":141,"lineEnd":153,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method describeTriggerTask to class ScheduledTasksEndpoint","description":"move method describeTriggerTask to PsiClass:ScheduledTasksEndpoint\nRationale: The describeTriggerTask() method is responsible for creating task descriptors based on different types of triggers, which aligns closely with the responsibilities of managing scheduled tasks. Moving it to ScheduledTasksEndpoint adheres to the Single Responsibility Principle, as it centralizes task-related logic. This enhances cohesion and makes the method more relevant to the context of scheduled tasks. However, care must be taken to ensure that any dependencies on the current class are properly managed.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":141,"lineEnd":153,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method describeTriggerTask to class Config","description":"move method describeTriggerTask to PsiClass:Config\nRationale: The describeTriggerTask() method deals with the configuration of tasks based on triggers, which fits well within the Config class\u0027s purpose of managing application configurations. This move would enhance the organization of task-related logic and improve maintainability. It aligns with the Open/Closed Principle by allowing the Config class to be extended with new task types without modifying existing code. However, the Config class may become overloaded if too many responsibilities are added.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":141,"lineEnd":153,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method describeTriggerTask to class BaseConfiguration","description":"move method describeTriggerTask to PsiClass:BaseConfiguration\nRationale: The method\u0027s focus on task descriptors suggests it is part of a broader configuration context. Moving it to BaseConfiguration would allow for better organization of configuration-related methods. This aligns with the Single Responsibility Principle, as it separates task descriptor logic from unrelated functionalities. However, the BaseConfiguration class should not become too complex with unrelated methods.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":1,"suggested_move_methods":[{"method_name":"describeTriggerTask","method_signature":"private static TaskDescriptor describeTriggerTask(TriggerTask triggerTask)","target_class":"TriggerTask","rationale":"The method describeTriggerTask is specifically designed to handle the logic related to TriggerTask instances. Moving it to the TriggerTask class would encapsulate the behavior related to triggers within the TriggerTask class itself, promoting better cohesion."}],"llm_response_time":7998},{"iteration_num":2,"suggested_move_methods":[{"method_name":"describeTriggerTask","method_signature":"private static TaskDescriptor describeTriggerTask(TriggerTask triggerTask)","target_class":"TriggerTask","rationale":"The method describeTriggerTask() is specifically designed to handle the logic related to TriggerTask instances. Moving it to the TriggerTask class would encapsulate the behavior related to triggers within the TriggerTask class itself, promoting better cohesion."}],"llm_response_time":1371},{"iteration_num":3,"suggested_move_methods":[{"method_name":"describeTriggerTask","method_signature":"private static TaskDescriptor describeTriggerTask(TriggerTask triggerTask)","target_class":"TriggerTask","rationale":"The method describeTriggerTask() is specifically designed to handle the details of TriggerTask instances. Moving it to the TriggerTask class would encapsulate the logic related to trigger tasks within the TriggerTask class itself, promoting better cohesion."}],"llm_response_time":1211},{"iteration_num":-1,"suggested_move_methods":[{"method_name":"of","method_signature":"private static of(Task task)","target_class":"","rationale":""},{"method_name":"describeTriggerTask","method_signature":"private static describeTriggerTask(TriggerTask triggerTask)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"of","method_signature":"private static of(Task task)","target_class":"","rationale":""},{"method_name":"describeTriggerTask","method_signature":"private static describeTriggerTask(TriggerTask triggerTask)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"private static of(Task task)":{"first":{"method_name":"of","method_signature":"private static of(Task task)","target_class":"","rationale":""},"second":0.5744642567574818},"private static describeTriggerTask(TriggerTask triggerTask)":{"first":{"method_name":"describeTriggerTask","method_signature":"private static describeTriggerTask(TriggerTask triggerTask)","target_class":"","rationale":""},"second":0.7347528224258517}},"llmMethodPriority":{"priority_method_names":["of","describeTriggerTask"],"llm_response_time":918},"targetClassMap":{"of":{"target_classes":[{"class_name":"ScheduledTasksEndpoint","similarity_score":0.4372527403766981},{"class_name":"SystemPropertyUtils","similarity_score":0.27931501505850126},{"class_name":"SignalUtils","similarity_score":0.23717082451262844},{"class_name":"AuditEvent","similarity_score":0.1359051028524137},{"class_name":"ContextBeansDescriptor","similarity_score":0.3783988503535557},{"class_name":"AuthenticationAuditListener","similarity_score":0.2898221827630001},{"class_name":"RepositoryMetricsAutoConfiguration","similarity_score":0.24747528995589838},{"class_name":"CompositePropagationFactory","similarity_score":0.39833081905626244},{"class_name":"CompositePropagationTests","similarity_score":0.19086611143795607},{"class_name":"CompositeTextMapPropagator","similarity_score":0.3381704152460353},{"class_name":"CompositeTextMapPropagatorTests","similarity_score":0.34160736497973787},{"class_name":"AdditionalHealthEndpointPath","similarity_score":0.19239856655651544},{"class_name":"BaseConfiguration","similarity_score":0.29010395609765727},{"class_name":"BaseDocumentationConfiguration","similarity_score":0.3595732599803958},{"class_name":"ObservationAutoConfiguration","similarity_score":0.3051441424284631},{"class_name":"ObservationHandlerGroupingTests","similarity_score":0.23584384154895058},{"class_name":"TaskExecutorMetricsAutoConfiguration","similarity_score":0.3457968647893055},{"class_name":"CloseManagementContextListener","similarity_score":0.32447238944452533},{"class_name":"CloudFoundryActuatorAutoConfigurationTests","similarity_score":0.33115299672787274},{"class_name":"Config","similarity_score":0.3149996923832631},{"class_name":"ResultSummaryMock","similarity_score":0.22089631215321717},{"class_name":"HandlerFunctionDescription","similarity_score":0.2589661986891186},{"class_name":"BatchObservationAutoConfiguration","similarity_score":0.15922346773028256},{"class_name":"OnEnabledTracingCondition","similarity_score":0.29101262323732424},{"class_name":"DataSourcePoolMetricsAutoConfigurationTests","similarity_score":0.3867937709339203},{"class_name":"TestConfiguration","similarity_score":0.3899064336825272},{"class_name":"CachingOperationInvoker","similarity_score":0.3564068666420772},{"class_name":"BeansEndpoint","similarity_score":0.35503166905716954},{"class_name":"OpenTelemetryAutoConfiguration","similarity_score":0.2539166875385041},{"class_name":"ConnectionPoolMetrics","similarity_score":0.2102103155259204},{"class_name":"Health","similarity_score":0.17050351346362788},{"class_name":"HealthEndpointConfiguration","similarity_score":0.37413240245684715},{"class_name":"HealthEndpointWebExtensionConfiguration","similarity_score":0.3351985224194727},{"class_name":"CacheKey","similarity_score":0.3063456483288117},{"class_name":"DifferentManagementContextConfiguration","similarity_score":0.2906591794880899},{"class_name":"IsoOffsetDateTimeConverter","similarity_score":0.20788046015507494},{"class_name":"HikariSealingConfiguration","similarity_score":0.35048914333244136},{"class_name":"HostAndPort","similarity_score":0.34156502553198664},{"class_name":"MetricsAutoConfiguration","similarity_score":0.28118898470478154},{"class_name":"MeterRegistryPostProcessor","similarity_score":0.3595896629389649},{"class_name":"MeterValue","similarity_score":0.28823386156015857},{"class_name":"MetricsRun","similarity_score":0.2775167719232966},{"class_name":"DispatcherServletsMappingDescriptionProvider","similarity_score":0.4106283127025349},{"class_name":"LogFileWebEndpointWebIntegrationTests","similarity_score":0.26216125254653816},{"class_name":"LiquibaseEndpointAutoConfiguration","similarity_score":0.2653955210788148},{"class_name":"OtlpLoggingAutoConfigurationIntegrationTests","similarity_score":0.2933292774503769},{"class_name":"TimedAnnotations","similarity_score":0.2759096339857058},{"class_name":"Location","similarity_score":0.3830769733091181},{"class_name":"LocalBaggageFields","similarity_score":0.21348158690451335},{"class_name":"LocalBaggageFieldsTests","similarity_score":0.2988071523335984}],"target_classes_sorted_by_llm":["ScheduledTasksEndpoint","DispatcherServletsMappingDescriptionProvider","ContextBeansDescriptor","HealthEndpointConfiguration","MeterRegistryPostProcessor","CompositePropagationFactory","BaseDocumentationConfiguration","TestConfiguration","Location","DataSourcePoolMetricsAutoConfigurationTests"],"llm_response_time":16916,"similarity_computation_time":67,"similarity_metric":"tfidf"},"describeTriggerTask":{"target_classes":[{"class_name":"ScheduledTasksEndpoint","similarity_score":0.6028691360832826},{"class_name":"SignalUtils","similarity_score":0.28330616314417106},{"class_name":"SystemPropertyUtils","similarity_score":0.49941451270976783},{"class_name":"SessionsEndpointDocumentationTests","similarity_score":0.3782146149777132},{"class_name":"ContextBeansDescriptor","similarity_score":0.6053477939108097},{"class_name":"QuartzEndpoint","similarity_score":0.5610214771208667},{"class_name":"QuartzEndpointDocumentationTests","similarity_score":0.4854447941898642},{"class_name":"QuartzEndpointTests","similarity_score":0.3156298410559895},{"class_name":"QuartzJobSummaryDescriptor","similarity_score":0.511912597361626},{"class_name":"AuditEvent","similarity_score":0.2516687237181491},{"class_name":"AuthenticationAuditListener","similarity_score":0.5698211153429324},{"class_name":"RepositoryMetricsAutoConfiguration","similarity_score":0.5173264092466878},{"class_name":"R2dbcObservationAutoConfigurationTests","similarity_score":0.49408695167958955},{"class_name":"RabbitMetricsAutoConfiguration","similarity_score":0.30054146238782287},{"class_name":"Principal","similarity_score":0.3204889675083585},{"class_name":"ReactiveCachedResponse","similarity_score":0.5669562946547921},{"class_name":"ReactiveCloudFoundryActuatorAutoConfigurationTests","similarity_score":0.4139326445291435},{"class_name":"ReactiveHandler","similarity_score":0.6360428440325864},{"class_name":"ReactiveManagementContextAutoConfiguration","similarity_score":0.3062428508305045},{"class_name":"CompositePropagationFactory","similarity_score":0.5582722700008139},{"class_name":"CompositePropagationTests","similarity_score":0.4394067867316858},{"class_name":"CompositeTextMapPropagator","similarity_score":0.5185458990363359},{"class_name":"CompositeTextMapPropagatorTests","similarity_score":0.6025868801356119},{"class_name":"BaseConfiguration","similarity_score":0.6360661543202528},{"class_name":"SimpleHttpCodeStatusMapper","similarity_score":0.5236095662202203},{"class_name":"SimpleInfoContributorTests","similarity_score":0.5089495550599168},{"class_name":"BaseDocumentationConfiguration","similarity_score":0.5857074126574228},{"class_name":"SimpleStatusAggregator","similarity_score":0.5482537572024978},{"class_name":"ObservationAutoConfiguration","similarity_score":0.6066535121541207},{"class_name":"ObservationHandlerGroupingTests","similarity_score":0.509374424799726},{"class_name":"TaskExecutorMetricsAutoConfiguration","similarity_score":0.5931154408625934},{"class_name":"PrometheusSimpleclientPropertiesConfigAdapter","similarity_score":0.4927882877016832},{"class_name":"DifferentManagementContextConfiguration","similarity_score":0.4869807930279584},{"class_name":"PropertiesMeterFilter","similarity_score":0.5637004241427518},{"class_name":"RecordableServerHttpRequest","similarity_score":0.4735980392902706},{"class_name":"PropertiesObservationFilterPredicate","similarity_score":0.5792275130680481},{"class_name":"PropertiesObservationFilterPredicateTests","similarity_score":0.4663981236363204},{"class_name":"Config","similarity_score":0.6499288335384259},{"class_name":"ResultSummaryMock","similarity_score":0.35182116393630797},{"class_name":"BatchObservationAutoConfiguration","similarity_score":0.29970310404023615},{"class_name":"HandlerFunctionDescription","similarity_score":0.39803350093255985},{"class_name":"RedisHealth","similarity_score":0.5099909382580499},{"class_name":"OnEnabledTracingCondition","similarity_score":0.54608172117679},{"class_name":"CacheKey","similarity_score":0.4678844209502219},{"class_name":"DispatcherServletsMappingDescriptionProvider","similarity_score":0.6601191989506875},{"class_name":"TestConfiguration","similarity_score":0.6605216750590743},{"class_name":"CloseManagementContextListener","similarity_score":0.5223137276244567},{"class_name":"BeansEndpoint","similarity_score":0.5795271277418887},{"class_name":"CachingOperationInvoker","similarity_score":0.6026201714855686},{"class_name":"CloudFoundryActuatorAutoConfigurationTests","similarity_score":0.4546002774711618}],"target_classes_sorted_by_llm":["ScheduledTasksEndpoint","Config","BaseConfiguration","ObservationAutoConfiguration","DispatcherServletsMappingDescriptionProvider","ContextBeansDescriptor","CachingOperationInvoker","ReactiveHandler","CompositeTextMapPropagatorTests","TestConfiguration"],"llm_response_time":16066,"similarity_computation_time":36,"similarity_metric":"tfidf"}}}
