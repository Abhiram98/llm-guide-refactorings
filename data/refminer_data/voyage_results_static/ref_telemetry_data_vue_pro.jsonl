{"id":"99a6f16b-466d-43e2-91b5-2d1e30160618","methodCount":4,"hostFunctionTelemetryData":{"hostFunctionSize":112,"lineStart":20,"lineEnd":131,"bodyLineStart":20,"language":"java","filePath":"/Users/fraol/Documents/MM-assist-dataset/ruoyi-vue-pro/yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmQueryWrapperUtils.java","sourceCode":"/**\n * CRM 查询工具类\n *\n * @author HUIHUI\n */\npublic class CrmQueryWrapperUtils {\n\n    /**\n     * 构造 CRM 数据类型数据分页查询条件\n     *\n     * @param query     连表查询对象\n     * @param bizType   数据类型 {@link CrmBizTypeEnum}\n     * @param bizId     数据编号\n     * @param userId    用户编号\n     * @param sceneType 场景类型\n     * @param pool      公海\n     * @return 是否 （是：需要执行查询，否：不需要查询调用方法直接返回空）\n     */\n    // TODO @puhui999：bizId 直接传递会不会简单点 回复：还是需要 SFunction 因为分页连表时不知道 bizId 是多少；是不是把 bizId 传入就好啦？\n    public static \u003cT extends MPJLambdaWrapper\u003c?\u003e, S\u003e boolean appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool) {\n        // 1. 构建数据权限连表条件\n        if (ObjUtil.notEqual(validateAdminUser(userId), Boolean.TRUE)) { // 管理员不需要数据权限\n            query.innerJoin(CrmPermissionDO.class, on -\u003e on.eq(CrmPermissionDO::getBizType, bizType)\n                    .eq(CrmPermissionDO::getBizId, bizId)\n                    .eq(CrmPermissionDO::getUserId, userId));\n        }\n        // 2.1 场景一：我负责的数据\n        if (CrmSceneTypeEnum.isOwner(sceneType)) {\n            query.eq(\"owner_user_id\", userId);\n        }\n        // 2.2 场景二：我参与的数据\n        if (CrmSceneTypeEnum.isInvolved(sceneType)) {\n            query.ne(\"owner_user_id\", userId)\n                    // TODO @puhui999：IN 是不是更合适哈；\n                    .and(q -\u003e q.eq(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.READ.getLevel())\n                            .or()\n                            .eq(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.WRITE.getLevel()));\n        }\n        // 2.3 场景三：下属负责的数据\n        if (CrmSceneTypeEnum.isSubordinate(sceneType)) {\n            // TODO @puhui999：要不如果没有下属，拼一个 owner_user_id in null，不返回结果就好啦；\n            List\u003cAdminUserRespDTO\u003e subordinateUsers \u003d getAdminUserApi().getUserListBySubordinate(userId);\n            if (CollUtil.isEmpty(subordinateUsers)) {\n                return false;\n            }\n            query.in(\"owner_user_id\", convertSet(subordinateUsers, AdminUserRespDTO::getId));\n        }\n\n        // 3. 拼接公海的查询条件\n        if (ObjUtil.equal(pool, Boolean.TRUE)) { // 情况一：公海\n            query.isNull(\"owner_user_id\");\n        } else { // 情况二：不是公海\n            query.isNotNull(\"owner_user_id\");\n        }\n        return true;\n    }\n\n    /**\n     * 构造 CRM 数据类型批量数据查询条件\n     *\n     * @param query   连表查询对象\n     * @param bizType 数据类型 {@link CrmBizTypeEnum}\n     * @param bizIds  数据编号\n     * @param userId  用户编号\n     */\n    public static \u003cT extends MPJLambdaWrapper\u003c?\u003e\u003e void appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId) {\n        if (ObjUtil.equal(validateAdminUser(userId), Boolean.TRUE)) {// 管理员不需要数据权限\n            return;\n        }\n\n        query.innerJoin(CrmPermissionDO.class, on -\u003e\n                on.eq(CrmPermissionDO::getBizType, bizType).in(CrmPermissionDO::getBizId, bizIds)\n                        .in(CollUtil.isNotEmpty(bizIds), CrmPermissionDO::getUserId, userId));\n    }\n\n    private static AdminUserApi getAdminUserApi() {\n        return AdminUserApiHolder.ADMIN_USER_API;\n    }\n\n    /**\n     * 校验用户是否是管理员\n     *\n     * @param userId 用户编号\n     * @return 是/否\n     */\n    private static boolean validateAdminUser(Long userId) {\n        // TODO 查询权限配置表用户的角色信息\n        // TODO @puhui999：查询用户的角色;CRM_ADMIN(\"crm_admin\", \"CRM 管理员\"),\n        //CrmPermissionConfig permissionConfig \u003d crmPermissionConfigService.getPermissionConfigByUserId(userId);\n        //if (permissionConfig \u003d\u003d null) {\n        //    return false;\n        //}\n        //// 校验是否为管理员\n        //if (permissionConfig.getIsAdmin()){\n        //    return true;\n        //}\n        return false;\n    }\n\n    /**\n     * 静态内部类实现 AdminUserApi 单例获取\n     *\n     * @author HUIHUI\n     */\n    private static class AdminUserApiHolder {\n\n        private static final AdminUserApi ADMIN_USER_API \u003d SpringUtil.getBean(AdminUserApi.class);\n\n    }\n\n}","methodCount":4},"candidatesTelemetryData":{"numberOfSuggestions":9,"candidates":[{"lineStart":99,"lineEnd":117,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method validateAdminUser to class SecurityFrameworkUtils","description":"move method validateAdminUser to PsiClass:SecurityFrameworkUtils\nRationale: The validateAdminUser() method is focused on user permissions and roles, which aligns closely with security concerns. Moving it to SecurityFrameworkUtils would adhere to the Single Responsibility Principle, as this class is already responsible for user authentication and authorization. This would improve cohesion and make the method more reusable in security contexts. However, care must be taken to ensure that the method integrates well with existing security mechanisms.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":99,"lineEnd":117,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method validateAdminUser to class CrmPermissionAspect","description":"move method validateAdminUser to PsiClass:CrmPermissionAspect\nRationale: The validateAdminUser() method directly relates to user roles and permissions, making CrmPermissionAspect a suitable target. This class is designed to handle permission-related logic, and relocating the method here would enhance the separation of concerns. This aligns with the Open/Closed Principle, as it allows for easier extension of permission checks. However, it may increase the complexity of the aspect if not managed properly.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":99,"lineEnd":117,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method validateAdminUser to class AssertUtils","description":"move method validateAdminUser to PsiClass:AssertUtils\nRationale: While AssertUtils primarily deals with assertions, the validateAdminUser() method could be seen as a validation check for user roles. Moving it here could provide a centralized location for various validation methods, improving code organization. This aligns with the Single Responsibility Principle but may dilute the purpose of AssertUtils if it becomes too broad.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":26,"lineEnd":75,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class CrmPermissionAspect","description":"move method appendPermissionCondition to PsiClass:CrmPermissionAspect\nRationale: The appendPermissionCondition() method deals directly with CRM permissions and user data, which aligns closely with the responsibilities of CrmPermissionAspect. Moving it here adheres to the Single Responsibility Principle, as it centralizes permission-related logic. This enhances cohesion and makes the method more relevant to the class\u0027s purpose. However, care must be taken to ensure that dependencies on other classes are properly managed.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":26,"lineEnd":75,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class MyBatisUtils","description":"move method appendPermissionCondition to PsiClass:MyBatisUtils\nRationale: The method constructs query conditions for data retrieval, which is a core aspect of MyBatis operations. Relocating it to MyBatisUtils would enhance the utility of this class by consolidating query-building logic. This aligns with the Open/Closed Principle, as it allows for extending query capabilities without modifying existing code. However, it may introduce tight coupling with MyBatis, which could limit reusability.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":26,"lineEnd":75,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class SecurityFrameworkUtils","description":"move method appendPermissionCondition to PsiClass:SecurityFrameworkUtils\nRationale: Given that the method involves user permissions and roles, moving it to SecurityFrameworkUtils would encapsulate security-related logic in one place. This adheres to the Single Responsibility Principle and improves the overall design by keeping security concerns centralized. However, this could lead to a bloated utility class if not managed properly.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":77,"lineEnd":93,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class MyBatisUtils","description":"move method appendPermissionCondition to PsiClass:MyBatisUtils\nRationale: The appendPermissionCondition() method is closely related to query construction and database operations, which aligns well with MyBatisUtils. Moving it here adheres to the Single Responsibility Principle by consolidating database-related utilities, improving cohesion. This move enhances reusability for other query operations. However, care must be taken to ensure that the method\u0027s dependencies are properly managed in the new context.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":77,"lineEnd":93,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class TenantUtils","description":"move method appendPermissionCondition to PsiClass:TenantUtils\nRationale: The method involves user permissions, which can be related to tenant management in multi-tenant applications. Relocating it to TenantUtils would centralize permission handling, enhancing maintainability. This aligns with the Open/Closed Principle, allowing for future extensions related to tenant permissions without modifying existing code. However, the connection between tenant management and permission checks should be clearly defined to avoid confusion.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":77,"lineEnd":93,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method appendPermissionCondition to class AssertUtils","description":"move method appendPermissionCondition to PsiClass:AssertUtils\nRationale: While AssertUtils primarily deals with assertions, it can be extended to include permission checks as part of validation logic. This move would enhance the method\u0027s visibility and usage in validation scenarios, adhering to the Interface Segregation Principle by keeping permission-related checks separate from business logic. However, this could dilute the purpose of AssertUtils if not managed carefully.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":1,"suggested_move_methods":[{"method_name":"getAdminUserApi","method_signature":"private static AdminUserApi getAdminUserApi()","target_class":"AdminUserApi","rationale":"The method getAdminUserApi() is responsible for retrieving an instance of AdminUserApi, which suggests that it belongs to the AdminUserApi class rather than being a utility method in CrmQueryWrapperUtils."},{"method_name":"validateAdminUser","method_signature":"private static boolean validateAdminUser(Long userId)","target_class":"UserService","rationale":"The method validateAdminUser() checks if a user is an admin, which is a responsibility that should belong to a UserService or similar class that handles user-related operations."}],"llm_response_time":2648},{"iteration_num":2,"suggested_move_methods":[{"method_name":"getAdminUserApi","method_signature":"private static AdminUserApi getAdminUserApi()","target_class":"AdminUserApi","rationale":"The method getAdminUserApi() is responsible for retrieving an instance of AdminUserApi, which indicates that it is closely related to the AdminUserApi class. Moving it there would improve cohesion."},{"method_name":"validateAdminUser","method_signature":"private static boolean validateAdminUser(Long userId)","target_class":"UserService","rationale":"The method validateAdminUser() checks if a user is an admin, which is a user-related concern. It would be more appropriate to move this method to a UserService class that handles user-related operations."}],"llm_response_time":2979},{"iteration_num":3,"suggested_move_methods":[{"method_name":"getAdminUserApi","method_signature":"private static AdminUserApi getAdminUserApi()","target_class":"AdminUserApi","rationale":"The method getAdminUserApi() is responsible for retrieving an instance of AdminUserApi, which suggests that it belongs in the AdminUserApi class rather than a utility class."},{"method_name":"validateAdminUser","method_signature":"private static boolean validateAdminUser(Long userId)","target_class":"UserService","rationale":"The method validateAdminUser() checks if a user is an admin, which is a user-related operation and should be moved to a UserService class that handles user-related logic."}],"llm_response_time":2912},{"iteration_num":-1,"suggested_move_methods":[{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool)","target_class":"","rationale":""},{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId)","target_class":"","rationale":""},{"method_name":"validateAdminUser","method_signature":"private static validateAdminUser(Long userId)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"validateAdminUser","method_signature":"private static validateAdminUser(Long userId)","target_class":"","rationale":""},{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool)","target_class":"","rationale":""},{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"private static validateAdminUser(Long userId)":{"first":{"method_name":"validateAdminUser","method_signature":"private static validateAdminUser(Long userId)","target_class":"","rationale":""},"second":0.6393303150702326},"public static appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool)":{"first":{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, SFunction\u003cS, ?\u003e bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool)","target_class":"","rationale":""},"second":0.7259667073833417},"public static appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId)":{"first":{"method_name":"appendPermissionCondition","method_signature":"public static appendPermissionCondition(T query, Integer bizType, Collection\u003cLong\u003e bizIds, Long userId)","target_class":"","rationale":""},"second":0.735074930508595}},"llmMethodPriority":{"priority_method_names":["validateAdminUser","appendPermissionCondition","appendPermissionCondition"],"llm_response_time":2148},"targetClassMap":{"validateAdminUser":{"target_classes":[{"class_name":"OAuth2Utils","similarity_score":0.4715646536793477},{"class_name":"ValidationUtils","similarity_score":0.3524561704846094},{"class_name":"PageUtils","similarity_score":0.43516891051214646},{"class_name":"NumberUtils","similarity_score":0.4360332556124589},{"class_name":"ServletUtils","similarity_score":0.5469754812612343},{"class_name":"ObjectUtils","similarity_score":0.4932398037943546},{"class_name":"SetUtils","similarity_score":0.41590019592802907},{"class_name":"LocalDateTimeUtils","similarity_score":0.5651443129381131},{"class_name":"SpringAopUtils","similarity_score":0.5234757808487165},{"class_name":"SpringExpressionUtils","similarity_score":0.562440991821405},{"class_name":"StrUtils","similarity_score":0.5586540926908493},{"class_name":"MapUtils","similarity_score":0.4596114824457873},{"class_name":"DateUtils","similarity_score":0.5807954605204207},{"class_name":"MoneyUtils","similarity_score":0.5346175707469014},{"class_name":"CollectionUtils","similarity_score":0.3654517847704919},{"class_name":"TracerUtils","similarity_score":0.4975655973029363},{"class_name":"BeanUtils","similarity_score":0.43825049008927763},{"class_name":"ArrayUtils","similarity_score":0.4935916062593246},{"class_name":"CacheUtils","similarity_score":0.4893560258812953},{"class_name":"IoUtils","similarity_score":0.47767040319084775},{"class_name":"JsonUtils","similarity_score":0.3809469927100049},{"class_name":"FileUtils","similarity_score":0.5630122106881045},{"class_name":"HttpUtils","similarity_score":0.4294798889913062},{"class_name":"RandomUtils","similarity_score":0.4391253872310437},{"class_name":"SecurityFrameworkUtils","similarity_score":0.580023075124402},{"class_name":"ServiceExceptionUtil","similarity_score":0.503508560321734},{"class_name":"TenantUtils","similarity_score":0.5274534194952658},{"class_name":"WebFrameworkUtils","similarity_score":0.5386111553847056},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.48684408939821205},{"class_name":"CronUtils","similarity_score":0.5167801547999514},{"class_name":"TracerFrameworkUtils","similarity_score":0.4225771273642583},{"class_name":"MyBatisUtils","similarity_score":0.5337385847743039},{"class_name":"AssertUtils","similarity_score":0.6026505639799669},{"class_name":"AreaUtils","similarity_score":0.614613060803413},{"class_name":"DataPermissionUtils","similarity_score":0.4782248956397016},{"class_name":"IPUtils","similarity_score":0.48556001923212816},{"class_name":"JdbcUtils","similarity_score":0.5363212185231927},{"class_name":"ExcelUtils","similarity_score":0.4920015154284375},{"class_name":"SimpleTrie","similarity_score":0.5927404141509358},{"class_name":"CrmPermissionAspect","similarity_score":0.5761386739600728},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.3616796154823609},{"class_name":"DictDataServiceImplTest","similarity_score":0.40802179164326285},{"class_name":"DictTypeServiceImplTest","similarity_score":0.39809632135200806},{"class_name":"PostServiceImplTest","similarity_score":0.40192949683803875},{"class_name":"SmsLogServiceImplTest","similarity_score":0.3643879165029463},{"class_name":"SmsTemplateServiceImplTest","similarity_score":0.40765826297852115},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.34514689378101554},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.4050496953855445},{"class_name":"OAuth2OpenController","similarity_score":0.392231001770954}],"target_classes_sorted_by_llm":["SecurityFrameworkUtils","CrmPermissionAspect","AssertUtils","AreaUtils","DateUtils","SpringExpressionUtils","FileUtils","LocalDateTimeUtils","StrUtils","SimpleTrie"],"llm_response_time":12022,"similarity_computation_time":96,"similarity_metric":"tfidf"},"appendPermissionCondition":{"target_classes":[{"class_name":"OAuth2Utils","similarity_score":0.580109593803449},{"class_name":"ObjectUtils","similarity_score":0.4413136308853298},{"class_name":"ValidationUtils","similarity_score":0.30630432576194044},{"class_name":"LocalDateTimeUtils","similarity_score":0.6532435041905158},{"class_name":"NumberUtils","similarity_score":0.5699140112315364},{"class_name":"PageUtils","similarity_score":0.5281568271771597},{"class_name":"MoneyUtils","similarity_score":0.6898887612849176},{"class_name":"DateUtils","similarity_score":0.6155425134175264},{"class_name":"SpringAopUtils","similarity_score":0.42114897929465034},{"class_name":"StrUtils","similarity_score":0.5770340133627049},{"class_name":"SpringExpressionUtils","similarity_score":0.5102447299367499},{"class_name":"CollectionUtils","similarity_score":0.2645881773012882},{"class_name":"MapUtils","similarity_score":0.6057693394383502},{"class_name":"BeanUtils","similarity_score":0.4199657230649025},{"class_name":"TracerUtils","similarity_score":0.6005866581155833},{"class_name":"SetUtils","similarity_score":0.4743910085649022},{"class_name":"ArrayUtils","similarity_score":0.5039739899438243},{"class_name":"CacheUtils","similarity_score":0.3525331078612593},{"class_name":"ServletUtils","similarity_score":0.5238506566560424},{"class_name":"IoUtils","similarity_score":0.6346126622354662},{"class_name":"HttpUtils","similarity_score":0.3727233202489012},{"class_name":"JsonUtils","similarity_score":0.3387400747544705},{"class_name":"FileUtils","similarity_score":0.5747286924104227},{"class_name":"MyBatisUtils","similarity_score":0.6347024528385588},{"class_name":"TenantUtils","similarity_score":0.655572188265541},{"class_name":"CronUtils","similarity_score":0.5300434836968199},{"class_name":"WebFrameworkUtils","similarity_score":0.5478652493292634},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.5899428362444277},{"class_name":"TracerFrameworkUtils","similarity_score":0.5052762628886849},{"class_name":"RandomUtils","similarity_score":0.268338857592513},{"class_name":"SecurityFrameworkUtils","similarity_score":0.5650282521189266},{"class_name":"AssertUtils","similarity_score":0.6509654121608863},{"class_name":"AreaUtils","similarity_score":0.5667260275764706},{"class_name":"ServiceExceptionUtil","similarity_score":0.5598867880280713},{"class_name":"DataPermissionUtils","similarity_score":0.4867005820726744},{"class_name":"JdbcUtils","similarity_score":0.6328423872900443},{"class_name":"IPUtils","similarity_score":0.5804042134122559},{"class_name":"ExcelUtils","similarity_score":0.5743040779527546},{"class_name":"SimpleTrie","similarity_score":0.5676179550935329},{"class_name":"CrmPermissionAspect","similarity_score":0.3090792474224622},{"class_name":"OperateLogApiImpl","similarity_score":0.3097415479731345},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.13254996405618258},{"class_name":"DictDataServiceImplTest","similarity_score":0.1540649749571479},{"class_name":"DictTypeServiceImplTest","similarity_score":0.13209694737774832},{"class_name":"PostServiceImplTest","similarity_score":0.13990797676342545},{"class_name":"SmsLogServiceImplTest","similarity_score":0.09854365717870033},{"class_name":"SmsTemplateServiceImplTest","similarity_score":0.11913113424353465},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.3258100954164291},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.3823568523426724}],"target_classes_sorted_by_llm":["MyBatisUtils","TenantUtils","AssertUtils","MapUtils","DateUtils","JdbcUtils","TracerUtils","IoUtils","LocalDateTimeUtils","MoneyUtils"],"llm_response_time":14915,"similarity_computation_time":20,"similarity_metric":"tfidf"}}}
{"id":"c3c8bab4-5cee-4375-8527-8d4c6854532a","methodCount":4,"hostFunctionTelemetryData":{"hostFunctionSize":48,"lineStart":25,"lineEnd":72,"bodyLineStart":25,"language":"java","filePath":"/Users/fraol/Documents/MM-assist-dataset/ruoyi-vue-pro/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/api/logger/OperateLogApiImpl.java","sourceCode":"/**\n * 操作日志 API 实现类\n *\n * @author 芋道源码\n */\n@Service\n@Validated\npublic class OperateLogApiImpl implements OperateLogApi {\n\n    @Resource\n    private OperateLogService operateLogService;\n    @Resource\n    private AdminUserService adminUserService;\n\n    @Override\n    public void createOperateLog(OperateLogCreateReqDTO createReqDTO) {\n        operateLogService.createOperateLog(createReqDTO);\n    }\n\n    @Override\n    @Async\n    public void createOperateLogV2(OperateLogV2CreateReqDTO createReqDTO) {\n        operateLogService.createOperateLogV2(createReqDTO);\n    }\n\n    @Override\n    public PageResult\u003cOperateLogV2RespDTO\u003e getOperateLogPage(OperateLogV2PageReqDTO pageReqVO) {\n        PageResult\u003cOperateLogV2DO\u003e operateLogPage \u003d operateLogService.getOperateLogPage(pageReqVO);\n        if (CollUtil.isEmpty(operateLogPage.getList())) {\n            return PageResult.empty();\n        }\n\n        // 获取用户\n        List\u003cAdminUserDO\u003e userList \u003d adminUserService.getUserList(convertSet(operateLogPage.getList(), OperateLogV2DO::getUserId));\n        return BeanUtils.toBean(operateLogPage, OperateLogV2RespDTO.class).setList(setUserInfo(operateLogPage.getList(), userList));\n    }\n\n    // TODO @puhui999：这种 convert 还是放到 convert 类里，\n    private static List\u003cOperateLogV2RespDTO\u003e setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList) {\n        Map\u003cLong, AdminUserDO\u003e userMap \u003d convertMap(userList, AdminUserDO::getId);\n        return convertList(logList, item -\u003e {\n            OperateLogV2RespDTO respDTO \u003d BeanUtils.toBean(item, OperateLogV2RespDTO.class);\n            findAndThen(userMap, item.getUserId(), user -\u003e respDTO.setUserName(user.getNickname()));\n            return respDTO;\n        });\n    }\n\n}","methodCount":4},"candidatesTelemetryData":{"numberOfSuggestions":3,"candidates":[{"lineStart":61,"lineEnd":69,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method setUserInfo to class CollectionUtils","description":"move method setUserInfo to PsiClass:CollectionUtils\nRationale: The setUserInfo() method performs operations that involve converting lists and mapping values, which aligns closely with the existing utility methods in CollectionUtils. Moving it here adheres to the Single Responsibility Principle, as CollectionUtils is designed for collection manipulation. This enhances cohesion and reusability of the method. However, it may increase the size of CollectionUtils, which could lead to a less focused utility class.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":61,"lineEnd":69,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method setUserInfo to class RandomUtils","description":"move method setUserInfo to PsiClass:RandomUtils\nRationale: Although RandomUtils primarily deals with generating random values, it could be argued that setUserInfo() fits into a broader utility context for data manipulation. This move would allow for a more centralized location for utility methods, but it may dilute the purpose of RandomUtils, which could confuse future developers about its intended use.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":61,"lineEnd":69,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method setUserInfo to class HttpUtils","description":"move method setUserInfo to PsiClass:HttpUtils\nRationale: HttpUtils is focused on HTTP-related utilities, but if the context of user information retrieval is tied to HTTP requests, moving setUserInfo() here could make sense. This aligns with the Interface Segregation Principle by keeping HTTP-related methods together. However, it may not be the best fit if the method is not directly related to HTTP operations.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":1,"suggested_move_methods":[{"method_name":"setUserInfo","method_signature":"private static List\u003cOperateLogV2RespDTO\u003e setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)","target_class":"OperateLogConverter","rationale":"The method setUserInfo is responsible for converting and mapping data between different object types, which is a conversion concern. Moving it to a dedicated converter class (e.g., OperateLogConverter) would adhere to the Single Responsibility Principle and improve code organization."}],"llm_response_time":2355},{"iteration_num":2,"suggested_move_methods":[{"method_name":"setUserInfo","method_signature":"private static List\u003cOperateLogV2RespDTO\u003e setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)","target_class":"ConvertUtils","rationale":"The method setUserInfo performs data conversion and mapping, which is typically the responsibility of a utility or conversion class. Moving it to a dedicated ConvertUtils class would improve separation of concerns."},{"method_name":"convertSet","method_signature":"private static \u003cT\u003e Set\u003cT\u003e convertSet(Collection\u003c?\u003e collection, Function\u003c?, T\u003e converter)","target_class":"ConvertUtils","rationale":"The convertSet method is a utility function for converting collections, which should be part of a conversion utility class to enhance code organization and reusability."},{"method_name":"convertMap","method_signature":"private static \u003cK, V\u003e Map\u003cK, V\u003e convertMap(Collection\u003cV\u003e collection, Function\u003cV, K\u003e keyExtractor)","target_class":"ConvertUtils","rationale":"The convertMap method is also a utility function for mapping collections to maps, and should be moved to a conversion utility class for better code structure."},{"method_name":"convertList","method_signature":"private static \u003cT, R\u003e List\u003cR\u003e convertList(Collection\u003cT\u003e collection, Function\u003cT, R\u003e converter)","target_class":"ConvertUtils","rationale":"The convertList method is a utility function for converting lists, which should be part of a dedicated conversion utility class to promote code reuse and clarity."},{"method_name":"findAndThen","method_signature":"private static \u003cK, V\u003e void findAndThen(Map\u003cK, V\u003e map, K key, Consumer\u003cV\u003e consumer)","target_class":"MapUtils","rationale":"The findAndThen method operates on maps and performs actions based on the presence of keys, making it suitable for a utility class focused on map operations."}],"llm_response_time":6222},{"iteration_num":3,"suggested_move_methods":[{"method_name":"setUserInfo","method_signature":"private static List\u003cOperateLogV2RespDTO\u003e setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)","target_class":"ConvertUtils","rationale":"The setUserInfo method performs data conversion and mapping, which is typically the responsibility of a utility or conversion class. Moving it to a dedicated ConvertUtils class would improve separation of concerns."}],"llm_response_time":1640},{"iteration_num":-1,"suggested_move_methods":[{"method_name":"setUserInfo","method_signature":"private static setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"setUserInfo","method_signature":"private static setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"private static setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)":{"first":{"method_name":"setUserInfo","method_signature":"private static setUserInfo(List\u003cOperateLogV2DO\u003e logList, List\u003cAdminUserDO\u003e userList)","target_class":"","rationale":""},"second":0.6536110815667483}},"llmMethodPriority":{"priority_method_names":["setUserInfo"],"llm_response_time":785},"targetClassMap":{"setUserInfo":{"target_classes":[{"class_name":"OAuth2Utils","similarity_score":0.24902982761034387},{"class_name":"CrmPermissionUtils","similarity_score":0.268833380424899},{"class_name":"SingletonManager","similarity_score":0.35355339059327373},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.2929947819131522},{"class_name":"SecurityFrameworkUtils","similarity_score":0.29137431235266753},{"class_name":"CronUtils","similarity_score":0.26},{"class_name":"ValidationUtils","similarity_score":0.3602815800195847},{"class_name":"NumberUtils","similarity_score":0.145},{"class_name":"ServiceExceptionUtil","similarity_score":0.28910292249502756},{"class_name":"ServletUtils","similarity_score":0.3327801641384986},{"class_name":"TenantUtils","similarity_score":0.2280215288515179},{"class_name":"ObjectUtils","similarity_score":0.33375249583609284},{"class_name":"BeanUtils","similarity_score":0.2939873661036668},{"class_name":"SetUtils","similarity_score":0.20924574973887472},{"class_name":"FileUtils","similarity_score":0.21079818004370826},{"class_name":"SpringAopUtils","similarity_score":0.35115822916575373},{"class_name":"SpringExpressionUtils","similarity_score":0.33319725113401716},{"class_name":"StrUtils","similarity_score":0.3150127590242697},{"class_name":"WebFrameworkUtils","similarity_score":0.3655254723924749},{"class_name":"CollectionUtils","similarity_score":0.376050455665976},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.1852964218448318},{"class_name":"ExcelUtils","similarity_score":0.1277592193777817},{"class_name":"DataPermissionUtils","similarity_score":0.3208030125549347},{"class_name":"TracerFrameworkUtils","similarity_score":0.2456769074559977},{"class_name":"TracerUtils","similarity_score":0.14226567034279153},{"class_name":"DateUtils","similarity_score":0.27981041544275326},{"class_name":"ArrayUtils","similarity_score":0.31083919406376354},{"class_name":"AreaUtils","similarity_score":0.3083249379342921},{"class_name":"AssertUtils","similarity_score":0.27353611548110407},{"class_name":"RandomUtils","similarity_score":0.48953404416538976},{"class_name":"HttpUtils","similarity_score":0.37794270859336176},{"class_name":"LocalDateTimeUtils","similarity_score":0.22179243810433674},{"class_name":"PageUtils","similarity_score":0.18766297265136728},{"class_name":"MyBatisUtils","similarity_score":0.26969452188566073},{"class_name":"MoneyUtils","similarity_score":0.13353332890039024},{"class_name":"CacheUtils","similarity_score":0.2246057906511536},{"class_name":"MapUtils","similarity_score":0.2501437826801545},{"class_name":"IoUtils","similarity_score":0.1068103492374468},{"class_name":"IPUtils","similarity_score":0.18888111940046642},{"class_name":"JdbcUtils","similarity_score":0.20237355602888257},{"class_name":"JsonUtils","similarity_score":0.3523583366166244},{"class_name":"SimpleTrie","similarity_score":0.3102833427262501},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.34395245244173855},{"class_name":"DictDataServiceImplTest","similarity_score":0.38070480749886954},{"class_name":"DictTypeServiceImplTest","similarity_score":0.3609236495604711},{"class_name":"SmsLogServiceImplTest","similarity_score":0.3831744063717252},{"class_name":"SmsTemplateServiceImplTest","similarity_score":0.3666508167533815},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.3407445820978047},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.31180478223116176}],"target_classes_sorted_by_llm":["CollectionUtils","RandomUtils","HttpUtils","ValidationUtils","WebFrameworkUtils","SingletonManager","DictDataServiceImplTest","DictTypeServiceImplTest","SmsLogServiceImplTest","SmsTemplateServiceImplTest"],"llm_response_time":12810,"similarity_computation_time":51,"similarity_metric":"tfidf"}}}
{"id":"ad90e67d-1651-43f2-a70b-a827b3a567c1","methodCount":8,"hostFunctionTelemetryData":{"hostFunctionSize":111,"lineStart":26,"lineEnd":136,"bodyLineStart":26,"language":"java","filePath":"/Users/fraol/Documents/MM-assist-dataset/ruoyi-vue-pro/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java","sourceCode":"/**\n * MyBatis 工具类\n */\npublic class MyBatisUtils {\n\n    private static final String MYSQL_ESCAPE_CHARACTER \u003d \"`\";\n\n    public static \u003cT\u003e Page\u003cT\u003e buildPage(PageParam pageParam) {\n        return buildPage(pageParam, null);\n    }\n\n    public static \u003cT\u003e Page\u003cT\u003e buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields) {\n        // 页码 + 数量\n        Page\u003cT\u003e page \u003d new Page\u003c\u003e(pageParam.getPageNo(), pageParam.getPageSize());\n        // 排序字段\n        if (!CollectionUtil.isEmpty(sortingFields)) {\n            page.addOrder(sortingFields.stream().map(sortingField -\u003e SortingField.ORDER_ASC.equals(sortingField.getOrder()) ?\n                    OrderItem.asc(sortingField.getField()) : OrderItem.desc(sortingField.getField()))\n                    .collect(Collectors.toList()));\n        }\n        return page;\n    }\n\n    /**\n     * 将拦截器添加到链中\n     * 由于 MybatisPlusInterceptor 不支持添加拦截器，所以只能全量设置\n     *\n     * @param interceptor 链\n     * @param inner       拦截器\n     * @param index       位置\n     */\n    public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index) {\n        List\u003cInnerInterceptor\u003e inners \u003d new ArrayList\u003c\u003e(interceptor.getInterceptors());\n        inners.add(index, inner);\n        interceptor.setInterceptors(inners);\n    }\n\n    /**\n     * 获得 Table 对应的表名\n     *\n     * 兼容 MySQL 转义表名 `t_xxx`\n     *\n     * @param table 表\n     * @return 去除转移字符后的表名\n     */\n    public static String getTableName(Table table) {\n        String tableName \u003d table.getName();\n        if (tableName.startsWith(MYSQL_ESCAPE_CHARACTER) \u0026\u0026 tableName.endsWith(MYSQL_ESCAPE_CHARACTER)) {\n            tableName \u003d tableName.substring(1, tableName.length() - 1);\n        }\n        return tableName;\n    }\n\n    /**\n     * 构建 Column 对象\n     *\n     * @param tableName  表名\n     * @param tableAlias 别名\n     * @param column     字段名\n     * @return Column 对象\n     */\n    public static Column buildColumn(String tableName, Alias tableAlias, String column) {\n        if (tableAlias !\u003d null) {\n            tableName \u003d tableAlias.getName();\n        }\n        return new Column(tableName + StringPool.DOT + column);\n    }\n\n\n    /**\n     * 构建排序字段（默认倒序）\n     *\n     * @param func 排序字段的 Lambda 表达式\n     * @param \u003cT\u003e  排序字段所属的类型\n     * @return 排序字段\n     */\n    public static \u003cT\u003e SortingField buildSortingField(Func1\u003cT, ?\u003e func) {\n        return buildSortingField(func, SortingField.ORDER_DESC);\n    }\n\n    /**\n     * 构建排序字段\n     *\n     * @param func  排序字段的 Lambda 表达式\n     * @param order 排序类型 {@link SortingField#ORDER_ASC} {@link SortingField#ORDER_DESC}\n     * @param \u003cT\u003e   排序字段所属的类型\n     * @return 排序字段\n     */\n    public static \u003cT\u003e SortingField buildSortingField(Func1\u003cT, ?\u003e func, String order) {\n        Object[] orderTypes \u003d {SortingField.ORDER_ASC, SortingField.ORDER_DESC};\n        Assert.isTrue(ArrayUtil.contains(orderTypes, order), String.format(\"字段的排序类型只能是%s/%s\", orderTypes));\n\n        String fieldName \u003d LambdaUtil.getFieldName(func);\n        return new SortingField(fieldName, order);\n    }\n\n    /**\n     * 构建默认的排序字段\n     * 如果排序字段为空，则设置排序字段；否则忽略\n     *\n     * @param sortablePageParam 排序分页查询参数\n     * @param func              排序字段的 Lambda 表达式\n     * @param \u003cT\u003e               排序字段所属的类型\n     */\n    public static \u003cT\u003e void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func) {\n        if (sortablePageParam !\u003d null \u0026\u0026 CollUtil.isEmpty(sortablePageParam.getSortingFields())) {\n            sortablePageParam.setSortingFields(List.of(buildSortingField(func)));\n        }\n    }\n\n}","methodCount":8},"candidatesTelemetryData":{"numberOfSuggestions":9,"candidates":[{"lineStart":48,"lineEnd":60,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method addInterceptor to class TenantUtils","description":"move method addInterceptor to PsiClass:TenantUtils\nRationale: The addInterceptor() method is related to managing interceptors, which can be seen as a part of tenant management in multi-tenant applications. Moving it to TenantUtils aligns with the Single Responsibility Principle, as it centralizes tenant-related functionalities. This enhances cohesion and makes the method more reusable in contexts where tenant management is crucial. However, care must be taken to ensure that the method does not introduce unnecessary dependencies on tenant-specific logic.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":48,"lineEnd":60,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method addInterceptor to class JdbcUtils","description":"move method addInterceptor to PsiClass:JdbcUtils\nRationale: Given that the addInterceptor() method deals with interceptors that may affect database operations, relocating it to JdbcUtils could be appropriate. This class is already focused on database-related utilities, and adding interceptor management could enhance its functionality. This move adheres to the Interface Segregation Principle by keeping database-related functionalities together. However, it may lead to a bloated JdbcUtils class if not managed properly.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":48,"lineEnd":60,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method addInterceptor to class WebSocketFrameworkUtils","description":"move method addInterceptor to PsiClass:WebSocketFrameworkUtils\nRationale: If the interceptors are related to WebSocket communications, moving addInterceptor() to WebSocketFrameworkUtils would be suitable. This class handles user sessions and interactions, which could be impacted by interceptor logic. This move would enhance cohesion and maintain a clear separation of concerns. However, it is essential to ensure that the method does not introduce dependencies that could complicate the WebSocket logic.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":78,"lineEnd":91,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method buildColumn to class JdbcUtils","description":"move method buildColumn to PsiClass:JdbcUtils\nRationale: The buildColumn() method is closely related to database operations, specifically constructing a Column object that represents a database column. Moving it to JdbcUtils aligns with the Single Responsibility Principle, as JdbcUtils is responsible for database-related utilities. This enhances cohesion by grouping related functionalities together. However, care must be taken to ensure that any dependencies on the current class are resolved.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":78,"lineEnd":91,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method buildColumn to class AreaUtils","description":"move method buildColumn to PsiClass:AreaUtils\nRationale: If the Column object is used in the context of area data, moving buildColumn() to AreaUtils could be beneficial. This aligns with the principle of high cohesion, as AreaUtils deals with area-related data and operations. However, if the method is not directly related to area functionalities, this move may dilute the class\u0027s purpose.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":78,"lineEnd":91,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method buildColumn to class TenantUtils","description":"move method buildColumn to PsiClass:TenantUtils\nRationale: If the Column object is used in multi-tenant database scenarios, relocating buildColumn() to TenantUtils would be appropriate. This adheres to the Single Responsibility Principle by keeping tenant-related database operations together. However, it may introduce unnecessary complexity if TenantUtils is not primarily focused on column construction.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":62,"lineEnd":76,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getTableName to class JdbcUtils","description":"move method getTableName to PsiClass:JdbcUtils\nRationale: The getTableName() method is related to database operations, specifically dealing with table names. Moving it to JdbcUtils aligns with the class\u0027s purpose of handling JDBC-related utilities, enhancing cohesion. This move adheres to the Single Responsibility Principle, as JdbcUtils would manage all database-related utilities, including table name handling. However, it may introduce a dependency on the database context in JdbcUtils.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":62,"lineEnd":76,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getTableName to class StrUtils","description":"move method getTableName to PsiClass:StrUtils\nRationale: The getTableName() method involves string manipulation, particularly in handling escaped characters in table names. StrUtils is focused on string utilities, making it a suitable target. This relocation would improve cohesion by keeping string-related methods together, adhering to the Single Responsibility Principle. However, it may dilute the focus of StrUtils if it becomes overloaded with database-specific methods.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":62,"lineEnd":76,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getTableName to class TenantUtils","description":"move method getTableName to PsiClass:TenantUtils\nRationale: If the table name is contextually tied to tenant-specific data, moving getTableName() to TenantUtils could enhance clarity and maintainability. This aligns with the Single Responsibility Principle by keeping tenant-related utilities together. However, if the method is not tenant-specific, this could lead to confusion about the purpose of TenantUtils.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":1,"suggested_move_methods":[{"method_name":"buildColumn","method_signature":"public static Column buildColumn(String tableName, Alias tableAlias, String column)","target_class":"ColumnBuilder","rationale":"The method buildColumn is responsible for creating a Column object, which suggests that it could belong to a dedicated class focused on building or managing column-related operations."},{"method_name":"buildSortingField","method_signature":"public static \u003cT\u003e SortingField buildSortingField(Func1\u003cT, ?\u003e func)","target_class":"SortingFieldBuilder","rationale":"The method buildSortingField is specifically focused on creating SortingField objects, indicating that it would be more appropriate in a dedicated class for building sorting fields."},{"method_name":"buildDefaultSortingField","method_signature":"public static \u003cT\u003e void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)","target_class":"SortingFieldBuilder","rationale":"The method buildDefaultSortingField deals with setting default sorting fields, which aligns with the responsibilities of a class dedicated to sorting field management."}],"llm_response_time":3909},{"iteration_num":2,"suggested_move_methods":[{"method_name":"buildColumn","method_signature":"public static Column buildColumn(String tableName, Alias tableAlias, String column)","target_class":"ColumnBuilder","rationale":"The buildColumn method is responsible for creating Column objects, which suggests that it should belong to a dedicated class focused on building or managing Column instances."},{"method_name":"buildSortingField","method_signature":"public static \u003cT\u003e SortingField buildSortingField(Func1\u003cT, ?\u003e func)","target_class":"SortingFieldBuilder","rationale":"The buildSortingField method is specifically for constructing SortingField objects, indicating that it would be more appropriate in a class dedicated to sorting functionalities."},{"method_name":"buildDefaultSortingField","method_signature":"public static \u003cT\u003e void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)","target_class":"SortingFieldBuilder","rationale":"This method is related to sorting and should be moved to a class that handles sorting logic, enhancing separation of concerns."},{"method_name":"getTableName","method_signature":"public static String getTableName(Table table)","target_class":"TableUtils","rationale":"The getTableName method is focused on table name manipulation, which would fit better in a utility class specifically designed for table-related operations."},{"method_name":"addInterceptor","method_signature":"public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)","target_class":"InterceptorManager","rationale":"The addInterceptor method manages the addition of interceptors, suggesting it should be part of a dedicated class that handles interceptor management."}],"llm_response_time":5809},{"iteration_num":3,"suggested_move_methods":[{"method_name":"buildColumn","method_signature":"public static Column buildColumn(String tableName, Alias tableAlias, String column)","target_class":"Column","rationale":"The buildColumn method is responsible for creating Column objects, which suggests that it belongs in the Column class where it can be more appropriately encapsulated."},{"method_name":"getTableName","method_signature":"public static String getTableName(Table table)","target_class":"Table","rationale":"The getTableName method operates directly on Table objects and is concerned with their properties, making it a better fit within the Table class."},{"method_name":"buildSortingField","method_signature":"public static \u003cT\u003e SortingField buildSortingField(Func1\u003cT, ?\u003e func)","target_class":"SortingField","rationale":"The buildSortingField method is focused on creating SortingField instances, which aligns with the responsibilities of the SortingField class."},{"method_name":"buildSortingField","method_signature":"public static \u003cT\u003e SortingField buildSortingField(Func1\u003cT, ?\u003e func, String order)","target_class":"SortingField","rationale":"Similar to the previous method, this overload of buildSortingField is also directly related to the creation of SortingField objects and should reside in the SortingField class."}],"llm_response_time":4383},{"iteration_num":-1,"suggested_move_methods":[{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam)","target_class":"","rationale":""},{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields)","target_class":"","rationale":""},{"method_name":"addInterceptor","method_signature":"public static addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)","target_class":"","rationale":""},{"method_name":"getTableName","method_signature":"public static getTableName(Table table)","target_class":"","rationale":""},{"method_name":"buildColumn","method_signature":"public static buildColumn(String tableName, Alias tableAlias, String column)","target_class":"","rationale":""},{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func, String order)","target_class":"","rationale":""},{"method_name":"buildDefaultSortingField","method_signature":"public static buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"addInterceptor","method_signature":"public static addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)","target_class":"","rationale":""},{"method_name":"buildColumn","method_signature":"public static buildColumn(String tableName, Alias tableAlias, String column)","target_class":"","rationale":""},{"method_name":"getTableName","method_signature":"public static getTableName(Table table)","target_class":"","rationale":""},{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam)","target_class":"","rationale":""},{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},{"method_name":"buildDefaultSortingField","method_signature":"public static buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func, String order)","target_class":"","rationale":""},{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"public static addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)":{"first":{"method_name":"addInterceptor","method_signature":"public static addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)","target_class":"","rationale":""},"second":0.1930245223138023},"public static buildColumn(String tableName, Alias tableAlias, String column)":{"first":{"method_name":"buildColumn","method_signature":"public static buildColumn(String tableName, Alias tableAlias, String column)","target_class":"","rationale":""},"second":0.3601869954306402},"public static getTableName(Table table)":{"first":{"method_name":"getTableName","method_signature":"public static getTableName(Table table)","target_class":"","rationale":""},"second":0.38132700949232806},"public static buildPage(PageParam pageParam)":{"first":{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam)","target_class":"","rationale":""},"second":0.3893632906178962},"public static buildSortingField(Func1\u003cT, ?\u003e func)":{"first":{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},"second":0.4297384271113995},"public static buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)":{"first":{"method_name":"buildDefaultSortingField","method_signature":"public static buildDefaultSortingField(SortablePageParam sortablePageParam, Func1\u003cT, ?\u003e func)","target_class":"","rationale":""},"second":0.5161801866005563},"public static buildSortingField(Func1\u003cT, ?\u003e func, String order)":{"first":{"method_name":"buildSortingField","method_signature":"public static buildSortingField(Func1\u003cT, ?\u003e func, String order)","target_class":"","rationale":""},"second":0.5187545177829748},"public static buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields)":{"first":{"method_name":"buildPage","method_signature":"public static buildPage(PageParam pageParam, Collection\u003cSortingField\u003e sortingFields)","target_class":"","rationale":""},"second":0.5629783377928026}},"llmMethodPriority":{"priority_method_names":["addInterceptor","buildColumn","getTableName","buildPage","buildSortingField","buildDefaultSortingField","buildSortingField","buildPage"],"llm_response_time":2265},"targetClassMap":{"addInterceptor":{"target_classes":[{"class_name":"JdbcUtils","similarity_score":0.6869840411086889},{"class_name":"SecurityFrameworkUtils","similarity_score":0.6254251610789091},{"class_name":"CronUtils","similarity_score":0.6218487810012563},{"class_name":"TenantUtils","similarity_score":0.6983452452117092},{"class_name":"AssertUtils","similarity_score":0.6786522658719175},{"class_name":"DataPermissionUtils","similarity_score":0.5204112059969136},{"class_name":"TracerFrameworkUtils","similarity_score":0.5518254055364691},{"class_name":"ExcelUtils","similarity_score":0.598306943954691},{"class_name":"RandomUtils","similarity_score":0.25162811071707825},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.6425121698551843},{"class_name":"WebFrameworkUtils","similarity_score":0.5593174603973814},{"class_name":"ServiceExceptionUtil","similarity_score":0.6129333342679613},{"class_name":"IPUtils","similarity_score":0.6378239772692074},{"class_name":"AreaUtils","similarity_score":0.6378125294177287},{"class_name":"CollectionUtils","similarity_score":0.23715451894589432},{"class_name":"HttpUtils","similarity_score":0.3944972670967989},{"class_name":"NumberUtils","similarity_score":0.6488856845230501},{"class_name":"ServletUtils","similarity_score":0.5514501891735686},{"class_name":"ObjectUtils","similarity_score":0.42473311900196203},{"class_name":"BeanUtils","similarity_score":0.3765854419106987},{"class_name":"IoUtils","similarity_score":0.6834509954326605},{"class_name":"SetUtils","similarity_score":0.509162143323182},{"class_name":"ArrayUtils","similarity_score":0.5316525275004311},{"class_name":"FileUtils","similarity_score":0.641174631346288},{"class_name":"SpringAopUtils","similarity_score":0.45313376004456124},{"class_name":"SpringExpressionUtils","similarity_score":0.5882100203074948},{"class_name":"MoneyUtils","similarity_score":0.7488851235107663},{"class_name":"TracerUtils","similarity_score":0.66572709291716},{"class_name":"DateUtils","similarity_score":0.667940762871687},{"class_name":"LocalDateTimeUtils","similarity_score":0.7133141986233539},{"class_name":"MapUtils","similarity_score":0.6275540033118727},{"class_name":"JsonUtils","similarity_score":0.3409796261704485},{"class_name":"PageUtils","similarity_score":0.5750335777679776},{"class_name":"CacheUtils","similarity_score":0.34837082125540764},{"class_name":"StrUtils","similarity_score":0.5991247562310834},{"class_name":"ValidationUtils","similarity_score":0.3409314411884125},{"class_name":"CrmPermissionUtils","similarity_score":0.6179883071213349},{"class_name":"SingletonManager","similarity_score":0.4014775342734831},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.6179634427022599},{"class_name":"OAuth2Utils","similarity_score":0.5923216243879078},{"class_name":"SqlConstants","similarity_score":0.5824139988122614},{"class_name":"EncryptTypeHandler","similarity_score":0.2817758658635439},{"class_name":"ExpressionIdempotentKeyResolver","similarity_score":0.29594625455044954},{"class_name":"DictConvert","similarity_score":0.27048406140277037},{"class_name":"TenantContextHolder","similarity_score":0.6308537208594016},{"class_name":"IdempotentRedisDAO","similarity_score":0.5663938603238309},{"class_name":"IdTypeEnvironmentPostProcessor","similarity_score":0.2497663524261893},{"class_name":"ILogRecordServiceImpl","similarity_score":0.3257173681849407},{"class_name":"ContextHolder","similarity_score":0.45488043207663326}],"target_classes_sorted_by_llm":["TenantUtils","JdbcUtils","WebSocketFrameworkUtils","AssertUtils","DateUtils","NumberUtils","IoUtils","LocalDateTimeUtils","MoneyUtils","TracerUtils"],"llm_response_time":15207,"similarity_computation_time":16,"similarity_metric":"tfidf"},"buildColumn":{"target_classes":[{"class_name":"JdbcUtils","similarity_score":0.6680891503202975},{"class_name":"CronUtils","similarity_score":0.598764159346999},{"class_name":"AssertUtils","similarity_score":0.6541491596701835},{"class_name":"TenantUtils","similarity_score":0.6580457539734712},{"class_name":"RandomUtils","similarity_score":0.34470499733023185},{"class_name":"WebFrameworkUtils","similarity_score":0.599722821945344},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.6114794918650557},{"class_name":"DataPermissionUtils","similarity_score":0.5320545808955377},{"class_name":"TracerFrameworkUtils","similarity_score":0.5786375623578447},{"class_name":"SecurityFrameworkUtils","similarity_score":0.6407024837258323},{"class_name":"ExcelUtils","similarity_score":0.5729259146415289},{"class_name":"AreaUtils","similarity_score":0.6326181797236563},{"class_name":"ServiceExceptionUtil","similarity_score":0.6271336499719132},{"class_name":"IPUtils","similarity_score":0.5979989746231359},{"class_name":"BeanUtils","similarity_score":0.46656947481584343},{"class_name":"ValidationUtils","similarity_score":0.36771084782153735},{"class_name":"LocalDateTimeUtils","similarity_score":0.6773431028265182},{"class_name":"ArrayUtils","similarity_score":0.5793241220216576},{"class_name":"NumberUtils","similarity_score":0.5817538139110048},{"class_name":"MoneyUtils","similarity_score":0.6827323858594857},{"class_name":"ObjectUtils","similarity_score":0.5246557674040159},{"class_name":"CacheUtils","similarity_score":0.3444233600968322},{"class_name":"CollectionUtils","similarity_score":0.34462863250831166},{"class_name":"PageUtils","similarity_score":0.5391291361472074},{"class_name":"DateUtils","similarity_score":0.6747889167168027},{"class_name":"MapUtils","similarity_score":0.6095580943410047},{"class_name":"TracerUtils","similarity_score":0.6254738722522784},{"class_name":"ServletUtils","similarity_score":0.6038085915992257},{"class_name":"FileUtils","similarity_score":0.6394587250016606},{"class_name":"StrUtils","similarity_score":0.6282350993911983},{"class_name":"SetUtils","similarity_score":0.5062175977346661},{"class_name":"SpringAopUtils","similarity_score":0.48872640933830597},{"class_name":"HttpUtils","similarity_score":0.48058931620556},{"class_name":"SpringExpressionUtils","similarity_score":0.5701140342114039},{"class_name":"IoUtils","similarity_score":0.629852058044962},{"class_name":"JsonUtils","similarity_score":0.42846318125534866},{"class_name":"CrmPermissionUtils","similarity_score":0.5934454940757921},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.617012081184978},{"class_name":"OAuth2Utils","similarity_score":0.6617449189993075},{"class_name":"SingletonManager","similarity_score":0.41376769291923177},{"class_name":"EncryptTypeHandler","similarity_score":0.39738146807484476},{"class_name":"SqlConstants","similarity_score":0.5261522196019802},{"class_name":"DictConvert","similarity_score":0.3808697000222802},{"class_name":"TenantContextHolder","similarity_score":0.6245271343126076},{"class_name":"DataPermissionContextHolder","similarity_score":0.5754353376484359},{"class_name":"ContextHolder","similarity_score":0.4451834009289078},{"class_name":"ExpressionIdempotentKeyResolver","similarity_score":0.35131214207458916},{"class_name":"IdTypeEnvironmentPostProcessor","similarity_score":0.362415780577867},{"class_name":"ILogRecordServiceImpl","similarity_score":0.3531032906137228}],"target_classes_sorted_by_llm":["JdbcUtils","AreaUtils","TenantUtils","FileUtils","AssertUtils","SecurityFrameworkUtils","OAuth2Utils","DateUtils","LocalDateTimeUtils","MoneyUtils"],"llm_response_time":13406,"similarity_computation_time":14,"similarity_metric":"tfidf"},"getTableName":{"target_classes":[{"class_name":"JdbcUtils","similarity_score":0.7330018740663182},{"class_name":"CronUtils","similarity_score":0.6418563435634714},{"class_name":"TenantUtils","similarity_score":0.697411481558487},{"class_name":"AssertUtils","similarity_score":0.6891909682754991},{"class_name":"SecurityFrameworkUtils","similarity_score":0.7003838658215056},{"class_name":"DataPermissionUtils","similarity_score":0.5928003319682787},{"class_name":"TracerFrameworkUtils","similarity_score":0.5945583146260498},{"class_name":"ExcelUtils","similarity_score":0.5486541735299786},{"class_name":"RandomUtils","similarity_score":0.39484888726691997},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.6672460606930063},{"class_name":"WebFrameworkUtils","similarity_score":0.6799860591677336},{"class_name":"AreaUtils","similarity_score":0.6885380019313022},{"class_name":"ServiceExceptionUtil","similarity_score":0.687884852473726},{"class_name":"IPUtils","similarity_score":0.6545847181096542},{"class_name":"DateUtils","similarity_score":0.7034989477503756},{"class_name":"CollectionUtils","similarity_score":0.3682891912745432},{"class_name":"LocalDateTimeUtils","similarity_score":0.7077538331803762},{"class_name":"NumberUtils","similarity_score":0.6443833370420677},{"class_name":"CacheUtils","similarity_score":0.3953755671263207},{"class_name":"ObjectUtils","similarity_score":0.5409331405600318},{"class_name":"BeanUtils","similarity_score":0.4873487423007236},{"class_name":"ArrayUtils","similarity_score":0.5993619659092113},{"class_name":"StrUtils","similarity_score":0.691727128647244},{"class_name":"SetUtils","similarity_score":0.5640134880150818},{"class_name":"SpringExpressionUtils","similarity_score":0.6389197600620222},{"class_name":"MoneyUtils","similarity_score":0.6999425144244374},{"class_name":"SpringAopUtils","similarity_score":0.5566258572632158},{"class_name":"MapUtils","similarity_score":0.643871925358947},{"class_name":"TracerUtils","similarity_score":0.7051817492462672},{"class_name":"HttpUtils","similarity_score":0.5777322662336609},{"class_name":"ServletUtils","similarity_score":0.6618958913501501},{"class_name":"ValidationUtils","similarity_score":0.4495244190641396},{"class_name":"PageUtils","similarity_score":0.6164900404832121},{"class_name":"FileUtils","similarity_score":0.6891620289873673},{"class_name":"IoUtils","similarity_score":0.6747726399240652},{"class_name":"JsonUtils","similarity_score":0.46415782245223103},{"class_name":"CrmPermissionUtils","similarity_score":0.6688003745283145},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.642378415403936},{"class_name":"OAuth2Utils","similarity_score":0.6888248213261104},{"class_name":"SingletonManager","similarity_score":0.4824506406770076},{"class_name":"SqlConstants","similarity_score":0.6001818024455193},{"class_name":"EncryptTypeHandler","similarity_score":0.4923699986290997},{"class_name":"DictConvert","similarity_score":0.4559552235606378},{"class_name":"TenantContextHolder","similarity_score":0.6958306644415485},{"class_name":"ContextHolder","similarity_score":0.5088942929390636},{"class_name":"DataPermissionContextHolder","similarity_score":0.641133957741914},{"class_name":"IdTypeEnvironmentPostProcessor","similarity_score":0.4258759840424755},{"class_name":"ILogRecordServiceImpl","similarity_score":0.39341780977167046},{"class_name":"ExpressionIdempotentKeyResolver","similarity_score":0.42795489730528935}],"target_classes_sorted_by_llm":["JdbcUtils","StrUtils","TenantUtils","AssertUtils","DateUtils","SecurityFrameworkUtils","MoneyUtils","TenantContextHolder","LocalDateTimeUtils","TracerUtils"],"llm_response_time":12804,"similarity_computation_time":9,"similarity_metric":"tfidf"}}}
{"id":"2b092d7e-967d-4d34-8dda-b8a963de5aac","methodCount":10,"hostFunctionTelemetryData":{"hostFunctionSize":108,"lineStart":20,"lineEnd":127,"bodyLineStart":20,"language":"java","filePath":"/Users/fraol/Documents/MM-assist-dataset/ruoyi-vue-pro/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/util/FlowableUtils.java","sourceCode":"/**\n * 流程引擎工具类封装\n *\n * @author: linjinp\n * @create: 2019-12-24 13:51\n **/\npublic class FlowableUtils {\n\n    /**\n     * 获取流程名称\n     *\n     * @param processDefinitionId\n     * @return\n     */\n    public static String getProcessDefinitionName(String processDefinitionId) {\n        RepositoryService repositoryService \u003d SpringUtil.getBean(RepositoryService.class);\n        ProcessDefinition processDefinition \u003d repositoryService.getProcessDefinition(processDefinitionId);\n        return processDefinition.getName();\n    }\n\n    public static ProcessDefinition getProcessDefinition(String processDefinitionId) {\n        RepositoryService repositoryService \u003d SpringUtil.getBean(RepositoryService.class);\n        return repositoryService.getProcessDefinition(processDefinitionId);\n    }\n\n    /**\n     * 获取节点数据\n     *\n     * @param processInstanceId\n     * @param nodeId\n     * @return\n     */\n    public static FlowNode getFlowNode(String processInstanceId, String nodeId) {\n\n        RuntimeService runtimeService \u003d SpringUtil.getBean(RuntimeService.class);\n        RepositoryService repositoryService \u003d SpringUtil.getBean(RepositoryService.class);\n\n        String definitionld \u003d runtimeService.createProcessInstanceQuery().processInstanceId(processInstanceId).singleResult().getProcessDefinitionId();        // 获取bpm（模型）对象\n        BpmnModel bpmnModel \u003d repositoryService.getBpmnModel(definitionld);\n        // 传节点定义key获取当前节点\n        FlowNode flowNode \u003d (FlowNode) bpmnModel.getFlowElement(nodeId);\n        return flowNode;\n    }\n\n    public static ExtensionElement generateFlowNodeIdExtension(String nodeId) {\n        ExtensionElement extensionElement \u003d new ExtensionElement();\n        extensionElement.setElementText(nodeId);\n        extensionElement.setName(\"nodeId\");\n        extensionElement.setNamespacePrefix(\"flowable\");\n        extensionElement.setNamespace(\"nodeId\");\n        return extensionElement;\n    }\n\n    public static String getNodeIdFromExtension(FlowElement flowElement) {\n        Map\u003cString, List\u003cExtensionElement\u003e\u003e extensionElements \u003d flowElement.getExtensionElements();\n        return extensionElements.get(\"nodeId\").get(0).getElementText();\n    }\n\n    public static Long getStartUserIdFromProcessInstance(ProcessInstance instance) {\n        if (null \u003d\u003d instance) {\n            return null;\n        }\n        return NumberUtils.parseLong(instance.getStartUserId());\n    }\n\n    public static String getTaskNameByTaskId(String taskId) {\n        TaskService taskService \u003d SpringUtil.getBean(TaskService.class);\n        Task task \u003d taskService.createTaskQuery().taskId(taskId).singleResult();\n        return task.getName();\n    }\n\n    // TODO @kyle：Utils 里不做查询；可以封装到 bpmTaskService 里\n    public static Map\u003cString/* taskId */, String/* taskName */\u003e getTaskNameByTaskIds(Collection\u003cString\u003e taskIds) {\n        TaskService taskService \u003d SpringUtil.getBean(TaskService.class);\n        List\u003cTask\u003e tasks \u003d taskService.createTaskQuery().taskIds(taskIds).list();\n        if (CollUtil.isNotEmpty(tasks)) {\n            Map\u003cString/* taskId */, String/* taskName */\u003e taskMap \u003d new HashMap\u003c\u003e(tasks.size());\n            for (Task task : tasks) {\n                taskMap.putIfAbsent(task.getId(), task.getName());\n            }\n            return taskMap;\n        }\n        return Collections.emptyMap();\n    }\n\n    public static String getProcessInstanceNameByTaskId(String processInstanceId) {\n        RuntimeService runtimeService \u003d SpringUtil.getBean(RuntimeService.class);\n        ProcessInstance processInstance \u003d runtimeService.createProcessInstanceQuery()\n                .processInstanceId(processInstanceId)\n                .singleResult();\n        return processInstance.getName();\n    }\n\n    // TODO @kyle：Utils 里不做查询；可以封装到 bpmTaskService 里\n    public static Map\u003cString/* processInstaneId */, String/* processInstaneName */\u003e getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds) {\n        RuntimeService runtimeService \u003d SpringUtil.getBean(RuntimeService.class);\n        List\u003cProcessInstance\u003e processInstances \u003d runtimeService.createProcessInstanceQuery().processInstanceIds(taskIds).list();\n        if (CollUtil.isNotEmpty(processInstances)) {\n            Map\u003cString/* processInstaneId */, String/* processInstaneName */\u003e processInstaneMap \u003d new HashMap\u003c\u003e(processInstances.size());\n            for (ProcessInstance processInstance : processInstances) {\n                processInstaneMap.putIfAbsent(processInstance.getId(), processInstance.getName());\n            }\n            return processInstaneMap;\n        }\n        return Collections.emptyMap();\n    }\n\n}","methodCount":10},"candidatesTelemetryData":{"numberOfSuggestions":9,"candidates":[{"lineStart":84,"lineEnd":88,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getTaskNameByTaskId to class WebFrameworkUtils","description":"move method getTaskNameByTaskId to PsiClass:WebFrameworkUtils\nRationale: If the application is web-based, moving getTaskNameByTaskId() to WebFrameworkUtils could be justified as it may be used in web contexts. This aligns with the Interface Segregation Principle, as it keeps web-related utilities together. However, this could dilute the purpose of WebFrameworkUtils if it begins to include business logic, which should be avoided.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":84,"lineEnd":88,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getTaskNameByTaskId to class BeanUtils","description":"move method getTaskNameByTaskId to PsiClass:BeanUtils\nRationale: While BeanUtils typically deals with object mapping, it could be argued that getTaskNameByTaskId() fits here if it is part of a broader task-to-DTO mapping process. This move could enhance the reusability of the method in various contexts where task data is transformed. However, it risks overloading BeanUtils with business logic, which should be avoided.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":84,"lineEnd":88,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getTaskNameByTaskId to class ServiceExceptionUtil","description":"move method getTaskNameByTaskId to PsiClass:ServiceExceptionUtil\nRationale: If the method is expected to throw exceptions related to task retrieval failures, it could be beneficial to move it to ServiceExceptionUtil. This aligns with the Dependency Inversion Principle, as it allows for better handling of exceptions. However, this may lead to confusion as ServiceExceptionUtil is primarily for exception handling, not task retrieval.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":90,"lineEnd":102,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getTaskNameByTaskIds to class CollectionUtils","description":"move method getTaskNameByTaskIds to PsiClass:CollectionUtils\nRationale: The method processes a collection of task IDs and returns a map, which aligns well with the utility nature of CollectionUtils. Moving it here would enhance the utility class\u0027s functionality, making it a more comprehensive tool for collection operations. This aligns with the Open/Closed Principle, allowing the class to be extended without modifying existing code. However, it may dilute the focus of CollectionUtils if it becomes too specialized.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":90,"lineEnd":102,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getTaskNameByTaskIds to class WebFrameworkUtils","description":"move method getTaskNameByTaskIds to PsiClass:WebFrameworkUtils\nRationale: If the task retrieval is part of a web application context, moving the method to WebFrameworkUtils could be justified as it may handle various web-related utilities. This would provide a centralized location for web-related task operations, improving cohesion. However, this could lead to a bloated utility class if not managed carefully.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":90,"lineEnd":102,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getTaskNameByTaskIds to class BeanUtils","description":"move method getTaskNameByTaskIds to PsiClass:BeanUtils\nRationale: While BeanUtils primarily deals with object conversion, the method could fit here if it is seen as converting a collection of task IDs into a map of task names. This aligns with the Interface Segregation Principle, allowing for focused utility methods. However, this may not be the most intuitive location for task-related logic.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":104,"lineEnd":110,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getProcessInstanceNameByTaskId to class WebFrameworkUtils","description":"move method getProcessInstanceNameByTaskId to PsiClass:WebFrameworkUtils\nRationale: The getProcessInstanceNameByTaskId() method interacts with runtime services to retrieve process instance details, which can be considered part of the web framework\u0027s responsibility in managing user sessions and process flows. Moving it here aligns with the Single Responsibility Principle, as it centralizes process-related utilities. This enhances cohesion and makes the method more accessible in a web context. However, care must be taken to ensure that the method does not introduce unnecessary dependencies on web-specific components.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":104,"lineEnd":110,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getProcessInstanceNameByTaskId to class OAuth2CodeServiceImpl","description":"move method getProcessInstanceNameByTaskId to PsiClass:OAuth2CodeServiceImpl\nRationale: This class deals with authorization codes and process management, making it a suitable candidate for the method. The method\u0027s functionality of retrieving process instance names can be relevant in the context of OAuth2 flows. This move would enhance the cohesion of process management functionalities. However, it may introduce tighter coupling between process management and OAuth2 flows, which should be evaluated.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":104,"lineEnd":110,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method getProcessInstanceNameByTaskId to class OAuth2AccessTokenRedisDAO","description":"move method getProcessInstanceNameByTaskId to PsiClass:OAuth2AccessTokenRedisDAO\nRationale: Given that this class manages access tokens, it may also need to interact with process instances for authorization purposes. The method could be relevant here, as it retrieves process instance names that may be tied to access tokens. This move could enhance the clarity of the relationship between tokens and process instances. However, it risks overloading the DAO with business logic, which should be avoided.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":1,"suggested_move_methods":[{"method_name":"getTaskNameByTaskId","method_signature":"public static String getTaskNameByTaskId(String taskId)","target_class":"BpmTaskService","rationale":"This method performs a query to retrieve a task name by task ID, which is a specific operation that should be encapsulated within a service class dedicated to task management."},{"method_name":"getTaskNameByTaskIds","method_signature":"public static Map\u003cString, String\u003e getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)","target_class":"BpmTaskService","rationale":"This method performs a bulk query to retrieve task names by task IDs, which should be handled by a service class focused on task operations."},{"method_name":"getProcessInstanceNameByTaskId","method_signature":"public static String getProcessInstanceNameByTaskId(String processInstanceId)","target_class":"BpmProcessService","rationale":"This method queries for a process instance name based on a task ID, which is a specific operation that should be encapsulated within a service class dedicated to process management."},{"method_name":"getProcessInstanceNameByTaskIds","method_signature":"public static Map\u003cString, String\u003e getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)","target_class":"BpmProcessService","rationale":"This method performs a bulk query to retrieve process instance names by task IDs, which should be handled by a service class focused on process operations."}],"llm_response_time":6572},{"iteration_num":2,"suggested_move_methods":[{"method_name":"getTaskNameByTaskId","method_signature":"public static String getTaskNameByTaskId(String taskId)","target_class":"BpmTaskService","rationale":"This method performs a query to retrieve a task name by task ID, which is better suited for a service class dedicated to task operations rather than a utility class."},{"method_name":"getTaskNameByTaskIds","method_signature":"public static Map\u003cString, String\u003e getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)","target_class":"BpmTaskService","rationale":"This method also performs a query to retrieve task names by a collection of task IDs, which should be encapsulated within a service class that handles task-related operations."},{"method_name":"getProcessInstanceNameByTaskId","method_signature":"public static String getProcessInstanceNameByTaskId(String processInstanceId)","target_class":"BpmTaskService","rationale":"This method queries for a process instance name by its ID, which is more appropriate for a service class that manages process instances and tasks."},{"method_name":"getProcessInstanceNameByTaskIds","method_signature":"public static Map\u003cString, String\u003e getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)","target_class":"BpmTaskService","rationale":"This method retrieves process instance names by a set of task IDs, and should be moved to a service class that is responsible for handling process instance queries."}],"llm_response_time":7312},{"iteration_num":3,"suggested_move_methods":[{"method_name":"getTaskNameByTaskId","method_signature":"public static String getTaskNameByTaskId(String taskId)","target_class":"BpmTaskService","rationale":"This method performs a query to retrieve a task name by task ID, which is more appropriate for a service class that handles task-related operations."},{"method_name":"getTaskNameByTaskIds","method_signature":"public static Map\u003cString, String\u003e getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)","target_class":"BpmTaskService","rationale":"This method performs a batch query to retrieve task names by task IDs, which should be encapsulated in a service class dedicated to task management."},{"method_name":"getProcessInstanceNameByTaskId","method_signature":"public static String getProcessInstanceNameByTaskId(String processInstanceId)","target_class":"BpmTaskService","rationale":"This method queries for a process instance name based on a task ID, which is more aligned with task management responsibilities."},{"method_name":"getProcessInstanceNameByTaskIds","method_signature":"public static Map\u003cString, String\u003e getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)","target_class":"BpmTaskService","rationale":"This method retrieves process instance names for a collection of task IDs, which should be handled by a dedicated service for task-related queries."}],"llm_response_time":8499},{"iteration_num":-1,"suggested_move_methods":[{"method_name":"getProcessDefinitionName","method_signature":"public static getProcessDefinitionName(String processDefinitionId)","target_class":"","rationale":""},{"method_name":"getProcessDefinition","method_signature":"public static getProcessDefinition(String processDefinitionId)","target_class":"","rationale":""},{"method_name":"getFlowNode","method_signature":"public static getFlowNode(String processInstanceId, String nodeId)","target_class":"","rationale":""},{"method_name":"generateFlowNodeIdExtension","method_signature":"public static generateFlowNodeIdExtension(String nodeId)","target_class":"","rationale":""},{"method_name":"getNodeIdFromExtension","method_signature":"public static getNodeIdFromExtension(FlowElement flowElement)","target_class":"","rationale":""},{"method_name":"getStartUserIdFromProcessInstance","method_signature":"public static getStartUserIdFromProcessInstance(ProcessInstance instance)","target_class":"","rationale":""},{"method_name":"getTaskNameByTaskId","method_signature":"public static getTaskNameByTaskId(String taskId)","target_class":"","rationale":""},{"method_name":"getTaskNameByTaskIds","method_signature":"public static getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)","target_class":"","rationale":""},{"method_name":"getProcessInstanceNameByTaskId","method_signature":"public static getProcessInstanceNameByTaskId(String processInstanceId)","target_class":"","rationale":""},{"method_name":"getProcessInstanceNameByTaskIds","method_signature":"public static getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"getStartUserIdFromProcessInstance","method_signature":"public static getStartUserIdFromProcessInstance(ProcessInstance instance)","target_class":"","rationale":""},{"method_name":"getNodeIdFromExtension","method_signature":"public static getNodeIdFromExtension(FlowElement flowElement)","target_class":"","rationale":""},{"method_name":"generateFlowNodeIdExtension","method_signature":"public static generateFlowNodeIdExtension(String nodeId)","target_class":"","rationale":""},{"method_name":"getTaskNameByTaskIds","method_signature":"public static getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)","target_class":"","rationale":""},{"method_name":"getTaskNameByTaskId","method_signature":"public static getTaskNameByTaskId(String taskId)","target_class":"","rationale":""},{"method_name":"getProcessDefinition","method_signature":"public static getProcessDefinition(String processDefinitionId)","target_class":"","rationale":""},{"method_name":"getProcessDefinitionName","method_signature":"public static getProcessDefinitionName(String processDefinitionId)","target_class":"","rationale":""},{"method_name":"getProcessInstanceNameByTaskIds","method_signature":"public static getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)","target_class":"","rationale":""},{"method_name":"getProcessInstanceNameByTaskId","method_signature":"public static getProcessInstanceNameByTaskId(String processInstanceId)","target_class":"","rationale":""},{"method_name":"getFlowNode","method_signature":"public static getFlowNode(String processInstanceId, String nodeId)","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"public static getStartUserIdFromProcessInstance(ProcessInstance instance)":{"first":{"method_name":"getStartUserIdFromProcessInstance","method_signature":"public static getStartUserIdFromProcessInstance(ProcessInstance instance)","target_class":"","rationale":""},"second":0.29204435078186314},"public static getNodeIdFromExtension(FlowElement flowElement)":{"first":{"method_name":"getNodeIdFromExtension","method_signature":"public static getNodeIdFromExtension(FlowElement flowElement)","target_class":"","rationale":""},"second":0.3859972503452568},"public static generateFlowNodeIdExtension(String nodeId)":{"first":{"method_name":"generateFlowNodeIdExtension","method_signature":"public static generateFlowNodeIdExtension(String nodeId)","target_class":"","rationale":""},"second":0.409385302491319},"public static getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)":{"first":{"method_name":"getTaskNameByTaskIds","method_signature":"public static getTaskNameByTaskIds(Collection\u003cString\u003e taskIds)","target_class":"","rationale":""},"second":0.4854624749453455},"public static getTaskNameByTaskId(String taskId)":{"first":{"method_name":"getTaskNameByTaskId","method_signature":"public static getTaskNameByTaskId(String taskId)","target_class":"","rationale":""},"second":0.5112471781616931},"public static getProcessDefinition(String processDefinitionId)":{"first":{"method_name":"getProcessDefinition","method_signature":"public static getProcessDefinition(String processDefinitionId)","target_class":"","rationale":""},"second":0.5419571817935164},"public static getProcessDefinitionName(String processDefinitionId)":{"first":{"method_name":"getProcessDefinitionName","method_signature":"public static getProcessDefinitionName(String processDefinitionId)","target_class":"","rationale":""},"second":0.552763636624518},"public static getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)":{"first":{"method_name":"getProcessInstanceNameByTaskIds","method_signature":"public static getProcessInstanceNameByTaskIds(Set\u003cString\u003e taskIds)","target_class":"","rationale":""},"second":0.5997865558466727},"public static getProcessInstanceNameByTaskId(String processInstanceId)":{"first":{"method_name":"getProcessInstanceNameByTaskId","method_signature":"public static getProcessInstanceNameByTaskId(String processInstanceId)","target_class":"","rationale":""},"second":0.6007767649983399},"public static getFlowNode(String processInstanceId, String nodeId)":{"first":{"method_name":"getFlowNode","method_signature":"public static getFlowNode(String processInstanceId, String nodeId)","target_class":"","rationale":""},"second":0.699689894172838}},"llmMethodPriority":{"priority_method_names":["getTaskNameByTaskId","getTaskNameByTaskIds","getProcessInstanceNameByTaskId","getProcessInstanceNameByTaskIds","getStartUserIdFromProcessInstance","getNodeIdFromExtension","generateFlowNodeIdExtension","getFlowNode","getProcessDefinition","getProcessDefinitionName"],"llm_response_time":3396},"targetClassMap":{"getTaskNameByTaskId":{"target_classes":[{"class_name":"CrmQueryWrapperUtils","similarity_score":0.28494113159503265},{"class_name":"OAuth2Utils","similarity_score":0.3522889985930811},{"class_name":"SingletonManager","similarity_score":0.39617738670844205},{"class_name":"MapUtils","similarity_score":0.2744683805644462},{"class_name":"CrmPermissionUtils","similarity_score":0.2808427032869339},{"class_name":"LocalDateTimeUtils","similarity_score":0.27320197091235193},{"class_name":"PageUtils","similarity_score":0.22145116963972675},{"class_name":"NumberUtils","similarity_score":0.19904664080911114},{"class_name":"CacheUtils","similarity_score":0.22616563651595034},{"class_name":"ObjectUtils","similarity_score":0.35634190965886436},{"class_name":"BeanUtils","similarity_score":0.3752740078576229},{"class_name":"ArrayUtils","similarity_score":0.35867534730552775},{"class_name":"FileUtils","similarity_score":0.2590041334961379},{"class_name":"CollectionUtils","similarity_score":0.3979350344234349},{"class_name":"MoneyUtils","similarity_score":0.1631325832924329},{"class_name":"DateUtils","similarity_score":0.3446686671336713},{"class_name":"HttpUtils","similarity_score":0.47959707281114583},{"class_name":"IoUtils","similarity_score":0.15748326829156883},{"class_name":"JsonUtils","similarity_score":0.40121657313096876},{"class_name":"ServletUtils","similarity_score":0.4378987037334004},{"class_name":"SetUtils","similarity_score":0.27423646807642443},{"class_name":"ValidationUtils","similarity_score":0.45373863706484413},{"class_name":"TracerUtils","similarity_score":0.17748862770716778},{"class_name":"StrUtils","similarity_score":0.3683656001029861},{"class_name":"SpringExpressionUtils","similarity_score":0.3467806199480048},{"class_name":"SpringAopUtils","similarity_score":0.35301447428242083},{"class_name":"CronUtils","similarity_score":0.3047133760534541},{"class_name":"AreaUtils","similarity_score":0.32773511427708085},{"class_name":"AssertUtils","similarity_score":0.2609633525888259},{"class_name":"DataPermissionUtils","similarity_score":0.354748677836127},{"class_name":"RandomUtils","similarity_score":0.4699953484029211},{"class_name":"SecurityFrameworkUtils","similarity_score":0.35102115918291177},{"class_name":"ExcelUtils","similarity_score":0.1436445297292925},{"class_name":"MyBatisUtils","similarity_score":0.3427955850955305},{"class_name":"ServiceExceptionUtil","similarity_score":0.38405514242292754},{"class_name":"IPUtils","similarity_score":0.22165531985308717},{"class_name":"JdbcUtils","similarity_score":0.27628104606408455},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.2595444356003977},{"class_name":"TracerFrameworkUtils","similarity_score":0.3065030169164441},{"class_name":"WebFrameworkUtils","similarity_score":0.4663150682430285},{"class_name":"TenantUtils","similarity_score":0.26664090550477815},{"class_name":"SimpleTrie","similarity_score":0.3219358804677538},{"class_name":"CrmPermissionAspect","similarity_score":0.3077776868664133},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.23567877635584342},{"class_name":"DictDataServiceImplTest","similarity_score":0.35219991551502355},{"class_name":"DictTypeServiceImplTest","similarity_score":0.29351930656468767},{"class_name":"PostServiceImplTest","similarity_score":0.2931833109733311},{"class_name":"ConfigServiceImplTest","similarity_score":0.287540530382842},{"class_name":"AdminUserServiceImplTest","similarity_score":0.30645842804056084}],"target_classes_sorted_by_llm":["WebFrameworkUtils","BeanUtils","ServiceExceptionUtil","CollectionUtils","JsonUtils","RandomUtils","ValidationUtils","ServletUtils","HttpUtils","SingletonManager"],"llm_response_time":15759,"similarity_computation_time":27,"similarity_metric":"tfidf"},"getTaskNameByTaskIds":{"target_classes":[{"class_name":"CrmQueryWrapperUtils","similarity_score":0.37190329312859455},{"class_name":"OAuth2Utils","similarity_score":0.3699244410825408},{"class_name":"SingletonManager","similarity_score":0.37523938719322814},{"class_name":"MapUtils","similarity_score":0.31752588099893275},{"class_name":"DateUtils","similarity_score":0.36114736058177677},{"class_name":"CrmPermissionUtils","similarity_score":0.28880016172813583},{"class_name":"ArrayUtils","similarity_score":0.40982014763022995},{"class_name":"CollectionUtils","similarity_score":0.4958263741788757},{"class_name":"NumberUtils","similarity_score":0.1857340206768313},{"class_name":"ObjectUtils","similarity_score":0.45804822386131727},{"class_name":"IoUtils","similarity_score":0.15294846504945478},{"class_name":"BeanUtils","similarity_score":0.43887474514502467},{"class_name":"TracerUtils","similarity_score":0.19081388509016645},{"class_name":"ValidationUtils","similarity_score":0.4495244190641396},{"class_name":"MoneyUtils","similarity_score":0.17643179082599456},{"class_name":"SpringAopUtils","similarity_score":0.41141911189020297},{"class_name":"SetUtils","similarity_score":0.2996321655080122},{"class_name":"SpringExpressionUtils","similarity_score":0.3863235758514553},{"class_name":"ServletUtils","similarity_score":0.43131740460931917},{"class_name":"HttpUtils","similarity_score":0.5119741221095043},{"class_name":"LocalDateTimeUtils","similarity_score":0.28274385142619296},{"class_name":"PageUtils","similarity_score":0.22405281838330712},{"class_name":"StrUtils","similarity_score":0.4076249150956973},{"class_name":"CacheUtils","similarity_score":0.29071732876935347},{"class_name":"JsonUtils","similarity_score":0.4866384007476382},{"class_name":"FileUtils","similarity_score":0.25968424280683405},{"class_name":"CronUtils","similarity_score":0.3588330739606809},{"class_name":"AssertUtils","similarity_score":0.32324886122656155},{"class_name":"AreaUtils","similarity_score":0.3877556116139439},{"class_name":"IPUtils","similarity_score":0.23378025646773365},{"class_name":"TracerFrameworkUtils","similarity_score":0.358167659413283},{"class_name":"TenantUtils","similarity_score":0.32486261320459436},{"class_name":"DataPermissionUtils","similarity_score":0.410400229824193},{"class_name":"RandomUtils","similarity_score":0.5070463852881213},{"class_name":"SecurityFrameworkUtils","similarity_score":0.3690484216059472},{"class_name":"WebFrameworkUtils","similarity_score":0.4598749648706637},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.2528511387889287},{"class_name":"ServiceExceptionUtil","similarity_score":0.386257109590925},{"class_name":"JdbcUtils","similarity_score":0.2670626983032322},{"class_name":"MyBatisUtils","similarity_score":0.35603351430952035},{"class_name":"ExcelUtils","similarity_score":0.16354114787912824},{"class_name":"SimpleTrie","similarity_score":0.4199205334317786},{"class_name":"CrmPermissionAspect","similarity_score":0.47722013369504107},{"class_name":"CodegenEngine","similarity_score":0.46235031516939873},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.2813067100948731},{"class_name":"DictDataServiceImplTest","similarity_score":0.38009955100532133},{"class_name":"DictTypeServiceImplTest","similarity_score":0.3509149623648482},{"class_name":"PostServiceImplTest","similarity_score":0.3513130020914121},{"class_name":"ConfigServiceImplTest","similarity_score":0.3524359237292377}],"target_classes_sorted_by_llm":["CollectionUtils","WebFrameworkUtils","BeanUtils","JsonUtils","ValidationUtils","ObjectUtils","RandomUtils","HttpUtils","CodegenEngine","CrmPermissionAspect"],"llm_response_time":12905,"similarity_computation_time":15,"similarity_metric":"tfidf"},"getProcessInstanceNameByTaskId":{"target_classes":[{"class_name":"SingletonManager","similarity_score":0.38},{"class_name":"OAuth2Utils","similarity_score":0.33790373695379367},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.2733059322383711},{"class_name":"TracerUtils","similarity_score":0.17024111115751012},{"class_name":"MapUtils","similarity_score":0.26326082233271264},{"class_name":"ValidationUtils","similarity_score":0.43521081179610566},{"class_name":"MoneyUtils","similarity_score":0.1564712770866575},{"class_name":"LocalDateTimeUtils","similarity_score":0.26204612486652434},{"class_name":"NumberUtils","similarity_score":0.19091883092036782},{"class_name":"ServletUtils","similarity_score":0.42001768147648366},{"class_name":"ObjectUtils","similarity_score":0.341791152683887},{"class_name":"IoUtils","similarity_score":0.15105264449340405},{"class_name":"SetUtils","similarity_score":0.2630383796885717},{"class_name":"DateUtils","similarity_score":0.33059457178756785},{"class_name":"SpringAopUtils","similarity_score":0.33859958878986024},{"class_name":"CrmPermissionUtils","similarity_score":0.2693748579031676},{"class_name":"SpringExpressionUtils","similarity_score":0.3326202857641138},{"class_name":"CollectionUtils","similarity_score":0.38168587646368823},{"class_name":"BeanUtils","similarity_score":0.3599501833526986},{"class_name":"CacheUtils","similarity_score":0.2169304578186562},{"class_name":"HttpUtils","similarity_score":0.4600133520552397},{"class_name":"ArrayUtils","similarity_score":0.34402930744859755},{"class_name":"PageUtils","similarity_score":0.21240850004653483},{"class_name":"StrUtils","similarity_score":0.3533238714155816},{"class_name":"JsonUtils","similarity_score":0.3848334178194006},{"class_name":"FileUtils","similarity_score":0.24842803761781476},{"class_name":"TracerFrameworkUtils","similarity_score":0.2939873661036668},{"class_name":"SecurityFrameworkUtils","similarity_score":0.33668766811183604},{"class_name":"ServiceExceptionUtil","similarity_score":0.3683727517444464},{"class_name":"MyBatisUtils","similarity_score":0.3287979746107146},{"class_name":"TenantUtils","similarity_score":0.2557529720048926},{"class_name":"IPUtils","similarity_score":0.21260431405227978},{"class_name":"CronUtils","similarity_score":0.2922708028904396},{"class_name":"WebFrameworkUtils","similarity_score":0.4472737008151275},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.248946277190559},{"class_name":"DataPermissionUtils","similarity_score":0.3402629784040012},{"class_name":"JdbcUtils","similarity_score":0.26499947000159},{"class_name":"AssertUtils","similarity_score":0.25030725455497266},{"class_name":"AreaUtils","similarity_score":0.3143524784693042},{"class_name":"ExcelUtils","similarity_score":0.13777899276543443},{"class_name":"RandomUtils","similarity_score":0.4508037015362147},{"class_name":"SimpleTrie","similarity_score":0.3087900488065378},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.22605514100462443},{"class_name":"DictDataServiceImplTest","similarity_score":0.3378182914670053},{"class_name":"DictTypeServiceImplTest","similarity_score":0.2815338286247638},{"class_name":"SmsLogServiceImplTest","similarity_score":0.33260861627461147},{"class_name":"SmsTemplateServiceImplTest","similarity_score":0.25839994570156377},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.4448174855149551},{"class_name":"OAuth2CodeServiceImpl","similarity_score":0.37796447300922725}],"target_classes_sorted_by_llm":["WebFrameworkUtils","OAuth2CodeServiceImpl","OAuth2AccessTokenRedisDAO","SingletonManager","ValidationUtils","JsonUtils","HttpUtils","ServletUtils","CollectionUtils","RandomUtils"],"llm_response_time":12000,"similarity_computation_time":9,"similarity_metric":"tfidf"}}}
{"id":"8d18ad84-faca-4b3c-9936-34e229a8ec3c","methodCount":4,"hostFunctionTelemetryData":{"hostFunctionSize":53,"lineStart":17,"lineEnd":69,"bodyLineStart":17,"language":"java","filePath":"/Users/fraol/Documents/MM-assist-dataset/ruoyi-vue-pro/yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/permission/core/util/CrmPermissionUtils.java","sourceCode":"/**\n * 数据权限工具类\n *\n * @author HUIHUI\n */\npublic class CrmPermissionUtils {\n\n    /**\n     * 校验用户是否是 CRM 管理员\n     *\n     * @return 是/否\n     */\n    public static boolean isCrmAdmin() {\n        return SingletonManager.getPermissionApi().hasAnyRoles(getLoginUserId(), CrmPermissionRoleCodeEnum.CRM_ADMIN.getCode());\n    }\n\n    // TODO @puhui999：这个貌似直接放到 CrmPermissionService 会更好？\n    /**\n     * 校验权限\n     *\n     * @param bizType   数据类型，关联 {@link CrmBizTypeEnum}\n     * @param bizId     数据编号，关联 {@link CrmBizTypeEnum} 对应模块 DO#getId()\n     * @param userId    用户编号\n     * @param levelEnum 权限级别\n     * @return boolean\n     */\n    public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum) {\n        List\u003cCrmPermissionDO\u003e permissionList \u003d SingletonManager.getCrmPermissionService().getPermissionListByBiz(bizType, bizId);\n        return anyMatch(permissionList, permission -\u003e\n                ObjUtil.equal(permission.getUserId(), userId) \u0026\u0026 ObjUtil.equal(permission.getLevel(), levelEnum.getLevel()));\n    }\n\n    /**\n     * 静态内部类实现单例获取\n     *\n     * @author HUIHUI\n     */\n    private static class SingletonManager {\n\n        private static final PermissionApi PERMISSION_API \u003d SpringUtil.getBean(PermissionApi.class);\n        private static final CrmPermissionService CRM_PERMISSION_SERVICE \u003d SpringUtil.getBean(CrmPermissionService.class);\n\n        public static PermissionApi getPermissionApi() {\n            return PERMISSION_API;\n        }\n\n        public static CrmPermissionService getCrmPermissionService() {\n            return CRM_PERMISSION_SERVICE;\n        }\n\n    }\n\n}","methodCount":4},"candidatesTelemetryData":{"numberOfSuggestions":6,"candidates":[{"lineStart":33,"lineEnd":46,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method hasPermission to class CrmQueryWrapperUtils","description":"move method hasPermission to PsiClass:CrmQueryWrapperUtils\nRationale: The hasPermission() method is directly related to permission checks within the CRM context. Moving it to CrmQueryWrapperUtils aligns with the Single Responsibility Principle, as this class likely deals with query conditions related to CRM entities. This enhances cohesion by grouping related functionalities together. However, care must be taken to ensure that the method\u0027s dependencies are properly managed.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":33,"lineEnd":46,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method hasPermission to class TenantUtils","description":"move method hasPermission to PsiClass:TenantUtils\nRationale: If the permission checks are tenant-specific, moving hasPermission() to TenantUtils would make sense, as it would encapsulate tenant-related logic. This adheres to the Open/Closed Principle, allowing for future extensions related to tenant permissions without modifying existing code. However, if tenant logic is not relevant, this could introduce unnecessary complexity.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":33,"lineEnd":46,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method hasPermission to class AssertUtils","description":"move method hasPermission to PsiClass:AssertUtils\nRationale: While AssertUtils primarily focuses on assertions, it could be a suitable location for hasPermission() if the method is used to validate permissions before executing certain actions. This aligns with the Interface Segregation Principle, as it keeps permission validation logic separate from business logic. However, this could lead to a misuse of the class if not properly documented.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":23,"lineEnd":30,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method isCrmAdmin to class WebSocketFrameworkUtils","description":"move method isCrmAdmin to PsiClass:WebSocketFrameworkUtils\nRationale: The isCrmAdmin() method relies on getting the login user ID, which is directly handled by the WebSocketFrameworkUtils class. Moving this method here adheres to the Single Responsibility Principle, as it centralizes user-related operations. This enhances cohesion and makes the method more reusable in contexts where user information is accessed. However, it may introduce tight coupling with the WebSocket framework, which should be considered.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":23,"lineEnd":30,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method isCrmAdmin to class TenantUtils","description":"move method isCrmAdmin to PsiClass:TenantUtils\nRationale: The isCrmAdmin() method checks user roles, which can be associated with tenant-specific permissions. By relocating it to TenantUtils, we align with the principle of grouping related functionalities, improving cohesion. This move also supports the Open/Closed Principle, allowing for future extensions related to tenant permissions. However, care must be taken to ensure that tenant logic does not overly complicate the method.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false},{"lineStart":23,"lineEnd":30,"refactoringType":"MyMoveStaticMethodRefactoring","refactoringInfo":"Move Static method isCrmAdmin to class DateUtils","description":"move method isCrmAdmin to PsiClass:DateUtils\nRationale: Although DateUtils primarily deals with date operations, if user role validation is time-sensitive (e.g., checking permissions based on time), it could be relevant here. This move could enhance the method\u0027s context, but it may dilute the class\u0027s focus on date operations, leading to potential violations of the Single Responsibility Principle.","couldCreateRefObject":true,"applied":false,"startedRefactoringFlow":false,"undone":false}]},"iterationData":[{"iteration_num":1,"suggested_move_methods":[{"method_name":"isCrmAdmin","method_signature":"public static boolean isCrmAdmin()","target_class":"CrmPermissionService","rationale":"The method isCrmAdmin() checks if a user has the CRM_ADMIN role, which is a permission-related check that fits better within the CrmPermissionService class."},{"method_name":"hasPermission","method_signature":"public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)","target_class":"CrmPermissionService","rationale":"The hasPermission() method is directly related to permission checks and should be moved to the CrmPermissionService class to maintain a single responsibility for permission-related logic."}],"llm_response_time":8684},{"iteration_num":2,"suggested_move_methods":[{"method_name":"isCrmAdmin","method_signature":"public static boolean isCrmAdmin()","target_class":"CrmPermissionService","rationale":"The method isCrmAdmin() checks if a user has a specific role related to CRM administration, which is more aligned with the responsibilities of a permission service. Moving it to CrmPermissionService would enhance cohesion."},{"method_name":"hasPermission","method_signature":"public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)","target_class":"CrmPermissionService","rationale":"The hasPermission() method is directly related to checking user permissions for specific business types and IDs, which is a core responsibility of a permission service. Moving it to CrmPermissionService would improve the organization of permission-related logic."}],"llm_response_time":6903},{"iteration_num":3,"suggested_move_methods":[{"method_name":"isCrmAdmin","method_signature":"public static boolean isCrmAdmin()","target_class":"CrmPermissionService","rationale":"The method isCrmAdmin() checks if a user has a specific role related to CRM administration. It would be more appropriate to move this method to CrmPermissionService, which is responsible for handling permission-related logic."},{"method_name":"hasPermission","method_signature":"public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)","target_class":"CrmPermissionService","rationale":"The hasPermission() method is directly related to checking user permissions for specific business entities. Moving it to CrmPermissionService would centralize permission-related functionality within the service class."}],"llm_response_time":9237},{"iteration_num":-1,"suggested_move_methods":[{"method_name":"isCrmAdmin","method_signature":"public static isCrmAdmin()","target_class":"","rationale":""},{"method_name":"hasPermission","method_signature":"public static hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)","target_class":"","rationale":""}],"llm_response_time":0},{"iteration_num":-2,"suggested_move_methods":[{"method_name":"hasPermission","method_signature":"public static hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)","target_class":"","rationale":""},{"method_name":"isCrmAdmin","method_signature":"public static isCrmAdmin()","target_class":"","rationale":""}],"llm_response_time":0}],"methodCompatibilityScores":{"public static hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)":{"first":{"method_name":"hasPermission","method_signature":"public static hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)","target_class":"","rationale":""},"second":0.6430824046388733},"public static isCrmAdmin()":{"first":{"method_name":"isCrmAdmin","method_signature":"public static isCrmAdmin()","target_class":"","rationale":""},"second":0.6461940177476403}},"llmMethodPriority":{"priority_method_names":["hasPermission","isCrmAdmin"],"llm_response_time":852},"targetClassMap":{"hasPermission":{"target_classes":[{"class_name":"SingletonManager","similarity_score":0.36667939881128453},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.6383929941118209},{"class_name":"OAuth2Utils","similarity_score":0.5540703193145262},{"class_name":"CrmPermissionAspect","similarity_score":0.24947647669920123},{"class_name":"MapUtils","similarity_score":0.5844730316346148},{"class_name":"ObjectUtils","similarity_score":0.4140292546652066},{"class_name":"TracerFrameworkUtils","similarity_score":0.48387100808065},{"class_name":"TracerUtils","similarity_score":0.6171454569797131},{"class_name":"SecurityFrameworkUtils","similarity_score":0.587339367374206},{"class_name":"ValidationUtils","similarity_score":0.33084247073593187},{"class_name":"NumberUtils","similarity_score":0.6222755746100778},{"class_name":"PageUtils","similarity_score":0.7003442784347512},{"class_name":"ServiceExceptionUtil","similarity_score":0.5677590376280539},{"class_name":"ServletUtils","similarity_score":0.5265163497288676},{"class_name":"TenantUtils","similarity_score":0.6600231146442639},{"class_name":"SetUtils","similarity_score":0.4671833441849212},{"class_name":"SpringAopUtils","similarity_score":0.4345512277932494},{"class_name":"SpringExpressionUtils","similarity_score":0.5399492471560389},{"class_name":"StrUtils","similarity_score":0.5808922957825075},{"class_name":"WebFrameworkUtils","similarity_score":0.5410855394827312},{"class_name":"CollectionUtils","similarity_score":0.22801221648807163},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.6215683733586876},{"class_name":"LocalDateTimeUtils","similarity_score":0.7021736134656905},{"class_name":"MoneyUtils","similarity_score":0.7097657682947003},{"class_name":"BeanUtils","similarity_score":0.30732108086296617},{"class_name":"RandomUtils","similarity_score":0.2545921805362247},{"class_name":"CacheUtils","similarity_score":0.3181757194272063},{"class_name":"AssertUtils","similarity_score":0.6440420699921925},{"class_name":"ArrayUtils","similarity_score":0.4993376526969942},{"class_name":"AreaUtils","similarity_score":0.5949242726191573},{"class_name":"JdbcUtils","similarity_score":0.6656134474666205},{"class_name":"HttpUtils","similarity_score":0.3694838710158018},{"class_name":"IoUtils","similarity_score":0.6769631350985078},{"class_name":"IPUtils","similarity_score":0.6021726575894709},{"class_name":"JsonUtils","similarity_score":0.30867918875611494},{"class_name":"MyBatisUtils","similarity_score":0.6420003374928271},{"class_name":"DateUtils","similarity_score":0.6428450998737697},{"class_name":"CronUtils","similarity_score":0.5660979185688902},{"class_name":"FileUtils","similarity_score":0.6120340733917816},{"class_name":"ExcelUtils","similarity_score":0.5683580801556054},{"class_name":"DataPermissionUtils","similarity_score":0.4613795379939091},{"class_name":"SimpleTrie","similarity_score":0.5899719997933454},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.14524210739596882},{"class_name":"DictDataServiceImplTest","similarity_score":0.155645211903368},{"class_name":"DictTypeServiceImplTest","similarity_score":0.12379525704237579},{"class_name":"PostServiceImplTest","similarity_score":0.14418550614665415},{"class_name":"SmsLogServiceImplTest","similarity_score":0.13874745679574788},{"class_name":"SmsTemplateServiceImplTest","similarity_score":0.12001658654077609},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.30582264031757067}],"target_classes_sorted_by_llm":["CrmQueryWrapperUtils","TenantUtils","AssertUtils","MyBatisUtils","PageUtils","DateUtils","JdbcUtils","IoUtils","LocalDateTimeUtils","MoneyUtils"],"llm_response_time":15132,"similarity_computation_time":10,"similarity_metric":"tfidf"},"isCrmAdmin":{"target_classes":[{"class_name":"SingletonManager","similarity_score":0.52},{"class_name":"CrmQueryWrapperUtils","similarity_score":0.6044265809117823},{"class_name":"OAuth2Utils","similarity_score":0.5853825302157271},{"class_name":"CrmPermissionAspect","similarity_score":0.32288592281010975},{"class_name":"MapUtils","similarity_score":0.6005637509465007},{"class_name":"ObjectUtils","similarity_score":0.5533761519643884},{"class_name":"TracerFrameworkUtils","similarity_score":0.5345224838248488},{"class_name":"TracerUtils","similarity_score":0.7273938385820886},{"class_name":"SecurityFrameworkUtils","similarity_score":0.6582997689947839},{"class_name":"ValidationUtils","similarity_score":0.4776704031908477},{"class_name":"LocalDateTimeUtils","similarity_score":0.7525427175654033},{"class_name":"NumberUtils","similarity_score":0.5727564927611035},{"class_name":"PageUtils","similarity_score":0.6714849356309811},{"class_name":"ServiceExceptionUtil","similarity_score":0.6436403024985382},{"class_name":"ServletUtils","similarity_score":0.652798565186342},{"class_name":"TenantUtils","similarity_score":0.6727415133172175},{"class_name":"SetUtils","similarity_score":0.6247161517603578},{"class_name":"SpringAopUtils","similarity_score":0.5417593420637763},{"class_name":"SpringExpressionUtils","similarity_score":0.5682263215136943},{"class_name":"WebFrameworkUtils","similarity_score":0.6489134839694883},{"class_name":"BeanUtils","similarity_score":0.4587600376063806},{"class_name":"WebSocketFrameworkUtils","similarity_score":0.6878778711844393},{"class_name":"CollectionUtils","similarity_score":0.40585931530638847},{"class_name":"MoneyUtils","similarity_score":0.7068185275293839},{"class_name":"ArrayUtils","similarity_score":0.6116076576863956},{"class_name":"CacheUtils","similarity_score":0.4121678698554468},{"class_name":"RandomUtils","similarity_score":0.4226284701902013},{"class_name":"AssertUtils","similarity_score":0.6257681363874317},{"class_name":"MyBatisUtils","similarity_score":0.6641719087136434},{"class_name":"JsonUtils","similarity_score":0.47117424874042},{"class_name":"AreaUtils","similarity_score":0.6185645544073405},{"class_name":"JdbcUtils","similarity_score":0.6995986008041977},{"class_name":"HttpUtils","similarity_score":0.4074403975346409},{"class_name":"IoUtils","similarity_score":0.6881287138032851},{"class_name":"IPUtils","similarity_score":0.6705212981648824},{"class_name":"StrUtils","similarity_score":0.683604881651886},{"class_name":"ExcelUtils","similarity_score":0.5117505445573278},{"class_name":"FileUtils","similarity_score":0.6583342996872091},{"class_name":"DateUtils","similarity_score":0.7037657172144437},{"class_name":"DataPermissionUtils","similarity_score":0.5671049640066687},{"class_name":"CronUtils","similarity_score":0.6033977866125205},{"class_name":"SimpleTrie","similarity_score":0.6208305191794602},{"class_name":"NotifyMessageServiceImplTest","similarity_score":0.09688077471626762},{"class_name":"DictDataServiceImplTest","similarity_score":0.16187126466127336},{"class_name":"DictTypeServiceImplTest","similarity_score":0.1327557891076122},{"class_name":"PostServiceImplTest","similarity_score":0.1453720739955609},{"class_name":"SmsLogServiceImplTest","similarity_score":0.10464091298527102},{"class_name":"SmsTemplateServiceImplTest","similarity_score":0.11369597610868806},{"class_name":"OAuth2AccessTokenRedisDAO","similarity_score":0.4077493617220422}],"target_classes_sorted_by_llm":["WebSocketFrameworkUtils","TenantUtils","DateUtils","JdbcUtils","MoneyUtils","StrUtils","IoUtils","PageUtils","TracerUtils","LocalDateTimeUtils"],"llm_response_time":15791,"similarity_computation_time":9,"similarity_metric":"tfidf"}}}
