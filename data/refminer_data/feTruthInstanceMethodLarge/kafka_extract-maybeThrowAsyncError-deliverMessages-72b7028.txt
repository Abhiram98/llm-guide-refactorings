Refactoring Type	Source Method	Target Class
Move Method	org.apache.kafka.clients.consumer.internals.SubscriptionState::assignedState(org.apache.kafka.common.TopicPartition):org.apache.kafka.clients.consumer.internals.SubscriptionState.TopicPartitionState 	 org.apache.kafka.common.internals.PartitionStates
Move Method	org.apache.kafka.clients.consumer.internals.SubscriptionState::assignedStateOrNull(org.apache.kafka.common.TopicPartition):org.apache.kafka.clients.consumer.internals.SubscriptionState.TopicPartitionState 	 org.apache.kafka.common.internals.PartitionStates
Move Method	org.apache.kafka.clients.consumer.internals.SubscriptionState::collectPartitions(java.util.function.Predicate<org.apache.kafka.clients.consumer.internals.SubscriptionState.TopicPartitionState>):java.util.Set<org.apache.kafka.common.TopicPartition> 	 org.apache.kafka.common.internals.PartitionStates
Move Method	org.apache.kafka.clients.consumer.internals.SubscriptionState.TopicPartitionState::validatePosition(org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchPosition):void 	 org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchPosition
Move Method	org.apache.kafka.connect.runtime.Worker::initConfigTransformer():org.apache.kafka.connect.runtime.WorkerConfigTransformer 	 org.apache.kafka.connect.runtime.isolation.Plugins
Move Method	org.apache.kafka.connect.runtime.Worker::isSinkConnector(java.lang.String):boolean 	 org.apache.kafka.connect.runtime.isolation.Plugins
Move Method	org.apache.kafka.connect.runtime.Worker::awaitStopConnectors(java.util.Collection<java.lang.String>):void 	 org.apache.kafka.common.utils.Time
Move Method	org.apache.kafka.connect.runtime.Worker::isRunning(java.lang.String):boolean 	 org.apache.kafka.connect.runtime.WorkerConnector
Move Method	org.apache.kafka.connect.runtime.Worker::exactlyOnceSourceTaskProducerConfigs(org.apache.kafka.connect.util.ConnectorTaskId, org.apache.kafka.connect.runtime.WorkerConfig, org.apache.kafka.connect.runtime.ConnectorConfig, java.lang.Class<? extends org.apache.kafka.connect.runtime.Connector>, org.apache.kafka.connect.runtime.ConnectorClientConfigOverridePolicy, java.lang.String):java.util.Map<java.lang.String,java.lang.Object> 	 org.apache.kafka.connect.util.ConnectorTaskId
Move Method	org.apache.kafka.connect.runtime.Worker::baseProducerConfigs(java.lang.String, java.lang.String, org.apache.kafka.connect.runtime.WorkerConfig, org.apache.kafka.connect.runtime.ConnectorConfig, java.lang.Class<? extends org.apache.kafka.connect.runtime.Connector>, org.apache.kafka.connect.runtime.ConnectorClientConfigOverridePolicy, java.lang.String):java.util.Map<java.lang.String,java.lang.Object> 	 org.apache.kafka.common.config.AbstractConfig
Move Method	org.apache.kafka.connect.runtime.Worker::exactlyOnceSourceOffsetsConsumerConfigs(java.lang.String, java.lang.String, org.apache.kafka.connect.runtime.WorkerConfig, org.apache.kafka.connect.runtime.ConnectorConfig, java.lang.Class<? extends org.apache.kafka.connect.runtime.Connector>, org.apache.kafka.connect.runtime.ConnectorClientConfigOverridePolicy, java.lang.String):java.util.Map<java.lang.String,java.lang.Object> 	 org.apache.kafka.connect.util.ConnectUtils
Move Method	org.apache.kafka.connect.runtime.Worker::baseConsumerConfigs(java.lang.String, java.lang.String, org.apache.kafka.connect.runtime.WorkerConfig, org.apache.kafka.connect.runtime.ConnectorConfig, java.lang.Class<? extends org.apache.kafka.connect.runtime.Connector>, org.apache.kafka.connect.runtime.ConnectorClientConfigOverridePolicy, java.lang.String, org.apache.kafka.connect.runtime.ConnectorType):java.util.Map<java.lang.String,java.lang.Object> 	 org.apache.kafka.common.config.AbstractConfig
Move Method	org.apache.kafka.connect.runtime.Worker::adminConfigs(java.lang.String, java.lang.String, org.apache.kafka.connect.runtime.WorkerConfig, org.apache.kafka.connect.runtime.ConnectorConfig, java.lang.Class<? extends org.apache.kafka.connect.runtime.Connector>, org.apache.kafka.connect.runtime.ConnectorClientConfigOverridePolicy, java.lang.String, org.apache.kafka.connect.runtime.ConnectorType):java.util.Map<java.lang.String,java.lang.Object> 	 org.apache.kafka.common.config.AbstractConfig
Move Method	org.apache.kafka.connect.runtime.Worker::connectorClientConfigOverrides(java.lang.String, org.apache.kafka.connect.runtime.ConnectorConfig, java.lang.Class<? extends org.apache.kafka.connect.runtime.Connector>, java.lang.String, org.apache.kafka.connect.runtime.ConnectorType, ConnectorClientConfigRequest.ClientType, org.apache.kafka.connect.runtime.ConnectorClientConfigOverridePolicy):java.util.Map<java.lang.String,java.lang.Object> 	 org.apache.kafka.common.config.AbstractConfig
Move Method	org.apache.kafka.connect.runtime.Worker::taskTransactionalId(org.apache.kafka.connect.util.ConnectorTaskId):java.lang.String 	 org.apache.kafka.connect.runtime.WorkerConfig
Move Method	org.apache.kafka.connect.runtime.Worker::sinkTaskReporters(org.apache.kafka.connect.util.ConnectorTaskId, org.apache.kafka.connect.runtime.SinkConnectorConfig, org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics, java.lang.Class<? extends org.apache.kafka.connect.runtime.Connector>):java.util.List<org.apache.kafka.connect.runtime.errors.ErrorReporter> 	 org.apache.kafka.connect.runtime.SinkConnectorConfig
Move Method	org.apache.kafka.connect.runtime.Worker::createWorkerErrantRecordReporter(org.apache.kafka.connect.runtime.SinkConnectorConfig, org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator, org.apache.kafka.connect.runtime.Converter, org.apache.kafka.connect.runtime.Converter, org.apache.kafka.connect.runtime.HeaderConverter):org.apache.kafka.connect.runtime.errors.WorkerErrantRecordReporter 	 org.apache.kafka.connect.runtime.SinkConnectorConfig
Move Method	org.apache.kafka.connect.runtime.Worker::awaitStopTasks(java.util.Collection<org.apache.kafka.connect.util.ConnectorTaskId>):void 	 org.apache.kafka.common.utils.Time
Move Method	org.apache.kafka.connect.runtime.Worker::isTopicCreationEnabled():boolean 	 org.apache.kafka.connect.runtime.WorkerConfig
Move Method	org.apache.kafka.connect.runtime.Worker::sourceConnectorOffsets(java.lang.String, org.apache.kafka.connect.runtime.Connector, java.util.Map<java.lang.String,java.lang.String>, org.apache.kafka.connect.util.Callback<org.apache.kafka.connect.runtime.rest.entities.ConnectorOffsets>):void 	 org.apache.kafka.connect.runtime.WorkerConfig
Move Method	org.apache.kafka.connect.runtime.Worker::completeModifyOffsetsCallback(boolean, boolean, org.apache.kafka.connect.util.Callback<org.apache.kafka.connect.runtime.rest.entities.Message>):void 	 org.apache.kafka.connect.util.Callback
Move Method	org.apache.kafka.connect.runtime.Worker::offsetStoreForRegularSourceTask(org.apache.kafka.connect.util.ConnectorTaskId, org.apache.kafka.connect.runtime.SourceConnectorConfig, java.lang.Class<? extends org.apache.kafka.connect.runtime.Connector>, org.apache.kafka.clients.producer.Producer<byte[],byte[]>, java.util.Map<java.lang.String,java.lang.Object>, org.apache.kafka.connect.util.TopicAdmin):org.apache.kafka.connect.storage.ConnectorOffsetBackingStore 	 org.apache.kafka.connect.util.ConnectorTaskId
Move Method	org.apache.kafka.connect.runtime.Worker::offsetStoreForExactlyOnceSourceTask(org.apache.kafka.connect.util.ConnectorTaskId, org.apache.kafka.connect.runtime.SourceConnectorConfig, java.lang.Class<? extends org.apache.kafka.connect.runtime.Connector>, org.apache.kafka.clients.producer.Producer<byte[],byte[]>, java.util.Map<java.lang.String,java.lang.Object>, org.apache.kafka.connect.util.TopicAdmin):org.apache.kafka.connect.storage.ConnectorOffsetBackingStore 	 org.apache.kafka.connect.util.ConnectorTaskId
Move Method	org.apache.kafka.connect.runtime.Worker::regularSourceTaskUsesConnectorSpecificOffsetsStore(org.apache.kafka.connect.runtime.SourceConnectorConfig):boolean 	 org.apache.kafka.connect.runtime.SourceConnectorConfig
Move Method	org.apache.kafka.connect.runtime.Worker::sourceConnectorTopicCreationEnabled(org.apache.kafka.connect.runtime.SourceConnectorConfig):boolean 	 org.apache.kafka.connect.runtime.WorkerConfig
Move Method	org.apache.kafka.connect.runtime.Worker.ConnectorStatusMetricsGroup::taskCounter(java.lang.String):org.apache.kafka.connect.runtime.ConnectMetrics.LiteralSupplier<java.lang.Long> 	 org.apache.kafka.connect.util.ConnectorTaskId
Move Method	org.apache.kafka.connect.runtime.Worker.ConnectorStatusMetricsGroup::taskStatusCounter(java.lang.String, org.apache.kafka.connect.runtime.AbstractStatus.State):org.apache.kafka.connect.runtime.ConnectMetrics.LiteralSupplier<java.lang.Long> 	 org.apache.kafka.connect.runtime.WorkerTask
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask::commitOffsets(long, boolean):void 	 org.apache.kafka.clients.consumer.Consumer
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask::pollConsumer(long):org.apache.kafka.clients.consumer.ConsumerRecords<byte[],byte[]> 	 org.apache.kafka.clients.consumer.Consumer
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask::resumeAll():void 	 org.apache.kafka.clients.consumer.Consumer
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask::pauseAll():void 	 org.apache.kafka.clients.consumer.Consumer
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask::updatePartitionCount():void 	 org.apache.kafka.clients.consumer.Consumer
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup::computeSinkRecordLag():void 	 org.apache.kafka.common.metrics.Sensor
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup::recordRead(int):void 	 org.apache.kafka.common.metrics.Sensor
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup::recordSend(int):void 	 org.apache.kafka.common.metrics.Sensor
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup::recordPut(long):void 	 org.apache.kafka.common.metrics.Sensor
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup::recordPartitionCount(int):void 	 org.apache.kafka.common.metrics.Sensor
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup::recordOffsetSequenceNumber(int):void 	 org.apache.kafka.common.metrics.Sensor
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup::recordOffsetCommitSuccess():void 	 org.apache.kafka.common.metrics.Sensor
Move Method	org.apache.kafka.connect.runtime.WorkerSinkTask.SinkTaskMetricsGroup::recordOffsetCommitSkip():void 	 org.apache.kafka.common.metrics.Sensor
Move Method	org.apache.kafka.image.node.MetadataNode::print(org.apache.kafka.image.node.printer.MetadataNodePrinter):void 	 org.apache.kafka.image.node.printer.MetadataNodePrinter
Move Method	org.apache.kafka.image.node.MetadataNode::stringify():java.lang.String 	 org.apache.kafka.image.node.printer.NodeStringifier
Move Method	org.apache.kafka.image.node.ConfigurationsImageNode::resourceFromName(java.lang.String):org.apache.kafka.common.config.ConfigResource 	 org.apache.kafka.common.config.ConfigResource.Type
Move Method	org.apache.kafka.raft.KafkaRaftClient::maybeFireLeaderChange():void 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::endOffset():org.apache.kafka.raft.OffsetAndEpoch 	 org.apache.kafka.raft.ReplicatedLog
Move Method	org.apache.kafka.raft.KafkaRaftClient::resetConnections():void 	 org.apache.kafka.raft.RequestManager
Move Method	org.apache.kafka.raft.KafkaRaftClient::maybeTransitionToLeader(org.apache.kafka.raft.CandidateState, long):boolean 	 org.apache.kafka.raft.CandidateState
Move Method	org.apache.kafka.raft.KafkaRaftClient::transitionToCandidate(long):void 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::transitionToUnattached(int):void 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::transitionToResigned(java.util.List<java.lang.Integer>):void 	 org.apache.kafka.raft.internals.FuturePurgatory
Move Method	org.apache.kafka.raft.KafkaRaftClient::transitionToVoted(int, int):void 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::onBecomeFollower(long):void 	 org.apache.kafka.raft.internals.FuturePurgatory
Move Method	org.apache.kafka.raft.KafkaRaftClient::transitionToFollower(int, int, long):void 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::buildVoteResponse(org.apache.kafka.common.protocol.Errors, boolean):org.apache.kafka.raft.VoteResponseData 	 org.apache.kafka.raft.ReplicatedLog
Move Method	org.apache.kafka.raft.KafkaRaftClient::binaryExponentialElectionBackoffMs(int):int 	 org.apache.kafka.raft.RaftConfig
Move Method	org.apache.kafka.raft.KafkaRaftClient::strictExponentialElectionBackoffMs(int, int):int 	 org.apache.kafka.raft.RaftConfig
Move Method	org.apache.kafka.raft.KafkaRaftClient::buildBeginQuorumEpochResponse(org.apache.kafka.common.protocol.Errors):org.apache.kafka.raft.BeginQuorumEpochResponseData 	 org.apache.kafka.raft.ReplicatedLog
Move Method	org.apache.kafka.raft.KafkaRaftClient::buildEndQuorumEpochResponse(org.apache.kafka.common.protocol.Errors):org.apache.kafka.raft.EndQuorumEpochResponseData 	 org.apache.kafka.raft.ReplicatedLog
Move Method	org.apache.kafka.raft.KafkaRaftClient::hasConsistentLeader(int, java.util.OptionalInt):boolean 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::maybeHandleCommonResponse(org.apache.kafka.common.protocol.Errors, java.util.OptionalInt, int, long):java.util.Optional<java.lang.Boolean> 	 org.apache.kafka.common.protocol.Errors
Move Method	org.apache.kafka.raft.KafkaRaftClient::maybeTransition(java.util.OptionalInt, int, long):void 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::handleResponse(org.apache.kafka.raft.RaftResponse.Inbound, long):void 	 org.apache.kafka.raft.RequestManager.ConnectionState
Move Method	org.apache.kafka.raft.KafkaRaftClient::validateVoterOnlyRequest(int, int):java.util.Optional<org.apache.kafka.common.protocol.Errors> 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::validateLeaderOnlyRequest(int):java.util.Optional<org.apache.kafka.common.protocol.Errors> 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::buildEndQuorumEpochRequest(org.apache.kafka.raft.ResignedState):org.apache.kafka.raft.EndQuorumEpochRequestData 	 org.apache.kafka.raft.ResignedState
Move Method	org.apache.kafka.raft.KafkaRaftClient::buildBeginQuorumEpochRequest():org.apache.kafka.raft.BeginQuorumEpochRequestData 	 org.apache.kafka.raft.ReplicatedLog
Move Method	org.apache.kafka.raft.KafkaRaftClient::buildVoteRequest():org.apache.kafka.raft.VoteRequestData 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::maybeSendAnyVoterFetch(long):long 	 org.apache.kafka.raft.RequestManager
Move Method	org.apache.kafka.raft.KafkaRaftClient::isRunning():boolean 	 org.apache.kafka.raft.KafkaRaftClient.GracefulShutdown
Move Method	org.apache.kafka.raft.KafkaRaftClient::isShuttingDown():boolean 	 org.apache.kafka.raft.KafkaRaftClient.GracefulShutdown
Move Method	org.apache.kafka.raft.KafkaRaftClient::pollResigned(long):long 	 org.apache.kafka.raft.ResignedState
Move Method	org.apache.kafka.raft.KafkaRaftClient::maybeSendVoteRequests(org.apache.kafka.raft.CandidateState, long):long 	 org.apache.kafka.raft.CandidateState
Move Method	org.apache.kafka.raft.KafkaRaftClient::pollFollowerAsObserver(org.apache.kafka.raft.FollowerState, long):long 	 org.apache.kafka.raft.RequestManager
Move Method	org.apache.kafka.raft.KafkaRaftClient::maybeSendFetchOrFetchSnapshot(org.apache.kafka.raft.FollowerState, long):long 	 org.apache.kafka.snapshot.RawSnapshotWriter
Move Method	org.apache.kafka.raft.KafkaRaftClient::pollVoted(long):long 	 org.apache.kafka.raft.KafkaRaftClient.GracefulShutdown
Move Method	org.apache.kafka.raft.KafkaRaftClient::pollUnattachedAsVoter(org.apache.kafka.raft.UnattachedState, long):long 	 org.apache.kafka.raft.UnattachedState
Move Method	org.apache.kafka.raft.KafkaRaftClient::pollUnattachedAsObserver(org.apache.kafka.raft.UnattachedState, long):long 	 org.apache.kafka.raft.UnattachedState
Move Method	org.apache.kafka.raft.KafkaRaftClient::pollCurrentState(long):long 	 org.apache.kafka.raft.QuorumState
Move Method	org.apache.kafka.raft.KafkaRaftClient::maybeCompleteShutdown(long):boolean 	 org.apache.kafka.raft.KafkaRaftClient.GracefulShutdown
Move Method	org.apache.kafka.raft.KafkaRaftClient::wakeup():void 	 org.apache.kafka.raft.RaftMessageQueue
Move Method	org.apache.kafka.raft.KafkaRaftClient::handle(org.apache.kafka.raft.RaftRequest.Inbound):void 	 org.apache.kafka.raft.RaftMessageQueue
Move Method	org.apache.kafka.raft.KafkaRaftClient::poll():void 	 org.apache.kafka.common.utils.Time
Move Method	org.apache.kafka.raft.KafkaRaftClient.GracefulShutdown::update(long):void 	 org.apache.kafka.common.utils.Timer
Move Method	org.apache.kafka.raft.KafkaRaftClient.GracefulShutdown::hasTimedOut():boolean 	 org.apache.kafka.common.utils.Timer
Move Method	org.apache.kafka.raft.KafkaRaftClient.GracefulShutdown::remainingTimeMs():long 	 org.apache.kafka.common.utils.Timer
Move Method	org.apache.kafka.raft.KafkaRaftClient.Registration::unregister(org.apache.kafka.raft.RaftClient.Listener<T>):org.apache.kafka.raft.KafkaRaftClient.Registration<T> 	 org.apache.kafka.raft.KafkaRaftClient.Registration.Ops
Move Method	org.apache.kafka.raft.KafkaRaftClient.ListenerContext::shouldFireLeaderChange(org.apache.kafka.raft.LeaderAndEpoch):boolean 	 org.apache.kafka.raft.LeaderAndEpoch
Move Method	org.apache.kafka.streams.processor.internals.ProcessorNode::close():void 	 org.apache.kafka.streams.processor.internals.InternalProcessorContext
Move Method	org.apache.kafka.streams.KafkaStreams::setUncaughtExceptionHandler(org.apache.kafka.streams.errors.StreamsUncaughtExceptionHandler):void 	 org.apache.kafka.streams.processor.internals.GlobalStreamThread
Move Method	org.apache.kafka.streams.KafkaStreams::setGlobalStateRestoreListener(org.apache.kafka.streams.processor.StateRestoreListener):void 	 org.apache.kafka.streams.KafkaStreams.DelegatingStateRestoreListener
Move Method	org.apache.kafka.streams.KafkaStreams::setStandbyUpdateListener(org.apache.kafka.streams.processor.StandbyUpdateListener):void 	 org.apache.kafka.streams.KafkaStreams.DelegatingStandbyUpdateListener
Move Method	org.apache.kafka.streams.KafkaStreams::metrics():java.util.Map<org.apache.kafka.common.MetricName,? extends org.apache.kafka.common.Metric> 	 org.apache.kafka.streams.processor.internals.StreamThread
Move Method	org.apache.kafka.streams.KafkaStreams::getMetrics(org.apache.kafka.streams.StreamsConfig, org.apache.kafka.common.utils.Time, java.lang.String):org.apache.kafka.common.metrics.Metrics 	 org.apache.kafka.common.metrics.MetricConfig
Move Method	org.apache.kafka.streams.KafkaStreams::getNextThreadIndex():int 	 org.apache.kafka.streams.processor.internals.StreamThread
Move Method	org.apache.kafka.streams.KafkaStreams::getCacheSizePerThread(int):long 	 org.apache.kafka.streams.processor.internals.TopologyMetadata
Move Method	org.apache.kafka.streams.KafkaStreams::resizeThreadCache(long):void 	 org.apache.kafka.streams.processor.internals.GlobalStreamThread
Move Method	org.apache.kafka.streams.KafkaStreams::maybeCreateRocksDBMetricsRecordingService(java.lang.String, org.apache.kafka.streams.StreamsConfig):java.util.concurrent.ScheduledExecutorService 	 org.apache.kafka.common.config.AbstractConfig
Move Method	org.apache.kafka.streams.KafkaStreams::parseHostInfo(java.lang.String):org.apache.kafka.streams.state.HostInfo 	 org.apache.kafka.streams.state.HostInfo
Move Method	org.apache.kafka.streams.KafkaStreams::cleanUp():void 	 org.apache.kafka.streams.processor.internals.StateDirectory
Move Method	org.apache.kafka.streams.KafkaStreams::allMetadata():java.util.Collection<org.apache.kafka.streams.state.StreamsMetadata> 	 org.apache.kafka.streams.StreamsMetadata
Move Method	org.apache.kafka.streams.KafkaStreams::metadataForAllStreamsClients():java.util.Collection<org.apache.kafka.streams.StreamsMetadata> 	 org.apache.kafka.streams.processor.internals.StreamsMetadataState
Move Method	org.apache.kafka.streams.KafkaStreams::allMetadataForStore(java.lang.String):java.util.Collection<org.apache.kafka.streams.state.StreamsMetadata> 	 org.apache.kafka.streams.StreamsMetadata
Move Method	org.apache.kafka.streams.KafkaStreams::streamsMetadataForStore(java.lang.String):java.util.Collection<org.apache.kafka.streams.StreamsMetadata> 	 org.apache.kafka.streams.processor.internals.StreamsMetadataState
Move Method	org.apache.kafka.streams.KafkaStreams::queryMetadataForKey(java.lang.String, K, org.apache.kafka.common.serialization.Serializer<K>):org.apache.kafka.streams.KeyQueryMetadata 	 org.apache.kafka.streams.processor.internals.StreamsMetadataState
Move Method	org.apache.kafka.streams.KafkaStreams::queryMetadataForKey(java.lang.String, K, org.apache.kafka.streams.processor.StreamPartitioner<? super K,?>):org.apache.kafka.streams.KeyQueryMetadata 	 org.apache.kafka.streams.processor.internals.StreamsMetadataState
Move Method	org.apache.kafka.streams.KafkaStreams::store(org.apache.kafka.streams.StoreQueryParameters<T>):T 	 org.apache.kafka.streams.processor.internals.TopologyMetadata
Move Method	org.apache.kafka.streams.KafkaStreams::pause():void 	 org.apache.kafka.streams.processor.internals.TopologyMetadata
Move Method	org.apache.kafka.streams.KafkaStreams::isPaused():boolean 	 org.apache.kafka.streams.processor.internals.TopologyMetadata
Move Method	org.apache.kafka.streams.KafkaStreams::resume():void 	 org.apache.kafka.streams.processor.internals.TopologyMetadata
Move Method	org.apache.kafka.streams.KafkaStreams::getOrThrowException(org.apache.kafka.common.KafkaFuture<T>, long, java.util.function.Supplier<java.lang.String>):T 	 org.apache.kafka.common.KafkaFuture
Move Method	org.apache.kafka.streams.KafkaStreams::localThreadsMetadata():java.util.Set<org.apache.kafka.streams.processor.ThreadMetadata> 	 org.apache.kafka.streams.TaskMetadata
Move Method	org.apache.kafka.streams.KafkaStreams::metadataForLocalThreads():java.util.Set<org.apache.kafka.streams.ThreadMetadata> 	 org.apache.kafka.streams.processor.internals.StreamThread
Move Method	org.apache.kafka.streams.KafkaStreams::query(org.apache.kafka.streams.query.StateQueryRequest<R>):org.apache.kafka.streams.query.StateQueryResult<R> 	 org.apache.kafka.streams.processor.internals.TopologyMetadata
Move Method	org.apache.kafka.trogdor.common.Node.Util::getIntConfig(org.apache.kafka.trogdor.common.Node, java.lang.String, int):int 	 org.apache.kafka.trogdor.common.Node
Move Method	org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker::devicesForSpec(org.apache.kafka.trogdor.fault.DegradedNetworkFaultSpec.NodeDegradeSpec):java.util.Set<java.lang.String> 	 org.apache.kafka.trogdor.fault.DegradedNetworkFaultSpec.NodeDegradeSpec
Move Method	org.apache.kafka.trogdor.fault.DegradedNetworkFaultWorker::disableTrafficControl(org.apache.kafka.trogdor.common.Platform, java.lang.String):void 	 org.apache.kafka.trogdor.common.Platform
Move Method	org.apache.kafka.trogdor.fault.NetworkPartitionFaultWorker::runIptablesCommands(org.apache.kafka.trogdor.common.Platform, java.lang.String):void 	 org.apache.kafka.trogdor.common.Platform
Move Method	org.apache.kafka.trogdor.workload.ConfigurableProducerWorker.SendRecords::recordDuration(long):void 	 org.apache.kafka.trogdor.workload.Histogram
Move Method	org.apache.kafka.trogdor.workload.ConnectionStressWorker.Stressor::fromSpec(org.apache.kafka.trogdor.workload.ConnectionStressSpec):org.apache.kafka.trogdor.workload.ConnectionStressWorker.Stressor 	 org.apache.kafka.trogdor.workload.ConnectionStressSpec
Move Method	org.apache.kafka.trogdor.workload.ConsumeBenchWorker.Prepare::populatePartitionsByTopic(org.apache.kafka.clients.consumer.KafkaConsumer<byte[],byte[]>, java.util.Map<java.lang.String,java.util.List<org.apache.kafka.common.TopicPartition>>):java.util.Map<java.lang.String,java.util.List<org.apache.kafka.common.TopicPartition>> 	 org.apache.kafka.common.PartitionInfo
Move Method	org.apache.kafka.trogdor.workload.ConsumeBenchWorker.ThreadSafeConsumer::assign(java.util.Collection<org.apache.kafka.common.TopicPartition>):void 	 org.apache.kafka.clients.consumer.KafkaConsumer
Move Method	org.apache.kafka.trogdor.workload.ConsumeBenchWorker.ThreadSafeConsumer::assignedPartitions():java.util.List<java.lang.String> 	 org.apache.kafka.clients.consumer.KafkaConsumer
Move Method	org.apache.kafka.trogdor.workload.ExternalCommandWorker::startProcess():java.lang.Process 	 org.apache.kafka.trogdor.workload.ExternalCommandSpec
Move Method	org.apache.kafka.trogdor.workload.ExternalCommandWorker::readObject(java.lang.String):org.apache.kafka.trogdor.workload.JsonNode 	 org.apache.kafka.trogdor.common.JsonUtil
Move Method	org.apache.kafka.trogdor.workload.ProduceBenchWorker.SendRecords::recordDuration(long):void 	 org.apache.kafka.trogdor.workload.Histogram