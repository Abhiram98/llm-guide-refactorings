Refactoring Type	Source Method	Target Class
Move Method	jdk.graal.compiler.truffle.test.nodes.explosion.UnrollingTestNode::countBlackholeNodes(jdk.graal.compiler.nodes.StructuredGraph, java.lang.String):int 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.core.common.cfg.AbstractControlFlowGraph::dominates(jdk.graal.compiler.core.common.cfg.BasicBlock<?>, jdk.graal.compiler.core.common.cfg.BasicBlock<?>):boolean 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.core.common.cfg.AbstractControlFlowGraph::commonDominator(jdk.graal.compiler.core.common.cfg.BasicBlock<?>, jdk.graal.compiler.core.common.cfg.BasicBlock<?>):jdk.graal.compiler.core.common.cfg.BasicBlock<?> 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.core.common.cfg.AbstractControlFlowGraph::commonDominatorHelper(jdk.graal.compiler.core.common.cfg.BasicBlock<?>, jdk.graal.compiler.core.common.cfg.BasicBlock<?>):jdk.graal.compiler.core.common.cfg.BasicBlock<?> 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.graph.Node::inputs():jdk.graal.compiler.graph.iterators.NodeIterable<jdk.graal.compiler.graph.Node> 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::inputPositions():java.lang.Iterable<jdk.graal.compiler.graph.Position> 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::successors():jdk.graal.compiler.graph.iterators.NodeIterable<jdk.graal.compiler.graph.Node> 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::successorPositions():java.lang.Iterable<jdk.graal.compiler.graph.Position> 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::modCount():int 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.graph.Node::incModCount():void 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.graph.Node::usageModCount():int 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.graph.Node::incUsageModCount():void 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.graph.Node::initialize(jdk.graal.compiler.graph.Graph):void 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::isAllowedUsageType(jdk.graal.compiler.nodeinfo.InputType):boolean 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::replaceAtUsagePos(jdk.graal.compiler.graph.Node, jdk.graal.compiler.graph.Node, jdk.graal.compiler.graph.Position):void 	 jdk.graal.compiler.graph.Position
Move Method	jdk.graal.compiler.graph.Node::maybeNotifyInputChanged(jdk.graal.compiler.graph.Node):void 	 jdk.graal.compiler.graph.Graph.NodeEventListener
Move Method	jdk.graal.compiler.graph.Node::maybeNotifyZeroUsages(jdk.graal.compiler.graph.Node):void 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.graph.Node::replaceAllInputs(jdk.graal.compiler.graph.Node, jdk.graal.compiler.graph.Node):void 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::clearInputs():void 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::copyOrClearEdgesForClone(jdk.graal.compiler.graph.Node, jdk.graal.compiler.graph.Edges.Type, java.util.EnumSet<jdk.graal.compiler.graph.Edges.Type>):void 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::verifyInputs():boolean 	 jdk.graal.compiler.graph.InputEdges
Move Method	jdk.graal.compiler.graph.Node::valueEquals(jdk.graal.compiler.graph.Node):boolean 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::dataFlowEquals(jdk.graal.compiler.graph.Node):boolean 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::dynamicNodeSizeEstimate():jdk.graal.compiler.nodeinfo.NodeSize 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.graph.Node::estimatedNodeCycles():jdk.graal.compiler.nodeinfo.NodeCycles 	 jdk.graal.compiler.graph.NodeClass
Move Method	jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration::isJumpingToAfterElseBranch(jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData):boolean 	 jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.scopes.Scope
Move Method	jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration::isLastBlockInThenBranch(jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData):boolean 	 jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData
Move Method	jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration::isLastBlockInSwitchArm(jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData):boolean 	 jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData
Move Method	jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration::isJumpingOverCatchBlock(jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData):boolean 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration::isNormalLoopExit(jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData):boolean 	 jdk.graal.compiler.nodes.cfg.HIRBlock
Move Method	jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration::getSortedSetByLabeledBlockEnd():java.util.SortedSet<jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlock> 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration::commonDominatorFor(jdk.graal.compiler.nodes.cfg.HIRBlock, boolean):jdk.graal.compiler.nodes.cfg.HIRBlock 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration::generateLabeledBlocks():void 	 jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData
Move Method	jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode::compress(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.CompressEncoding):jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode 	 jdk.graal.compiler.nodes.CompressionNode.CompressionOp
Move Method	jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode::uncompress(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.CompressEncoding):jdk.graal.compiler.nodes.CompressionNode 	 jdk.graal.compiler.nodes.CompressionNode.CompressionOp
Move Method	jdk.graal.compiler.hotspot.replacements.CallSiteTargetNode::tryFold(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.hotspot.replacements.MetaAccessProvider, jdk.graal.compiler.hotspot.replacements.Assumptions):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.hotspot.replacements.ClassGetHubNode::intrinsify(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.nodes.spi.CoreProviders
Move Method	jdk.graal.compiler.hotspot.replacements.ClassGetHubNode::canonical(jdk.graal.compiler.hotspot.replacements.ClassGetHubNode, jdk.graal.compiler.hotspot.replacements.MetaAccessProvider, jdk.graal.compiler.hotspot.replacements.ConstantReflectionProvider, boolean, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.hotspot.nodes.type.KlassPointerStamp
Move Method	jdk.graal.compiler.hotspot.replacements.ClassGetHubNode::piCastNonNull(jdk.graal.compiler.hotspot.word.KlassPointer, jdk.graal.compiler.nodes.extended.GuardingNode):jdk.graal.compiler.hotspot.word.KlassPointer 	 jdk.graal.compiler.nodes.PiNode.IntrinsifyOp
Move Method	jdk.graal.compiler.hotspot.replacements.KlassLayoutHelperNode::intrinsify(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.hotspot.GraalHotSpotVMConfig, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.nodes.spi.CoreProviders
Move Method	jdk.graal.compiler.hotspot.replacements.KlassLayoutHelperNode::canonical(jdk.graal.compiler.hotspot.replacements.KlassLayoutHelperNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.hotspot.replacements.ConstantReflectionProvider, int):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.lir.amd64.AMD64Move::reg2reg(jdk.graal.compiler.lir.amd64.AMD64Kind, jdk.graal.compiler.asm.amd64.AMD64MacroAssembler, jdk.graal.compiler.lir.amd64.Value, jdk.graal.compiler.lir.amd64.Value):void 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.lir.amd64.AMD64Move::reg2stack(jdk.graal.compiler.lir.amd64.AMD64Kind, jdk.graal.compiler.lir.asm.CompilationResultBuilder, jdk.graal.compiler.asm.amd64.AMD64MacroAssembler, jdk.graal.compiler.lir.amd64.Value, jdk.graal.compiler.lir.amd64.Register):void 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.lir.amd64.AMD64Move::stack2reg(jdk.graal.compiler.lir.amd64.AMD64Kind, jdk.graal.compiler.lir.asm.CompilationResultBuilder, jdk.graal.compiler.asm.amd64.AMD64MacroAssembler, jdk.graal.compiler.lir.amd64.Register, jdk.graal.compiler.lir.amd64.Value):void 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.lir.amd64.AMD64Move::const2reg(jdk.graal.compiler.lir.asm.CompilationResultBuilder, jdk.graal.compiler.asm.amd64.AMD64MacroAssembler, jdk.graal.compiler.lir.amd64.Register, jdk.graal.compiler.lir.amd64.JavaConstant, jdk.graal.compiler.lir.amd64.AMD64Kind):void 	 jdk.graal.compiler.lir.asm.CompilationResultBuilder
Move Method	jdk.graal.compiler.lir.amd64.AMD64Move::const2stack(jdk.graal.compiler.lir.asm.CompilationResultBuilder, jdk.graal.compiler.asm.amd64.AMD64MacroAssembler, jdk.graal.compiler.lir.amd64.Value, jdk.graal.compiler.lir.amd64.JavaConstant):void 	 jdk.graal.compiler.lir.asm.CompilationResultBuilder
Move Method	jdk.graal.compiler.lir.amd64.AMD64Move.PointerCompressionOp::hasBase(jdk.graal.compiler.core.common.CompressEncoding):boolean 	 jdk.graal.compiler.core.common.CompressEncoding
Move Method	jdk.graal.compiler.lir.amd64.AMD64Move.PointerCompressionOp::emitUncompressWithBaseRegister(jdk.graal.compiler.asm.amd64.AMD64MacroAssembler, jdk.graal.compiler.lir.amd64.Register, jdk.graal.compiler.lir.amd64.Register, jdk.graal.compiler.lir.amd64.Register, int, boolean):void 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.lir.amd64.AMD64Move.UncompressPointerOp::emitUncompressCode(jdk.graal.compiler.asm.amd64.AMD64MacroAssembler, jdk.graal.compiler.lir.amd64.Register, int, jdk.graal.compiler.lir.amd64.Register, boolean):void 	 jdk.graal.compiler.asm.Assembler
Move Method	jdk.graal.compiler.nodes.BeginNode::begin(jdk.graal.compiler.nodes.FixedNode):jdk.graal.compiler.nodes.AbstractBeginNode 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.ConstantNode::createPrimitive(jdk.graal.compiler.nodes.JavaConstant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.nodes.ConstantNode::getConstantNodes(jdk.graal.compiler.nodes.StructuredGraph):jdk.graal.compiler.graph.iterators.NodeIterable<jdk.graal.compiler.nodes.ConstantNode> 	 jdk.graal.compiler.graph.iterators.NodeIterable
Move Method	jdk.graal.compiler.nodes.ConstantNode::forConstant(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.Constant, jdk.graal.compiler.nodes.MetaAccessProvider, jdk.graal.compiler.nodes.StructuredGraph):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.core.common.type.Stamp
Move Method	jdk.graal.compiler.nodes.ConstantNode::forConstant(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.Constant, int, boolean, jdk.graal.compiler.nodes.MetaAccessProvider):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.core.common.type.Stamp
Move Method	jdk.graal.compiler.nodes.ConstantNode::forConstant(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.Constant, jdk.graal.compiler.nodes.MetaAccessProvider):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.core.common.type.Stamp
Move Method	jdk.graal.compiler.nodes.ConstantNode::forPrimitive(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.JavaConstant, jdk.graal.compiler.nodes.StructuredGraph):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.ConstantNode::forPrimitive(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.Constant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.ConstantNode::unique(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ConstantNode):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.ConstantNode::forIntegerBits(int, jdk.graal.compiler.nodes.JavaConstant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.core.common.type.IntegerStamp
Move Method	jdk.graal.compiler.nodes.ConstantNode::forIntegerKind(jdk.graal.compiler.nodes.JavaKind, long):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.DynamicPiNode::findSynonym(jdk.graal.compiler.nodes.Assumptions, jdk.graal.compiler.nodes.ConstantReflectionProvider, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.extended.GuardingNode, jdk.graal.compiler.nodes.ValueNode, boolean, boolean):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.nodes.GraphDecoder::createInitialLoopScope(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.FixedWithNextNode):jdk.graal.compiler.nodes.GraphDecoder.LoopScope 	 jdk.graal.compiler.nodes.FixedWithNextNode
Move Method	jdk.graal.compiler.nodes.GraphDecoder::decode(jdk.graal.compiler.nodes.GraphDecoder.LoopScope):void 	 jdk.graal.compiler.nodes.GraphDecoder.MethodScope
Move Method	jdk.graal.compiler.nodes.GraphDecoder::propagateCreatedNodes(jdk.graal.compiler.nodes.GraphDecoder.LoopScope):void 	 jdk.graal.compiler.nodes.GraphDecoder.LoopScope
Move Method	jdk.graal.compiler.nodes.GraphDecoder::handleInvoke(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, jdk.graal.compiler.nodes.GraphDecoder.InvokeData):jdk.graal.compiler.nodes.GraphDecoder.LoopScope 	 jdk.graal.compiler.nodes.GraphDecoder.InvokeData
Move Method	jdk.graal.compiler.nodes.GraphDecoder::handleProxyNodes(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, jdk.graal.compiler.nodes.LoopExitNode):void 	 jdk.graal.compiler.nodes.GraphDecoder.LoopScope
Move Method	jdk.graal.compiler.nodes.GraphDecoder::handlePhiFunctions(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, jdk.graal.compiler.nodes.AbstractEndNode, jdk.graal.compiler.nodes.AbstractMergeNode):void 	 jdk.graal.compiler.nodes.AbstractMergeNode
Move Method	jdk.graal.compiler.nodes.GraphDecoder::readProperties(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.graph.Node):void 	 jdk.graal.compiler.nodes.GraphDecoder.MethodScope
Move Method	jdk.graal.compiler.nodes.GraphDecoder::makeFixedNodeInputs(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, jdk.graal.compiler.graph.Node):void 	 jdk.graal.compiler.graph.Edges
Move Method	jdk.graal.compiler.nodes.GraphDecoder::makeFloatingNodeInputs(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, jdk.graal.compiler.graph.Node):void 	 jdk.graal.compiler.graph.Edges
Move Method	jdk.graal.compiler.nodes.GraphDecoder::getNodeClass(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, int):jdk.graal.compiler.graph.NodeClass<?> 	 jdk.graal.compiler.nodes.GraphDecoder.MethodScope
Move Method	jdk.graal.compiler.nodes.GraphDecoder::makeStubNode(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, int):jdk.graal.compiler.nodes.FixedNode 	 jdk.graal.compiler.nodes.GraphDecoder.MethodScope
Move Method	jdk.graal.compiler.nodes.GraphDecoder::skipDirectEdge(jdk.graal.compiler.graph.Node, jdk.graal.compiler.graph.Edges, int):boolean 	 jdk.graal.compiler.graph.Edges
Move Method	jdk.graal.compiler.nodes.GraphDecoder::lookupNode(jdk.graal.compiler.nodes.GraphDecoder.LoopScope, int):jdk.graal.compiler.graph.Node 	 jdk.graal.compiler.nodes.GraphDecoder.LoopScope
Move Method	jdk.graal.compiler.nodes.GraphDecoder::registerNode(jdk.graal.compiler.nodes.GraphDecoder.LoopScope, int, jdk.graal.compiler.graph.Node, boolean, boolean):void 	 jdk.graal.compiler.nodes.GraphDecoder.LoopScope
Move Method	jdk.graal.compiler.nodes.GraphDecoder::readOrderId(jdk.graal.compiler.nodes.GraphDecoder.MethodScope):int 	 jdk.graal.compiler.nodes.GraphDecoder.MethodScope
Move Method	jdk.graal.compiler.nodes.GraphDecoder::readObject(jdk.graal.compiler.nodes.GraphDecoder.MethodScope):java.lang.Object 	 jdk.graal.compiler.nodes.GraphDecoder.MethodScope
Move Method	jdk.graal.compiler.nodes.LoopDetector::asInt(jdk.graal.compiler.nodes.ValueNode):int 	 jdk.graal.compiler.nodes.ValueNode
Move Method	jdk.graal.compiler.nodes.LoopDetector::bailout(java.lang.String):java.lang.RuntimeException 	 jdk.graal.compiler.nodes.graphbuilderconf.LoopExplosionPlugin.LoopExplosionKind
Move Method	jdk.graal.compiler.nodes.LoopDetector::createSwitch(jdk.graal.compiler.nodes.ValuePhiNode, java.util.SortedMap<java.lang.Integer,jdk.graal.compiler.nodes.AbstractBeginNode>, jdk.graal.compiler.nodes.AbstractBeginNode):jdk.graal.compiler.nodes.extended.IntegerSwitchNode 	 jdk.graal.compiler.nodes.ProfileData.SwitchProbabilityData
Move Method	jdk.graal.compiler.nodes.GuardNode::willDeoptUnconditionally(jdk.graal.compiler.nodes.LogicNode, boolean):boolean 	 jdk.graal.compiler.nodes.LogicConstantNode
Move Method	jdk.graal.compiler.nodes.IfNode::getTrueSuccessorProbability():double 	 jdk.graal.compiler.nodes.ProfileData.BranchProbabilityData
Move Method	jdk.graal.compiler.nodes.IfNode::isWorthPerformingSplit(jdk.graal.compiler.nodes.LogicNode, jdk.graal.compiler.nodes.LogicNode):boolean 	 jdk.graal.compiler.nodes.LogicNegationNode
Move Method	jdk.graal.compiler.nodes.IfNode::replaceNodesInBranch(jdk.graal.compiler.nodes.EconomicMap<jdk.graal.compiler.graph.Node,jdk.graal.compiler.nodes.IfNode.NodeColor>, jdk.graal.compiler.nodes.IfNode.NodeColor, jdk.graal.compiler.nodes.ValuePhiNode, jdk.graal.compiler.nodes.ValueNode):void 	 jdk.graal.compiler.nodes.PhiNode
Move Method	jdk.graal.compiler.nodes.IfNode::conditionUses(jdk.graal.compiler.nodes.LogicNode, jdk.graal.compiler.nodes.PhiNode, jdk.graal.compiler.nodes.EconomicMap<jdk.graal.compiler.graph.Node,jdk.graal.compiler.nodes.IfNode.NodeColor>):boolean 	 jdk.graal.compiler.nodes.GraphState.GuardsStage
Move Method	jdk.graal.compiler.nodes.IfNode::computeCondition(jdk.graal.compiler.nodes.spi.SimplifierTool, jdk.graal.compiler.nodes.LogicNode, jdk.graal.compiler.nodes.PhiNode, jdk.graal.compiler.graph.Node):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.StructuredGraph
Move Method	jdk.graal.compiler.nodes.IfNode::cleanupMerge(jdk.graal.compiler.nodes.MergeNode):void 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.nodes.IfNode::insertMerge(jdk.graal.compiler.nodes.AbstractBeginNode, jdk.graal.compiler.nodes.ValuePhiNode, jdk.graal.compiler.nodes.FrameState, jdk.graal.compiler.nodes.spi.SimplifierTool):jdk.graal.compiler.nodes.MergeNode 	 jdk.graal.compiler.nodes.FrameState
Move Method	jdk.graal.compiler.nodes.IfNode::canMergeRangeChecks(jdk.graal.compiler.nodes.LogicNode, jdk.graal.compiler.nodes.LogicNode, boolean):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.type.IntegerStamp
Move Method	jdk.graal.compiler.nodes.IfNode::mergeShortCircuitOrRangeCheck(jdk.graal.compiler.nodes.IfNode):boolean 	 jdk.graal.compiler.debug.DebugContext
Move Method	jdk.graal.compiler.nodes.IfNode::isUnboxedFrom(jdk.graal.compiler.nodes.MetaAccessProvider, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.nodes.PiNode
Move Method	jdk.graal.compiler.nodes.IfNode::sameDestination(jdk.graal.compiler.nodes.AbstractBeginNode, jdk.graal.compiler.nodes.AbstractBeginNode):boolean 	 jdk.graal.compiler.nodes.PhiNode
Move Method	jdk.graal.compiler.nodes.IfNode::prepareForSwap(jdk.graal.compiler.nodes.spi.SimplifierTool, jdk.graal.compiler.nodes.LogicNode, jdk.graal.compiler.nodes.LogicNode):boolean 	 jdk.graal.compiler.debug.DebugContext
Move Method	jdk.graal.compiler.nodes.IfNode::valuesDistinct(jdk.graal.compiler.nodes.spi.SimplifierTool, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.core.common.type.Stamp
Move Method	jdk.graal.compiler.nodes.IfNode::expectedConstantForNormalize(jdk.graal.compiler.core.common.calc.Condition):long 	 jdk.graal.compiler.core.common.calc.Condition
Move Method	jdk.graal.compiler.nodes.IfNode::propagateInjectedProfile(jdk.graal.compiler.nodes.ProfileData.BranchProbabilityData, jdk.graal.compiler.nodes.EndNode, jdk.graal.compiler.nodes.EndNode):void 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.nodes.IfNode::constantValues(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.AbstractMergeNode, boolean):jdk.graal.compiler.nodes.Constant[] 	 jdk.graal.compiler.nodes.AbstractMergeNode
Move Method	jdk.graal.compiler.nodes.IfNode::successorWillBeEliminated(jdk.graal.compiler.nodes.AbstractBeginNode):boolean 	 jdk.graal.compiler.nodes.LogicConstantNode
Move Method	jdk.graal.compiler.nodes.InvokeNode::estimatedNodeCycles(jdk.graal.compiler.nodes.CallTargetNode):jdk.graal.compiler.nodeinfo.NodeCycles 	 jdk.graal.compiler.nodes.CallTargetNode
Move Method	jdk.graal.compiler.nodes.InvokeNode::estimatedNodeSize(jdk.graal.compiler.nodes.CallTargetNode):jdk.graal.compiler.nodeinfo.NodeSize 	 jdk.graal.compiler.nodes.CallTargetNode
Move Method	jdk.graal.compiler.nodes.LogicConstantNode::forBoolean(boolean, jdk.graal.compiler.graph.Graph):jdk.graal.compiler.nodes.LogicConstantNode 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.LogicNegationNode::findSynonym(jdk.graal.compiler.nodes.LogicNode):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.LogicConstantNode
Move Method	jdk.graal.compiler.nodes.LogicNode::and(jdk.graal.compiler.nodes.LogicNode, boolean, jdk.graal.compiler.nodes.LogicNode, boolean, jdk.graal.compiler.nodes.ProfileData.BranchProbabilityData):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.LogicNode::or(jdk.graal.compiler.nodes.LogicNode, boolean, jdk.graal.compiler.nodes.LogicNode, boolean, jdk.graal.compiler.nodes.ProfileData.BranchProbabilityData):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.LoopBeginNode::getSelfIncrements(jdk.graal.compiler.nodes.PhiNode):int[] 	 jdk.graal.compiler.nodes.PhiNode
Move Method	jdk.graal.compiler.nodes.PiNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.AbstractPointerStamp
Move Method	jdk.graal.compiler.nodes.PiNode::intrinsify(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.PiNode.IntrinsifyOp):boolean 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.nodes.PiNode::intrinsify(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ResolvedJavaType, boolean, boolean, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.core.common.type.TypeReference
Move Method	jdk.graal.compiler.nodes.PiNode::canonical(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.extended.GuardingNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ValueNodeInterface
Move Method	jdk.graal.compiler.nodes.PiNode::piCastPositive(int, jdk.graal.compiler.nodes.extended.GuardingNode):int 	 jdk.graal.compiler.nodes.PiNode.IntrinsifyOp
Move Method	jdk.graal.compiler.nodes.PiNode::piCastNonNull(java.lang.Object, jdk.graal.compiler.nodes.extended.GuardingNode):java.lang.Object 	 jdk.graal.compiler.nodes.PiNode.IntrinsifyOp
Move Method	jdk.graal.compiler.nodes.PiNode::piCastNonNullClass(java.lang.Class<?>, jdk.graal.compiler.nodes.extended.GuardingNode):java.lang.Class<?> 	 jdk.graal.compiler.nodes.PiNode.IntrinsifyOp
Move Method	jdk.graal.compiler.nodes.PiNode::piCastNonNanFloat(float, jdk.graal.compiler.nodes.extended.GuardingNode):float 	 jdk.graal.compiler.nodes.PiNode.IntrinsifyOp
Move Method	jdk.graal.compiler.nodes.PiNode::piCastNonNanDouble(double, jdk.graal.compiler.nodes.extended.GuardingNode):double 	 jdk.graal.compiler.nodes.PiNode.IntrinsifyOp
Move Method	jdk.graal.compiler.nodes.PiNode::guardTrySkipPi(jdk.graal.compiler.nodes.extended.GuardingNode, jdk.graal.compiler.nodes.LogicNode, boolean, jdk.graal.compiler.nodes.NodeView):boolean 	 jdk.graal.compiler.graph.iterators.NodeIterable
Move Method	jdk.graal.compiler.nodes.ProxyNode::forValue(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.LoopExitNode):jdk.graal.compiler.nodes.ValueProxyNode 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.ProxyNode::forGuard(jdk.graal.compiler.nodes.extended.GuardingNode, jdk.graal.compiler.nodes.LoopExitNode):jdk.graal.compiler.nodes.GuardProxyNode 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.ProxyNode::forMemory(jdk.graal.compiler.nodes.memory.MemoryKill, jdk.graal.compiler.nodes.LoopExitNode, jdk.graal.compiler.nodes.LocationIdentity):jdk.graal.compiler.nodes.MemoryProxyNode 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.ShortCircuitOrNode::canonicalizeNegation(jdk.graal.compiler.nodes.LogicNode, boolean, jdk.graal.compiler.nodes.LogicNode, boolean, jdk.graal.compiler.nodes.ProfileData.BranchProbabilityData):jdk.graal.compiler.nodes.ShortCircuitOrNode 	 jdk.graal.compiler.nodes.LogicNegationNode
Move Method	jdk.graal.compiler.nodes.ShortCircuitOrNode::simplifyComparisonOrdered(jdk.graal.compiler.nodes.LogicNode, jdk.graal.compiler.nodes.LogicNode):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.SimplifyingGraphDecoder::canonicalizeFixedNode(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, jdk.graal.compiler.graph.Node):jdk.graal.compiler.graph.Node 	 jdk.graal.compiler.nodes.IfNode
Move Method	jdk.graal.compiler.nodes.SimplifyingGraphDecoder::canonicalizeFixedNodeToNull(jdk.graal.compiler.nodes.FixedNode):jdk.graal.compiler.graph.Node 	 jdk.graal.compiler.nodes.ValueNode
Move Method	jdk.graal.compiler.nodes.UnaryOpLogicNode::skipThroughPisAndProxies(jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.PiNode
Move Method	jdk.graal.compiler.nodes.ValueNode::recursiveDataFlowEqualsHelper(jdk.graal.compiler.graph.Node, jdk.graal.compiler.graph.Node):boolean 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.calc.AbstractNormalizeCompareNode::tryConstantFold(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, boolean, boolean, jdk.graal.compiler.nodes.calc.JavaKind, jdk.graal.compiler.nodes.calc.ConstantReflectionProvider):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.CompareNode
Move Method	jdk.graal.compiler.nodes.calc.AddNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.AddNode::canonical(jdk.graal.compiler.nodes.calc.AddNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp.Add>, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView, boolean):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.ConditionalNode::combineStamps(jdk.graal.compiler.nodes.LogicNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.nodes.calc.MinMaxNode
Move Method	jdk.graal.compiler.nodes.calc.ConditionalNode::canonicalizeConditional(jdk.graal.compiler.nodes.LogicNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.nodes.spi.CanonicalizerTool):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.IntegerStamp
Move Method	jdk.graal.compiler.nodes.calc.ConditionalNode::findSynonym(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.LogicNegationNode
Move Method	jdk.graal.compiler.nodes.calc.FloatConvertNode::create(jdk.graal.compiler.core.common.calc.FloatConvert, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable
Move Method	jdk.graal.compiler.nodes.calc.FloatConvertNode::isLosslessIntegerToFloatingPoint(jdk.graal.compiler.core.common.type.IntegerStamp, jdk.graal.compiler.core.common.type.FloatStamp):boolean 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.calc.FloatDivNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.FloatDivNode::canonical(jdk.graal.compiler.nodes.calc.FloatDivNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp.Div>, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.IntegerConvertNode::findSynonym(jdk.graal.compiler.core.common.type.ArithmeticOpTable.IntegerConvertOp<T>, jdk.graal.compiler.nodes.ValueNode, int, int, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.IntegerConvertOp
Move Method	jdk.graal.compiler.nodes.calc.IntegerConvertNode::convert(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp, boolean, jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.NodeView, boolean):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.calc.IntegerConvertNode::convert(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp, boolean, jdk.graal.compiler.nodes.NodeView, boolean):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.calc.ZeroExtendNode::create(jdk.graal.compiler.nodes.ValueNode, int, int, jdk.graal.compiler.nodes.NodeView, boolean):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.IntegerConvertOp
Move Method	jdk.graal.compiler.nodes.calc.ZeroExtendNode::inputAlwaysPositive(jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.core.common.type.IntegerStamp
Move Method	jdk.graal.compiler.nodes.calc.ZeroExtendNode::canonical(jdk.graal.compiler.nodes.calc.ZeroExtendNode, jdk.graal.compiler.nodes.ValueNode, int, int, jdk.graal.compiler.nodes.NodeView, boolean):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.NarrowNode
Move Method	jdk.graal.compiler.nodes.calc.IntegerMulHighNode::canonical(jdk.graal.compiler.nodes.calc.IntegerMulHighNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.calc.IntegerTestNode::canonical(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.type.IntegerStamp
Move Method	jdk.graal.compiler.nodes.calc.IntegerTestNode::getSucceedingStamp(boolean, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.type.IntegerStamp
Move Method	jdk.graal.compiler.nodes.calc.IsNullNode::canonicalized(jdk.graal.compiler.nodes.calc.IsNullNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.calc.JavaConstant):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.nodes.calc.MaxNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.MinMaxNode::fromConditional(jdk.graal.compiler.nodes.calc.ConditionalNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.ConditionalNode
Move Method	jdk.graal.compiler.nodes.calc.MinMaxNode::fromConditional(jdk.graal.compiler.nodes.LogicNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.Stamp
Move Method	jdk.graal.compiler.nodes.calc.MinMaxNode::equalOrOffBy1(jdk.graal.compiler.core.common.NumUtil.Signedness, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.core.common.NumUtil
Move Method	jdk.graal.compiler.nodes.calc.MinMaxNode::maybeExtendForCompare(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.spi.LoweringProvider, jdk.graal.compiler.core.common.NumUtil.Signedness):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.IntegerConvertNode
Move Method	jdk.graal.compiler.nodes.calc.MinNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.MulNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.MulNode::canonical(jdk.graal.compiler.nodes.calc.MulNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp.Mul>, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.MulNode::canonical(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, long, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.LeftShiftNode
Move Method	jdk.graal.compiler.nodes.calc.OrNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.OrNode::canonical(jdk.graal.compiler.nodes.calc.OrNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp.Or>, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.nodes.calc.ReinterpretNode::create(jdk.graal.compiler.nodes.calc.JavaKind, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.nodes.calc.ReinterpretNode::evalConst(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.calc.SerializableConstant):jdk.graal.compiler.nodes.calc.Constant 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.ReinterpretOp
Move Method	jdk.graal.compiler.nodes.calc.ReinterpretNode::getReinterpretStamp(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.calc.ReinterpretUtils
Move Method	jdk.graal.compiler.nodes.calc.ReinterpretNode::reinterpret(jdk.graal.compiler.nodes.calc.JavaKind, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.calc.ReinterpretNode::getOp(jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.core.common.type.ArithmeticOpTable.ReinterpretOp 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable
Move Method	jdk.graal.compiler.nodes.calc.RemNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.RoundFloatToIntegerNode::roundStamp(jdk.graal.compiler.core.common.type.FloatStamp):jdk.graal.compiler.core.common.type.IntegerStamp 	 jdk.graal.compiler.core.common.type.PrimitiveStamp
Move Method	jdk.graal.compiler.nodes.calc.RoundFloatToIntegerNode::tryFold(jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp
Move Method	jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode::canonical(jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp.UShr>, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp
Move Method	jdk.graal.compiler.nodes.calc.SignedFloatingIntegerDivNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.nodes.extended.GuardingNode, boolean):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.SignedFloatingIntegerRemNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.nodes.extended.GuardingNode, boolean):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.SignedRemNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.extended.GuardingNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.SignedRemNode::canonical(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.nodes.spi.CanonicalizerTool):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.spi.CanonicalizerTool
Move Method	jdk.graal.compiler.nodes.calc.SignedRemNode::allUsagesCompareAgainstZero(jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.nodes.BinaryOpLogicNode
Move Method	jdk.graal.compiler.nodes.calc.SqrtNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable
Move Method	jdk.graal.compiler.nodes.calc.SubNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.SubNode::canonical(jdk.graal.compiler.nodes.calc.SubNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp.Sub>, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.nodes.calc.UnpackEndianHalfNode::create(jdk.graal.compiler.nodes.ValueNode, boolean, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.calc.UnsignedDivNode::canonical(jdk.graal.compiler.nodes.calc.UnsignedDivNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.extended.GuardingNode, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.calc.UnsignedMaxNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.UnsignedMinNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.UnsignedRemNode::canonical(jdk.graal.compiler.nodes.calc.UnsignedRemNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.extended.GuardingNode, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.calc.XorNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.XorNode::canonical(jdk.graal.compiler.nodes.calc.XorNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp.Xor>, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.AndNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.AndNode::eliminateRedundantBinaryArithmeticOp(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.IntegerStamp):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.IntegerStamp
Move Method	jdk.graal.compiler.nodes.calc.AndNode::canonical(jdk.graal.compiler.nodes.calc.AndNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp.And>, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::getArithmeticOpTable(jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.core.common.type.ArithmeticOpTable 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::tryConstantFold(jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<OP>, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::binaryFloatOp(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<?>):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::add(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.AddNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::add(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.AddNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::add(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::sub(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.SubNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::sub(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.SubNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::sub(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::mul(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.MulNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::mul(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.MulNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::mul(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::rem(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.RemNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::rem(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.RemNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::rem(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::and(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.AndNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::and(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.AndNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::and(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::or(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.OrNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::or(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.OrNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::or(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::xor(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.XorNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::xor(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.XorNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::xor(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::max(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.MaxNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::max(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.MaxNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::max(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::min(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.MinNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::min(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.MinNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::min(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::umax(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.UnsignedMaxNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::umax(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.UnsignedMaxNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::umax(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::umin(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.UnsignedMinNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::umin(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.UnsignedMinNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::umin(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::shl(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.LeftShiftNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::shl(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.LeftShiftNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::shl(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::shr(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.RightShiftNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::shr(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.RightShiftNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::shr(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::ushr(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::ushr(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::ushr(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::branchlessMin(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.RightShiftNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::branchlessMax(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.RightShiftNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode.ReassociateMatch::getValue(jdk.graal.compiler.nodes.calc.BinaryNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.BinaryNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode.ReassociateMatch::getOtherValue(jdk.graal.compiler.nodes.calc.BinaryNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.BinaryNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::mayReassociate(jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp<?>, jdk.graal.compiler.core.common.type.Stamp):boolean 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.BinaryOp
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::isNonExactMul(jdk.graal.compiler.graph.Node):boolean 	 jdk.graal.compiler.nodes.calc.MulNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::isNonExactAdd(jdk.graal.compiler.graph.Node):boolean 	 jdk.graal.compiler.nodes.calc.AddNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::isNonExactSub(jdk.graal.compiler.graph.Node):boolean 	 jdk.graal.compiler.nodes.calc.SubNode
Move Method	jdk.graal.compiler.nodes.calc.BinaryArithmeticNode::isExactMathOperation(jdk.graal.compiler.graph.Node):boolean 	 jdk.graal.compiler.nodes.calc.AddNode
Move Method	jdk.graal.compiler.nodes.calc.CompareNode::tryConstantFold(jdk.graal.compiler.core.common.calc.CanonicalCondition, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.calc.ConstantReflectionProvider, boolean):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.calc.CanonicalCondition
Move Method	jdk.graal.compiler.nodes.calc.CompareNode::tryConstantFoldPrimitive(jdk.graal.compiler.core.common.calc.CanonicalCondition, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, boolean, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.calc.CanonicalCondition
Move Method	jdk.graal.compiler.nodes.calc.CompareNode.CompareOp::isConstantConversionSupported(jdk.graal.compiler.nodes.calc.ConvertNode, jdk.graal.compiler.nodes.NodeView, java.lang.Integer):boolean 	 jdk.graal.compiler.core.common.type.Stamp
Move Method	jdk.graal.compiler.nodes.calc.CompareNode.CompareOp::canonicalConvertConstant(jdk.graal.compiler.nodes.calc.ConstantReflectionProvider, jdk.graal.compiler.nodes.calc.MetaAccessProvider, jdk.graal.compiler.core.common.calc.CanonicalCondition, jdk.graal.compiler.nodes.calc.ConvertNode, jdk.graal.compiler.nodes.calc.Constant, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.calc.CompareNode.CompareOp::optimizeConditional(jdk.graal.compiler.nodes.calc.Constant, jdk.graal.compiler.nodes.calc.ConditionalNode, jdk.graal.compiler.nodes.calc.ConstantReflectionProvider, jdk.graal.compiler.core.common.calc.Condition, boolean):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.LogicNegationNode
Move Method	jdk.graal.compiler.nodes.calc.CompareNode::createCompareNode(jdk.graal.compiler.core.common.calc.CanonicalCondition, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.calc.ConstantReflectionProvider, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.calc.CompareNode::createAnyCompareNode(jdk.graal.compiler.core.common.calc.Condition, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.calc.ConstantReflectionProvider):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.calc.CompareNode::sameValue(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.nodes.calc.CompareNode::createCompareNode(jdk.graal.compiler.nodes.calc.ConstantReflectionProvider, jdk.graal.compiler.nodes.calc.MetaAccessProvider, jdk.graal.compiler.options.OptionValues, java.lang.Integer, jdk.graal.compiler.core.common.calc.CanonicalCondition, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.calc.CompareNode::createFloatCompareNode(jdk.graal.compiler.core.common.calc.CanonicalCondition, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, boolean, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.calc.CopySignNode::computeStamp(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.type.PrimitiveStamp
Move Method	jdk.graal.compiler.nodes.calc.CopySignNode::canonicalHelper(jdk.graal.compiler.nodes.ValueNode, float):jdk.graal.compiler.graph.Node 	 jdk.graal.compiler.nodes.calc.OrNode
Move Method	jdk.graal.compiler.nodes.calc.CopySignNode::canonicalHelper(jdk.graal.compiler.nodes.ValueNode, double):jdk.graal.compiler.graph.Node 	 jdk.graal.compiler.nodes.calc.OrNode
Move Method	jdk.graal.compiler.nodes.calc.FloatEqualsNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.calc.CanonicalCondition
Move Method	jdk.graal.compiler.nodes.calc.FloatLessThanNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, boolean, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.calc.CanonicalCondition
Move Method	jdk.graal.compiler.nodes.calc.FloatLessThanNode::create(jdk.graal.compiler.nodes.calc.ConstantReflectionProvider, jdk.graal.compiler.nodes.calc.MetaAccessProvider, jdk.graal.compiler.options.OptionValues, java.lang.Integer, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, boolean, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.calc.FloatLessThanNode.FloatLessThanOp
Move Method	jdk.graal.compiler.nodes.calc.IntegerBelowNode::create(jdk.graal.compiler.nodes.calc.ConstantReflectionProvider, jdk.graal.compiler.nodes.calc.MetaAccessProvider, jdk.graal.compiler.options.OptionValues, java.lang.Integer, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.calc.IntegerBelowNode.BelowOp
Move Method	jdk.graal.compiler.nodes.calc.IntegerBelowNode.BelowOp::canonicalizeBelowCanonicalOfBelow(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.calc.ConditionalNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.calc.BinaryNode
Move Method	jdk.graal.compiler.nodes.calc.IntegerEqualsNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.calc.CanonicalCondition
Move Method	jdk.graal.compiler.nodes.calc.IntegerLessThanNode::create(jdk.graal.compiler.nodes.calc.ConstantReflectionProvider, jdk.graal.compiler.nodes.calc.MetaAccessProvider, jdk.graal.compiler.options.OptionValues, java.lang.Integer, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.calc.IntegerLowerThanNode.LowerOp
Move Method	jdk.graal.compiler.nodes.calc.IntegerLowerThanNode::getSucceedingStampForX(boolean, boolean, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.nodes.calc.IntegerLowerThanNode.LowerOp
Move Method	jdk.graal.compiler.nodes.calc.IntegerLowerThanNode.LowerOp::canonicalizePiXLowerPiXPlusC(jdk.graal.compiler.nodes.PiNode, jdk.graal.compiler.nodes.PiNode, boolean, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicConstantNode 	 jdk.graal.compiler.nodes.PiNode
Move Method	jdk.graal.compiler.nodes.calc.IntegerLowerThanNode.LowerOp::canonicalizeRangeFlip(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, int, boolean, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.calc.LeftShiftNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp
Move Method	jdk.graal.compiler.nodes.calc.LeftShiftNode::canonical(jdk.graal.compiler.nodes.calc.LeftShiftNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp.Shl>, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp
Move Method	jdk.graal.compiler.nodes.calc.NarrowNode::create(jdk.graal.compiler.nodes.ValueNode, int, int, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable
Move Method	jdk.graal.compiler.nodes.calc.NegateNode::findSynonym(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.SubNode
Move Method	jdk.graal.compiler.nodes.calc.ObjectEqualsNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.calc.ConstantReflectionProvider, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.calc.CanonicalCondition
Move Method	jdk.graal.compiler.nodes.calc.ObjectEqualsNode::virtualizeNonVirtualComparison(jdk.graal.compiler.nodes.virtual.VirtualObjectNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.spi.VirtualizerTool):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.calc.ObjectEqualsNode::virtualizeComparison(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.spi.VirtualizerTool):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.spi.CoreProviders
Move Method	jdk.graal.compiler.nodes.calc.PointerEqualsNode::findSynonym(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.LogicConstantNode
Move Method	jdk.graal.compiler.nodes.calc.PointerEqualsNode::isCached(long, jdk.graal.compiler.nodes.calc.JavaKind):boolean 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.calc.PointerEqualsNode::nullSynonym(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.calc.IsNullNode
Move Method	jdk.graal.compiler.nodes.calc.RightShiftNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp
Move Method	jdk.graal.compiler.nodes.calc.RightShiftNode::canonical(jdk.graal.compiler.nodes.calc.RightShiftNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp<jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp.Shr>, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.IntegerStamp
Move Method	jdk.graal.compiler.nodes.calc.RoundNode::round(jdk.graal.compiler.lir.gen.ArithmeticLIRGeneratorTool.RoundingMode, double):double 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.calc.ShiftNode::canonical(jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp<OP>, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp
Move Method	jdk.graal.compiler.nodes.calc.ShiftNode::shiftOp(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.core.common.type.ArithmeticOpTable.ShiftOp<?>):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable
Move Method	jdk.graal.compiler.nodes.calc.SignExtendNode::create(jdk.graal.compiler.nodes.ValueNode, int, int, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.IntegerConvertOp
Move Method	jdk.graal.compiler.nodes.calc.SignExtendNode::canonical(jdk.graal.compiler.nodes.calc.SignExtendNode, jdk.graal.compiler.nodes.ValueNode, int, int, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.NarrowNode
Move Method	jdk.graal.compiler.nodes.calc.SignedDivNode::divisionIsJVMSCompliant(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, boolean):boolean 	 jdk.graal.compiler.core.common.NumUtil
Move Method	jdk.graal.compiler.nodes.calc.SignedDivNode::canonical(jdk.graal.compiler.nodes.ValueNode, long, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.calc.SignumNode::computeStamp(jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.type.PrimitiveStamp
Move Method	jdk.graal.compiler.nodes.calc.UnaryArithmeticNode::unaryIntegerOp(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.core.common.type.ArithmeticOpTable.UnaryOp<?>):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.calc.UnaryArithmeticNode::unaryFloatOp(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.core.common.type.ArithmeticOpTable.UnaryOp<?>):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.calc.UnaryArithmeticNode::findSynonym(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.ArithmeticOpTable.UnaryOp<OP>):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.ArithmeticOpTable.UnaryOp
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph.LoggingCFGDecorator::printDomTree(jdk.graal.compiler.nodes.cfg.HIRBlock, java.lang.String):void 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::visitDominatorTreeDefault(jdk.graal.compiler.nodes.cfg.ControlFlowGraph.RecursiveVisitor<V>):void 	 jdk.graal.compiler.nodes.cfg.ControlFlowGraph.RecursiveVisitor
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::skipPostDom(jdk.graal.compiler.nodes.cfg.HIRBlock):jdk.graal.compiler.nodes.cfg.HIRBlock 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::addDeferredExit(jdk.graal.compiler.nodes.cfg.ControlFlowGraph.DeferredExit[], jdk.graal.compiler.nodes.cfg.HIRBlock):void 	 jdk.graal.compiler.core.common.cfg.Loop
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::isDominatorTreeLoopExit(jdk.graal.compiler.nodes.cfg.HIRBlock, boolean):boolean 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph.RPOLoopVerification::loopFullyProcessed():boolean 	 jdk.graal.compiler.nodes.LoopBeginNode
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph.RPOLoopVerification::allEndsVisited():boolean 	 jdk.graal.compiler.nodes.LoopBeginNode
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::rpoInnerLoopsFirst(java.util.function.Consumer<jdk.graal.compiler.nodes.cfg.HIRBlock>, java.util.function.Consumer<jdk.graal.compiler.nodes.LoopBeginNode>):boolean 	 jdk.graal.compiler.nodes.cfg.ControlFlowGraph.RPOLoopVerification
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::predecessorBlockSequentialLoopExit(jdk.graal.compiler.nodes.cfg.HIRBlock):boolean 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::calcDominatorRanges(jdk.graal.compiler.nodes.cfg.HIRBlock, int):void 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::commonDominatorRaw(jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.nodes.cfg.HIRBlock):jdk.graal.compiler.nodes.cfg.HIRBlock 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::commonDominatorRawSameDepth(jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.nodes.cfg.HIRBlock):jdk.graal.compiler.nodes.cfg.HIRBlock 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::blockFor(jdk.graal.compiler.graph.Node):jdk.graal.compiler.nodes.cfg.HIRBlock 	 jdk.graal.compiler.graph.NodeMap
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::identifyBlock(jdk.graal.compiler.nodes.cfg.HIRBlock):void 	 jdk.graal.compiler.nodes.cfg.HIRBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::finishLocalLoopFrequency(jdk.graal.compiler.nodes.LoopBeginNode):void 	 jdk.graal.compiler.nodes.cfg.HIRBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::debugLocalLoopFrequencies(jdk.graal.compiler.nodes.LoopBeginNode, double, double):void 	 jdk.graal.compiler.nodes.cfg.HIRBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::computeLoopInformation():void 	 jdk.graal.compiler.core.common.cfg.Loop
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::computeLoopBlocks(jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.core.common.cfg.Loop<jdk.graal.compiler.nodes.cfg.HIRBlock>, jdk.graal.compiler.nodes.cfg.HIRBlock[], boolean):void 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::computePostdominators():void 	 jdk.graal.compiler.nodes.cfg.HIRBlock
Move Method	jdk.graal.compiler.nodes.cfg.ControlFlowGraph::commonPostdominator(jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.nodes.cfg.HIRBlock):jdk.graal.compiler.nodes.cfg.HIRBlock 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.debug.DynamicCounterNode::addCounterBefore(java.lang.String, java.lang.String, long, boolean, jdk.graal.compiler.nodes.FixedNode):void 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.debug.DynamicCounterNode::addCounterBefore(java.lang.String, java.lang.String, jdk.graal.compiler.nodes.ValueNode, boolean, jdk.graal.compiler.nodes.FixedNode):void 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.debug.VerifyHeapNode::addBefore(jdk.graal.compiler.nodes.FixedNode):void 	 jdk.graal.compiler.nodes.StructuredGraph
Move Method	jdk.graal.compiler.nodes.extended.AbstractBoxingNode::getValueField(jdk.graal.compiler.nodes.extended.ResolvedJavaType):jdk.graal.compiler.nodes.extended.ResolvedJavaField 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.nodes.extended.ClassIsArrayNode::canonicalized(jdk.graal.compiler.nodes.extended.ClassIsArrayNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.extended.ConstantReflectionProvider):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.LogicConstantNode
Move Method	jdk.graal.compiler.nodes.extended.ForeignCallNode::intrinsify(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.core.common.spi.ForeignCallsProvider, jdk.graal.compiler.core.common.spi.ForeignCallSignature, jdk.graal.compiler.nodes.ValueNode[]):boolean 	 jdk.graal.compiler.core.common.spi.ForeignCallsProvider
Move Method	jdk.graal.compiler.nodes.extended.ForeignCallNode::finishIntrinsification(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.extended.ForeignCall):boolean 	 jdk.graal.compiler.nodes.ValueNodeInterface
Move Method	jdk.graal.compiler.nodes.extended.GetClassNode::tryFold(jdk.graal.compiler.nodes.extended.Assumptions, jdk.graal.compiler.nodes.extended.MetaAccessProvider, jdk.graal.compiler.nodes.extended.ConstantReflectionProvider, jdk.graal.compiler.nodes.NodeView, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.AbstractObjectStamp
Move Method	jdk.graal.compiler.nodes.extended.IntegerSwitchNode.MergeCoalesceBuilder::addKeyData(int, int):boolean 	 jdk.graal.compiler.nodes.extended.IntegerSwitchNode
Move Method	jdk.graal.compiler.nodes.extended.IntegerSwitchNode.MergeCoalesceBuilder::commit():void 	 jdk.graal.compiler.nodes.extended.IntegerSwitchNode
Move Method	jdk.graal.compiler.nodes.extended.LoadArrayComponentHubNode::findSynonym(jdk.graal.compiler.nodes.extended.LoadArrayComponentHubNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.extended.MetaAccessProvider, jdk.graal.compiler.nodes.extended.ConstantReflectionProvider):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.extended.LoadHubNode::hubStamp(jdk.graal.compiler.nodes.spi.StampProvider, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.core.common.type.AbstractPointerStamp 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.extended.LoadHubNode::findSynonym(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.extended.MetaAccessProvider, jdk.graal.compiler.nodes.extended.ConstantReflectionProvider):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.nodes.extended.LoadHubOrNullNode::hubStamp(jdk.graal.compiler.nodes.spi.StampProvider, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.core.common.type.AbstractPointerStamp 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.extended.LoadHubOrNullNode::findSynonym(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.AbstractPointerStamp, jdk.graal.compiler.nodes.extended.MetaAccessProvider, jdk.graal.compiler.nodes.extended.ConstantReflectionProvider):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.nodes.extended.MultiGuardNode::combine(jdk.graal.compiler.nodes.extended.GuardingNode, jdk.graal.compiler.nodes.extended.GuardingNode):jdk.graal.compiler.nodes.extended.GuardingNode 	 jdk.graal.compiler.nodes.ValueNodeInterface
Move Method	jdk.graal.compiler.nodes.extended.NullCheckNode::tryUseUncompressedNullCheck(jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.extended.NullCheckNode 	 jdk.graal.compiler.core.common.type.AbstractPointerStamp
Move Method	jdk.graal.compiler.nodes.extended.ObjectIsArrayNode::canonicalized(jdk.graal.compiler.nodes.extended.ObjectIsArrayNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.LogicConstantNode
Move Method	jdk.graal.compiler.nodes.extended.ObjectIsArrayNode::doTryFold(jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.nodes.extended.TriState 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.nodes.extended.RawLoadNode::computeStampForArrayAccess(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.extended.JavaKind, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.nodes.extended.UnboxNode::findSynonym(jdk.graal.compiler.nodes.extended.MetaAccessProvider, jdk.graal.compiler.nodes.extended.ConstantReflectionProvider, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.extended.JavaKind):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.extended.UnsafeCopyNode::intrinsify(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.extended.JavaKind, jdk.graal.compiler.nodes.extended.LocationIdentity):boolean 	 jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext
Move Method	jdk.graal.compiler.nodes.java.ArrayLengthNode::create(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ConstantReflectionProvider):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.java.AbstractNewArrayNode
Move Method	jdk.graal.compiler.nodes.java.ArrayLengthNode::searchForConstantLength(jdk.graal.compiler.nodes.java.ConstantReflectionProvider, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.nodes.java.ArrayLengthNode::maybeAddPositivePi(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.FixedWithNextNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.nodes.java.ArrayLengthNode::readArrayLength(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ConstantReflectionProvider):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.nodes.java.ArrayLengthNode::intrinsify(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.core.common.type.AbstractPointerStamp
Move Method	jdk.graal.compiler.nodes.java.DynamicNewArrayNode::computeStamp(jdk.graal.compiler.nodes.java.JavaKind, jdk.graal.compiler.nodes.java.MetaAccessProvider):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.type.TypeReference
Move Method	jdk.graal.compiler.nodes.java.ExceptionObjectNode::getExceptionValueFromState(jdk.graal.compiler.nodes.StateSplit):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.FrameState
Move Method	jdk.graal.compiler.nodes.java.InstanceOfDynamicNode::findSynonym(jdk.graal.compiler.nodes.java.Assumptions, jdk.graal.compiler.nodes.java.ConstantReflectionProvider, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, boolean, boolean):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.type.TypeReference
Move Method	jdk.graal.compiler.nodes.java.LoadFieldNode::create(jdk.graal.compiler.nodes.java.Assumptions, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ResolvedJavaField):jdk.graal.compiler.nodes.java.LoadFieldNode 	 jdk.graal.compiler.core.common.memory.MemoryOrderMode
Move Method	jdk.graal.compiler.nodes.java.LoadFieldNode::create(jdk.graal.compiler.nodes.java.Assumptions, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ResolvedJavaField, jdk.graal.compiler.core.common.memory.MemoryOrderMode):jdk.graal.compiler.nodes.java.LoadFieldNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.nodes.java.LoadFieldNode::create(jdk.graal.compiler.core.common.spi.ConstantFieldProvider, jdk.graal.compiler.nodes.java.ConstantReflectionProvider, jdk.graal.compiler.nodes.java.MetaAccessProvider, jdk.graal.compiler.options.OptionValues, jdk.graal.compiler.nodes.java.Assumptions, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ResolvedJavaField, boolean, boolean, jdk.graal.compiler.graph.NodeSourcePosition):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.nodes.java.LoadFieldNode::createOverrideImmutable(jdk.graal.compiler.nodes.java.LoadFieldNode):jdk.graal.compiler.nodes.java.LoadFieldNode 	 jdk.graal.compiler.core.common.type.StampPair
Move Method	jdk.graal.compiler.nodes.java.LoadFieldNode::asConstant(jdk.graal.compiler.core.common.spi.ConstantFieldProvider, jdk.graal.compiler.nodes.java.ConstantReflectionProvider, jdk.graal.compiler.nodes.java.MetaAccessProvider, jdk.graal.compiler.options.OptionValues, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ResolvedJavaField, jdk.graal.compiler.graph.NodeSourcePosition):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.util.ConstantFoldUtil
Move Method	jdk.graal.compiler.nodes.java.LoadFieldNode::asPhi(jdk.graal.compiler.core.common.spi.ConstantFieldProvider, jdk.graal.compiler.nodes.java.ConstantReflectionProvider, jdk.graal.compiler.nodes.java.MetaAccessProvider, jdk.graal.compiler.options.OptionValues, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ResolvedJavaField, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.graph.NodeSourcePosition):jdk.graal.compiler.nodes.PhiNode 	 jdk.graal.compiler.nodes.PhiNode
Move Method	jdk.graal.compiler.nodes.java.LoadIndexedNode::createStamp(jdk.graal.compiler.nodes.java.Assumptions, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.JavaKind):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.type.TypeReference
Move Method	jdk.graal.compiler.nodes.java.LoadIndexedNode::determinePreciseArrayElementType(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.JavaKind):jdk.graal.compiler.nodes.java.JavaKind 	 jdk.graal.compiler.core.common.type.AbstractObjectStamp
Move Method	jdk.graal.compiler.nodes.java.LoadIndexedNode::tryConstantFold(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.MetaAccessProvider, jdk.graal.compiler.nodes.java.ConstantReflectionProvider):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.java.MethodCallTargetNode::findSpecialCallTarget(jdk.graal.compiler.nodes.CallTargetNode.InvokeKind, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ResolvedJavaMethod, jdk.graal.compiler.nodes.java.ResolvedJavaType):jdk.graal.compiler.nodes.java.ResolvedJavaMethod 	 jdk.graal.compiler.nodes.CallTargetNode.InvokeKind
Move Method	jdk.graal.compiler.nodes.java.MethodCallTargetNode::devirtualizeCall(jdk.graal.compiler.nodes.CallTargetNode.InvokeKind, jdk.graal.compiler.nodes.java.ResolvedJavaMethod, jdk.graal.compiler.nodes.java.ResolvedJavaType, jdk.graal.compiler.nodes.java.Assumptions, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.nodes.java.ResolvedJavaMethod 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.nodes.java.MethodCallTargetNode::tryDevirtualizeInterfaceCall(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ResolvedJavaMethod, jdk.graal.compiler.nodes.java.JavaTypeProfile, jdk.graal.compiler.nodes.java.Assumptions, jdk.graal.compiler.nodes.java.ResolvedJavaType, jdk.graal.compiler.nodes.java.MethodCallTargetNode, jdk.graal.compiler.nodes.FixedNode):jdk.graal.compiler.nodes.java.MethodCallTargetNode 	 jdk.graal.compiler.core.common.type.TypeReference
Move Method	jdk.graal.compiler.nodes.java.MethodCallTargetNode::tryCheckCastSingleImplementor(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.ResolvedJavaMethod, jdk.graal.compiler.nodes.java.JavaTypeProfile, jdk.graal.compiler.nodes.java.ResolvedJavaType, jdk.graal.compiler.core.common.type.TypeReference, jdk.graal.compiler.nodes.FixedNode, jdk.graal.compiler.nodes.java.MethodCallTargetNode):jdk.graal.compiler.nodes.java.MethodCallTargetNode 	 jdk.graal.compiler.core.common.type.TypeReference
Move Method	jdk.graal.compiler.nodes.java.MethodCallTargetNode::find(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.java.ResolvedJavaMethod):jdk.graal.compiler.nodes.java.MethodCallTargetNode 	 jdk.graal.compiler.graph.Graph
Move Method	jdk.graal.compiler.nodes.java.ReachabilityFenceNode::hasOnlyReachabilityFenceUsages(jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.java.RegisterFinalizerNode::mayHaveFinalizer(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.MetaAccessProvider, jdk.graal.compiler.nodes.java.Assumptions):boolean 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.nodes.java.UnsafeCompareAndExchangeNode::meetInputs(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.type.Stamp
Move Method	jdk.graal.compiler.nodes.java.DynamicNewInstanceNode::throwsInstantiationExceptionInjectedProbability(double, java.lang.Class<?>, java.lang.Class<?>):boolean 	 jdk.graal.compiler.nodes.extended.BranchProbabilityNode
Move Method	jdk.graal.compiler.nodes.java.InstanceOfNode::createAllowNull(jdk.graal.compiler.core.common.type.TypeReference, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.JavaTypeProfile, jdk.graal.compiler.nodes.extended.AnchoringNode):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.nodes.java.InstanceOfNode::create(jdk.graal.compiler.core.common.type.TypeReference, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.JavaTypeProfile, jdk.graal.compiler.nodes.extended.AnchoringNode):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.nodes.java.InstanceOfNode::createHelper(jdk.graal.compiler.core.common.type.ObjectStamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.java.JavaTypeProfile, jdk.graal.compiler.nodes.extended.AnchoringNode):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.nodes.java.InstanceOfNode::findSynonym(jdk.graal.compiler.core.common.type.ObjectStamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.LogicNode 	 jdk.graal.compiler.core.common.type.AbstractPointerStamp
Move Method	jdk.graal.compiler.nodes.java.InstanceOfNode::intrinsify(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.nodes.java.ResolvedJavaType, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.core.common.type.TypeReference
Move Method	jdk.graal.compiler.nodes.memory.SideEffectFreeWriteNode::createWithoutSideEffect(jdk.graal.compiler.nodes.memory.address.AddressNode, jdk.graal.compiler.nodes.memory.LocationIdentity, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.memory.WriteNode 	 jdk.graal.compiler.core.common.memory.BarrierType
Move Method	jdk.graal.compiler.nodes.memory.address.OffsetAddressNode::create(jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.memory.address.OffsetAddressNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.nodes.memory.ReadNode::generateStamp(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.core.common.memory.MemoryExtendKind):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.memory.MemoryExtendKind
Move Method	jdk.graal.compiler.nodes.memory.ReadNode::canonicalizeRead(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.memory.address.AddressNode, jdk.graal.compiler.nodes.memory.LocationIdentity, jdk.graal.compiler.nodes.spi.CanonicalizerTool):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.spi.CanonicalizerTool
Move Method	jdk.graal.compiler.nodes.memory.ReadNode::canonicalizeRead(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.memory.LocationIdentity, jdk.graal.compiler.nodes.spi.CoreProviders, jdk.graal.compiler.nodes.NodeView):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.nodes.memory.ReadNode::canonicalizeRead(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.spi.CanonicalizerTool, jdk.graal.compiler.nodes.memory.JavaKind, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.memory.LocationIdentity):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.NarrowNode
Move Method	jdk.graal.compiler.nodes.memory.WriteNode::followedByVolatileWrite(jdk.graal.compiler.nodes.FixedWithNextNode):boolean 	 jdk.graal.compiler.core.common.util.CompilationAlarm
Move Method	jdk.graal.compiler.nodes.virtual.EnsureVirtualizedNode::ensureVirtualFailure(jdk.graal.compiler.graph.Node, jdk.graal.compiler.core.common.type.Stamp):void 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.nodes.virtual.VirtualArrayNode::virtualizeByteArrayRead(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.virtual.JavaKind, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.nodes.virtual.VirtualBoxingNode::getBoxedValue(jdk.graal.compiler.nodes.spi.VirtualizerTool):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.spi.VirtualizerTool
Move Method	jdk.graal.compiler.phases.graph.ReentrantBlockIterator::processLoop(jdk.graal.compiler.phases.graph.ReentrantBlockIterator.BlockIteratorClosure<StateT>, jdk.graal.compiler.core.common.cfg.Loop<jdk.graal.compiler.nodes.cfg.HIRBlock>, StateT):jdk.graal.compiler.phases.graph.ReentrantBlockIterator.LoopInfo<StateT> 	 jdk.graal.compiler.core.common.cfg.Loop
Move Method	jdk.graal.compiler.phases.graph.ReentrantBlockIterator::apply(jdk.graal.compiler.phases.graph.ReentrantBlockIterator.BlockIteratorClosure<StateT>, jdk.graal.compiler.nodes.cfg.HIRBlock):void 	 jdk.graal.compiler.phases.graph.ReentrantBlockIterator.BlockIteratorClosure
Move Method	jdk.graal.compiler.phases.graph.ReentrantBlockIterator::apply(jdk.graal.compiler.phases.graph.ReentrantBlockIterator.BlockIteratorClosure<StateT>, jdk.graal.compiler.nodes.cfg.HIRBlock, StateT, java.util.function.Predicate<jdk.graal.compiler.nodes.cfg.HIRBlock>):jdk.graal.compiler.phases.graph.EconomicMap<jdk.graal.compiler.nodes.FixedNode,StateT> 	 jdk.graal.compiler.phases.graph.ReentrantBlockIterator.BlockIteratorClosure
Move Method	jdk.graal.compiler.phases.graph.ReentrantBlockIterator::allEndsVisited(jdk.graal.compiler.phases.graph.EconomicMap<jdk.graal.compiler.nodes.FixedNode,StateT>, jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.nodes.AbstractMergeNode):boolean 	 jdk.graal.compiler.nodes.AbstractMergeNode
Move Method	jdk.graal.compiler.phases.graph.ReentrantBlockIterator::processMultipleSuccessors(jdk.graal.compiler.phases.graph.ReentrantBlockIterator.BlockIteratorClosure<StateT>, java.util.Deque<jdk.graal.compiler.nodes.cfg.HIRBlock>, jdk.graal.compiler.phases.graph.EconomicMap<jdk.graal.compiler.nodes.FixedNode,StateT>, StateT, jdk.graal.compiler.nodes.cfg.HIRBlock):jdk.graal.compiler.nodes.cfg.HIRBlock 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.phases.graph.ReentrantBlockIterator::mergeStates(jdk.graal.compiler.phases.graph.EconomicMap<jdk.graal.compiler.nodes.FixedNode,StateT>, StateT, jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.nodes.cfg.HIRBlock, jdk.graal.compiler.nodes.AbstractMergeNode):java.util.ArrayList<StateT> 	 jdk.graal.compiler.core.common.cfg.BasicBlock
Move Method	jdk.graal.compiler.phases.graph.ReentrantBlockIterator::recurseIntoLoop(jdk.graal.compiler.phases.graph.ReentrantBlockIterator.BlockIteratorClosure<StateT>, java.util.Deque<jdk.graal.compiler.nodes.cfg.HIRBlock>, jdk.graal.compiler.phases.graph.EconomicMap<jdk.graal.compiler.nodes.FixedNode,StateT>, StateT, jdk.graal.compiler.nodes.cfg.HIRBlock):void 	 jdk.graal.compiler.core.common.cfg.Loop
Move Method	jdk.graal.compiler.replacements.CachingPEGraphDecoder::createGraph(jdk.graal.compiler.replacements.ResolvedJavaMethod, jdk.graal.compiler.bytecode.BytecodeProvider):jdk.graal.compiler.nodes.EncodedGraph 	 jdk.graal.compiler.debug.DebugContext
Move Method	jdk.graal.compiler.replacements.nodes.ArrayRegionCompareToNode::foldResult(jdk.graal.compiler.nodes.spi.CanonicalizerTool, jdk.graal.compiler.core.common.Stride, jdk.graal.compiler.core.common.Stride, jdk.graal.compiler.nodes.ValueNode, int, jdk.graal.compiler.nodes.ValueNode, int, int):int 	 jdk.graal.compiler.nodes.util.ConstantReflectionUtil
Move Method	jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode::arrayRegionEquals(jdk.graal.compiler.nodes.spi.CanonicalizerTool, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.Stride, int, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.Stride, int, int):boolean 	 jdk.graal.compiler.core.common.type.Stamp
Move Method	jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsWithMaskNode::validStride(jdk.graal.compiler.core.common.Stride):boolean 	 jdk.graal.compiler.core.common.Stride
Move Method	jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsWithMaskNode::constantFold(jdk.graal.compiler.nodes.spi.CanonicalizerTool, jdk.graal.compiler.nodes.ValueNode, int, jdk.graal.compiler.nodes.ValueNode, int, jdk.graal.compiler.nodes.ValueNode, int, int, jdk.graal.compiler.core.common.Stride, jdk.graal.compiler.core.common.Stride, jdk.graal.compiler.core.common.Stride):boolean 	 jdk.graal.compiler.nodes.util.ConstantReflectionUtil
Move Method	jdk.graal.compiler.replacements.nodes.BasicArrayCopyNode::selectComponentKind(jdk.graal.compiler.replacements.nodes.BasicArrayCopyNode):jdk.graal.compiler.replacements.nodes.JavaKind 	 jdk.graal.compiler.nodes.NodeView
Move Method	jdk.graal.compiler.replacements.nodes.BasicArrayCopyNode::checkBounds(int, int, jdk.graal.compiler.nodes.virtual.VirtualObjectNode):boolean 	 jdk.graal.compiler.core.common.NumUtil
Move Method	jdk.graal.compiler.replacements.nodes.BasicArrayCopyNode::checkEntryTypes(int, int, jdk.graal.compiler.nodes.virtual.VirtualObjectNode, jdk.graal.compiler.replacements.nodes.ResolvedJavaType, jdk.graal.compiler.nodes.spi.VirtualizerTool):boolean 	 jdk.graal.compiler.nodes.spi.VirtualizerTool
Move Method	jdk.graal.compiler.replacements.nodes.BasicObjectCloneNode::betterStamp(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.ObjectStamp 	 jdk.graal.compiler.core.common.type.AbstractObjectStamp
Move Method	jdk.graal.compiler.replacements.nodes.BasicObjectCloneNode::maybeImproveReturnStamp(jdk.graal.compiler.replacements.nodes.MacroNode.MacroParams):jdk.graal.compiler.replacements.nodes.MacroNode.MacroParams 	 jdk.graal.compiler.core.common.type.StampPair
Move Method	jdk.graal.compiler.replacements.nodes.CountLeadingZerosNode::computeStamp(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.replacements.nodes.CountLeadingZerosNode::tryFold(jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.replacements.nodes.CountTrailingZerosNode::computeStamp(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.nodes.type.StampTool
Move Method	jdk.graal.compiler.replacements.nodes.CountTrailingZerosNode::tryFold(jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.replacements.nodes.IdentityHashCodeNode::canonical(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.spi.CoreProviders):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.replacements.nodes.MacroNode.MacroParams::of(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.replacements.nodes.ResolvedJavaMethod, jdk.graal.compiler.nodes.ValueNode[]):jdk.graal.compiler.replacements.nodes.MacroNode.MacroParams 	 jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderTool
Move Method	jdk.graal.compiler.replacements.nodes.MacroNode.MacroParams::of(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.replacements.nodes.ResolvedJavaMethod, jdk.graal.compiler.core.common.type.StampPair, jdk.graal.compiler.nodes.ValueNode[]):jdk.graal.compiler.replacements.nodes.MacroNode.MacroParams 	 jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext
Move Method	jdk.graal.compiler.replacements.nodes.MacroNode.MacroParams::of(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.nodes.CallTargetNode.InvokeKind, jdk.graal.compiler.replacements.nodes.ResolvedJavaMethod, jdk.graal.compiler.nodes.ValueNode[]):jdk.graal.compiler.replacements.nodes.MacroNode.MacroParams 	 jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderTool
Move Method	jdk.graal.compiler.replacements.nodes.MethodHandleNode::getGraphAdderBeforeNode(jdk.graal.compiler.nodes.FixedNode):jdk.graal.compiler.replacements.nodes.MethodHandleNode.GraphAdder 	 jdk.graal.compiler.nodes.StructuredGraph
Move Method	jdk.graal.compiler.replacements.nodes.MethodHandleNode::maybeCastArgument(jdk.graal.compiler.replacements.nodes.MethodHandleNode.GraphAdder, jdk.graal.compiler.nodes.ValueNode[], int, jdk.graal.compiler.replacements.nodes.JavaType):void 	 jdk.graal.compiler.replacements.nodes.MethodHandleNode.GraphAdder
Move Method	jdk.graal.compiler.replacements.nodes.MethodHandleNode::createTargetInvokeNode(jdk.graal.compiler.replacements.nodes.MethodHandleNode.InvokeFactory<T>, jdk.graal.compiler.replacements.nodes.Assumptions, jdk.graal.compiler.replacements.nodes.IntrinsicMethod, jdk.graal.compiler.replacements.nodes.ResolvedJavaMethod, jdk.graal.compiler.replacements.nodes.ResolvedJavaMethod, int, jdk.graal.compiler.core.common.type.StampPair, jdk.graal.compiler.nodes.ValueNode[]):T 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.replacements.nodes.arithmetic.IntegerAddExactOverflowNode::canonicalXYconstant(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.LogicConstantNode 	 jdk.graal.compiler.nodes.LogicConstantNode
Move Method	jdk.graal.compiler.replacements.nodes.arithmetic.IntegerMulExactOverflowNode::canonicalXYconstant(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.LogicConstantNode 	 jdk.graal.compiler.nodes.LogicConstantNode
Move Method	jdk.graal.compiler.replacements.nodes.arithmetic.IntegerSubExactOverflowNode::canonicalXYconstant(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.LogicConstantNode 	 jdk.graal.compiler.nodes.LogicConstantNode
Move Method	jdk.graal.compiler.replacements.nodes.arithmetic.UnsignedMulHighNode::canonical(jdk.graal.compiler.replacements.nodes.arithmetic.UnsignedMulHighNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode::createIndexOfSingle(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.replacements.nodes.JavaKind, jdk.graal.compiler.core.common.Stride, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode 	 jdk.graal.compiler.nodes.spi.CoreProviders
Move Method	jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode::defaultLocationIdentity(jdk.graal.compiler.replacements.nodes.JavaKind):jdk.graal.compiler.replacements.nodes.LocationIdentity 	 jdk.graal.compiler.nodes.NamedLocationIdentity
Move Method	jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode::minFeaturesAMD64(jdk.graal.compiler.core.common.Stride, jdk.graal.compiler.lir.gen.LIRGeneratorTool.ArrayIndexOfVariant):java.util.EnumSet<AMD64.CPUFeature> 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.replacements.nodes.BitCountNode::computeStamp(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.replacements.nodes.FusedMultiplyAddNode::computeStamp(jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.core.common.type.Stamp, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.serviceprovider.GraalServices
Move Method	jdk.graal.compiler.replacements.nodes.UnaryMathIntrinsicNode.UnaryOperation::computeStamp(jdk.graal.compiler.replacements.nodes.UnaryMathIntrinsicNode.UnaryOperation, jdk.graal.compiler.core.common.type.Stamp):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.replacements.nodes.UnaryMathIntrinsicNode::tryConstantFold(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.replacements.nodes.UnaryMathIntrinsicNode.UnaryOperation):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.replacements.nodes.UnaryMathIntrinsicNode.UnaryOperation
Move Method	jdk.graal.compiler.replacements.PEGraphDecoder.PEAppendGraphBuilderContext::updateLastInstruction(T):void 	 jdk.graal.compiler.nodes.WithExceptionNode
Move Method	jdk.graal.compiler.replacements.PEGraphDecoder.PEPluginGraphBuilderContext::updateLastInstruction(T):void 	 jdk.graal.compiler.nodes.StructuredGraph
Move Method	jdk.graal.compiler.replacements.PEGraphDecoder::loopExplosionKind(jdk.graal.compiler.replacements.ResolvedJavaMethod, jdk.graal.compiler.nodes.graphbuilderconf.LoopExplosionPlugin):jdk.graal.compiler.nodes.graphbuilderconf.LoopExplosionPlugin.LoopExplosionKind 	 jdk.graal.compiler.nodes.graphbuilderconf.LoopExplosionPlugin.LoopExplosionKind
Move Method	jdk.graal.compiler.replacements.PEGraphDecoder::tooManyLoopExplosionIterations(jdk.graal.compiler.replacements.PEGraphDecoder.PEMethodScope, jdk.graal.compiler.options.OptionValues):java.lang.RuntimeException 	 jdk.graal.compiler.nodes.util.GraphUtil
Move Method	jdk.graal.compiler.replacements.PEGraphDecoder::getSingleMatchingNode(java.util.List<jdk.graal.compiler.nodes.ControlSinkNode>, boolean, java.lang.Class<T>):T 	 jdk.graal.compiler.debug.GraalError
Move Method	jdk.graal.compiler.replacements.PEGraphDecoder::getMatchingNodes(java.util.List<jdk.graal.compiler.nodes.ControlSinkNode>, boolean, java.lang.Class<T>, int):java.util.List<T> 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.replacements.PEGraphDecoder::deleteInvoke(jdk.graal.compiler.nodes.Invoke):void 	 jdk.graal.compiler.graph.Node
Move Method	jdk.graal.compiler.truffle.nodes.frame.NewFrameNode::constantObject(jdk.graal.compiler.nodes.StructuredGraph, jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.truffle.nodes.frame.ResolvedJavaField):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	jdk.graal.compiler.truffle.nodes.frame.VirtualFrameGetNode::isOSRRawStaticAccess():boolean 	 jdk.graal.compiler.truffle.nodes.frame.NewFrameNode
Move Method	jdk.graal.compiler.truffle.nodes.frame.VirtualFrameSetNode::extendForOSRStaticAccess(jdk.graal.compiler.nodes.spi.VirtualizerTool, jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.type.Stamp
Move Method	jdk.graal.compiler.truffle.nodes.frame.VirtualFrameSetNode::isOSRRawStaticAccess():boolean 	 jdk.graal.compiler.truffle.nodes.frame.NewFrameNode
Move Method	jdk.graal.compiler.truffle.phases.inlining.CallNode::makeRoot(jdk.graal.compiler.truffle.TruffleTierContext, jdk.graal.compiler.truffle.phases.inlining.CallTree):jdk.graal.compiler.truffle.phases.inlining.CallNode 	 jdk.graal.compiler.truffle.phases.inlining.CallTree
Move Method	jdk.graal.compiler.truffle.phases.inlining.CallNode::getCurrentCallTarget(jdk.graal.compiler.truffle.TruffleTierContext, jdk.graal.compiler.truffle.phases.inlining.JavaConstant):jdk.graal.compiler.truffle.phases.inlining.TruffleCompilable 	 jdk.graal.compiler.truffle.TruffleTierContext
Move Method	jdk.graal.compiler.truffle.phases.inlining.CallNode::getCallCount(jdk.graal.compiler.truffle.TruffleTierContext, jdk.graal.compiler.truffle.phases.inlining.JavaConstant):int 	 jdk.graal.compiler.nodes.spi.CoreProvidersDelegate
Move Method	jdk.graal.compiler.truffle.phases.inlining.CallNode::isInliningForced(jdk.graal.compiler.truffle.TruffleTierContext, jdk.graal.compiler.truffle.phases.inlining.JavaConstant):boolean 	 jdk.graal.compiler.nodes.spi.CoreProvidersDelegate
Move Method	jdk.graal.compiler.truffle.phases.inlining.CallNode::exploreInlineRatio():double 	 jdk.graal.compiler.truffle.phases.inlining.CallTree
Move Method	jdk.graal.compiler.truffle.phases.inlining.CallNode::finalizeGraph():void 	 jdk.graal.compiler.nodes.Invoke
Move Method	jdk.graal.compiler.word.WordCastNode::wordToObject(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.word.JavaKind):jdk.graal.compiler.word.WordCastNode 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.word.WordCastNode::wordToObjectNonNull(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.word.JavaKind):jdk.graal.compiler.word.WordCastNode 	 jdk.graal.compiler.debug.Assertions
Move Method	jdk.graal.compiler.word.WordCastNode::addressToWord(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.word.JavaKind):jdk.graal.compiler.word.WordCastNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.word.WordCastNode::objectToTrackedPointer(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.word.JavaKind):jdk.graal.compiler.word.WordCastNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.word.WordCastNode::objectToUntrackedPointer(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.word.JavaKind):jdk.graal.compiler.word.WordCastNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.word.WordCastNode::narrowOopToUntrackedWord(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.word.JavaKind):jdk.graal.compiler.word.WordCastNode 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	jdk.graal.compiler.word.WordCastNode::objectStampFor(jdk.graal.compiler.nodes.ValueNode):jdk.graal.compiler.core.common.type.Stamp 	 jdk.graal.compiler.core.common.type.StampFactory
Move Method	org.graalvm.profdiff.core.OptimizationContextTreeNode::getCallerNode():org.graalvm.profdiff.core.inlining.InliningTreeNode 	 org.graalvm.profdiff.core.TreeNode
Move Method	org.graalvm.profdiff.core.TreeNode::writeRecursive(org.graalvm.profdiff.core.Writer):void 	 org.graalvm.profdiff.core.Writer
Move Method	org.graalvm.profdiff.core.TreeNode::writeHead(org.graalvm.profdiff.core.Writer):void 	 org.graalvm.profdiff.core.Writer
Move Method	org.graalvm.profdiff.core.inlining.InliningTreeNode::writeReasoningIfEnabled(org.graalvm.profdiff.core.Writer, org.graalvm.profdiff.core.ExperimentId):void 	 org.graalvm.profdiff.core.Writer
Move Method	org.graalvm.profdiff.core.inlining.InliningTreeNode::writeReasoning(org.graalvm.profdiff.core.Writer, org.graalvm.profdiff.core.ExperimentId):void 	 org.graalvm.profdiff.core.Writer
Move Method	com.oracle.truffle.espresso.nodes.MethodWithBytecodeNode::getScopeSlowPath(com.oracle.truffle.api.frame.MaterializedFrame, boolean):java.lang.Object 	 com.oracle.truffle.espresso.nodes.AbstractInstrumentableBytecodeNode
Move Method	com.oracle.truffle.espresso.nodes.commands.AddPathToBindingsNode::getGuestPath(java.lang.Object[], com.oracle.truffle.espresso.runtime.EspressoContext, com.oracle.truffle.espresso.nodes.commands.InteropLibrary):com.oracle.truffle.espresso.runtime.staticobject.StaticObject 	 com.oracle.truffle.espresso.runtime.EspressoContext
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::typeCheckJLObject(com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::typeCheckInterface(com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::typeCheckRegular(com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::isJLObject(com.oracle.truffle.espresso.runtime.EspressoContext, com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.runtime.EspressoContext
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::isFinal(com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::isPrimitive(com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::doTypeCheck(com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::arraySameDim(com.oracle.truffle.espresso.impl.ArrayKlass, com.oracle.truffle.espresso.impl.ArrayKlass):boolean 	 com.oracle.truffle.espresso.impl.ArrayKlass
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::arrayBiggerDim(com.oracle.truffle.espresso.impl.ArrayKlass, com.oracle.truffle.espresso.impl.ArrayKlass):boolean 	 com.oracle.truffle.espresso.impl.ArrayKlass
Move Method	com.oracle.truffle.espresso.nodes.helper.TypeCheckNode::isInterface(com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.helper.AbstractGetFieldNode::create(com.oracle.truffle.espresso.impl.Field):com.oracle.truffle.espresso.nodes.helper.AbstractGetFieldNode 	 com.oracle.truffle.espresso.meta.EspressoError
Move Method	com.oracle.truffle.espresso.nodes.helper.ObjectGetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject):com.oracle.truffle.espresso.runtime.staticobject.StaticObject 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.helper.AbstractSetFieldNode::create(com.oracle.truffle.espresso.impl.Field):com.oracle.truffle.espresso.nodes.helper.AbstractSetFieldNode 	 com.oracle.truffle.espresso.meta.EspressoError
Move Method	com.oracle.truffle.espresso.nodes.helper.IntSetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, int):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.helper.BooleanSetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, boolean):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.helper.CharSetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, char):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.helper.ShortSetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, short):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.helper.ByteSetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, byte):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.helper.LongSetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, long):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.helper.FloatSetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, float):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.helper.DoubleSetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, double):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.helper.ObjectSetFieldNode::doEspresso(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, com.oracle.truffle.espresso.runtime.staticobject.StaticObject):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.interop.LookupAndInvokeKnownMethodNode::doInterfaceCachedNoArg(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, com.oracle.truffle.espresso.impl.Method, java.lang.Object[], com.oracle.truffle.espresso.impl.Method, com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.impl.Method, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.espresso.nodes.interop.LookupAndInvokeKnownMethodNode::doVirtualCachedNoArg(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, com.oracle.truffle.espresso.impl.Method, java.lang.Object[], com.oracle.truffle.espresso.impl.Method, com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.impl.Method, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.espresso.nodes.interop.LookupAndInvokeKnownMethodNode::interfaceLookup(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, com.oracle.truffle.espresso.impl.Method):com.oracle.truffle.espresso.impl.Method 	 com.oracle.truffle.espresso.runtime.staticobject.StaticObject
Move Method	com.oracle.truffle.espresso.nodes.interop.LookupAndInvokeKnownMethodNode::virtualLookup(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, com.oracle.truffle.espresso.impl.Method):com.oracle.truffle.espresso.impl.Method 	 com.oracle.truffle.espresso.runtime.staticobject.StaticObject
Move Method	com.oracle.truffle.espresso.nodes.interop.LookupAndInvokeKnownMethodNode::invoke(com.oracle.truffle.espresso.nodes.interop.InvokeEspressoNode, com.oracle.truffle.espresso.impl.Method, com.oracle.truffle.espresso.runtime.staticobject.StaticObject, java.lang.Object[]):java.lang.Object 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.espresso.nodes.interop.OverLoadedMethodSelectorNode::selectMatchingOverloads(com.oracle.truffle.espresso.impl.Method[], java.lang.Object[], com.oracle.truffle.espresso.impl.Klass[][], com.oracle.truffle.espresso.nodes.interop.ToEspressoNode.DynamicToEspresso):com.oracle.truffle.espresso.nodes.interop.CandidateMethodWithArgs 	 com.oracle.truffle.espresso.nodes.interop.MethodArgsUtils
Move Method	com.oracle.truffle.espresso.nodes.interop.OverLoadedMethodSelectorNode::getParameterType(int, com.oracle.truffle.espresso.nodes.interop.CandidateMethodWithArgs):com.oracle.truffle.espresso.impl.Klass 	 com.oracle.truffle.espresso.impl.ArrayKlass
Move Method	com.oracle.truffle.espresso.nodes.interop.OverLoadedMethodSelectorNode::compareKnownTypesExact(com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.impl.Klass, java.lang.Object):int 	 com.oracle.truffle.espresso.impl.ContextAccessImpl
Move Method	com.oracle.truffle.espresso.nodes.interop.OverLoadedMethodSelectorNode::isAssignableFrom(com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.ContextAccessImpl
Move Method	com.oracle.truffle.espresso.nodes.interop.OverLoadedMethodSelectorNode::resolveParameterKlasses(com.oracle.truffle.espresso.impl.Method[]):com.oracle.truffle.espresso.impl.Klass[][] 	 com.oracle.truffle.espresso.impl.Method
Move Method	com.oracle.truffle.espresso.nodes.interop.AbstractLookupFieldNode::doLookup(com.oracle.truffle.espresso.impl.Klass, java.lang.String, boolean, com.oracle.truffle.espresso.nodes.interop.AbstractLookupFieldNode.FieldLookupKind):com.oracle.truffle.espresso.impl.Field 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.interop.AbstractLookupNode::matchMethod(com.oracle.truffle.espresso.impl.Method, com.oracle.truffle.espresso.descriptors.Symbol<com.oracle.truffle.espresso.descriptors.Symbol.Name>, com.oracle.truffle.espresso.descriptors.Symbol<com.oracle.truffle.espresso.descriptors.Symbol.Signature>, boolean, boolean):boolean 	 com.oracle.truffle.espresso.impl.Method
Move Method	com.oracle.truffle.espresso.nodes.interop.InvokeEspressoNode::createDirectCallNode(com.oracle.truffle.api.CallTarget):com.oracle.truffle.api.nodes.DirectCallNode 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.espresso.nodes.interop.InvokeEspressoNode::createToEspresso(com.oracle.truffle.espresso.impl.Method.MethodVersion):com.oracle.truffle.espresso.nodes.interop.ToEspressoNode[] 	 com.oracle.truffle.espresso.impl.ContextAccessImpl
Move Method	com.oracle.truffle.espresso.nodes.interop.InvokeEspressoNode::getParameterKlasses(com.oracle.truffle.espresso.impl.Method):com.oracle.truffle.espresso.impl.Klass[] 	 com.oracle.truffle.espresso.impl.Method
Move Method	com.oracle.truffle.espresso.nodes.interop.InvokeEspressoNode::checkValidInvoke(com.oracle.truffle.espresso.impl.Method, java.lang.Object):void 	 com.oracle.truffle.espresso.impl.Method
Move Method	com.oracle.truffle.espresso.nodes.interop.LookupFieldNode::doUncached(com.oracle.truffle.espresso.impl.Klass, java.lang.String, boolean):com.oracle.truffle.espresso.impl.Field 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.interop.LookupProxyKlassNode::lookupOrDefineInBindingsLoader(com.oracle.truffle.espresso.nodes.interop.EspressoForeignProxyGenerator.GeneratedProxyBytes, com.oracle.truffle.espresso.runtime.EspressoContext):com.oracle.truffle.espresso.impl.Klass 	 com.oracle.truffle.espresso.impl.ClassRegistries
Move Method	com.oracle.truffle.espresso.nodes.interop.LookupProxyKlassNode::fillParents(java.lang.Object, com.oracle.truffle.espresso.nodes.interop.InteropLibrary, com.oracle.truffle.espresso.nodes.interop.PolyglotTypeMappings, java.util.Set<com.oracle.truffle.espresso.impl.ObjectKlass>, com.oracle.truffle.espresso.runtime.EspressoContext):com.oracle.truffle.espresso.impl.ObjectKlass 	 com.oracle.truffle.espresso.runtime.EspressoContext
Move Method	com.oracle.truffle.espresso.nodes.interop.LookupVirtualMethodNode::isCandidate(com.oracle.truffle.espresso.impl.Method):boolean 	 com.oracle.truffle.espresso.meta.ModifiersProvider
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode::createToEspresso(com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.meta.Meta):com.oracle.truffle.espresso.nodes.interop.ToEspressoNode 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode::getUncachedToEspresso(com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.meta.Meta):com.oracle.truffle.espresso.nodes.interop.ToEspressoNode 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode.DynamicToEspresso::createToEspressoNode(com.oracle.truffle.espresso.impl.Klass):com.oracle.truffle.espresso.nodes.interop.ToEspressoNode 	 com.oracle.truffle.espresso.impl.ContextAccessImpl
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode.DynamicToEspresso::doCached(java.lang.Object, com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.nodes.interop.ToEspressoNode):java.lang.Object 	 com.oracle.truffle.espresso.nodes.interop.ToEspressoNode
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode.DynamicToEspresso::doGeneric(java.lang.Object, com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.nodes.interop.ToEspressoNode.GenericToEspresso):java.lang.Object 	 com.oracle.truffle.espresso.nodes.interop.ToEspressoNode.GenericToEspresso
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode::isTypeConverterEnabled(com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode::isInternalTypeConverterEnabled(com.oracle.truffle.espresso.impl.Klass):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode::isForeignException(com.oracle.truffle.espresso.impl.Klass, com.oracle.truffle.espresso.meta.Meta):boolean 	 com.oracle.truffle.espresso.impl.Klass
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode::getMetaName(java.lang.Object, com.oracle.truffle.espresso.nodes.interop.InteropLibrary):java.lang.String 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.espresso.nodes.interop.ToEspressoNode::checkHasAllFieldsOrThrow(java.lang.Object, com.oracle.truffle.espresso.impl.ObjectKlass, com.oracle.truffle.espresso.nodes.interop.InteropLibrary, com.oracle.truffle.espresso.meta.Meta):void 	 com.oracle.truffle.api.CompilerAsserts
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHInvokeBasicNode::canInline(com.oracle.truffle.espresso.impl.Method, com.oracle.truffle.espresso.impl.Method):boolean 	 com.oracle.truffle.espresso.impl.Method
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHInvokeBasicNode::doCallIndirect(java.lang.Object[], com.oracle.truffle.espresso.impl.Method, com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.espresso.impl.Method
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHInvokeGenericNode::create(com.oracle.truffle.espresso.EspressoLanguage, com.oracle.truffle.espresso.meta.Meta, com.oracle.truffle.espresso.impl.ObjectKlass, com.oracle.truffle.espresso.impl.Method, com.oracle.truffle.espresso.descriptors.Symbol<com.oracle.truffle.espresso.descriptors.Symbol.Name>, com.oracle.truffle.espresso.descriptors.Symbol<com.oracle.truffle.espresso.descriptors.Symbol.Signature>):com.oracle.truffle.espresso.nodes.methodhandle.MHInvokeGenericNode 	 com.oracle.truffle.espresso.runtime.staticobject.StaticObject
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHLinkToNativeNode::doCached(java.lang.Object[], long, com.oracle.truffle.espresso.runtime.panama.DowncallStubNode):java.lang.Object 	 com.oracle.truffle.espresso.runtime.panama.DowncallStubNode
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHLinkToNode::canInline(com.oracle.truffle.espresso.impl.Method.MethodVersion, com.oracle.truffle.espresso.impl.Method.MethodVersion):boolean 	 com.oracle.truffle.espresso.impl.Method
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHLinkToNode::doCallDirect(java.lang.Object[], com.oracle.truffle.espresso.impl.Method.MethodVersion, com.oracle.truffle.espresso.impl.Method.MethodVersion, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHLinkToNode::doCallIndirect(java.lang.Object[], com.oracle.truffle.espresso.impl.Method.MethodVersion, com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.espresso.impl.Method.MethodVersion
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHLinkToNode::unbasic(java.lang.Object[], com.oracle.truffle.espresso.descriptors.Symbol<com.oracle.truffle.espresso.descriptors.Symbol.Type>[], int, int, boolean):java.lang.Object[] 	 com.oracle.truffle.espresso.descriptors.Signatures
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHLinkToNode::findLinker(com.oracle.truffle.espresso.runtime.MethodHandleIntrinsics.PolySigIntrinsics):com.oracle.truffle.espresso.nodes.methodhandle.Linker 	 com.oracle.truffle.espresso.meta.EspressoError
Move Method	com.oracle.truffle.espresso.nodes.methodhandle.MHLinkToNode::getTarget(java.lang.Object[]):com.oracle.truffle.espresso.impl.Method.MethodVersion 	 com.oracle.truffle.espresso.runtime.staticobject.StaticObject
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.bodies.InlinedGetterNode::getReceiver(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.espresso.impl.Field, int):com.oracle.truffle.espresso.runtime.staticobject.StaticObject 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.bodies.InlinedSetterNode::getReceiver(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.espresso.impl.Field, int, int):com.oracle.truffle.espresso.runtime.staticobject.StaticObject 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.bodies.InlinedSubstitutionBodyNode::create(com.oracle.truffle.espresso.impl.Method, int, int, int, int, com.oracle.truffle.espresso.substitutions.JavaSubstitution.Factory):com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode 	 com.oracle.truffle.espresso.substitutions.JavaSubstitution.Factory
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.bodies.InlinedFieldAccessNode::create(com.oracle.truffle.espresso.impl.Method.MethodVersion, int, int, int, int, com.oracle.truffle.espresso.nodes.quick.invoke.inline.ConditionalInlinedMethodNode.Recipes, char):com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode 	 com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.bodies.InlinedFieldAccessNode::isResolutionSuccessAt(com.oracle.truffle.espresso.impl.Method.MethodVersion, char):boolean 	 com.oracle.truffle.espresso.classfile.RuntimeConstantPool
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.bodies.InlinedFieldAccessNode::getInlinedField(com.oracle.truffle.espresso.impl.Method.MethodVersion, char):com.oracle.truffle.espresso.impl.Field 	 com.oracle.truffle.espresso.classfile.RuntimeConstantPool
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.bodies.InlinedFieldAccessNode::getFieldCpi(boolean, com.oracle.truffle.espresso.impl.Method.MethodVersion):char 	 com.oracle.truffle.espresso.meta.EspressoError
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.ConditionalInlinedMethodNode::getDefinitiveNode(com.oracle.truffle.espresso.nodes.quick.invoke.inline.ConditionalInlinedMethodNode.Recipes, com.oracle.truffle.espresso.impl.Method.MethodVersion, int, int, int, int):com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode 	 com.oracle.truffle.espresso.nodes.quick.invoke.inline.ConditionalInlinedMethodNode.Recipes
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.ConditionalInlinedMethodNode::getFallback(com.oracle.truffle.espresso.impl.Method, int, int, int):com.oracle.truffle.espresso.nodes.quick.invoke.InvokeQuickNode 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.GuardedConditionalInlinedMethodNode::getDefinitiveNode(com.oracle.truffle.espresso.nodes.quick.invoke.inline.ConditionalInlinedMethodNode.Recipes, com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodPredicate, com.oracle.truffle.espresso.impl.Method.MethodVersion, int, int, int, int):com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode 	 com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodPredicate
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode::createFor(com.oracle.truffle.espresso.impl.Method, int, int, int, int):com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode 	 com.oracle.truffle.espresso.nodes.quick.invoke.inline.bodies.InlinedFieldAccessNode
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode::executeBody(com.oracle.truffle.api.frame.VirtualFrame):int 	 com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode.BodyNode
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode::initCheck():void 	 com.oracle.truffle.espresso.impl.Method.MethodVersion
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.inline.InlinedMethodNode::isInlineCandidate(com.oracle.truffle.espresso.impl.Method, int):boolean 	 com.oracle.truffle.espresso.analysis.hierarchy.ClassHierarchyAssumption
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.InvokeQuickNode::peekReceiver(com.oracle.truffle.api.frame.VirtualFrame):com.oracle.truffle.espresso.runtime.staticobject.StaticObject 	 com.oracle.truffle.espresso.impl.Method.MethodVersion
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.InvokeQuickNode::getArguments(com.oracle.truffle.api.frame.VirtualFrame):java.lang.Object[] 	 com.oracle.truffle.espresso.impl.Method.MethodVersion
Move Method	com.oracle.truffle.espresso.nodes.quick.invoke.InvokeStaticQuickNode::initializeResolvedKlass():void 	 com.oracle.truffle.espresso.nodes.bytecodes.InvokeStatic
Move Method	com.oracle.truffle.espresso.nodes.quick.CheckCastQuickNode::getExceptionMessage(com.oracle.truffle.espresso.nodes.BytecodeNode, com.oracle.truffle.espresso.runtime.staticobject.StaticObject):java.lang.String 	 com.oracle.truffle.espresso.runtime.staticobject.StaticObject
Move Method	com.oracle.truffle.espresso.nodes.AbstractInstrumentableBytecodeNode::getScopeSlowPath(com.oracle.truffle.api.frame.MaterializedFrame):java.lang.Object 	 com.oracle.truffle.espresso.impl.Method
Move Method	com.oracle.truffle.espresso.nodes.AbstractInstrumentableBytecodeNode::checkLocals(com.oracle.truffle.espresso.classfile.attributes.Local[], com.oracle.truffle.espresso.impl.Method):boolean 	 com.oracle.truffle.espresso.classfile.attributes.Local
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::getSource():com.oracle.truffle.api.source.Source 	 com.oracle.truffle.espresso.impl.Method.MethodVersion
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::getSourceSectionAtBCI(int):com.oracle.truffle.api.source.SourceSection 	 com.oracle.truffle.espresso.classfile.attributes.LineNumberTableAttribute
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::checkNoForeignObjectAssumption(com.oracle.truffle.espresso.runtime.staticobject.StaticObject):void 	 com.oracle.truffle.api.Assumption
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::clearOperandStack(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 com.oracle.truffle.espresso.impl.Method.MethodVersion
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::takeBranchRef1(com.oracle.truffle.espresso.runtime.staticobject.StaticObject, int):boolean 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::takeBranchPrimitive1(int, int):boolean 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::takeBranchPrimitive2(int, int, int):boolean 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::beforeJumpChecks(com.oracle.truffle.api.frame.VirtualFrame, int, int, int, int, com.oracle.truffle.espresso.nodes.BytecodeNode.InstrumentationSupport, com.oracle.truffle.espresso.nodes.BytecodeNode.Counter, boolean):int 	 com.oracle.truffle.espresso.nodes.BytecodeNode.InstrumentationSupport
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::resolveExceptionHandlers(int, com.oracle.truffle.espresso.runtime.staticobject.StaticObject):com.oracle.truffle.espresso.meta.ExceptionHandler 	 com.oracle.truffle.espresso.meta.ExceptionHandler
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::getConstantPool():com.oracle.truffle.espresso.classfile.RuntimeConstantPool 	 com.oracle.truffle.espresso.impl.Method.MethodVersion
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::readOriginalCPI(int):char 	 com.oracle.truffle.espresso.impl.Method.MethodVersion
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::patchBci(int, byte, char):void 	 com.oracle.truffle.espresso.impl.Method.MethodVersion
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::injectQuick(int, com.oracle.truffle.espresso.nodes.quick.BaseQuickNode, int):com.oracle.truffle.espresso.nodes.quick.BaseQuickNode 	 com.oracle.truffle.espresso.perf.DebugCounter
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::quickenCheckCast(com.oracle.truffle.api.frame.VirtualFrame, int, int, int):int 	 com.oracle.truffle.espresso.nodes.quick.BaseQuickNode
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::quickenInstanceOf(com.oracle.truffle.api.frame.VirtualFrame, int, int, int):int 	 com.oracle.truffle.espresso.nodes.quick.BaseQuickNode
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::reQuickenInvoke(com.oracle.truffle.api.frame.VirtualFrame, int, int, int, int, com.oracle.truffle.espresso.impl.Method):int 	 com.oracle.truffle.espresso.nodes.quick.BaseQuickNode
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::quickenGetField(com.oracle.truffle.api.frame.VirtualFrame, int, int, int, int, com.oracle.truffle.espresso.impl.Field):int 	 com.oracle.truffle.espresso.nodes.quick.BaseQuickNode
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::quickenPutField(com.oracle.truffle.api.frame.VirtualFrame, int, int, int, int, com.oracle.truffle.espresso.impl.Field):int 	 com.oracle.truffle.espresso.nodes.quick.BaseQuickNode
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::notifyFieldModification(com.oracle.truffle.api.frame.VirtualFrame, int, com.oracle.truffle.espresso.impl.Field, com.oracle.truffle.espresso.runtime.staticobject.StaticObject, java.lang.Object):void 	 com.oracle.truffle.espresso.nodes.BytecodeNode.InstrumentationSupport
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode::notifyFieldAccess(com.oracle.truffle.api.frame.VirtualFrame, int, com.oracle.truffle.espresso.impl.Field, com.oracle.truffle.espresso.runtime.staticobject.StaticObject):void 	 com.oracle.truffle.espresso.nodes.BytecodeNode.InstrumentationSupport
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode.InstrumentationSupport::notifyEntry(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.espresso.nodes.AbstractInstrumentableBytecodeNode):void 	 com.oracle.truffle.espresso.nodes.AbstractInstrumentableBytecodeNode
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode.InstrumentationSupport::notifyFieldModification(com.oracle.truffle.api.frame.VirtualFrame, int, com.oracle.truffle.espresso.impl.Field, com.oracle.truffle.espresso.runtime.staticobject.StaticObject, java.lang.Object):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode.InstrumentationSupport::notifyFieldAccess(com.oracle.truffle.api.frame.VirtualFrame, int, com.oracle.truffle.espresso.impl.Field, com.oracle.truffle.espresso.runtime.staticobject.StaticObject):void 	 com.oracle.truffle.espresso.impl.Field
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode.InstrumentationSupport::getStatementIndexAfterJump(int, int, int):int 	 com.oracle.truffle.espresso.bytecode.MapperBCI
Move Method	com.oracle.truffle.espresso.nodes.BytecodeNode.InstrumentationSupport::getNextStatementIndex(int, int):int 	 com.oracle.truffle.espresso.bytecode.MapperBCI
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::getMethodVersion():com.oracle.truffle.espresso.impl.Method.MethodVersion 	 com.oracle.truffle.espresso.nodes.EspressoInstrumentableRootNode
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::create(com.oracle.truffle.api.frame.FrameDescriptor, com.oracle.truffle.espresso.nodes.EspressoInstrumentableRootNode):com.oracle.truffle.espresso.nodes.EspressoRootNode 	 com.oracle.truffle.espresso.nodes.EspressoInstrumentableRootNode
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::hasExactlyOneRootBodyTag(com.oracle.truffle.espresso.nodes.EspressoNode):boolean 	 com.oracle.truffle.api.nodes.NodeUtil
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::createForBytecodes(com.oracle.truffle.espresso.impl.Method.MethodVersion):com.oracle.truffle.espresso.nodes.EspressoRootNode 	 com.oracle.truffle.espresso.nodes.BytecodeNode
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::setFrameId(com.oracle.truffle.api.frame.Frame, long):void 	 com.oracle.truffle.api.frame.Frame
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::setStackWalkAnchor(com.oracle.truffle.api.frame.Frame, long):void 	 com.oracle.truffle.api.frame.Frame
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::getCookie(com.oracle.truffle.api.frame.Frame):com.oracle.truffle.espresso.vm.FrameCookie 	 com.oracle.truffle.api.frame.Frame
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::initCookieSlot(com.oracle.truffle.api.frame.Frame):void 	 com.oracle.truffle.api.frame.Frame
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::readFrameIdOrZero(com.oracle.truffle.api.frame.Frame):long 	 com.oracle.truffle.espresso.vm.FrameCookie
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::readStackAnchorOrZero(com.oracle.truffle.api.frame.Frame):long 	 com.oracle.truffle.espresso.vm.FrameCookie
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::getMonitorStack(com.oracle.truffle.api.frame.Frame):com.oracle.truffle.espresso.nodes.EspressoRootNode.MonitorStack 	 com.oracle.truffle.api.frame.Frame
Move Method	com.oracle.truffle.espresso.nodes.EspressoRootNode::getMonitorsOnFrame(com.oracle.truffle.api.frame.Frame):com.oracle.truffle.espresso.runtime.staticobject.StaticObject[] 	 com.oracle.truffle.espresso.nodes.EspressoRootNode.MonitorStack
Move Method	com.oracle.truffle.espresso.nodes.NativeMethodNode::toObjectHandle(com.oracle.truffle.espresso.jni.JniEnv, java.lang.Object):java.lang.Object 	 com.oracle.truffle.espresso.jni.JniEnv
Move Method	com.oracle.truffle.espresso.nodes.NativeMethodNode::maybeThrowAndClearPendingException(com.oracle.truffle.espresso.jni.JniEnv):void 	 com.oracle.truffle.espresso.jni.JniEnv
Move Method	com.oracle.truffle.espresso.runtime.panama.DowncallStubNode::create(com.oracle.truffle.espresso.runtime.panama.DowncallStubs.DowncallStub, com.oracle.truffle.espresso.ffi.NativeAccess):com.oracle.truffle.espresso.runtime.panama.DowncallStubNode 	 com.oracle.truffle.espresso.ffi.NativeAccess
Move Method	com.oracle.truffle.espresso.runtime.panama.DowncallStubNode::call(java.lang.Object[]):java.lang.Object 	 com.oracle.truffle.espresso.runtime.panama.DowncallStubs.DowncallStub
Move Method	com.oracle.truffle.regex.RegexBodyNode::isBooleanMatch():boolean 	 com.oracle.truffle.regex.RegexSource
Move Method	com.oracle.truffle.regex.RegexRootNode::checkThreadInterrupted():void 	 com.oracle.truffle.api.CompilerAsserts
Move Method	com.oracle.truffle.regex.runtime.nodes.DispatchNode::doDirect(com.oracle.truffle.api.CallTarget, com.oracle.truffle.regex.result.RegexResult, com.oracle.truffle.api.CallTarget, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.regex.runtime.nodes.DispatchNode::doIndirect(com.oracle.truffle.api.CallTarget, com.oracle.truffle.regex.result.RegexResult, com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.IndirectCallNode
Move Method	com.oracle.truffle.regex.runtime.nodes.ExpectStringNode::doString(java.lang.String, com.oracle.truffle.api.strings.TruffleString.Encoding, com.oracle.truffle.api.strings.TruffleString.FromJavaStringNode):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.api.CompilerAsserts
Move Method	com.oracle.truffle.regex.runtime.nodes.ExpectStringNode::doBoxedString(java.lang.Object, com.oracle.truffle.api.strings.TruffleString.Encoding, com.oracle.truffle.regex.runtime.nodes.InteropLibrary):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.regex.runtime.nodes.ToIntNode::doBoxed(java.lang.Object, com.oracle.truffle.regex.runtime.nodes.InteropLibrary):int 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.regex.runtime.nodes.ToLongNode::doBoxed(java.lang.Object, com.oracle.truffle.regex.runtime.nodes.InteropLibrary):long 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.DFAFindInnerLiteralStateNode::executeInnerLiteralSearch(com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode):int 	 com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode::afterIndexOf(com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode, int, int, com.oracle.truffle.api.strings.TruffleString.CodeRange):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFASimpleCG
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode::atEnd(com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFASimpleCG
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode::successorFound(com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode, int):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFASimpleCG
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode::storeResult(com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode, boolean):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode::applySimpleCGTransition(com.oracle.truffle.regex.tregex.nodes.dfa.DFASimpleCGTransition, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFASimpleCGTransition
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode::applySimpleCGFinalTransition(com.oracle.truffle.regex.tregex.nodes.dfa.DFASimpleCGTransition, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFASimpleCGTransition
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.CGTrackingDFAStateNode::applyAnchoredFinalStateTransition(com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFACaptureGroupLazyTransition
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.CGTrackingDFAStateNode::applyUnAnchoredFinalStateTransition(com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFACaptureGroupLazyTransition
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.CGTrackingDFAStateNode::storeResult(com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.CGTrackingDFAStateNode::getCGTrackingCost():int 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFACaptureGroupLazyTransition
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.CGTrackingDFAStateNode::getCost(com.oracle.truffle.regex.tregex.nodes.dfa.DFACaptureGroupLazyTransition):int 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFACaptureGroupLazyTransition
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.CGTrackingDFAStateNode::getCost(com.oracle.truffle.regex.tregex.nodes.dfa.DFACaptureGroupPartialTransition):int 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFACaptureGroupPartialTransition
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode::calcNumberOfTransitions(com.oracle.truffle.regex.RegexSource, com.oracle.truffle.regex.tregex.nodes.dfa.DFAAbstractStateNode[]):int 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFAAbstractStateNode
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode::prefixMatcherMatches(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.regex.tregex.nodes.TRegexExecutorBaseNode, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.api.strings.TruffleString.CodeRange, boolean):boolean 	 com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode::asciiOrLatin1Matchers(com.oracle.truffle.api.strings.TruffleString.CodeRange, com.oracle.truffle.regex.tregex.matchers.CharMatcher[], com.oracle.truffle.regex.tregex.matchers.CharMatcher[]):com.oracle.truffle.regex.tregex.matchers.CharMatcher[] 	 com.oracle.truffle.api.strings.TruffleString.CodeRange
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode::match(com.oracle.truffle.regex.tregex.matchers.CharMatcher[], int, int):boolean 	 com.oracle.truffle.regex.tregex.matchers.CharMatcher
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode::transitionMatch(com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode, int):int 	 com.oracle.truffle.api.CompilerAsserts
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode::transitionNoMatch(com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode):int 	 com.oracle.truffle.api.CompilerAsserts
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode::execTransition(com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorLocals, com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode, int):int 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFAStateNode
Move Method	com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode::initResultOrder(int, int, com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorProperties):int[] 	 com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorProperties
Move Method	com.oracle.truffle.regex.tregex.nodes.input.InputReadNode::doTStringUTF8(com.oracle.truffle.api.strings.TruffleString, int, com.oracle.truffle.regex.tregex.string.Encodings.Encoding, com.oracle.truffle.api.strings.TruffleString.ReadByteNode):int 	 com.oracle.truffle.regex.tregex.string.Encodings.Encoding
Move Method	com.oracle.truffle.regex.tregex.nodes.input.InputReadNode::doTStringUTF16(com.oracle.truffle.api.strings.TruffleString, int, com.oracle.truffle.regex.tregex.string.Encodings.Encoding, com.oracle.truffle.api.strings.TruffleString.ReadCharUTF16Node):int 	 com.oracle.truffle.api.strings.TruffleString.ReadCharUTF16Node
Move Method	com.oracle.truffle.regex.tregex.nodes.input.InputReadNode::doTStringUTF32(com.oracle.truffle.api.strings.TruffleString, int, com.oracle.truffle.regex.tregex.string.Encodings.Encoding, com.oracle.truffle.api.strings.TruffleString.CodePointAtIndexNode):int 	 com.oracle.truffle.api.strings.TruffleString.CodePointAtIndexNode
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorNode::createFlags(com.oracle.truffle.regex.tregex.parser.ast.RegexAST, com.oracle.truffle.regex.tregex.nfa.PureNFA, boolean, com.oracle.truffle.regex.tregex.parser.ast.RegexASTSubtreeRootNode, int, int):int 	 com.oracle.truffle.regex.tregex.parser.ast.RegexAST
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorNode::getSubExecutor(com.oracle.truffle.regex.tregex.nfa.PureNFAState):com.oracle.truffle.regex.tregex.nodes.TRegexExecutorBaseNode 	 com.oracle.truffle.regex.tregex.nfa.PureNFAState
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorNode::subMatchFailed(com.oracle.truffle.regex.tregex.nfa.PureNFAState, java.lang.Object):boolean 	 com.oracle.truffle.regex.tregex.nfa.PureNFAState
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorNode::getBackRefBoundary(com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorLocals, com.oracle.truffle.regex.tregex.nfa.PureNFATransition, int, int):int 	 com.oracle.truffle.regex.tregex.parser.ast.GroupBoundaries
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorNode::updateState(com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorLocals, com.oracle.truffle.regex.tregex.nfa.PureNFATransition, int):void 	 com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorLocals
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorNode::tryUpdateState(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorLocals, com.oracle.truffle.api.strings.TruffleString.CodeRange, com.oracle.truffle.regex.tregex.nfa.PureNFATransition, int, boolean, int):boolean 	 com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorLocals
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexBacktrackingNFAExecutorNode::equalsIgnoreCase(int, int, boolean):boolean 	 com.oracle.truffle.regex.tregex.parser.flavors.RegexFlavor.EqualsIgnoreCasePredicate
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexLiteralLookAroundExecutorNode::create(com.oracle.truffle.regex.tregex.parser.ast.RegexAST, com.oracle.truffle.regex.tregex.parser.ast.LookAroundAssertion, com.oracle.truffle.regex.tregex.buffer.CompilationBuffer):com.oracle.truffle.regex.tregex.nodes.nfa.TRegexLiteralLookAroundExecutorNode 	 com.oracle.truffle.regex.tregex.parser.ast.LookAroundAssertion
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexNFAExecutorNode::create(com.oracle.truffle.regex.tregex.nfa.NFA):com.oracle.truffle.regex.tregex.nodes.nfa.TRegexNFAExecutorNode 	 com.oracle.truffle.regex.tregex.parser.ast.GroupBoundaries
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexNFAExecutorNode::expandState(com.oracle.truffle.regex.tregex.nodes.nfa.TRegexNFAExecutorLocals, int, int, boolean):void 	 com.oracle.truffle.regex.tregex.nfa.NFAStateTransition
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexNFAExecutorNode::maxTransitionIndex(com.oracle.truffle.regex.tregex.nfa.NFAState):int 	 com.oracle.truffle.regex.tregex.automaton.BasicState
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexNFAExecutorNode::findNextStatesAtEnd(com.oracle.truffle.regex.tregex.nodes.nfa.TRegexNFAExecutorLocals):void 	 com.oracle.truffle.regex.tregex.nfa.NFA
Move Method	com.oracle.truffle.regex.tregex.nodes.nfa.TRegexNFAExecutorNode::expandStateAtEnd(com.oracle.truffle.regex.tregex.nodes.nfa.TRegexNFAExecutorLocals, com.oracle.truffle.regex.tregex.nfa.NFAState, boolean):void 	 com.oracle.truffle.regex.tregex.nfa.NFAState
Move Method	com.oracle.truffle.regex.tregex.nodes.TRegexExecNode::charactersProcessedDuringSearch(com.oracle.truffle.regex.result.RegexResult, int, int):int 	 com.oracle.truffle.regex.result.RegexResult
Move Method	com.oracle.truffle.regex.tregex.nodes.TRegexExecNode::resultsEqual(com.oracle.truffle.regex.result.RegexResult, com.oracle.truffle.regex.result.RegexResult, int):boolean 	 com.oracle.truffle.regex.result.RegexResult
Move Method	com.oracle.truffle.regex.tregex.nodes.TRegexExecNode.LazyCaptureGroupRegexSearchNode::getForwardExecutor():com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode 	 com.oracle.truffle.regex.tregex.nodes.TRegexExecutorEntryNode
Move Method	com.oracle.truffle.regex.tregex.nodes.TRegexExecNode.LazyCaptureGroupRegexSearchNode::getBackwardExecutor():com.oracle.truffle.regex.tregex.nodes.dfa.TRegexDFAExecutorNode 	 com.oracle.truffle.regex.tregex.nodes.TRegexExecutorEntryNode
Move Method	com.oracle.truffle.regex.tregex.nodes.TRegexExecutorEntryNode.TRegexExecutorEntryInnerNode::runExecutor(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.api.strings.TruffleString, int, int, int, com.oracle.truffle.api.nodes.DirectCallNode, com.oracle.truffle.api.strings.TruffleString.CodeRange):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.regex.tregex.nodes.TRegexExecutorNode::inputAdvance(com.oracle.truffle.regex.tregex.nodes.TRegexExecutorLocals):void 	 com.oracle.truffle.regex.tregex.nodes.TRegexExecutorLocals
Move Method	com.oracle.truffle.regex.tregex.nodesplitter.GraphNode::createCopy(com.oracle.truffle.regex.tregex.nodesplitter.DFANodeSplit, short):void 	 com.oracle.truffle.regex.tregex.nodesplitter.DFANodeSplit
Move Method	com.oracle.truffle.regex.tregex.nodesplitter.GraphNode::getId():int 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFAAbstractStateNode
Move Method	com.oracle.truffle.regex.tregex.nodesplitter.GraphNode::nodeWeight():int 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFAAbstractStateNode
Move Method	com.oracle.truffle.regex.tregex.nodesplitter.GraphNode::replaceSuccessor(com.oracle.truffle.regex.tregex.nodesplitter.GraphNode):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFAAbstractStateNode
Move Method	com.oracle.truffle.regex.tregex.nodesplitter.GraphNode::registerDuplicate(com.oracle.truffle.regex.tregex.dfa.DFAGenerator):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFAAbstractStateNode
Move Method	com.oracle.truffle.regex.tregex.nodesplitter.GraphNode::updateSuccessors(com.oracle.truffle.regex.tregex.dfa.DFAGenerator):void 	 com.oracle.truffle.regex.tregex.nodes.dfa.DFAAbstractStateNode
Move Method	com.oracle.truffle.regex.tregex.parser.ast.RegexASTNode::astNodeId(com.oracle.truffle.regex.tregex.parser.ast.RegexASTNode):com.oracle.truffle.regex.tregex.util.json.JsonValue 	 com.oracle.truffle.regex.tregex.util.json.Json
Move Method	com.oracle.graal.pointsto.phases.InlineBeforeAnalysisGraphDecoder::maybeAbortInlining(jdk.graal.compiler.nodes.GraphDecoder.MethodScope, jdk.graal.compiler.nodes.GraphDecoder.LoopScope, jdk.graal.compiler.graph.Node):void 	 com.oracle.graal.pointsto.phases.InlineBeforeAnalysisGraphDecoder.InlineBeforeAnalysisMethodScope
Move Method	com.oracle.graal.pointsto.phases.InlineBeforeAnalysisGraphDecoder::abortInlining(com.oracle.graal.pointsto.phases.InlineBeforeAnalysisGraphDecoder.InlineBeforeAnalysisMethodScope):void 	 com.oracle.graal.pointsto.phases.InlineBeforeAnalysisGraphDecoder.InlineBeforeAnalysisMethodScope
Move Method	com.oracle.graal.pointsto.phases.InlineBeforeAnalysisGraphDecoder::killControlFlowNodes(jdk.graal.compiler.replacements.PEGraphDecoder.PEMethodScope, jdk.graal.compiler.nodes.FixedNode):void 	 jdk.graal.compiler.graph.Node
Move Method	com.oracle.svm.configure.config.conditional.MethodCallNode::hasConfig(com.oracle.svm.core.configure.ConfigurationFile):boolean 	 com.oracle.svm.configure.config.ConfigurationSet
Move Method	com.oracle.svm.configure.filters.HierarchyFilterNode::addToScore(com.oracle.svm.configure.filters.ConfigurationFilter.Inclusion, int):int 	 com.oracle.svm.configure.filters.ConfigurationFilter.Inclusion
Move Method	com.oracle.svm.configure.filters.HierarchyFilterNode::removeRedundantNodes(com.oracle.svm.configure.filters.ConfigurationFilter.Inclusion, com.oracle.svm.configure.filters.ConfigurationFilter.Inclusion):boolean 	 com.oracle.svm.configure.filters.ConfigurationFilter.Inclusion
Move Method	com.oracle.svm.core.genscavenge.GCImpl::verifyBeforeGC():void 	 com.oracle.svm.core.genscavenge.Timer
Move Method	com.oracle.svm.core.genscavenge.GCImpl::verifyAfterGC():void 	 com.oracle.svm.core.genscavenge.Timer
Move Method	com.oracle.svm.core.genscavenge.GCImpl::getChunkBytes():com.oracle.svm.core.genscavenge.UnsignedWord 	 com.oracle.svm.core.genscavenge.HeapImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl::postcondition():void 	 com.oracle.svm.core.genscavenge.Space
Move Method	com.oracle.svm.core.genscavenge.GCImpl::checkSanityAfterCollection(com.oracle.svm.core.genscavenge.YoungGeneration):void 	 com.oracle.svm.core.genscavenge.YoungGeneration
Move Method	com.oracle.svm.core.genscavenge.GCImpl::runtimeAssertions():boolean 	 com.oracle.svm.core.RuntimeAssertionsSupport
Move Method	com.oracle.svm.core.genscavenge.GCImpl::scavenge(boolean):void 	 com.oracle.svm.core.genscavenge.HeapImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl::walkRuntimeCodeCache():void 	 com.oracle.svm.core.genscavenge.Timer
Move Method	com.oracle.svm.core.genscavenge.GCImpl::cleanRuntimeCodeCache():void 	 com.oracle.svm.core.genscavenge.Timer
Move Method	com.oracle.svm.core.genscavenge.GCImpl::promoteChunksWithPinnedObjects():void 	 com.oracle.svm.core.genscavenge.Timer
Move Method	com.oracle.svm.core.genscavenge.GCImpl::removeClosedPinnedObjects(com.oracle.svm.core.genscavenge.PinnedObjectImpl):com.oracle.svm.core.genscavenge.PinnedObjectImpl 	 com.oracle.svm.core.genscavenge.PinnedObjectImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl::blackenStackRoots():void 	 com.oracle.svm.core.genscavenge.Timer
Move Method	com.oracle.svm.core.genscavenge.GCImpl::walkStackRoots(com.oracle.svm.core.heap.ObjectReferenceVisitor, com.oracle.svm.core.genscavenge.Pointer, com.oracle.svm.core.genscavenge.CodePointer, boolean):void 	 com.oracle.svm.core.thread.VMThreads
Move Method	com.oracle.svm.core.genscavenge.GCImpl::walkStack(com.oracle.svm.core.stack.JavaStackWalk, com.oracle.svm.core.heap.ObjectReferenceVisitor, boolean):void 	 com.oracle.svm.core.thread.VMOperation
Move Method	com.oracle.svm.core.genscavenge.GCImpl::blackenDirtyImageHeapRoots():void 	 com.oracle.svm.core.genscavenge.ImageHeapInfo
Move Method	com.oracle.svm.core.genscavenge.GCImpl::blackenImageHeapRoots():void 	 com.oracle.svm.core.genscavenge.Timer
Move Method	com.oracle.svm.core.genscavenge.GCImpl::walkImageHeapRoots(com.oracle.svm.core.genscavenge.ImageHeapInfo, com.oracle.svm.core.heap.ObjectVisitor):void 	 com.oracle.svm.core.genscavenge.ImageHeapWalker
Move Method	com.oracle.svm.core.genscavenge.GCImpl::blackenDirtyCardRoots():void 	 com.oracle.svm.core.genscavenge.Timer
Move Method	com.oracle.svm.core.genscavenge.GCImpl::prepareForPromotion(boolean):void 	 com.oracle.svm.core.genscavenge.HeapImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl::scanGreyObjects(boolean):void 	 com.oracle.svm.core.genscavenge.Timer
Move Method	com.oracle.svm.core.genscavenge.GCImpl::scanGreyObjectsLoop():void 	 com.oracle.svm.core.genscavenge.HeapImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl::promoteObject(java.lang.Object, jdk.graal.compiler.word.Word):java.lang.Object 	 com.oracle.svm.core.genscavenge.HeapImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl::getChunk(java.lang.Object, boolean):com.oracle.svm.core.genscavenge.HeapChunk.Header<?> 	 com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl::promotePinnedObject(com.oracle.svm.core.genscavenge.PinnedObjectImpl):void 	 com.oracle.svm.core.genscavenge.Space
Move Method	com.oracle.svm.core.genscavenge.GCImpl::swapSpaces():void 	 com.oracle.svm.core.genscavenge.HeapImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl::releaseSpaces():void 	 com.oracle.svm.core.genscavenge.HeapImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl::doReferenceHandling():void 	 com.oracle.svm.core.thread.VMOperation
Move Method	com.oracle.svm.core.genscavenge.GCImpl.CollectionVMOperation::collect(com.oracle.svm.core.genscavenge.GCImpl.CollectionVMOperationData):void 	 com.oracle.svm.core.genscavenge.HeapImpl
Move Method	com.oracle.svm.core.genscavenge.GCImpl.ChunkReleaser::getLast(T):T 	 com.oracle.svm.core.genscavenge.HeapChunk
Move Method	com.oracle.svm.core.genscavenge.GCImpl::printGCSummary():void 	 com.oracle.svm.core.option.RuntimeOptionKey
Move Method	com.oracle.svm.core.graal.llvm.replacements.LLVMBinaryIntrinsicNode::factory(com.oracle.svm.core.graal.llvm.replacements.LLVMIntrinsicNode.LLVMIntrinsicOperation, com.oracle.svm.core.graal.llvm.replacements.JavaKind, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode):com.oracle.svm.core.graal.llvm.replacements.LLVMBinaryIntrinsicNode 	 jdk.graal.compiler.debug.GraalError
Move Method	com.oracle.svm.core.graal.llvm.replacements.LLVMCeilNode::fold(com.oracle.svm.core.graal.llvm.replacements.JavaConstant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	com.oracle.svm.core.graal.llvm.replacements.LLVMCopySignNode::fold(com.oracle.svm.core.graal.llvm.replacements.JavaConstant, com.oracle.svm.core.graal.llvm.replacements.JavaConstant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	com.oracle.svm.core.graal.llvm.replacements.LLVMCountLeadingZerosNode::fold(com.oracle.svm.core.graal.llvm.replacements.JavaConstant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	com.oracle.svm.core.graal.llvm.replacements.LLVMCountTrailingZerosNode::fold(com.oracle.svm.core.graal.llvm.replacements.JavaConstant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	com.oracle.svm.core.graal.llvm.replacements.LLVMFloorNode::fold(com.oracle.svm.core.graal.llvm.replacements.JavaConstant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	com.oracle.svm.core.graal.llvm.replacements.LLVMMaxNode::fold(com.oracle.svm.core.graal.llvm.replacements.JavaConstant, com.oracle.svm.core.graal.llvm.replacements.JavaConstant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	com.oracle.svm.core.graal.llvm.replacements.LLVMMinNode::fold(com.oracle.svm.core.graal.llvm.replacements.JavaConstant, com.oracle.svm.core.graal.llvm.replacements.JavaConstant):jdk.graal.compiler.nodes.ConstantNode 	 jdk.graal.compiler.nodes.ConstantNode
Move Method	com.oracle.svm.core.graal.llvm.replacements.LLVMUnaryIntrinsicNode::factory(com.oracle.svm.core.graal.llvm.replacements.LLVMIntrinsicNode.LLVMIntrinsicOperation, com.oracle.svm.core.graal.llvm.replacements.JavaKind, jdk.graal.compiler.nodes.ValueNode):com.oracle.svm.core.graal.llvm.replacements.LLVMUnaryIntrinsicNode 	 jdk.graal.compiler.debug.GraalError
Move Method	com.oracle.svm.core.classinitialization.EnsureClassInitializedNode::intrinsify(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.nodes.ValueNode):boolean 	 jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext
Move Method	com.oracle.svm.core.graal.nodes.CEntryPointEnterNode::createIsolate(jdk.graal.compiler.nodes.ValueNode):com.oracle.svm.core.graal.nodes.CEntryPointEnterNode 	 com.oracle.svm.core.graal.nodes.CEntryPointEnterNode.EnterAction
Move Method	com.oracle.svm.core.graal.nodes.CEntryPointEnterNode::attachThread(jdk.graal.compiler.nodes.ValueNode, boolean, boolean):com.oracle.svm.core.graal.nodes.CEntryPointEnterNode 	 com.oracle.svm.core.graal.nodes.CEntryPointEnterNode.EnterAction
Move Method	com.oracle.svm.core.graal.nodes.CEntryPointEnterNode::enter(jdk.graal.compiler.nodes.ValueNode):com.oracle.svm.core.graal.nodes.CEntryPointEnterNode 	 com.oracle.svm.core.graal.nodes.CEntryPointEnterNode.EnterAction
Move Method	com.oracle.svm.core.graal.nodes.CEntryPointEnterNode::enterByIsolate(jdk.graal.compiler.nodes.ValueNode):com.oracle.svm.core.graal.nodes.CEntryPointEnterNode 	 com.oracle.svm.core.graal.nodes.CEntryPointEnterNode.EnterAction
Move Method	com.oracle.svm.core.graal.nodes.CEntryPointLeaveNode::isAllowedMerge(jdk.graal.compiler.nodes.AbstractMergeNode):boolean 	 jdk.graal.compiler.nodes.AbstractMergeNode
Move Method	com.oracle.svm.core.graal.nodes.FieldOffsetNode::create(com.oracle.svm.core.graal.nodes.JavaKind, com.oracle.svm.core.graal.nodes.ResolvedJavaField):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.nodes.calc.NarrowNode
Move Method	com.oracle.svm.core.graal.nodes.SubstrateCompressionNode::compress(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.CompressEncoding):com.oracle.svm.core.graal.nodes.SubstrateCompressionNode 	 jdk.graal.compiler.nodes.CompressionNode.CompressionOp
Move Method	com.oracle.svm.core.graal.nodes.SubstrateCompressionNode::uncompress(jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.core.common.CompressEncoding):com.oracle.svm.core.graal.nodes.SubstrateCompressionNode 	 jdk.graal.compiler.nodes.CompressionNode.CompressionOp
Move Method	com.oracle.svm.core.graal.stackvalue.AbstractStackValueNode::needsVirtualThreadCheck(com.oracle.svm.core.graal.stackvalue.ResolvedJavaMethod, boolean):boolean 	 com.oracle.svm.core.Uninterruptible.Utils
Move Method	com.oracle.svm.core.graal.stackvalue.LateStackValueNode::create(jdk.graal.compiler.nodes.ValueNode, com.oracle.svm.core.graal.stackvalue.ResolvedJavaMethod, int, boolean):com.oracle.svm.core.graal.stackvalue.LateStackValueNode 	 com.oracle.svm.core.config.ConfigurationValues
Move Method	com.oracle.svm.core.graal.stackvalue.StackValueNode::create(long, long, jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, boolean):jdk.graal.compiler.nodes.ValueNode 	 jdk.graal.compiler.core.common.calc.UnsignedMath
Move Method	com.oracle.svm.core.graal.stackvalue.StackValueNode::create(int, com.oracle.svm.core.graal.stackvalue.StackValueNode.StackSlotIdentity, boolean):com.oracle.svm.core.graal.stackvalue.StackValueNode 	 jdk.graal.compiler.core.common.calc.UnsignedMath
Move Method	com.oracle.svm.core.identityhashcode.SubstrateIdentityHashCodeNode::isIdentityHashFieldOptional():boolean 	 com.oracle.svm.core.config.ConfigurationValues
Move Method	com.oracle.svm.core.jfr.JfrBufferNode::offsetOfLock():int 	 com.oracle.svm.core.util.VMError
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::createJFR(boolean):boolean 	 com.oracle.svm.core.jfr.JfrStackTraceRepository
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::destroyJFR():boolean 	 com.oracle.svm.core.jfr.JfrRecorderThread
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::getStackTraceId(int):long 	 com.oracle.svm.core.jfr.JfrStackTraceRepository
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::getThreadId(java.lang.Thread):long 	 com.oracle.svm.core.jfr.HasJfrSupport
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::getCurrentThreadId():long 	 com.oracle.svm.core.jfr.HasJfrSupport
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::storeMetadataDescriptor(byte[]):void 	 com.oracle.svm.core.jfr.JfrChunkWriter
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::beginRecording():void 	 com.oracle.svm.core.jfr.JfrChunkWriter
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::setOutput(java.lang.String):void 	 com.oracle.svm.core.jfr.JfrUnlockedChunkWriter
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::setFileNotification(long):void 	 com.oracle.svm.core.jfr.JfrOptionSet
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::setGlobalBufferCount(long):void 	 com.oracle.svm.core.jfr.JfrOptionSet
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::setGlobalBufferSize(long):void 	 com.oracle.svm.core.jfr.JfrOptionSet
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::setMemorySize(long):void 	 com.oracle.svm.core.jfr.JfrOptionSet
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::updateSampler0():void 	 com.oracle.svm.core.jfr.sampler.JfrExecutionSampler
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::setStackDepth(int):void 	 com.oracle.svm.core.jfr.JfrOptionSet
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::flush():void 	 com.oracle.svm.core.jfr.JfrUnlockedChunkWriter
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::markChunkFinal():void 	 com.oracle.svm.core.jfr.JfrUnlockedChunkWriter
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::shouldRotateDisk():boolean 	 com.oracle.svm.core.jfr.JfrUnlockedChunkWriter
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::emitOldObjectSamples(long, boolean, boolean):void 	 com.oracle.svm.core.jfr.oldobject.JfrOldObjectProfiler
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::getChunkStartNanos():long 	 com.oracle.svm.core.jfr.JfrUnlockedChunkWriter
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::isEnabled(com.oracle.svm.core.jfr.JfrEvent):boolean 	 com.oracle.svm.core.jfr.JfrEvent
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::setLarge(com.oracle.svm.core.jfr.JfrEvent, boolean):void 	 com.oracle.svm.core.jfr.JfrEvent
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::isLarge(com.oracle.svm.core.jfr.JfrEvent):boolean 	 com.oracle.svm.core.jfr.JfrEvent
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::getThresholdTicks(com.oracle.svm.core.jfr.JfrEvent):long 	 com.oracle.svm.core.jfr.JfrEvent
Move Method	com.oracle.svm.core.jfr.SubstrateJVM::printSamplerStatistics():void 	 com.oracle.svm.core.log.Log
Move Method	com.oracle.svm.hosted.ReachabilityRegistrationNode::create(java.lang.Runnable, com.oracle.svm.core.ParsingReason):com.oracle.svm.hosted.ReachabilityRegistrationNode 	 com.oracle.svm.core.util.VMError
Move Method	com.oracle.svm.hosted.c.query.QueryResultParser::parse(com.oracle.svm.hosted.c.NativeLibraries, com.oracle.svm.hosted.c.info.NativeCodeInfo, java.io.InputStream):java.util.List<java.lang.String> 	 com.oracle.svm.hosted.c.util.FileUtils
Move Method	com.oracle.svm.hosted.c.query.QueryResultParser::parseFloatValue(com.oracle.svm.hosted.c.info.PropertyInfo<java.lang.Object>):void 	 com.oracle.svm.hosted.c.info.PropertyInfo
Move Method	com.oracle.svm.hosted.c.query.QueryResultParser::parseIntegerProperty(com.oracle.svm.hosted.c.info.PropertyInfo<java.lang.Integer>):void 	 com.oracle.svm.hosted.c.info.PropertyInfo
Move Method	com.oracle.svm.hosted.classinitialization.SimulateClassInitializerGraphDecoder::handleAccessMonitorNode(jdk.graal.compiler.nodes.java.AccessMonitorNode):jdk.graal.compiler.graph.Node 	 jdk.graal.compiler.nodes.java.AccessMonitorNode
Move Method	com.oracle.svm.hosted.classinitialization.SimulateClassInitializerGraphDecoder::accumulatedNewObjectSize(com.oracle.svm.hosted.classinitialization.SimulateClassInitializerPolicy.SimulateClassInitializerInlineScope, long, jdk.graal.compiler.graph.Node):boolean 	 jdk.graal.compiler.debug.DebugContext
Move Method	com.oracle.svm.hosted.classinitialization.SimulateClassInitializerGraphDecoder::asIntegerOrMinusOne(jdk.graal.compiler.nodes.ValueNode):int 	 jdk.graal.compiler.nodes.ValueNode
Move Method	com.oracle.svm.hosted.dashboard.DashboardDumpFeature::isHeapBreakdownDumped():boolean 	 com.oracle.svm.core.option.HostedOptionKey
Move Method	com.oracle.svm.hosted.dashboard.DashboardDumpFeature::isPointsToDumped():boolean 	 com.oracle.svm.core.option.HostedOptionKey
Move Method	com.oracle.svm.hosted.dashboard.DashboardDumpFeature::isCodeBreakdownDumped():boolean 	 com.oracle.svm.core.option.HostedOptionKey
Move Method	com.oracle.svm.hosted.dashboard.DashboardDumpFeature::isBgvFormat():boolean 	 com.oracle.svm.core.option.HostedOptionKey
Move Method	com.oracle.svm.hosted.dashboard.DashboardDumpFeature::isPretty():boolean 	 com.oracle.svm.core.option.HostedOptionKey
Move Method	com.oracle.svm.hosted.dashboard.DashboardDumpFeature::getFile(java.lang.String):java.nio.file.Path 	 com.oracle.svm.core.option.HostedOptionKey
Move Method	com.oracle.svm.hosted.reflect.ReflectionDataBuilder::registerClass(java.lang.Class<?>, boolean, boolean):void 	 com.oracle.graal.pointsto.meta.AnalysisMetaAccess
Move Method	com.oracle.svm.hosted.reflect.ReflectionDataBuilder::registerField(boolean, java.lang.reflect.Field):void 	 com.oracle.graal.pointsto.meta.AnalysisMetaAccess
Move Method	com.oracle.svm.hosted.reflect.ReflectionDataBuilder::checkSubtypeForOverridingField(com.oracle.graal.pointsto.meta.AnalysisField, com.oracle.graal.pointsto.meta.AnalysisType):void 	 com.oracle.graal.pointsto.meta.AnalysisField
Move Method	com.oracle.svm.hosted.reflect.ReflectionDataBuilder::checkSubtypeForOverridingMethod(com.oracle.graal.pointsto.meta.AnalysisMethod, com.oracle.graal.pointsto.meta.AnalysisType):void 	 com.oracle.graal.pointsto.meta.AnalysisMethod
Move Method	com.oracle.svm.hosted.reflect.ReflectionDataBuilder::registerTypesForAnnotationDefault(com.oracle.graal.pointsto.meta.AnalysisMethod):void 	 com.oracle.svm.hosted.annotation.AnnotationMemberValue
Move Method	com.oracle.svm.hosted.reflect.ReflectionDataBuilder::includeAnnotation(com.oracle.svm.hosted.annotation.AnnotationValue):boolean 	 com.oracle.svm.hosted.annotation.AnnotationValue
Move Method	com.oracle.svm.hosted.reflect.ReflectionDataBuilder::queryGenericInfo(java.util.concurrent.Callable<T>):T 	 com.oracle.svm.core.util.VMError
Move Method	com.oracle.svm.hosted.reflect.ReflectionDataBuilder::registerLinkageError(java.lang.Class<?>, java.lang.LinkageError, java.util.Map<java.lang.Class<?>,java.lang.Throwable>):void 	 com.oracle.svm.hosted.LinkAtBuildTimeSupport
Move Method	com.oracle.svm.hosted.reflect.ReflectionDataBuilder.TestBackdoor::registerField(com.oracle.svm.hosted.reflect.ReflectionDataBuilder, boolean, java.lang.reflect.Field):void 	 com.oracle.svm.hosted.reflect.ReflectionDataBuilder
Move Method	com.oracle.svm.hosted.thread.VMThreadFeature::currentThread(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext):jdk.graal.compiler.nodes.ValueNode 	 com.oracle.svm.core.graal.nodes.ReadReservedRegister
Move Method	com.oracle.svm.hosted.thread.VMThreadFeature::handleSet(jdk.graal.compiler.nodes.graphbuilderconf.GraphBuilderContext, jdk.graal.compiler.nodes.graphbuilderconf.InvocationPlugin.Receiver, jdk.graal.compiler.nodes.ValueNode, jdk.graal.compiler.nodes.ValueNode, boolean):boolean 	 jdk.graal.compiler.nodes.graphbuilderconf.InvocationPlugin.Receiver
Move Method	com.oracle.svm.hosted.thread.VMThreadFeature::offsetOf(com.oracle.svm.core.threadlocal.FastThreadLocal):int 	 com.oracle.svm.hosted.thread.VMThreadLocalCollector
Move Method	com.oracle.truffle.llvm.nfi.SulongNFIRootNode.ParseSourceNode::doParse(com.oracle.truffle.api.TruffleLanguage.Env):com.oracle.truffle.api.CallTarget 	 com.oracle.truffle.api.TruffleLanguage.Env
Move Method	com.oracle.truffle.llvm.nfi.SulongNFIRootNode::doCached(com.oracle.truffle.api.CallTarget, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.llvm.nfi.SulongNFIRootNode::doGeneric(com.oracle.truffle.api.CallTarget, com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.IndirectCallNode
Move Method	com.oracle.truffle.llvm.parser.metadata.MDNamedNode::create(java.lang.String, long[], com.oracle.truffle.llvm.parser.metadata.MetadataValueList):com.oracle.truffle.llvm.parser.metadata.MDNamedNode 	 com.oracle.truffle.llvm.parser.metadata.MetadataValueList
Move Method	com.oracle.truffle.llvm.parser.metadata.MDNode::create38(com.oracle.truffle.llvm.parser.scanner.RecordBuffer, com.oracle.truffle.llvm.parser.metadata.MetadataValueList):com.oracle.truffle.llvm.parser.metadata.MDNode 	 com.oracle.truffle.llvm.parser.metadata.MetadataValueList
Move Method	com.oracle.truffle.llvm.parser.metadata.MDNode::create32(long[], com.oracle.truffle.llvm.parser.listeners.Metadata):com.oracle.truffle.llvm.parser.metadata.MDNode 	 com.oracle.truffle.llvm.parser.metadata.ParseUtil
Move Method	com.oracle.truffle.llvm.runtime.LLVMGetStackFromThreadNode::getStack(com.oracle.truffle.llvm.runtime.memory.LLVMThreadingStack, java.lang.Thread):com.oracle.truffle.llvm.runtime.memory.LLVMStack 	 com.oracle.truffle.llvm.runtime.memory.LLVMThreadingStack
Move Method	com.oracle.truffle.llvm.runtime.LLVMGetStackFromThreadNode::generic(com.oracle.truffle.llvm.runtime.memory.LLVMThreadingStack, java.lang.Thread, com.oracle.truffle.llvm.runtime.ConditionProfile):com.oracle.truffle.llvm.runtime.memory.LLVMStack 	 com.oracle.truffle.llvm.runtime.memory.LLVMThreadingStack
Move Method	com.oracle.truffle.llvm.runtime.debug.debugexpr.nodes.DebugExprArrayElementNode::create(com.oracle.truffle.llvm.runtime.debug.debugexpr.nodes.DebugExpressionPair, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode):com.oracle.truffle.llvm.runtime.debug.debugexpr.nodes.DebugExprArrayElementNode 	 com.oracle.truffle.llvm.runtime.debug.debugexpr.parser.DebugExprType
Move Method	com.oracle.truffle.llvm.runtime.debug.debugexpr.nodes.DebugExprPointerCastNode::getMember(java.lang.Object, com.oracle.truffle.api.frame.VirtualFrame):java.lang.Object 	 com.oracle.truffle.llvm.runtime.debug.debugexpr.nodes.DebugExprTypeofNode
Move Method	com.oracle.truffle.llvm.runtime.debug.debugexpr.nodes.DebugExprSizeofNode::create(com.oracle.truffle.llvm.runtime.debug.debugexpr.parser.DebugExprType):com.oracle.truffle.llvm.runtime.debug.debugexpr.nodes.DebugExprSizeofNode 	 com.oracle.truffle.llvm.runtime.LLVMLanguage
Move Method	com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleNode::createFunction():com.oracle.truffle.llvm.runtime.NativeContextExtension.WellKnownNativeFunctionNode 	 com.oracle.truffle.llvm.runtime.NativeContextExtension
Move Method	com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleNode::getFunction():com.oracle.truffle.llvm.runtime.NativeContextExtension.WellKnownNativeFunctionAndSignature 	 com.oracle.truffle.llvm.runtime.NativeContextExtension
Move Method	com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleNode.LLVMLongDoubleNativeCallNode::doCall(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.NativeContextExtension.WellKnownNativeFunctionNode, com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode):com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleFloatingPoint 	 com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode
Move Method	com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleNode.LLVMLongDoubleUnaryNativeCallNode::doCall(java.lang.Object, com.oracle.truffle.llvm.runtime.NativeContextExtension.WellKnownNativeFunctionNode, com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode):com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleFloatingPoint 	 com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMAsForeignNode::doForeign(java.lang.Object, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode::create(com.oracle.truffle.llvm.runtime.types.Type):com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode 	 com.oracle.truffle.llvm.runtime.types.PrimitiveType
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVM80BitFloatDataEscapeNode::escaping80BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVM128BitFloatDataEscapeNode::escaping128BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVMPointerDataEscapeNode::escapingForeignNonPointer(java.lang.Object, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVMVoidDataEscapeNode::doVoid(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMForeignCallNode.PackForeignArgumentsNode::create(com.oracle.truffle.llvm.runtime.types.FunctionType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType, com.oracle.truffle.llvm.runtime.debug.type.LLVMSourceFunctionType):com.oracle.truffle.llvm.runtime.interop.LLVMForeignCallNode.PackForeignArgumentsNode 	 com.oracle.truffle.llvm.runtime.interop.LLVMGetInteropPrimitiveParamNode
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMForeignCallNode::getCallTarget(com.oracle.truffle.llvm.runtime.LLVMFunctionCode):com.oracle.truffle.api.CallTarget 	 com.oracle.truffle.llvm.runtime.LLVMFunction
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMForeignConstructorCallNode::create(com.oracle.truffle.llvm.runtime.LLVMLanguage, com.oracle.truffle.llvm.runtime.LLVMFunctionCode, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType, com.oracle.truffle.llvm.runtime.debug.type.LLVMSourceFunctionType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured):com.oracle.truffle.llvm.runtime.interop.LLVMForeignConstructorCallNode 	 com.oracle.truffle.llvm.runtime.LLVMFunction
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMForeignFunctionCallNode::getReturnBaseType(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType):com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Function
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMForeignIntrinsicCallNode::create(com.oracle.truffle.llvm.runtime.LLVMLanguage, com.oracle.truffle.llvm.runtime.LLVMFunctionCode.Intrinsic, com.oracle.truffle.llvm.runtime.types.FunctionType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Function):com.oracle.truffle.llvm.runtime.interop.LLVMForeignIntrinsicCallNode 	 com.oracle.truffle.llvm.runtime.LLVMFunctionCode.Intrinsic
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMGetInteropPrimitiveParamNode::getParam(java.lang.Object[]):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM
Move Method	com.oracle.truffle.llvm.runtime.interop.LLVMGetInteropStructParamNode::getParam(java.lang.Object[]):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMAccessForeignObjectNode.ResolveNativePointerNode::doPointer(java.lang.Object, long, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode):com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMAccessForeignObjectNode.ResolveNativePointerNode::doDerefHandle(java.lang.Object, long, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode):com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode::doArrayCachedTypeSize(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Array, java.lang.Object, long, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.MakeAccessLocation, long):com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.AccessLocation 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.MakeAccessLocation
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode::doArray(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Array, java.lang.Object, long, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.MakeAccessLocation):com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.AccessLocation 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.MakeAccessLocation
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode::doStructMember(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Struct, java.lang.Object, long, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.StructMember, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.MakeAccessLocation):com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.AccessLocation 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.MakeAccessLocation
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode::checkMember(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Struct, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.StructMember, long):boolean 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.StructMember
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode::findMember(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Struct, long):com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.StructMember 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropInvokeNode::doClazz(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Clazz, java.lang.String, java.lang.Object[], com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropMethodInvokeNode, com.oracle.truffle.llvm.runtime.interop.access.LLVMSelfArgumentPackNode, com.oracle.truffle.llvm.runtime.interop.access.InteropLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropMethodInvokeNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropMethodInvokeNode::doNonvirtualCall(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, java.lang.String, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Clazz, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Method, long, java.lang.Object[], com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropNonvirtualCallNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropNonvirtualCallNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropNonvirtualCallNode::mkErrorMessage(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Clazz, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Method):java.lang.String 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode::hasVirtualMethods(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured):boolean 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Clazz
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode::doClazzCached(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Clazz, java.lang.Object, long, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Clazz, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.VTable):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode::doClazz(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Clazz, java.lang.Object, long, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode.ReadLocationNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode::doSpecialType(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.SpecialStruct, java.lang.Object, long, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropSpecialAccessNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropSpecialAccessNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode::doKnownType(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, java.lang.Object, long, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode.ReadLocationNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode::doUnknownType(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, java.lang.Object, long, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode.ReadLocationNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode.ReadLocationNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode.ReadLocationNode::isLocationTypeNullOrSameSize(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.AccessLocation, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType):boolean 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.ValueKind
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode.ReadLocationNode::fallback(java.lang.Object, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.AccessLocation, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode::doKnownType(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, java.lang.Object, long, java.lang.Object, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.WriteLocationNode):void 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode::doUnknownType(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, java.lang.Object, long, java.lang.Object, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.WriteLocationNode):void 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.WriteLocationNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.WriteLocationNode::fallback(java.lang.Object, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.AccessLocation, java.lang.Object, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType):void 	 com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.WriteLocationNode::isLocationTypeNullOrSameSize(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropAccessNode.AccessLocation, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType):boolean 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Value
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.ReinterpretLLVMAsLong::doI16(java.lang.Object, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVMI16DataEscapeNode):long 	 com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVMI16DataEscapeNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.ReinterpretLLVMAsLong::doI32(java.lang.Object, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVMI32DataEscapeNode):long 	 com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVMI32DataEscapeNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.ReinterpretLLVMAsLong::doI64(java.lang.Object, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVMI64DataEscapeNode):long 	 com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode.LLVMI64DataEscapeNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.ConvertOutgoingNode::doKnownType(java.lang.Object, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Value, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.ConvertOutgoingNode::typeMismatch(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Value, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType):boolean 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode.ConvertOutgoingNode::doUnknownType(java.lang.Object, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Value, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM.ForeignToLLVMType, com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMReadFromForeignObjectNode.ForeignReadI64Node::doStructured(java.lang.Object, long, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropReadNode
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMWriteToForeignObjectNode.ForeignWriteI8Node::doStructured(java.lang.Object, long, byte, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMWriteToForeignObjectNode.ForeignWriteI16Node::doStructured(java.lang.Object, long, short, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMWriteToForeignObjectNode.ForeignWriteI32Node::doStructured(java.lang.Object, long, int, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMWriteToForeignObjectNode.ForeignWriteFloatNode::doStructured(java.lang.Object, long, float, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMWriteToForeignObjectNode.ForeignWriteDoubleNode::doStructured(java.lang.Object, long, double, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.access.LLVMWriteToForeignObjectNode.ForeignWriteI64Node::doStructured(java.lang.Object, long, java.lang.Object, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropWriteNode):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignDirectSuperElemPtrNode::doResolve(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignGetIndexPointerNode::doCached(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Array, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long, long, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType, com.oracle.truffle.llvm.runtime.interop.export.BranchProfile):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Array
Move Method	com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignGetMemberPointerNode::doCached(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Struct, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, java.lang.String, java.lang.String, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.StructMember):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignGetMemberPointerNode::doGeneric(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Struct, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, java.lang.String, com.oracle.truffle.llvm.runtime.interop.export.BranchProfile):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Struct
Move Method	com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignReadNode::doValue(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Value, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.ValueKind, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMOffsetLoadNode, com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMOffsetLoadNode
Move Method	com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignVirtualSuperElemPtrNode::doResolveOther(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long, com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignReadNode):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignVirtualSuperElemPtrNode::doResolveWindows(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long, com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignReadNode):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.interop.export.LLVMForeignWriteNode::doValue(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Value, java.lang.Object, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.ValueKind, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMOffsetStoreNode, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMOffsetStoreNode
Move Method	com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode::createToNative(com.oracle.truffle.llvm.runtime.types.Type):com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode 	 com.oracle.truffle.llvm.runtime.types.PrimitiveType
Move Method	com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode::createFromNative(com.oracle.truffle.llvm.runtime.types.Type):com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode 	 com.oracle.truffle.llvm.runtime.types.PrimitiveType
Move Method	com.oracle.truffle.llvm.runtime.memory.LLVMUniquesRegionAllocNode::doOp(com.oracle.truffle.api.frame.VirtualFrame):void 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.api.LLVMInstrumentableNode::getScope(com.oracle.truffle.api.frame.Frame, boolean, com.oracle.truffle.llvm.runtime.nodes.api.NodeLibrary):java.lang.Object 	 com.oracle.truffle.api.frame.Frame
Move Method	com.oracle.truffle.llvm.runtime.nodes.api.LLVMInstrumentableNode::isLLDebugEnabled(com.oracle.truffle.llvm.runtime.LLVMContext):boolean 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.runtime.nodes.api.LLVMNode::nativeCallStatisticsEnabled():boolean 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.runtime.nodes.api.LLVMNode::findDataLayout(com.oracle.truffle.api.nodes.Node):com.oracle.truffle.llvm.runtime.datalayout.DataLayout 	 com.oracle.truffle.llvm.runtime.LLVMLanguage
Move Method	com.oracle.truffle.llvm.runtime.nodes.api.LLVMNode::getParent(com.oracle.truffle.api.nodes.Node, java.lang.Class<T>):T 	 com.oracle.truffle.api.instrumentation.InstrumentableNode.WrapperNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode::doConvert(java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.ToNativePointerNode):com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.ToNativePointerNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.api.LLVMToPointerNode::doGeneric(java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64AddNode.LLVMAMD64AddbNode::doI8(com.oracle.truffle.api.frame.VirtualFrame, byte, byte):byte 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64AddNode.LLVMAMD64AddwNode::doI16(com.oracle.truffle.api.frame.VirtualFrame, short, short):short 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64AddNode.LLVMAMD64AddlNode::doI32(com.oracle.truffle.api.frame.VirtualFrame, int, int):int 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64AddNode.LLVMAMD64AddqNode::doI64(com.oracle.truffle.api.frame.VirtualFrame, long, long):long 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64AndNode.LLVMAMD64AndbNode::doI8(com.oracle.truffle.api.frame.VirtualFrame, byte, byte):byte 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64AndNode.LLVMAMD64AndwNode::doI16(com.oracle.truffle.api.frame.VirtualFrame, short, short):short 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64AndNode.LLVMAMD64AndlNode::doI32(com.oracle.truffle.api.frame.VirtualFrame, int, int):int 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64AndNode.LLVMAMD64AndqNode::doI64(com.oracle.truffle.api.frame.VirtualFrame, long, long):long 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64CmpNode.LLVMAMD64CmpbNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, byte, byte):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPAZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64CmpNode.LLVMAMD64CmpwNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, short, short):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPAZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64CmpNode.LLVMAMD64CmplNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPAZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64CmpNode.LLVMAMD64CmpqNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, long, long):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPAZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64CpuidNode::getI8(java.lang.String, int):byte 	 com.oracle.truffle.api.CompilerAsserts
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64DecNode.LLVMAMD64DecbNode::doI8(com.oracle.truffle.api.frame.VirtualFrame, byte):byte 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64DecNode.LLVMAMD64DecwNode::doI16(com.oracle.truffle.api.frame.VirtualFrame, short):short 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64DecNode.LLVMAMD64DeclNode::doI32(com.oracle.truffle.api.frame.VirtualFrame, int):int 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64DecNode.LLVMAMD64DecqNode::doI64(com.oracle.truffle.api.frame.VirtualFrame, long):long 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64GetRspNode::getLLVMStack(com.oracle.truffle.api.frame.VirtualFrame):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.memory.LLVMStack.LLVMStackAccess
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64ImulNode::setFlags(com.oracle.truffle.api.frame.VirtualFrame, byte, boolean, boolean):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteBooleanNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64IncNode.LLVMAMD64IncbNode::doI8(com.oracle.truffle.api.frame.VirtualFrame, byte):byte 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64IncNode.LLVMAMD64IncwNode::doI16(com.oracle.truffle.api.frame.VirtualFrame, short):short 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64IncNode.LLVMAMD64InclNode::doI32(com.oracle.truffle.api.frame.VirtualFrame, int):int 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64IncNode.LLVMAMD64IncqNode::doI64(com.oracle.truffle.api.frame.VirtualFrame, long):long 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdatePZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64MulNode::setFlags(com.oracle.truffle.api.frame.VirtualFrame, byte, boolean, boolean):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteBooleanNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64NegNode.LLVMAMD64NegbNode::doI8(com.oracle.truffle.api.frame.VirtualFrame, byte):byte 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64NegNode.LLVMAMD64NegwNode::doI16(com.oracle.truffle.api.frame.VirtualFrame, short):short 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64NegNode.LLVMAMD64NeglNode::doI32(com.oracle.truffle.api.frame.VirtualFrame, int):int 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64NegNode.LLVMAMD64NegqNode::doI64(com.oracle.truffle.api.frame.VirtualFrame, long):long 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64RepNode::doRep(com.oracle.truffle.api.frame.VirtualFrame):void 	 com.oracle.truffle.api.nodes.LoopNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64SetFlagNode::doSetFlag(com.oracle.truffle.api.frame.VirtualFrame):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteBooleanNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64StosNode.LLVMAMD64StosbNode::opI8(com.oracle.truffle.api.frame.VirtualFrame, byte, long, boolean):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64StosNode.LLVMAMD64StosbNode::opI8(com.oracle.truffle.api.frame.VirtualFrame, byte, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, boolean):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64StosNode.LLVMAMD64StoswNode::opI8(com.oracle.truffle.api.frame.VirtualFrame, short, long, boolean):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64StosNode.LLVMAMD64StoswNode::opI8(com.oracle.truffle.api.frame.VirtualFrame, short, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, boolean):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64StosNode.LLVMAMD64StosdNode::opI8(com.oracle.truffle.api.frame.VirtualFrame, int, long, boolean):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64StosNode.LLVMAMD64StosdNode::opI8(com.oracle.truffle.api.frame.VirtualFrame, int, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, boolean):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64StosNode.LLVMAMD64StosqNode::opI8(com.oracle.truffle.api.frame.VirtualFrame, long, long, boolean):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64StosNode.LLVMAMD64StosqNode::opI8(com.oracle.truffle.api.frame.VirtualFrame, long, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, boolean):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64XaddNode.LLVMAMD64XaddbNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, byte, byte):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64XaddNode.LLVMAMD64XaddwNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, short, short):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64XaddNode.LLVMAMD64XaddlNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.LLVMAMD64XaddNode.LLVMAMD64XaddqNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, long, long):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64UpdateFlagsNode.LLVMAMD64UpdateCPZSOFlagsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64AddressComputationNode.LLVMAMD64AddressDisplacementComputationNode::doLLVMPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64AddressComputationNode.LLVMAMD64AddressOffsetComputationNode::doLLVMPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64AddressComputationNode.LLVMAMD64AddressNoBaseOffsetComputationNode::doLLVMNativePointer(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64AddressComputationNode.LLVMAMD64AddressSegmentComputationNode::doLLVMPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64AddressComputationNode.LLVMAMD64AddressSegmentComputationNode::doI64(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode::doI8(com.oracle.truffle.api.frame.VirtualFrame, int, byte):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64RegisterToLongNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode::doI16(com.oracle.truffle.api.frame.VirtualFrame, int, short):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64RegisterToLongNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode::doNativePointer(com.oracle.truffle.api.frame.VirtualFrame, int, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode::doMemoryWrite(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode.LLVMAMD64MemWriteNode):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode.LLVMAMD64MemWriteNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode.LLVMAMD64MemWriteNode::doI8(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, byte, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode.LLVMAMD64MemWriteNode::doI16(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, short, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode.LLVMAMD64MemWriteNode::doI32(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, int, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteNode.LLVMAMD64MemWriteNode::doI64(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteTupelNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, byte, byte):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteTupelNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, short, short):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteTupelNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteTupelNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, long, long):void 	 com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode::doI8(com.oracle.truffle.api.frame.VirtualFrame, byte):void 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode::doI16(com.oracle.truffle.api.frame.VirtualFrame, short):void 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode::doI32(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode::doI64(com.oracle.truffle.api.frame.VirtualFrame, long):void 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.support.LLVMAMD64WriteValueNode::doAddress(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):void 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.syscall.LLVMSyscallNode::getNodeName(com.oracle.truffle.llvm.runtime.memory.LLVMSyscallOperationNode):java.lang.String 	 com.oracle.truffle.llvm.runtime.memory.LLVMSyscallOperationNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.syscall.LLVMSyscallNode::trace(java.lang.String, java.lang.Object[]):void 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.syscall.LLVMUnsupportedSyscallNode::create(com.oracle.truffle.llvm.runtime.LLVMSyscallEntry):com.oracle.truffle.llvm.runtime.nodes.asm.syscall.LLVMUnsupportedSyscallNode 	 com.oracle.truffle.llvm.runtime.LLVMSyscallEntry
Move Method	com.oracle.truffle.llvm.runtime.nodes.asm.syscall.posix.LLVMPosixCallNode::doCall(java.lang.Object[], com.oracle.truffle.llvm.runtime.NativeContextExtension.WellKnownNativeFunctionNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.NativeContextExtension.WellKnownNativeFunctionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo128BitFloatingNode::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo128BitFloatingNode):com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo128BitFloatingNode.LLVMSignedCastToLLVM128BitFloatNode::doLLVM128BitFloatNode(com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge):com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat 	 com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo128BitFloatingNode.LLVMUnsignedCastToLLVM128BitFloatNode::doLLVM128BitFloatNode(com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge):com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat 	 com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo80BitFloatingNode::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo80BitFloatingNode):com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo80BitFloatingNode.LLVMSignedCastToLLVM80BitFloatNode::doLLVM80BitFloatNode(com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge):com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat 	 com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo80BitFloatingNode.LLVMUnsignedCastToLLVM80BitFloatNode::doLLVM80BitFloatNode(com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge):com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat 	 com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo80BitFloatingNode.LLVMBitcastToLLVM80BitFloatNode::doIVarBit(com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge):com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat 	 com.oracle.truffle.llvm.runtime.LLVMIVarBitLarge
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo80BitFloatingNode.LLVMBitcastToLLVM80BitFloatNode::doI1Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector):com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat 	 com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo80BitFloatingNode.LLVMBitcastToLLVM80BitFloatNode::doI8Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector):com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat 	 com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMTo80BitFloatingNode.LLVMBitcastToLLVM80BitFloatNode::doI16Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector):com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat 	 com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToDoubleNode::doManagedPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM, com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToDoubleNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):double 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToDoubleNode::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToDoubleNode):double 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToDoubleNode::isForeignNumber(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToDoubleNode.LLVMSignedCastToDoubleNode::doDouble(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):double 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToDoubleNode.LLVMSignedCastToDoubleNode::doDouble(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):double 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToDoubleNode.LLVMBitcastToDoubleNode::doI64Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector):double 	 com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToDoubleNode.LLVMBitcastToDoubleNode::doDoubleVector(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):double 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToFloatNode::doManagedPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM, com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToFloatNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):float 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToFloatNode::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToFloatNode):float 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToFloatNode::isForeignNumber(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToFloatNode.LLVMSignedCastToFloatNode::doFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):float 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToFloatNode.LLVMSignedCastToFloatNode::doFloat(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):float 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToFloatNode.LLVMBitcastToFloatNode::doI32Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector):float 	 com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToFloatNode.LLVMBitcastToFloatNode::doFloatVector(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector):float 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI16Node::doManagedPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):short 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI16Node::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode):short 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI16Node::doFallbackPointerAsComparable(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue):short 	 com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI16Node::isForeignNumber(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI16Node.LLVMSignedCastToI16Node::doLLVM80BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):short 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI16Node.LLVMSignedCastToI16Node::doI16(com.oracle.truffle.llvm.runtime.LLVMIVarBit):short 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI16Node.LLVMUnsignedCastToI16Node::doIVarBit(com.oracle.truffle.llvm.runtime.LLVMIVarBit):short 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI16Node.LLVMUnsignedCastToI16Node::doLLVM80BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):short 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI16Node.LLVMBitcastToI16Node::doI16Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector):short 	 com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI1Node::doManagedPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI1Node::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI1Node::doFallbackPointerAsComparable(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI1Node::isForeignNumber(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI1Node.LLVMSignedCastToI1Node::doLLVM80BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI1Node.LLVMBitcastToI1Node::doI1Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector):boolean 	 com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node::doManagedPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):int 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode):int 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node::doFallbackPointerAsComparable(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue):int 	 com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node::isForeignNumber(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node.LLVMSignedCastToI32Node::doI32(com.oracle.truffle.llvm.runtime.LLVMIVarBit):int 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node.LLVMSignedCastToI32Node::doI32(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):int 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node.LLVMSignedCastToI32Node::doI32(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):int 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node.LLVMUnsignedCastToI32Node::doIVarBit(com.oracle.truffle.llvm.runtime.LLVMIVarBit):int 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node.LLVMUnsignedCastToI32Node::doLLVM80BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):int 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node.LLVMBitcastToI32Node::doI32Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector):int 	 com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI32Node.LLVMBitcastToI32Node::doFloatVector(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector):int 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node::doNative(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):long 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMSignedCastToI64Node::doI64(com.oracle.truffle.llvm.runtime.LLVMIVarBit):long 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMSignedCastToI64Node::doI64(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):long 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMSignedCastToI64Node::doI64(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):long 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMUnsignedCastToI64Node::doIVarBit(com.oracle.truffle.llvm.runtime.LLVMIVarBit):long 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMUnsignedCastToI64Node::do80LLVMBitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):long 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMBitcastToI64Node::doI64Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector):long 	 com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMBitcastToI64Node::doDoubleVector(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):long 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMBitcastToI64Node::castI1Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector, int):long 	 com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMBitcastToI64Node::castI8Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector, int):long 	 com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMBitcastToI64Node::castI16Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector, int):long 	 com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMBitcastToI64Node::castI32Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector, int):long 	 com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI64Node.LLVMBitcastToI64Node::castFloatVector(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, int):long 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI8Node::doManagedPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):byte 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI8Node::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode):byte 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI8Node::doFallbackPointerAsComparable(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue):byte 	 com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI8Node::isForeignNumber(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.cast.InteropLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI8Node.LLVMSignedCastToI8Node::doI8(com.oracle.truffle.llvm.runtime.LLVMIVarBit):byte 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI8Node.LLVMSignedCastToI8Node::doI8(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):byte 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI8Node.LLVMUnsignedCastToI8Node::doIVarBit(com.oracle.truffle.llvm.runtime.LLVMIVarBit):byte 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI8Node.LLVMUnsignedCastToI8Node::doLLVM80BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):byte 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToI8Node.LLVMBitcastToI8Node::doI8Vector(com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector):byte 	 com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToVarINode::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToVarINode):com.oracle.truffle.llvm.runtime.LLVMIVarBit 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.cast.LLVMToVectorNode.LLVMBitcastToI8VectorNode::do80BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNode::dispatchFromBasicBlock(com.oracle.truffle.api.frame.VirtualFrame, int, com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNode.Counters):java.lang.Object 	 com.oracle.truffle.llvm.runtime.nodes.base.LLVMBasicBlockNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNode::ensureAllFrameSlotsInitialized(com.oracle.truffle.api.frame.VirtualFrame):void 	 com.oracle.truffle.api.frame.FrameSlotKind
Move Method	com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNode::executePhis(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.nodes.api.LLVMControlFlowNode, int):void 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMControlFlowNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNode::nullDeadSlots(com.oracle.truffle.api.frame.VirtualFrame, int[]):void 	 com.oracle.truffle.llvm.runtime.nodes.base.LLVMFrameNullerUtil
Move Method	com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNode::noPhisNecessary(com.oracle.truffle.llvm.runtime.nodes.api.LLVMControlFlowNode):boolean 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMControlFlowNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.control.LLVMIndirectBranchNode.LLVMIndirectBranchNodeImpl::doCondition(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):int 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.control.LLVMRetNode.LLVMStructRetNode::returnStruct(com.oracle.truffle.api.frame.VirtualFrame, java.lang.Object):java.lang.Object 	 com.oracle.truffle.llvm.runtime.memory.LLVMMemMoveNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMCallNode::create(com.oracle.truffle.llvm.runtime.types.FunctionType, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode[], boolean, boolean):com.oracle.truffle.llvm.runtime.nodes.func.LLVMCallNode 	 com.oracle.truffle.llvm.runtime.nodes.others.LLVMAccessSymbolNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMCatchSwitchNode.CatchPadEntryNode::doExecute(com.oracle.truffle.llvm.runtime.memory.LLVMStack, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):boolean 	 com.oracle.truffle.llvm.runtime.LLVMBitcodeLibraryFunctions.SulongEHCopyWindowsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::createCallNode(com.oracle.truffle.llvm.runtime.LLVMFunctionCode):com.oracle.truffle.api.nodes.DirectCallNode 	 com.oracle.truffle.llvm.runtime.LLVMFunctionCode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doDirectCodeFast(com.oracle.truffle.llvm.runtime.LLVMFunctionCode, java.lang.Object[], com.oracle.truffle.llvm.runtime.LLVMFunctionCode, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doIndirectCode(com.oracle.truffle.llvm.runtime.LLVMFunctionCode, java.lang.Object[], com.oracle.truffle.llvm.runtime.LLVMFunctionCode.ResolveFunctionNode, com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.LLVMFunctionCode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doDirectFunction(com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor, java.lang.Object[], com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor, com.oracle.truffle.llvm.runtime.LLVMFunctionCode, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doDirectCode(com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor, java.lang.Object[], com.oracle.truffle.llvm.runtime.LLVMFunctionCode, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doIndirect(com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor, java.lang.Object[], com.oracle.truffle.llvm.runtime.LLVMFunctionCode.ResolveFunctionNode, com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doIndirectIntrinsic(com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor, java.lang.Object[], com.oracle.truffle.llvm.runtime.LLVMFunctionCode.ResolveFunctionNode, com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doCachedNativeFunction(com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor, java.lang.Object[], com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor, com.oracle.truffle.llvm.runtime.LLVMFunctionCode, com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode[], com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.func.InteropLibrary, boolean):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doCachedNativeCode(com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor, java.lang.Object[], com.oracle.truffle.llvm.runtime.LLVMFunctionCode, com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode[], com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.func.InteropLibrary, boolean):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doBind(com.oracle.truffle.llvm.runtime.NativeContextExtension, com.oracle.truffle.llvm.runtime.LLVMFunctionCode, com.oracle.truffle.api.source.Source):java.lang.Object 	 com.oracle.truffle.llvm.runtime.NativeContextExtension
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doNative(com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor, java.lang.Object[], com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode[], com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode, com.oracle.truffle.llvm.runtime.nodes.func.InteropLibrary, com.oracle.truffle.llvm.runtime.LLVMFunctionCode.ResolveFunctionNode, boolean):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::isPointerReturnType():boolean 	 com.oracle.truffle.llvm.runtime.types.FunctionType
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::prepareNativeArguments(java.lang.Object[], com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode[]):java.lang.Object[] 	 com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::createToNativeNodes():com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode[] 	 com.oracle.truffle.llvm.runtime.types.FunctionType
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::createFromNativeNode():com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode 	 com.oracle.truffle.llvm.runtime.types.FunctionType
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode::doNativeFunction(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, java.lang.Object[], com.oracle.truffle.llvm.runtime.nodes.func.LLVMNativeDispatchNode, com.oracle.truffle.llvm.runtime.nodes.func.BranchProfile):java.lang.Object 	 com.oracle.truffle.llvm.runtime.nodes.func.LLVMNativeDispatchNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode.LLVMLookupDispatchForeignNode::createToLLVMNode():com.oracle.truffle.llvm.runtime.interop.convert.ForeignToLLVM 	 com.oracle.truffle.llvm.runtime.types.FunctionType
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode.LLVMLookupDispatchForeignNode::createLLVMDataEscapeNodes():com.oracle.truffle.llvm.runtime.interop.LLVMDataEscapeNode[] 	 com.oracle.truffle.llvm.runtime.types.FunctionType
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMFunctionStartNode::customPrepareForAOT(com.oracle.truffle.api.nodes.RootNode):void 	 com.oracle.truffle.api.nodes.NodeUtil
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMGlobalRootNode::executeWithoutFrame():java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMGlobalRootNode::getMainFunctionType(com.oracle.truffle.llvm.runtime.LLVMFunction):int 	 com.oracle.truffle.llvm.runtime.LLVMFunction
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMInvokeNode::create(com.oracle.truffle.llvm.runtime.types.FunctionType, com.oracle.truffle.llvm.runtime.nodes.vars.LLVMWriteNode, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode[], int, int, com.oracle.truffle.llvm.runtime.nodes.api.LLVMStatementNode, com.oracle.truffle.llvm.runtime.nodes.api.LLVMStatementNode):com.oracle.truffle.llvm.runtime.nodes.func.LLVMInvokeNode 	 com.oracle.truffle.llvm.runtime.nodes.func.LLVMLookupDispatchTargetNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMInvokeNode.LLVMInvokeNodeImpl::doInvoke(com.oracle.truffle.api.frame.VirtualFrame, java.lang.Object):void 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMWriteNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMLandingpadNode.LandingpadCatchEntryNode::getIdentifier(com.oracle.truffle.llvm.runtime.memory.LLVMStack, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):int 	 com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMLandingpadNode.LandingpadFilterEntryNode::filterMatches(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.memory.LLVMStack, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMLookupDispatchTargetNode::doForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMLookupDispatchTargetNode::doLookupNativeFunctionCachedSymbol(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.others.LLVMAccessGlobalSymbolNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMLookupDispatchTargetNode::doDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMLookupDispatchTargetNode::createOptimized(com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode):com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode 	 com.oracle.truffle.llvm.runtime.nodes.others.LLVMAccessSymbolNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMNativeDispatchNode::createToNativeNodes():com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode[] 	 com.oracle.truffle.llvm.runtime.types.FunctionType
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMNativeDispatchNode::createFromNativeNode():com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode 	 com.oracle.truffle.llvm.runtime.types.FunctionType
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMNativeDispatchNode::prepareNativeArguments(java.lang.Object[], com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode[]):java.lang.Object[] 	 com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMNativeDispatchNode::doCached(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, java.lang.Object[], com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.func.InteropLibrary, com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode[], com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode, boolean):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMNativeDispatchNode::doGenericSingleContext(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, java.lang.Object[], com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode[], com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.func.SignatureLibrary, boolean):java.lang.Object 	 com.oracle.truffle.llvm.runtime.interop.nfi.LLVMNativeConvertNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMPrepareArgumentNode::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.func.LLVMTypeIdForExceptionNode::doGeneric(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):java.lang.Object 	 com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotAsDateTimeNode.LLVMPolyglotAsDateNode::instantAsDate(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotAsDateTimeNode.LLVMPolyglotAsInstantNode, com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotAsDateTimeNode.LLVMPolyglotAsTimeZoneNode):java.time.LocalDate 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotAsDateTimeNode.LLVMPolyglotAsInstantNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotAsDateTimeNode.LLVMPolyglotAsTimeNode::instantAsTime(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotAsDateTimeNode.LLVMPolyglotAsInstantNode, com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotAsDateTimeNode.LLVMPolyglotAsTimeZoneNode):java.time.LocalTime 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotAsDateTimeNode.LLVMPolyglotAsInstantNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotFromBufferNode::doAsBuffer(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, long):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMPolyglotTimeZoneGetIdNode::doForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.LLVMAsForeignNode, com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.BranchProfile, com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.InteropLibrary):com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer 	 com.oracle.truffle.llvm.runtime.interop.LLVMAsForeignNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMReadCharsetNode::doGeneric(java.lang.Object):com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMReadCharsetNode.LLVMCharset 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMReadStringNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMReadStringNode::readString(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer):java.lang.String 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMReadStringNode::readForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMReadStringNode.ForeignReadStringNode):java.lang.String 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMReadStringNode::readOther(java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMReadStringNode.PointerReadStringNode):java.lang.String 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.LLVMReadStringNode.PointerReadStringNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.interop.typed.LLVMArrayTypeIDNode::doArray(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType, long):com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Array 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.bit.CountLeadingZeroesNode::getFactory(com.oracle.truffle.llvm.runtime.types.PrimitiveType.PrimitiveKind):com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.bit.CountSetBitsNode::getFactory(com.oracle.truffle.llvm.runtime.types.PrimitiveType.PrimitiveKind):com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.bit.CountTrailingZeroesNode::getFactory(com.oracle.truffle.llvm.runtime.types.PrimitiveType.PrimitiveKind):com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.debug.LLVMToDebugValueNode::fromGlobalContainer(com.oracle.truffle.llvm.runtime.global.LLVMGlobalContainer):com.oracle.truffle.llvm.runtime.debug.value.LLVMDebugValue 	 com.oracle.truffle.llvm.runtime.global.LLVMGlobalContainer
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_ComparisonNode.LLVMX86_Cmpss::doIntrinsic(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, byte):com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_ConversionNode.LLVMX86_ConversionFloatToIntNode::doIntrinsic(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector):int 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_ConversionNode.LLVMX86_ConversionDoubleToIntNode::doIntrinsic(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):int 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_ConversionNode.LLVMX86_Pmovmskb128::doIntrinsic128(com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector):int 	 com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_ConversionNode.LLVMX86_Movmskpd::doIntrinsic(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):int 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorSquareRootNode::doM128(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorMaxNode::doM128(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorMaxsdNode::doM128(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorMinNode::doM128(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorMinsdNode::doM128(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_SSE_VectorMaxNode::doM128(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector):com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_SSE_VectorMaxsdNode::doM128(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector):com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_SSE_VectorMinNode::doM128(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector):com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_SSE_VectorMinsdNode::doM128(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector):com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorCmpNode::getComparator(int):com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorCmpNode.Comparator 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorCmpNode.Comparator
Move Method	com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorCmpNode::compare(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.x86.LLVMX86_VectorMathNode.LLVMX86_VectorCmpNode.Comparator):com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.literals.LLVMSimpleLiteralNode.LLVMIVarBitLiteralNode::doIVarBit():com.oracle.truffle.llvm.runtime.LLVMIVarBit 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.literals.LLVMSimpleLiteralNode.LLVMManagedPointerLiteralNode::doManagedPointer():com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode::create(com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode, com.oracle.truffle.llvm.runtime.types.AggregateType, com.oracle.truffle.llvm.runtime.datalayout.DataLayout, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode):com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode 	 com.oracle.truffle.llvm.runtime.types.AggregateType
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.AllocResultNode::doByte(com.oracle.truffle.api.frame.VirtualFrame, byte, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode.LLVMI8OffsetStoreNode):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.AllocResultNode::doShort(com.oracle.truffle.api.frame.VirtualFrame, short, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode.LLVMI16OffsetStoreNode):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.AllocResultNode::doInt(com.oracle.truffle.api.frame.VirtualFrame, int, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode.LLVMI32OffsetStoreNode):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.AllocResultNode::doLong(com.oracle.truffle.api.frame.VirtualFrame, long, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode.LLVMI64OffsetStoreNode):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.AllocResultNode::doPointer(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMPointerStoreNode.LLVMPointerOffsetStoreNode):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMPointerStoreNode.LLVMPointerOffsetStoreNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.LLVMCMPXCHInternalNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.LLVMCMPXCHInternalNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, byte, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.LLVMCMPXCHInternalNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, short, short, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.LLVMCMPXCHInternalNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int, int, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.LLVMCMPXCHInternalNode::doLong(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, long, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.LLVMCMPXCHInternalNode::doLongGeneric(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, long, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode, com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMCompareExchangeNode.LLVMCMPXCHInternalNode::doOp(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMPointerLoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMPointerStoreNode, com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMGetElementPtrNode::isNegated(java.lang.Object, java.lang.Object):boolean 	 com.oracle.truffle.llvm.runtime.interop.LLVMNegatedForeignObject
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMGetElementPtrNode::doPointerDiff(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMGetElementPtrNode::doPointerDiffRev(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMGetElementPtrNode::doInt(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, int):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMGetElementPtrNode::doLong(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMGetElementPtrNode::doNativePointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativeVarargsAreaStackAllocationNode::alloc(com.oracle.truffle.api.frame.VirtualFrame, long):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.memory.LLVMStack.LLVMAllocaInstruction
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMUnpackVarargsNode::byValue(com.oracle.truffle.llvm.runtime.LLVMVarArgCompoundValue):java.lang.Object 	 com.oracle.truffle.llvm.runtime.LLVMVarArgCompoundValue
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMVectorizedGetElementPtrNode::doLong(com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector, com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector):com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector 	 com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMVectorizedGetElementPtrNode.IndexVectorBroadcastNode::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode):com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode::create(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode 	 com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadHelperNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode::createSlowPath(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode 	 com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadHelperNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode::moveUnitLong(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, int):long 	 com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadHelperNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode::moveUnitGeneric(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, int):java.lang.Object 	 com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadHelperNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadHelperNode::create(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadHelperNode 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadI8::doDefault(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int):long 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadI16::doManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int):long 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadI32::doManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int):long 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadI64::doLong(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int):long 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemReadI64::doGeneric(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int):java.lang.Object 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemWriteHelperNode::create(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemWriteHelperNode 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemWriteNative::asPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport):long 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemWriteI8::doManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, int):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemWriteI16::doManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, int):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemWriteI32::doManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, int):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemWriteI64::doLong(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, int):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.ManagedMemMoveHelperNode.MemWriteI64::doManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, java.lang.Object, int):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.NativeMemSetNode::getAccessLength(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.memory.NativeTypeLibrary):long 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.NativeMemSetNode::findMember(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Struct, long):com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.StructMember 	 com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Struct
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.NativeMemSetNode::memsetManagedI8(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, long, com.oracle.truffle.llvm.runtime.nodes.memory.NativeTypeLibrary, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.NativeMemSetNode::memsetManagedI16(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, long, com.oracle.truffle.llvm.runtime.nodes.memory.NativeTypeLibrary, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.NativeMemSetNode::memsetManagedI32(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, long, com.oracle.truffle.llvm.runtime.nodes.memory.NativeTypeLibrary, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.NativeMemSetNode::memsetManagedI64(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, long, com.oracle.truffle.llvm.runtime.nodes.memory.NativeTypeLibrary, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.literal.LLVMI8ArrayLiteralNode::foreignWrite(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode.LLVMI8OffsetStoreNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.literal.LLVMStructArrayLiteralNode::noOffset(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVM80BitFloatLoadNode::doForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDoubleLoadNode.LLVMDoubleOffsetLoadNode::doDoubleDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, long, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):double 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDoubleLoadNode.LLVMDoubleOffsetLoadNode::doDoubleManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):double 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDoubleLoadNode::doDoubleDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):double 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDoubleLoadNode::doDoubleManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):double 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMFloatLoadNode.LLVMFloatOffsetLoadNode::doFloatManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):float 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMFloatLoadNode::doFloatManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):float 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode.LLVMI16OffsetLoadNode::doShortManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):short 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode::doShortManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):short 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI1LoadNode.LLVMI1OffsetLoadNode::doI1Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI1LoadNode::doI1Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode.LLVMI32OffsetLoadNode::doI32Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):int 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode::doI32Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):int 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode.LLVMI64OffsetLoadNode::doI64Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):long 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode.LLVMI64OffsetLoadNode::doGenericI64Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode::doI64Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):long 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode::doGenericI64Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode.LLVMI8OffsetLoadNode::doI8Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):byte 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode::doI8Managed(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):byte 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMIVarBitLoadNode::doForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):com.oracle.truffle.llvm.runtime.LLVMIVarBit 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadI8VectorNode::doI8VectorDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadI8VectorNode):com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadI16VectorNode::doI16VectorDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadI16VectorNode):com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadI32VectorNode::doI32VectorDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadI32VectorNode):com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadI64VectorNode::doI64VectorDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadI64VectorNode):com.oracle.truffle.llvm.runtime.vector.LLVMVector 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadI64VectorNode::doPointerVector(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadPointerVectorNode):com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadPointerVectorNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadPointerVectorNode::doPointerVectorDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadPointerVectorNode):com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadDoubleVectorNode::doDoubleVector(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMLoadVectorNode.LLVMLoadDoubleVectorNode):com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMOffsetLoadNode::create(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.ValueKind):com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMOffsetLoadNode 	 com.oracle.truffle.llvm.runtime.CommonNodeFactory
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMOffsetLoadNode::getUncached(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.ValueKind):com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMOffsetLoadNode 	 com.oracle.truffle.llvm.runtime.CommonNodeFactory
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMPointerLoadNode.LLVMPointerOffsetLoadNode::doIndirectedForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMPointerLoadNode::doIndirectedForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedReadLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode::moveNormalDir(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, boolean):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode::moveReverseDir(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, boolean):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode::createSerialMoves(com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode[], com.oracle.truffle.llvm.runtime.NodeFactory, com.oracle.truffle.llvm.runtime.memory.LLVMMemMoveNode):com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode 	 com.oracle.truffle.llvm.runtime.nodes.literals.LLVMSimpleLiteralNode.LLVMI64LiteralNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode::createScalarMemMoveSeries(java.util.List<com.oracle.truffle.llvm.runtime.types.Type>, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode, com.oracle.truffle.llvm.runtime.NodeFactory, long, com.oracle.truffle.llvm.runtime.memory.LLVMMemMoveNode):com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode 	 com.oracle.truffle.llvm.runtime.types.Type
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode.HeadNode::useMemMoveIntrinsic(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode.HeadNode::copyDirection(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):short 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode.HeadNode::customCopy(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMCopyTargetLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMCopyTargetLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode.HeadNode::delegateToMemMove(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMCopyTargetLibrary, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.memory.LLVMMemMoveNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode.HeadNode::primitiveMoveInForwardDir(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMCopyTargetLibrary, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.move.LLVMPrimitiveMoveNode.HeadNode::primitiveMoveInBackwardDir(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.library.internal.LLVMCopyTargetLibrary, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI16RMWNode.LLVMI16RMWXchgNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, short, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode):short 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI16RMWNode.LLVMI16RMWAddNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, short, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode):short 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI16RMWNode.LLVMI16RMWSubNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, short, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode):short 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI16RMWNode.LLVMI16RMWAndNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, short, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode):short 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI16RMWNode.LLVMI16RMWNandNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, short, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode):short 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI16RMWNode.LLVMI16RMWOrNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, short, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode):short 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI16RMWNode.LLVMI16RMWXorNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, short, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI16LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode):short 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI1RMWNode.LLVMI1RMWXchgNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI1LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI1StoreNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI1RMWNode.LLVMI1RMWAddNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI1LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI1StoreNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI1RMWNode.LLVMI1RMWSubNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI1LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI1StoreNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI1RMWNode.LLVMI1RMWAndNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI1LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI1StoreNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI1RMWNode.LLVMI1RMWNandNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI1LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI1StoreNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI1RMWNode.LLVMI1RMWOrNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI1LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI1StoreNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI1RMWNode.LLVMI1RMWXorNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, boolean, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI1LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI1StoreNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI32RMWNode.LLVMI32RMWXchgNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode):int 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI32RMWNode.LLVMI32RMWAddNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode):int 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI32RMWNode.LLVMI32RMWSubNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode):int 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI32RMWNode.LLVMI32RMWAndNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode):int 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI32RMWNode.LLVMI32RMWNandNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode):int 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI32RMWNode.LLVMI32RMWOrNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode):int 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI32RMWNode.LLVMI32RMWXorNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI32LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode):int 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI64RMWNode.LLVMI64RMWXchgNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI64RMWNode.LLVMI64RMWAddNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode):long 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI64RMWNode.LLVMI64RMWSubNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode):long 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI64RMWNode.LLVMI64RMWAndNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode):long 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI64RMWNode.LLVMI64RMWNandNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode):long 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI64RMWNode.LLVMI64RMWOrNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode):long 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI64RMWNode.LLVMI64RMWXorNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI64LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode):long 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI8RMWNode.LLVMI8RMWXchgNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode):byte 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI8RMWNode.LLVMI8RMWAddNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode):byte 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI8RMWNode.LLVMI8RMWSubNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode):byte 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI8RMWNode.LLVMI8RMWAndNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode):byte 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI8RMWNode.LLVMI8RMWNandNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode):byte 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI8RMWNode.LLVMI8RMWOrNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode):byte 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.rmw.LLVMI8RMWNode.LLVMI8RMWXorNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMI8LoadNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode):byte 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStoreVectorNode::writeVector(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMPointerStoreNode.LLVMPointerOffsetStoreNode):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMPointerStoreNode.LLVMPointerOffsetStoreNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStoreVectorNode::writeVector(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStoreVectorNode::writeVector(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStoreVectorNode::writeVector(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStoreVectorNode::writeVector(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStoreVectorNode::writeVector(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStoreVectorNode::writeVector(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStoreVectorNode::writeVector(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStoreVectorNode::writeVector(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVM128BitFloatStoreNode.LLVM128BitFloatOffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVM128BitFloatStoreNode::doForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVM80BitFloatStoreNode.LLVM80BitFloatOffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVM80BitFloatStoreNode::doForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMDoubleStoreNode.LLVMDoubleOffsetStoreNode::doOpDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, long, double, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMDoubleStoreNode.LLVMDoubleOffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, double, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMDoubleStoreNode::doOpDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, double, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMDoubleStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, double, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMFloatStoreNode.LLVMFloatOffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, float, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMFloatStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, float, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode.LLVMI16OffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, short, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI16StoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, short, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI1StoreNode.LLVMI1OffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, boolean, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI1StoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, boolean, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode.LLVMI32OffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, int, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI32StoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, int, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode.LLVMI64OffsetStoreNode::doOpManagedI64(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode.LLVMI64OffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, java.lang.Object, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode::doOpManagedI64(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, java.lang.Object, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode.LLVMI8OffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, byte, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, byte, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMIVarBitStoreNode.LLVMIVarBitOffsetStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.LLVMIVarBit, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMIVarBitStoreNode::doOpManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.LLVMIVarBit, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMOffsetStoreNode.LLVMGenericOffsetStoreNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long, java.lang.Object):void 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMOffsetStoreNode::create(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.ValueKind):com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMOffsetStoreNode 	 com.oracle.truffle.llvm.runtime.CommonNodeFactory
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMOffsetStoreNode::getUncached(com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.ValueKind):com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMOffsetStoreNode 	 com.oracle.truffle.llvm.runtime.CommonNodeFactory
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMPointerStoreNode.LLVMPointerOffsetStoreNode::doDerefAddress(long, long, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMPointerStoreNode.LLVMPointerOffsetStoreNode::doManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToPointerNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMPointerStoreNode::doDerefAddress(long, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMPointerStoreNode::doManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToPointerNode, com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary):void 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMManagedWriteLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStructStoreNode::doOp(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):void 	 com.oracle.truffle.llvm.runtime.memory.LLVMMemMoveNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStructStoreNode::doOpDerefHandle(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode):void 	 com.oracle.truffle.llvm.runtime.nodes.memory.load.LLVMDerefHandleGetReceiverNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStructStoreNode::doManaged(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):void 	 com.oracle.truffle.llvm.runtime.memory.LLVMMemMoveNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMStructStoreNode::doConvert(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode):void 	 com.oracle.truffle.llvm.runtime.nodes.api.LLVMToNativeNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.memory.LLVMInsertValueNode::doLLVMPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, java.lang.Object):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.Operation::doCompare(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.Operation::doCompare(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode::doCompare(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode::doCompare(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode::doPointerPointer(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport):boolean 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode::doOther(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport, com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMManagedEqualsNode):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMManagedEqualsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMManagedEqualsNode::doForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.nodes.util.LLVMSameObjectNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode::canDoManaged(long):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMArithmeticOp
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.PointerToI64Node::doPointer(java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode):long 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.PointerToI64Node::doGeneric(java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMAbstractI64ArithmeticNode::create(com.oracle.truffle.llvm.runtime.ArithmeticOperation, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode):com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMAbstractI64ArithmeticNode 	 com.oracle.truffle.llvm.runtime.ArithmeticOperation
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMAbstractI64ArithmeticNode::doManagedLeftLong(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedArithmeticNode):long 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedArithmeticNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMAbstractI64ArithmeticNode::doManagedLeft(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long, com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedArithmeticNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedArithmeticNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMAbstractI64ArithmeticNode::doManagedRightLong(long, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedArithmeticNode):long 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedArithmeticNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMAbstractI64ArithmeticNode::doManagedRight(long, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedArithmeticNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedArithmeticNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMAbstractI64ArithmeticNode::doPointerRight(long, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.ToNativePointerNode):long 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMArithmeticOp
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMAbstractI64ArithmeticNode::doPointerLeft(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, long, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.ToNativePointerNode):long 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMArithmeticOp
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMI64ArithmeticNode::doPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.ToNativePointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.ToNativePointerNode):long 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMArithmeticOp
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMI64SubNode::doSameObjectLong(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.nodes.util.LLVMSameObjectNode):long 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMI64SubNode::doNotSameObject(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.nodes.util.LLVMSameObjectNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.ToNativePointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.ToNativePointerNode):long 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.ToNativePointerNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMFP80ArithmeticNode::do80BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleNode):com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleFloatingPoint 	 com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.LLVMFP128ArithmeticNode::do128BitFloat(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleNode):com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleFloatingPoint 	 com.oracle.truffle.llvm.runtime.floating.LLVMLongDoubleNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedMulNode::doNegate(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long):com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedSubNode::doLeft(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long):com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedAndNode::doAlign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long):com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMArithmeticNode.ManagedAndNode::doMask(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, long):long 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMEqNode::eqPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMEqNode::eq(com.oracle.truffle.llvm.runtime.LLVMIVarBit, com.oracle.truffle.llvm.runtime.LLVMIVarBit):boolean 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMNeNode::nqPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAddressEqualsNode.LLVMPointerEqualsNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMNeNode::nq(com.oracle.truffle.llvm.runtime.LLVMIVarBit, com.oracle.truffle.llvm.runtime.LLVMIVarBit):boolean 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMSignedLtNode::slt(com.oracle.truffle.llvm.runtime.LLVMIVarBit, com.oracle.truffle.llvm.runtime.LLVMIVarBit):boolean 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMSignedLeNode::sle(com.oracle.truffle.llvm.runtime.LLVMIVarBit, com.oracle.truffle.llvm.runtime.LLVMIVarBit):boolean 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnsignedLtNode::ult(com.oracle.truffle.llvm.runtime.LLVMIVarBit, com.oracle.truffle.llvm.runtime.LLVMIVarBit):boolean 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnsignedLeNode::ule(com.oracle.truffle.llvm.runtime.LLVMIVarBit, com.oracle.truffle.llvm.runtime.LLVMIVarBit):boolean 	 com.oracle.truffle.llvm.runtime.LLVMIVarBit
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedLtNode::olt(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedLtNode::olt(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedGtNode::ogt(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedGtNode::ogt(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedGeNode::oge(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedGeNode::oge(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedLeNode::ole(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedLeNode::ole(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedEqNode::oeq(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedEqNode::oeq(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedNeNode::one(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedNeNode::one(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedNode::ord(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMOrderedNode::ord(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedLtNode::ult(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedLtNode::ult(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedLeNode::ule(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedLeNode::ule(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedGtNode::ugt(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedGtNode::ugt(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedGeNode::uge(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedGeNode::uge(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedEqNode::ueq(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedEqNode::ueq(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedNeNode::une(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedNeNode::une(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedNode::uno(com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM80BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMCompareNode.LLVMUnorderedNode::uno(com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat, com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat):boolean 	 com.oracle.truffle.llvm.runtime.floating.LLVM128BitFloat
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode::getFshlFactory(com.oracle.truffle.llvm.runtime.types.PrimitiveType.PrimitiveKind):com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode::getFshrFactory(com.oracle.truffle.llvm.runtime.types.PrimitiveType.PrimitiveKind):com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.llvm.LLVMBuiltin.TypedBuiltinFactory
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode.Fshl_I8Vector::doFshl(com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode.Fshl_I16Vector::doFshl(com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode.Fshl_I32Vector::doFshl(com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode.Fshl_I64Vector::doFshl(com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode.Fshr_I8Vector::doFshl(com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode.Fshr_I16Vector::doFshl(com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode.Fshr_I32Vector::doFshl(com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMFunnelShiftNode.Fshr_I64Vector::doFshl(com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode::doCompare(long, long):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.NativePointerCompare
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode::doCompare(com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer, com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMNativePointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode::doPointerPointer(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode):boolean 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode::doOther(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.LLVMManagedCompareNode):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.LLVMManagedCompareNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode::create(com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.Kind, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode, com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode):com.oracle.truffle.llvm.runtime.nodes.op.LLVMAbstractCompareNode 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.LLVMNegateNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.LLVMManagedCompareNode::doForeignSameObject(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.NativePointerCompare, com.oracle.truffle.llvm.runtime.nodes.util.LLVMSameObjectNode):boolean 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.LLVMManagedCompareNode::doForeignDifferentObjects(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.NativePointerCompare, com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue.ManagedToComparableValue, com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue.ManagedToComparableValue, com.oracle.truffle.llvm.runtime.nodes.util.LLVMSameObjectNode):boolean 	 com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue.ManagedToComparableValue
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.LLVMManagedCompareNode::doNativeManaged(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.NativePointerCompare, com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue.ManagedToComparableValue):boolean 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.LLVMManagedCompareNode::doManagedNative(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.NativePointerCompare, com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue.ManagedToComparableValue):boolean 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.LLVMManagedCompareNode::doManagedNativeException(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.IsPointerNode, com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode, com.oracle.truffle.llvm.runtime.nodes.op.LLVMPointerCompareNode.NativePointerCompare, com.oracle.truffle.llvm.runtime.nodes.op.ToComparableValue.ManagedToComparableValue):boolean 	 com.oracle.truffle.llvm.runtime.nodes.memory.LLVMNativePointerSupport.AsPointerNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::checkLength(com.oracle.truffle.llvm.runtime.vector.LLVMVector, com.oracle.truffle.llvm.runtime.vector.LLVMVector):boolean 	 com.oracle.truffle.llvm.runtime.vector.LLVMVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doI1(com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAbstractCompareNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doI8(com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAbstractCompareNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doI16(com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAbstractCompareNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doI32(com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAbstractCompareNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doI64(com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector, com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.nodes.op.LLVMAbstractCompareNode
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doI64AndPointer(com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector, com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doI64AndPointer(com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector, com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doPointer(com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector, com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doDouble(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.op.LLVMVectorCompareNode::doFloat(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector):com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.others.LLVMAccessSymbolNode::notFound():com.oracle.truffle.llvm.runtime.except.LLVMLinkerException 	 com.oracle.truffle.llvm.runtime.LLVMSymbol
Move Method	com.oracle.truffle.llvm.runtime.nodes.others.LLVMDynAccessSymbolNode::notFound(com.oracle.truffle.llvm.runtime.LLVMSymbol):com.oracle.truffle.llvm.runtime.except.LLVMLinkerException 	 com.oracle.truffle.llvm.runtime.LLVMSymbol
Move Method	com.oracle.truffle.llvm.runtime.nodes.util.LLVMSameObjectNode::doForeign(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.util.LLVMSameObjectNode.CompareForeignNode):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.util.LLVMSameObjectNode::fallbackGuard(java.lang.Object, java.lang.Object, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary):boolean 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.AggregateLiteralInPlaceNode::initializePrimitiveBlock(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI8StoreNode.LLVMI8OffsetStoreNode, com.oracle.truffle.llvm.runtime.nodes.memory.store.LLVMI64StoreNode.LLVMI64OffsetStoreNode, int, int, int):int 	 com.oracle.truffle.api.memory.ByteArraySupport
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMI1ReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMI1ReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMI8ReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMI8ReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMI16ReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMI16ReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMI32ReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMI32ReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMIReadVarBitNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMIReadVarBitNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMFloatReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMFloatReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMDoubleReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMDoubleReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVM80BitFloatReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVM80BitFloatReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVM128BitFloatReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVM128BitFloatReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMObjectReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMObjectReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.AttachInteropTypeNode::doForeign(com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.ForeignAttachInteropTypeNode):java.lang.Object 	 com.oracle.truffle.llvm.runtime.pointer.LLVMManagedPointer
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.ForeignAttachInteropTypeNode::doForeignNoNativeType(java.lang.Object, com.oracle.truffle.llvm.runtime.interop.access.LLVMInteropType.Structured, com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary, com.oracle.truffle.llvm.runtime.nodes.vars.NativeTypeLibrary):java.lang.Object 	 com.oracle.truffle.llvm.runtime.library.internal.LLVMAsForeignLibrary
Move Method	com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMDebugReadNode::create(int):com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.LLVMDebugReadNode 	 com.oracle.truffle.llvm.runtime.nodes.vars.LLVMReadNode.IndexedSlotCache
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI1ExtractElementNode::doI1(com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector, int):boolean 	 com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI1ExtractElementNode::doI1(com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector, long):boolean 	 com.oracle.truffle.llvm.runtime.vector.LLVMI1Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI8ExtractElementNode::doI8(com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector, int):byte 	 com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI8ExtractElementNode::doI8(com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector, long):byte 	 com.oracle.truffle.llvm.runtime.vector.LLVMI8Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI16ExtractElementNode::doI16(com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector, int):short 	 com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI16ExtractElementNode::doI16(com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector, long):short 	 com.oracle.truffle.llvm.runtime.vector.LLVMI16Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI32ExtractElementNode::doI32(com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector, int):int 	 com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI32ExtractElementNode::doI32(com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector, long):int 	 com.oracle.truffle.llvm.runtime.vector.LLVMI32Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI64ExtractElementNode::doI64(com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector, int):long 	 com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI64ExtractElementNode::doI64(com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector, long):long 	 com.oracle.truffle.llvm.runtime.vector.LLVMI64Vector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI64ExtractElementNode::doPointer(com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector, int):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMI64ExtractElementNode::doPointer(com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector, long):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.vector.LLVMPointerVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMFloatExtractElementNode::doFloat(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, int):float 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMFloatExtractElementNode::doFloat(com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector, long):float 	 com.oracle.truffle.llvm.runtime.vector.LLVMFloatVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMDoubleExtractElementNode::doDouble(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, int):double 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.runtime.nodes.vector.LLVMExtractElementNode.LLVMDoubleExtractElementNode::doDouble(com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector, long):double 	 com.oracle.truffle.llvm.runtime.vector.LLVMDoubleVector
Move Method	com.oracle.truffle.llvm.initialization.AllocExternalSymbolNode::getNativeFunction(com.oracle.truffle.llvm.runtime.NativeContextExtension, com.oracle.truffle.llvm.runtime.LLVMSymbol):com.oracle.truffle.llvm.runtime.NativeContextExtension.NativeLookupResult 	 com.oracle.truffle.llvm.runtime.LLVMSymbol
Move Method	com.oracle.truffle.llvm.initialization.AllocExternalSymbolNode::getNativePointer(com.oracle.truffle.llvm.runtime.NativeContextExtension, com.oracle.truffle.llvm.runtime.LLVMSymbol):com.oracle.truffle.llvm.runtime.NativeContextExtension.NativePointerIntoLibrary 	 com.oracle.truffle.llvm.runtime.NativeContextExtension
Move Method	com.oracle.truffle.llvm.initialization.AllocExternalSymbolNode::lookupFromScope(com.oracle.truffle.llvm.runtime.LLVMScopeChain, com.oracle.truffle.llvm.runtime.LLVMSymbol, com.oracle.truffle.llvm.runtime.LLVMContext):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.LLVMScopeChain
Move Method	com.oracle.truffle.llvm.initialization.AllocExternalSymbolNode::isDefaultFlagActive(com.oracle.truffle.llvm.runtime.nodes.intrinsics.c.LLVMDLOpen.RTLDFlags):boolean 	 com.oracle.truffle.llvm.runtime.nodes.intrinsics.c.LLVMDLOpen.RTLDFlags
Move Method	com.oracle.truffle.llvm.initialization.InitObjcSelectorsNode::getNativeContextExtension(com.oracle.truffle.llvm.runtime.LLVMContext):com.oracle.truffle.llvm.runtime.NativeContextExtension 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.initialization.InitializeExternalNode::getNativeContextExtension(com.oracle.truffle.llvm.runtime.LLVMContext):com.oracle.truffle.llvm.runtime.NativeContextExtension 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.initialization.InitializeGlobalNode::execute(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.initialization.Pair<com.oracle.truffle.llvm.runtime.pointer.LLVMPointer,java.lang.Long>):void 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.initialization.InitializeGlobalNode.Buffer::createTLGlobalNode(int[], com.oracle.truffle.llvm.runtime.LLVMSymbol[], boolean, com.oracle.truffle.llvm.runtime.nodes.api.LLVMNode, com.oracle.truffle.llvm.initialization.DataSectionFactory):com.oracle.truffle.llvm.runtime.nodes.vars.AggregateTLGlobalInPlaceNode 	 com.oracle.truffle.llvm.initialization.DataSectionFactory
Move Method	com.oracle.truffle.llvm.initialization.InitializeGlobalsBlockNode::getRoSectionPointer(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer):com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.pointer.LLVMPointer
Move Method	com.oracle.truffle.llvm.initialization.InitializeGlobalsBlockNode::alignPageSize(com.oracle.truffle.llvm.runtime.LLVMLanguage, long):long 	 com.oracle.truffle.llvm.runtime.LLVMLanguage
Move Method	com.oracle.truffle.llvm.initialization.InitializeGlobalsBlockNode::allocateGlobalsSectionBlock():com.oracle.truffle.llvm.runtime.pointer.LLVMPointer 	 com.oracle.truffle.llvm.runtime.memory.LLVMAllocateNode
Move Method	com.oracle.truffle.llvm.initialization.InitializeModuleNode::execute(com.oracle.truffle.api.frame.VirtualFrame, com.oracle.truffle.llvm.runtime.LLVMContext):void 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.initialization.InitializeModuleNode::createDestructor(com.oracle.truffle.llvm.parser.LLVMParserResult, java.lang.String, com.oracle.truffle.llvm.runtime.LLVMLanguage):com.oracle.truffle.api.RootCallTarget 	 com.oracle.truffle.api.frame.FrameDescriptor.Builder
Move Method	com.oracle.truffle.llvm.initialization.InitializeModuleNode::createStructor(java.lang.String, com.oracle.truffle.llvm.parser.LLVMParserResult, java.util.Comparator<com.oracle.truffle.llvm.parser.util.Pair<java.lang.Integer,?>>):com.oracle.truffle.llvm.runtime.nodes.api.LLVMStatementNode[] 	 com.oracle.truffle.llvm.parser.model.GlobalSymbol
Move Method	com.oracle.truffle.llvm.initialization.InitializeModuleNode::resolveStructor(com.oracle.truffle.llvm.parser.LLVMParserResult, com.oracle.truffle.llvm.parser.model.symbols.globals.GlobalVariable, java.util.Comparator<com.oracle.truffle.llvm.parser.util.Pair<java.lang.Integer,?>>):com.oracle.truffle.llvm.runtime.nodes.api.LLVMStatementNode[] 	 com.oracle.truffle.llvm.parser.model.symbols.constants.aggregate.AggregateConstant
Move Method	com.oracle.truffle.llvm.initialization.InitializeOverwriteNode::execute(com.oracle.truffle.llvm.runtime.LLVMContext, com.oracle.truffle.llvm.runtime.LLVMScopeChain, com.oracle.truffle.llvm.runtime.nodes.intrinsics.c.LLVMDLOpen.RTLDFlags):void 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.initialization.InitializeSymbolsNode::initializeSymbolTable(com.oracle.truffle.llvm.runtime.LLVMContext):void 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.initialization.InitializeSymbolsNode::initializeFunctionSymbols(com.oracle.truffle.llvm.runtime.LLVMContext):void 	 com.oracle.truffle.llvm.runtime.LLVMContext
Move Method	com.oracle.truffle.llvm.initialization.InitializeSymbolsNode.AllocLLVMFunctionNode::createAndResolve(com.oracle.truffle.llvm.runtime.LLVMContext):com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor 	 com.oracle.truffle.llvm.runtime.LLVMSymbol
Move Method	com.oracle.truffle.llvm.initialization.InitializeSymbolsNode.AllocLLVMEagerFunctionNode::createAndResolve(com.oracle.truffle.llvm.runtime.LLVMContext):com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor 	 com.oracle.truffle.llvm.runtime.LLVMSymbol
Move Method	com.oracle.truffle.llvm.initialization.InitializeSymbolsNode.AllocIntrinsicFunctionNode::createAndDefine(com.oracle.truffle.llvm.runtime.LLVMContext):com.oracle.truffle.llvm.runtime.LLVMFunctionDescriptor 	 com.oracle.truffle.llvm.runtime.LLVMSymbol
Move Method	com.oracle.truffle.llvm.initialization.LoadModulesNode::create(java.lang.String, com.oracle.truffle.llvm.parser.LLVMParserResult, boolean, boolean, java.util.List<com.oracle.truffle.llvm.initialization.LoadDependencyNode>, com.oracle.truffle.api.source.Source, com.oracle.truffle.llvm.runtime.LLVMLanguage):com.oracle.truffle.llvm.initialization.LoadModulesNode 	 com.oracle.truffle.api.frame.FrameDescriptor
Move Method	com.oracle.truffle.llvm.initialization.LoadModulesNode::executeInitialiseAllPhase(java.util.ArrayList<com.oracle.truffle.api.CallTarget>, com.oracle.truffle.llvm.runtime.nodes.intrinsics.c.LLVMDLOpen.RTLDFlags, com.oracle.truffle.llvm.runtime.LLVMScopeChain):void 	 com.oracle.truffle.api.nodes.IndirectCallNode
Move Method	com.oracle.truffle.llvm.initialization.LoadModulesNode::executeInitialiseSymbolPhase(com.oracle.truffle.llvm.runtime.LLVMContext):void 	 com.oracle.truffle.llvm.initialization.InitializeSymbolsNode
Move Method	com.oracle.truffle.llvm.initialization.LoadModulesNode::findMainFunction():com.oracle.truffle.llvm.runtime.LLVMFunction 	 com.oracle.truffle.llvm.parser.LLVMParserRuntime
Move Method	com.oracle.truffle.llvm.initialization.LoadNativeNode::parseAndInitialiseNativeLib(com.oracle.truffle.llvm.runtime.LLVMContext):java.lang.Object 	 com.oracle.truffle.llvm.runtime.NativeContextExtension
Move Method	com.oracle.truffle.tools.profiler.ProfilerNode::getSourceSection():com.oracle.truffle.api.source.SourceSection 	 com.oracle.truffle.tools.profiler.StackTraceEntry
Move Method	com.oracle.truffle.tools.profiler.ProfilerNode::getRootName():java.lang.String 	 com.oracle.truffle.tools.profiler.StackTraceEntry
Move Method	com.oracle.truffle.tools.profiler.ProfilerNode::getTags():java.util.Set<java.lang.Class<?>> 	 com.oracle.truffle.tools.profiler.StackTraceEntry
Move Method	org.graalvm.tools.lsp.server.utils.CoverageEventNode::putSection2Uri(com.oracle.truffle.api.frame.MaterializedFrame):void 	 com.oracle.truffle.api.source.SourceSection
Move Method	org.graalvm.tools.lsp.server.utils.CoverageEventNode::copyFrame(com.oracle.truffle.api.frame.MaterializedFrame):com.oracle.truffle.api.frame.MaterializedFrame 	 com.oracle.truffle.api.frame.FrameDescriptor
Move Method	com.oracle.truffle.api.debug.SetThreadSuspensionEnabledNode::doGeneric(boolean, com.oracle.truffle.api.debug.Breakpoint.SessionList, long):void 	 com.oracle.truffle.api.debug.Breakpoint.SessionList
Move Method	com.oracle.truffle.api.debug.SetThreadSuspensionEnabledNode::getThreadSuspension(com.oracle.truffle.api.debug.Breakpoint.SessionList):com.oracle.truffle.api.debug.DebuggerSession.ThreadSuspension 	 com.oracle.truffle.api.debug.Breakpoint.SessionList
Move Method	com.oracle.truffle.api.dsl.test.examples.ExampleNode::createTarget(com.oracle.truffle.api.dsl.test.examples.ExampleNode):com.oracle.truffle.api.CallTarget 	 com.oracle.truffle.api.nodes.RootNode
Move Method	com.oracle.truffle.api.dsl.test.examples.ExampleNode::getNode(com.oracle.truffle.api.CallTarget):T 	 com.oracle.truffle.api.RootCallTarget
Move Method	com.oracle.truffle.api.dsl.test.examples.ExampleNode::createDummyTarget(int):com.oracle.truffle.api.CallTarget 	 com.oracle.truffle.api.nodes.RootNode
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::hasNewTags(com.oracle.truffle.api.nodes.Node, java.util.Set<java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag>>):boolean 	 com.oracle.truffle.api.instrumentation.ProbeNode.RetiredNodeReference
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::onEnter(com.oracle.truffle.api.frame.VirtualFrame):void 	 com.oracle.truffle.api.instrumentation.InstrumentationHandler
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::onReturnValue(com.oracle.truffle.api.frame.VirtualFrame, java.lang.Object):void 	 com.oracle.truffle.api.instrumentation.InstrumentationHandler
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::isNullOrInteropValue(java.lang.Object):boolean 	 com.oracle.truffle.api.instrumentation.EventContext
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::onYield(com.oracle.truffle.api.frame.VirtualFrame, java.lang.Object):void 	 com.oracle.truffle.api.instrumentation.InstrumentationHandler
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::onResume(com.oracle.truffle.api.frame.VirtualFrame):void 	 com.oracle.truffle.api.instrumentation.InstrumentationHandler
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::lazyUpdate(com.oracle.truffle.api.frame.VirtualFrame):com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode 	 com.oracle.truffle.api.Assumption
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::lookupExecutionEventNode(com.oracle.truffle.api.instrumentation.EventBinding<?>):com.oracle.truffle.api.instrumentation.ExecutionEventNode 	 com.oracle.truffle.api.instrumentation.EventBinding
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::throwIllegalASTAssertion(com.oracle.truffle.api.instrumentation.ProbeNode.EventProviderWithInputChainNode, com.oracle.truffle.api.instrumentation.EventContext, com.oracle.truffle.api.instrumentation.EventBinding.Source<?>, com.oracle.truffle.api.nodes.RootNode, java.util.Set<java.lang.Class<?>>, int):boolean 	 com.oracle.truffle.api.nodes.NodeUtil
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::findChildContexts(com.oracle.truffle.api.instrumentation.EventBinding.Source<?>, com.oracle.truffle.api.nodes.RootNode, java.util.Set<java.lang.Class<?>>, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.api.source.SourceSection, int):com.oracle.truffle.api.instrumentation.EventContext[] 	 com.oracle.truffle.api.nodes.NodeUtil
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::indexOfChild(com.oracle.truffle.api.instrumentation.EventBinding.Source<?>, com.oracle.truffle.api.nodes.RootNode, java.util.Set<java.lang.Class<?>>, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.api.source.SourceSection, com.oracle.truffle.api.nodes.Node):int 	 com.oracle.truffle.api.nodes.NodeUtil
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::countChildren(com.oracle.truffle.api.instrumentation.EventBinding.Source<?>, com.oracle.truffle.api.nodes.RootNode, java.util.Set<java.lang.Class<?>>, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.api.source.SourceSection):int 	 com.oracle.truffle.api.nodes.NodeUtil
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::exceptionEventForClientInstrument(com.oracle.truffle.api.instrumentation.EventBinding.Source<?>, java.lang.String, java.lang.Throwable):void 	 com.oracle.truffle.api.instrumentation.InstrumentAccessor
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode::checkInteropType(java.lang.Object, com.oracle.truffle.api.instrumentation.EventBinding.Source<?>):boolean 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode::onDispose(com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode, com.oracle.truffle.api.instrumentation.EventContext, com.oracle.truffle.api.frame.VirtualFrame):void 	 com.oracle.truffle.api.CompilerAsserts
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode::handleError(java.lang.String, java.lang.RuntimeException, java.lang.Throwable):java.lang.RuntimeException 	 com.oracle.truffle.api.instrumentation.EventBinding.Source
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode::handleUnwind(com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode, com.oracle.truffle.api.instrumentation.UnwindException, com.oracle.truffle.api.instrumentation.UnwindException):com.oracle.truffle.api.instrumentation.UnwindException 	 com.oracle.truffle.api.instrumentation.UnwindException
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode::mergeUnwind(com.oracle.truffle.api.instrumentation.UnwindException, com.oracle.truffle.api.instrumentation.UnwindException):com.oracle.truffle.api.instrumentation.UnwindException 	 com.oracle.truffle.api.instrumentation.UnwindException
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode::containsBinding(com.oracle.truffle.api.instrumentation.UnwindException):boolean 	 com.oracle.truffle.api.instrumentation.UnwindException
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode::getInfo(com.oracle.truffle.api.instrumentation.UnwindException):java.lang.Object 	 com.oracle.truffle.api.instrumentation.UnwindException
Move Method	com.oracle.truffle.api.instrumentation.ProbeNode.EventChainNode::reset(com.oracle.truffle.api.instrumentation.UnwindException):void 	 com.oracle.truffle.api.instrumentation.UnwindException
Move Method	com.oracle.truffle.api.nodes.LoopNode::reportLoopCount(com.oracle.truffle.api.nodes.Node, int):void 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.api.nodes.LoopNode::onLoopCountBoundary(com.oracle.truffle.api.nodes.Node, int):void 	 com.oracle.truffle.api.impl.Accessor.RuntimeSupport
Move Method	com.oracle.truffle.api.nodes.BlockNode::create(T[], com.oracle.truffle.api.nodes.BlockNode.ElementExecutor<T>):com.oracle.truffle.api.nodes.BlockNode<T> 	 com.oracle.truffle.api.impl.Accessor.RuntimeSupport
Move Method	com.oracle.truffle.api.nodes.BlockNodeSnippets.ResumableBlockNode::resume(com.oracle.truffle.api.frame.VirtualFrame):void 	 com.oracle.truffle.api.nodes.BlockNode
Move Method	com.oracle.truffle.api.nodes.BytecodeOSRNode::pollOSRBackEdge(com.oracle.truffle.api.nodes.BytecodeOSRNode):boolean 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.api.nodes.BytecodeOSRNode::tryOSR(com.oracle.truffle.api.nodes.BytecodeOSRNode, int, java.lang.Object, java.lang.Runnable, com.oracle.truffle.api.frame.VirtualFrame):java.lang.Object 	 com.oracle.truffle.api.CompilerAsserts
Move Method	com.oracle.truffle.api.nodes.BytecodeOSRValidation::validateNode(com.oracle.truffle.api.nodes.BytecodeOSRNode):boolean 	 com.oracle.truffle.api.nodes.Node
Move Method	com.oracle.truffle.api.nodes.DirectCallNode::create(com.oracle.truffle.api.CallTarget):com.oracle.truffle.api.nodes.DirectCallNode 	 com.oracle.truffle.api.TruffleRuntime
Move Method	com.oracle.truffle.api.nodes.IndirectCallNode::create():com.oracle.truffle.api.nodes.IndirectCallNode 	 com.oracle.truffle.api.TruffleRuntime
Move Method	com.oracle.truffle.api.nodes.Node::accept(com.oracle.truffle.api.nodes.NodeVisitor):void 	 com.oracle.truffle.api.nodes.NodeVisitor
Move Method	com.oracle.truffle.api.nodes.NodeSnippets::notifyInserted():void 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.host.GuestToHostRootNode::guestToHostCall(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.api.CallTarget, java.lang.Object[]):java.lang.Object 	 com.oracle.truffle.api.nodes.EncapsulatingNodeReference
Move Method	com.oracle.truffle.host.HostExecuteNode::doFixed(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostMethodDesc.SingleMethod, java.lang.Object, java.lang.Object[], com.oracle.truffle.host.HostContext, com.oracle.truffle.host.HostMethodDesc.SingleMethod, com.oracle.truffle.host.HostToTypeNode[], com.oracle.truffle.host.HostContext.ToGuestValueNode, com.oracle.truffle.host.InlinedExactClassProfile, com.oracle.truffle.host.InlinedBranchProfile, com.oracle.truffle.host.InlinedBranchProfile, com.oracle.truffle.host.GuestToHostCodeCache):java.lang.Object 	 com.oracle.truffle.host.HostMethodDesc.SingleMethod
Move Method	com.oracle.truffle.host.HostExecuteNode::doVarArgs(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostMethodDesc.SingleMethod, java.lang.Object, java.lang.Object[], com.oracle.truffle.host.HostContext, com.oracle.truffle.host.HostMethodDesc.SingleMethod, com.oracle.truffle.host.HostToTypeNode, com.oracle.truffle.host.HostContext.ToGuestValueNode, com.oracle.truffle.host.InlinedExactClassProfile, com.oracle.truffle.host.InlinedBranchProfile, com.oracle.truffle.host.InlinedBranchProfile, boolean, com.oracle.truffle.host.GuestToHostCodeCache):java.lang.Object 	 com.oracle.truffle.host.HostMethodDesc.SingleMethod
Move Method	com.oracle.truffle.host.HostExecuteNode::doSingleUncached(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostMethodDesc.SingleMethod, java.lang.Object, java.lang.Object[], com.oracle.truffle.host.HostContext, com.oracle.truffle.host.HostToTypeNode, com.oracle.truffle.host.HostContext.ToGuestValueNode, com.oracle.truffle.host.InlinedConditionProfile, com.oracle.truffle.host.HostExecuteNode.HostMethodProfileNode, com.oracle.truffle.host.InlinedBranchProfile, com.oracle.truffle.host.InlinedBranchProfile, com.oracle.truffle.host.GuestToHostCodeCache):java.lang.Object 	 com.oracle.truffle.host.HostMethodDesc.SingleMethod
Move Method	com.oracle.truffle.host.HostExecuteNode::doOverloadedCached(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostMethodDesc.OverloadedMethod, java.lang.Object, java.lang.Object[], com.oracle.truffle.host.HostContext, com.oracle.truffle.host.HostMethodDesc.OverloadedMethod, com.oracle.truffle.host.HostToTypeNode, com.oracle.truffle.host.HostContext.ToGuestValueNode, com.oracle.truffle.host.InteropLibrary, com.oracle.truffle.host.HostExecuteNode.TypeCheckNode[], com.oracle.truffle.host.HostMethodDesc.SingleMethod, boolean, com.oracle.truffle.host.InlinedExactClassProfile, com.oracle.truffle.host.InlinedBranchProfile, com.oracle.truffle.host.InlinedBranchProfile, com.oracle.truffle.host.GuestToHostCodeCache):java.lang.Object 	 com.oracle.truffle.host.HostMethodDesc.SingleMethod
Move Method	com.oracle.truffle.host.HostExecuteNode::doOverloadedUncached(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostMethodDesc.OverloadedMethod, java.lang.Object, java.lang.Object[], com.oracle.truffle.host.HostContext, com.oracle.truffle.host.HostToTypeNode, com.oracle.truffle.host.HostContext.ToGuestValueNode, com.oracle.truffle.host.InlinedConditionProfile, com.oracle.truffle.host.HostExecuteNode.HostMethodProfileNode, com.oracle.truffle.host.InlinedBranchProfile, com.oracle.truffle.host.InlinedBranchProfile, com.oracle.truffle.host.GuestToHostCodeCache):java.lang.Object 	 com.oracle.truffle.host.HostMethodScope
Move Method	com.oracle.truffle.host.HostExecuteNode::prepareArgumentsUncached(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostMethodDesc.SingleMethod, java.lang.Object[], com.oracle.truffle.host.HostContext, com.oracle.truffle.host.HostToTypeNode, com.oracle.truffle.host.HostMethodScope, com.oracle.truffle.host.InlinedConditionProfile):java.lang.Object[] 	 com.oracle.truffle.host.HostMethodDesc.SingleMethod
Move Method	com.oracle.truffle.host.HostExecuteNode::createArgTypesArray(java.lang.Object[]):com.oracle.truffle.host.HostExecuteNode.TypeCheckNode[] 	 com.oracle.truffle.host.HostExecuteNode.NullCheckNode
Move Method	com.oracle.truffle.host.HostExecuteNode::fillArgTypesArray(com.oracle.truffle.api.nodes.Node, java.lang.Object[], com.oracle.truffle.host.HostExecuteNode.TypeCheckNode[], com.oracle.truffle.host.HostMethodDesc.SingleMethod, boolean, java.util.List<com.oracle.truffle.host.HostMethodDesc.SingleMethod>, int, com.oracle.truffle.host.HostContext):void 	 com.oracle.truffle.host.HostToTypeNode
Move Method	com.oracle.truffle.host.HostExecuteNode::checkArgTypes(java.lang.Object[], com.oracle.truffle.host.HostExecuteNode.TypeCheckNode[], com.oracle.truffle.host.InteropLibrary, com.oracle.truffle.host.HostContext, boolean):boolean 	 com.oracle.truffle.host.HostExecuteNode.TypeCheckNode
Move Method	com.oracle.truffle.host.HostExecuteNode::asVarArgs(java.lang.Object[], com.oracle.truffle.host.HostMethodDesc.SingleMethod, com.oracle.truffle.host.HostContext):boolean 	 com.oracle.truffle.host.HostToTypeNode
Move Method	com.oracle.truffle.host.HostExecuteNode::selectOverload(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostMethodDesc.OverloadedMethod, java.lang.Object[], com.oracle.truffle.host.HostContext, com.oracle.truffle.host.HostExecuteNode.TypeCheckNode[]):com.oracle.truffle.host.HostMethodDesc.SingleMethod 	 com.oracle.truffle.host.HostMethodDesc.OverloadedMethod
Move Method	com.oracle.truffle.host.HostExecuteNode::findBestCandidate(com.oracle.truffle.api.nodes.Node, java.util.List<com.oracle.truffle.host.HostMethodDesc.SingleMethod>, java.lang.Object[], com.oracle.truffle.host.HostContext, boolean, int, com.oracle.truffle.host.HostExecuteNode.TypeCheckNode[]):com.oracle.truffle.host.HostMethodDesc.SingleMethod 	 com.oracle.truffle.host.HostMethodDesc.SingleMethod
Move Method	com.oracle.truffle.host.HostExecuteNode::compareByPriority(com.oracle.truffle.host.HostContext, java.lang.Class<?>, java.lang.Class<?>, java.lang.Object, int):int 	 com.oracle.truffle.host.HostToTypeNode
Move Method	com.oracle.truffle.host.HostExecuteNode::ambiguousOverloadsException(java.util.List<com.oracle.truffle.host.HostMethodDesc.SingleMethod>, java.lang.Object[]):java.lang.RuntimeException 	 com.oracle.truffle.host.HostMethodDesc.SingleMethod
Move Method	com.oracle.truffle.host.HostExecuteNode::createVarArgsArray(com.oracle.truffle.host.HostMethodDesc.SingleMethod, java.lang.Object[], int):java.lang.Object[] 	 com.oracle.truffle.host.HostMethodDesc.SingleMethod
Move Method	com.oracle.truffle.host.HostExecuteNode::doInvoke(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostMethodDesc.SingleMethod, java.lang.Object, java.lang.Object[], com.oracle.truffle.host.GuestToHostCodeCache, com.oracle.truffle.host.HostContext, com.oracle.truffle.host.HostContext.ToGuestValueNode):java.lang.Object 	 com.oracle.truffle.host.HostContext
Move Method	com.oracle.truffle.host.HostTargetMappingNode::doCached(java.lang.Object, java.lang.Class<?>, com.oracle.truffle.host.HostContext, com.oracle.truffle.host.InteropLibrary, boolean, int, int, com.oracle.truffle.host.HostTargetMapping[], com.oracle.truffle.host.HostTargetMappingNode.SingleMappingNode[]):java.lang.Object 	 com.oracle.truffle.host.HostTargetMapping
Move Method	com.oracle.truffle.host.HostTargetMappingNode::getMappings(com.oracle.truffle.host.HostContext, java.lang.Class<?>):com.oracle.truffle.host.HostTargetMapping[] 	 com.oracle.truffle.host.HostContext
Move Method	com.oracle.truffle.host.HostTargetMappingNode.SingleMappingNode::doDefault(java.lang.Object, com.oracle.truffle.host.HostTargetMapping, com.oracle.truffle.host.HostContext, com.oracle.truffle.host.InteropLibrary, boolean, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.InlinedConditionProfile, java.lang.Boolean, com.oracle.truffle.host.HostToTypeNode):java.lang.Object 	 com.oracle.truffle.host.HostToTypeNode
Move Method	com.oracle.truffle.host.HostTargetMappingNode.SingleMappingNode::convert(com.oracle.truffle.host.HostContext, java.util.function.Function<java.lang.Object,java.lang.Object>, java.lang.Object):java.lang.Object 	 com.oracle.truffle.host.HostContext
Move Method	com.oracle.truffle.host.HostTargetMappingNode.SingleMappingNode::checkPredicate(com.oracle.truffle.host.HostContext, java.lang.Object, java.util.function.Predicate<java.lang.Object>):boolean 	 com.oracle.truffle.host.HostContext
Move Method	com.oracle.truffle.host.HostToTypeNode::allowsImplementation(com.oracle.truffle.host.HostContext, java.lang.Class<?>):boolean 	 com.oracle.truffle.host.HostInteropReflect
Move Method	com.oracle.truffle.host.HostToTypeNode::doGeneric(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostContext, java.lang.Object, java.lang.Class<?>, java.lang.reflect.Type, boolean):java.lang.Object 	 com.oracle.truffle.host.HostTargetMappingNode
Move Method	com.oracle.truffle.host.HostToTypeNode::convertImpl(com.oracle.truffle.api.nodes.Node, java.lang.Object, java.lang.Class<?>, java.lang.reflect.Type, boolean, boolean, com.oracle.truffle.host.HostContext, com.oracle.truffle.host.InteropLibrary, boolean, com.oracle.truffle.host.HostTargetMappingNode, com.oracle.truffle.host.InlinedBranchProfile):java.lang.Object 	 com.oracle.truffle.host.HostUtil
Move Method	com.oracle.truffle.host.HostToTypeNode::canConvert(com.oracle.truffle.api.nodes.Node, java.lang.Object, java.lang.Class<?>, java.lang.reflect.Type, java.lang.Boolean, com.oracle.truffle.host.HostContext, int, com.oracle.truffle.host.InteropLibrary, com.oracle.truffle.host.HostTargetMappingNode):boolean 	 com.oracle.truffle.host.HostUtil
Move Method	com.oracle.truffle.host.HostToTypeNode::isBigIntegerNumberAccess(com.oracle.truffle.host.HostContext):boolean 	 com.oracle.truffle.host.HostContext
Move Method	com.oracle.truffle.host.HostToTypeNode::convertToObject(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.host.HostContext, java.lang.Object, com.oracle.truffle.host.InteropLibrary):java.lang.Object 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.host.HostToTypeNode::asPolyglotException(com.oracle.truffle.host.HostContext, java.lang.Object, com.oracle.truffle.host.InteropLibrary):java.lang.Object 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.host.HostToTypeNode::newInvalidKeyTypeException(java.lang.reflect.Type, com.oracle.truffle.host.HostContext):java.lang.RuntimeException 	 com.oracle.truffle.host.HostEngineException
Move Method	com.oracle.truffle.host.HostToTypeNode::getGenericParameterType(java.lang.reflect.Type, int):com.oracle.truffle.host.HostToTypeNode.TypeAndClass<?> 	 com.oracle.truffle.host.HostToTypeNode.TypeAndClass
Move Method	com.oracle.truffle.host.HostToTypeNode::truffleObjectToArray(com.oracle.truffle.host.HostContext, com.oracle.truffle.host.InteropLibrary, java.lang.Object, java.lang.Class<?>, java.lang.reflect.Type):java.lang.Object 	 com.oracle.truffle.host.HostInteropErrors
Move Method	com.oracle.truffle.nfi.backend.libffi.ClosureArgumentNode.BufferClosureArgumentNode::doBuffer(com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer.Pointer):java.lang.Object 	 com.oracle.truffle.nfi.backend.libffi.LibFFIType.CachedTypeInfo
Move Method	com.oracle.truffle.nfi.backend.libffi.FunctionExecuteNode::cachedSignature(long, com.oracle.truffle.nfi.backend.libffi.LibFFISignature, java.lang.Object[], com.oracle.truffle.nfi.backend.libffi.LibFFISignature.CachedSignatureInfo, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.nfi.backend.libffi.FunctionExecuteNode::createCachedSignatureCall(com.oracle.truffle.nfi.backend.libffi.LibFFISignature.CachedSignatureInfo):com.oracle.truffle.api.nodes.DirectCallNode 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.nfi.backend.libffi.FunctionExecuteNode::genericExecute(long, com.oracle.truffle.nfi.backend.libffi.LibFFISignature, java.lang.Object[], com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.IndirectCallNode
Move Method	com.oracle.truffle.nfi.backend.libffi.SerializeArgumentNode.SerializePointerNode::putNull(java.lang.Object, com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer, com.oracle.truffle.nfi.backend.libffi.InteropLibrary):void 	 com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer
Move Method	com.oracle.truffle.nfi.backend.libffi.SerializeArgumentNode.SerializePointerNode::putGeneric(java.lang.Object, com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer, com.oracle.truffle.nfi.backend.libffi.InteropLibrary, com.oracle.truffle.api.nodes.Node, int, com.oracle.truffle.nfi.backend.libffi.InlinedBranchProfile):void 	 com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer
Move Method	com.oracle.truffle.nfi.backend.libffi.SerializeArgumentNode.SerializeStringNode::putNull(java.lang.Object, com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer, com.oracle.truffle.nfi.backend.libffi.InteropLibrary):void 	 com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer
Move Method	com.oracle.truffle.nfi.backend.libffi.SerializeArgumentNode.SerializeStringNode::putGeneric(java.lang.Object, com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer, com.oracle.truffle.nfi.backend.libffi.InteropLibrary, com.oracle.truffle.api.nodes.Node, int, com.oracle.truffle.nfi.backend.libffi.InlinedBranchProfile):void 	 com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer.TypeTag
Move Method	com.oracle.truffle.nfi.backend.libffi.SerializeArgumentNode.SerializeArrayNode::doHostObject(java.lang.Object, com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer, java.lang.Object, com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer.TypeTag):void 	 com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer
Move Method	com.oracle.truffle.nfi.backend.libffi.SerializeArgumentNode.SerializeArrayNode::doArray(java.lang.Object, com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer, com.oracle.truffle.nfi.backend.libffi.NativeArgumentBuffer.TypeTag):void 	 com.oracle.truffle.nfi.backend.libffi.LibFFIType.CachedTypeInfo
Move Method	com.oracle.truffle.nfi.backend.panama.ArgumentNode.ToPointerNode::putGeneric(java.lang.Object, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.nfi.backend.panama.InteropLibrary, com.oracle.truffle.nfi.backend.panama.InlinedBranchProfile):long 	 com.oracle.truffle.nfi.backend.panama.NativePointer
Move Method	com.oracle.truffle.nfi.backend.panama.FunctionExecuteNode::cachedSignature(long, com.oracle.truffle.nfi.backend.panama.PanamaSignature, java.lang.Object[], com.oracle.truffle.nfi.backend.panama.PanamaSignature.CachedSignatureInfo, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.nfi.backend.panama.FunctionExecuteNode::createCachedSignatureCall(com.oracle.truffle.nfi.backend.panama.PanamaSignature.CachedSignatureInfo):com.oracle.truffle.api.nodes.DirectCallNode 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.nfi.backend.panama.FunctionExecuteNode::genericExecute(long, com.oracle.truffle.nfi.backend.panama.PanamaSignature, java.lang.Object[], com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.IndirectCallNode
Move Method	com.oracle.truffle.nfi.ConvertTypeNode.ConvertToNativeNode::doCached(com.oracle.truffle.nfi.NFIType, java.lang.Object, com.oracle.truffle.nfi.NFIType.TypeCachedState, com.oracle.truffle.nfi.ConvertTypeNode):java.lang.Object 	 com.oracle.truffle.nfi.ConvertTypeNode
Move Method	com.oracle.truffle.nfi.ConvertTypeNode.ConvertFromNativeNode::doCached(com.oracle.truffle.nfi.NFIType, java.lang.Object, com.oracle.truffle.nfi.NFIType.TypeCachedState, com.oracle.truffle.nfi.ConvertTypeNode):java.lang.Object 	 com.oracle.truffle.nfi.ConvertTypeNode
Move Method	com.oracle.truffle.nfi.NFIRootNode.LoadLibraryNode::doCached(com.oracle.truffle.nfi.NFIBackend, com.oracle.truffle.nfi.NFIBackend, com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	com.oracle.truffle.nfi.NFIRootNode.LoadLibraryNode::doGeneric(com.oracle.truffle.nfi.NFIBackend, com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.IndirectCallNode
Move Method	com.oracle.truffle.nfi.CallSignatureNode.CachedCallSignatureNode::doOptimizedIndirect(com.oracle.truffle.nfi.NFISignature, java.lang.Object, java.lang.Object[], com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.IndirectCallNode
Move Method	com.oracle.truffle.nfi.CallSignatureNode.CachedCallSignatureNode::doSlowPath(com.oracle.truffle.nfi.NFISignature, java.lang.Object, java.lang.Object[], com.oracle.truffle.api.nodes.Node, com.oracle.truffle.nfi.InlinedBranchProfile, com.oracle.truffle.nfi.ConvertTypeNode.ConvertToNativeNode, com.oracle.truffle.nfi.ConvertTypeNode.ConvertFromNativeNode, com.oracle.truffle.nfi.NFIBackendSignatureLibrary, com.oracle.truffle.nfi.CallSignatureNode.BackendSymbolUnwrapNode):java.lang.Object 	 com.oracle.truffle.nfi.ConvertTypeNode.ConvertToNativeNode
Move Method	com.oracle.truffle.nfi.CallSignatureNode.OptimizedCallSignatureNode::prepareArgs(com.oracle.truffle.nfi.NFISignature, java.lang.Object[]):java.lang.Object[] 	 com.oracle.truffle.nfi.ConvertTypeNode
Move Method	com.oracle.truffle.nfi.CallSignatureNode.OptimizedCallClosureNode::prepareArgs(com.oracle.truffle.nfi.NFISignature, java.lang.Object[]):java.lang.Object[] 	 com.oracle.truffle.nfi.ConvertTypeNode
Move Method	com.oracle.truffle.polyglot.FileSystems::getRelativePathInResourceRoot(com.oracle.truffle.api.TruffleFile):java.lang.String 	 com.oracle.truffle.api.impl.Accessor.LanguageSupport
Move Method	com.oracle.truffle.polyglot.FileSystems::relativizeToLanguageHome(com.oracle.truffle.polyglot.FileSystem, java.nio.file.Path, com.oracle.truffle.polyglot.PolyglotLanguage):java.lang.String 	 com.oracle.truffle.polyglot.LanguageCache
Move Method	com.oracle.truffle.polyglot.FileSystems.PreInitializeContextFileSystem::verifyImageState():void 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.polyglot.FileSystems.PreInitializeContextFileSystem.PreInitializePath::onPreInitializeContextEnd(java.util.Map<java.lang.String,java.nio.file.Path>):void 	 com.oracle.truffle.polyglot.InternalResourceCache
Move Method	com.oracle.truffle.polyglot.HostToGuestRootNode::installHostCodeCache(com.oracle.truffle.polyglot.PolyglotLanguageContext, java.lang.Object, T, java.lang.Class<T>):T 	 com.oracle.truffle.polyglot.PolyglotLanguageContext
Move Method	com.oracle.truffle.polyglot.HostToGuestRootNode::lookupHostCodeCache(com.oracle.truffle.polyglot.PolyglotLanguageContext, java.lang.Object, java.lang.Class<T>):T 	 com.oracle.truffle.polyglot.PolyglotLanguageContext
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::isAdditionalTransitionConditionSatisfied(com.oracle.truffle.polyglot.PolyglotContextImpl.State, com.oracle.truffle.polyglot.PolyglotContextImpl.State):boolean 	 com.oracle.truffle.polyglot.PolyglotContextImpl.State
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::claimSharingLayer(com.oracle.truffle.polyglot.PolyglotLanguage):void 	 com.oracle.truffle.polyglot.PolyglotLanguage
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::claimSharingLayer(com.oracle.truffle.polyglot.PolyglotSharingLayer, java.util.Set<com.oracle.truffle.polyglot.PolyglotLanguage>):boolean 	 com.oracle.truffle.polyglot.PolyglotSharingLayer
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getInstrumentContextOptions(com.oracle.truffle.polyglot.PolyglotInstrument):com.oracle.truffle.polyglot.OptionValues 	 com.oracle.truffle.polyglot.PolyglotContextConfig
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::createContextArray():com.oracle.truffle.polyglot.PolyglotLanguageContext[] 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::maybeInitializeHostLanguage(com.oracle.truffle.polyglot.PolyglotLanguageContext[]):void 	 com.oracle.truffle.polyglot.PolyglotLanguageContext
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getContext(com.oracle.truffle.polyglot.PolyglotLanguage):com.oracle.truffle.polyglot.PolyglotLanguageContext 	 com.oracle.truffle.polyglot.PolyglotLanguage
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getContextImpl(com.oracle.truffle.polyglot.PolyglotLanguage):java.lang.Object 	 com.oracle.truffle.polyglot.PolyglotLanguage
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getContextInitialized(com.oracle.truffle.polyglot.PolyglotLanguage, com.oracle.truffle.polyglot.PolyglotLanguage):com.oracle.truffle.polyglot.PolyglotLanguageContext 	 com.oracle.truffle.polyglot.PolyglotLanguageContext
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::requireContext():com.oracle.truffle.polyglot.PolyglotContextImpl 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::resume(java.util.concurrent.Future<java.lang.Void>):void 	 com.oracle.truffle.polyglot.ContextPauseHandle
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getCachedThread():com.oracle.truffle.polyglot.PolyglotThreadInfo 	 com.oracle.truffle.polyglot.WeakAssumedValue
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getCurrentThreadInfo():com.oracle.truffle.polyglot.PolyglotThreadInfo 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::setCachedThreadInfo(com.oracle.truffle.polyglot.PolyglotThreadInfo):void 	 com.oracle.truffle.polyglot.PolyglotThreadLocalActions
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::checkAllThreadAccesses(java.lang.Thread, boolean):void 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::leaveAndEnter(com.oracle.truffle.api.TruffleSafepoint.Interrupter, com.oracle.truffle.api.TruffleSafepoint.InterruptibleFunction<T,R>, T, boolean):R 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::finishThreadDispose(java.lang.Thread, com.oracle.truffle.polyglot.PolyglotThreadInfo, java.lang.Throwable):void 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::notifyThreadFinalizing(com.oracle.truffle.polyglot.PolyglotThreadInfo, java.lang.Throwable, boolean):java.lang.Throwable 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::notifyThreadDisposing(com.oracle.truffle.polyglot.PolyglotThreadInfo, java.lang.Throwable):java.lang.Throwable 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::initializeNewThread(com.oracle.truffle.polyglot.PolyglotThreadInfo, boolean):void 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::transitionToMultiThreaded(boolean):void 	 com.oracle.truffle.polyglot.WeakAssumedValue
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::createThreadInfo(java.lang.Thread, boolean):com.oracle.truffle.polyglot.PolyglotThreadInfo 	 com.oracle.truffle.polyglot.WeakAssumedValue
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::throwDeniedThreadAccess(java.lang.Thread, boolean, java.util.List<com.oracle.truffle.polyglot.PolyglotLanguage>):java.lang.RuntimeException 	 com.oracle.truffle.polyglot.PolyglotLanguage
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getBindings(java.lang.String):java.lang.Object 	 com.oracle.truffle.polyglot.PolyglotLanguageContext
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::migrateHostWrapper(com.oracle.truffle.polyglot.PolyglotWrapper):java.lang.Object 	 com.oracle.truffle.polyglot.PolyglotWrapper
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::findLanguageContext(java.lang.Class<? extends com.oracle.truffle.api.TruffleLanguage>):com.oracle.truffle.polyglot.PolyglotLanguageContext 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getLanguageContextImpl(java.lang.Class<? extends com.oracle.truffle.api.TruffleLanguage<?>>):com.oracle.truffle.polyglot.PolyglotLanguageContext 	 com.oracle.truffle.polyglot.PolyglotLanguage
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::initializeInnerContextLanguage(java.lang.String):void 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::initializeLanguage(com.oracle.truffle.polyglot.PolyglotLanguage):boolean 	 com.oracle.truffle.polyglot.PolyglotLanguageContext
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::requirePublicLanguage(java.lang.String):com.oracle.truffle.polyglot.PolyglotLanguage 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::printResult(com.oracle.truffle.polyglot.PolyglotLanguageContext, java.lang.Object):void 	 com.oracle.truffle.api.impl.Accessor.LanguageSupport
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::setInterrupting():java.util.List<java.util.concurrent.Future<java.lang.Void>> 	 com.oracle.truffle.polyglot.PolyglotThreadLocalActions
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::validateInterruptPrecondition(com.oracle.truffle.polyglot.PolyglotContextImpl):void 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::interrupt(java.time.Duration):boolean 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getConstantEngine(com.oracle.truffle.api.nodes.Node):com.oracle.truffle.polyglot.PolyglotEngineImpl 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::waitForAllThreads(long, long):boolean 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::hasActiveOtherThread(boolean, boolean):boolean 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::calculateHeapSize(long, java.util.concurrent.atomic.AtomicBoolean):long 	 com.oracle.truffle.polyglot.ObjectSizeCalculator
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::submitCancellationThreadLocalAction(java.util.List<java.util.concurrent.Future<java.lang.Void>>):void 	 com.oracle.truffle.polyglot.PolyglotThreadLocalActions
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl.ExitException::getSourceLocation():com.oracle.truffle.api.source.SourceSection 	 com.oracle.truffle.api.nodes.Node
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::finishCleanup():void 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::disposeContext():java.util.List<com.oracle.truffle.polyglot.PolyglotLanguageContext> 	 com.oracle.truffle.polyglot.PolyglotLanguageContext
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::exitContextNotification(com.oracle.truffle.api.TruffleLanguage.ExitMode, int):void 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getLocal(com.oracle.truffle.polyglot.PolyglotLocals.LocalLocation):java.lang.Object 	 com.oracle.truffle.polyglot.PolyglotLocals.LocalLocation
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getThreadLocals(java.lang.Thread):java.lang.Object[] 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::initializeThreadLocals(com.oracle.truffle.polyglot.PolyglotThreadInfo):void 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::initializeInstrumentContextThreadLocals():void 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::resizeContextThreadLocals(com.oracle.truffle.polyglot.PolyglotEngineImpl.StableLocalLocations):void 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::invokeContextLocalsFactory(java.lang.Object[], com.oracle.truffle.polyglot.PolyglotLocals.LocalLocation[]):void 	 com.oracle.truffle.polyglot.PolyglotLocals.LocalLocation
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::invokeContextThreadLocalFactory(com.oracle.truffle.polyglot.PolyglotLocals.LocalLocation[]):void 	 com.oracle.truffle.polyglot.PolyglotThreadInfo
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::invokeContextThreadFactory(java.lang.Object[], com.oracle.truffle.polyglot.PolyglotLocals.LocalLocation[], java.lang.Thread):void 	 com.oracle.truffle.polyglot.PolyglotLocals.LocalLocation
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::patch(com.oracle.truffle.polyglot.PolyglotContextConfig):boolean 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::replayInstrumentationEvents():void 	 com.oracle.truffle.polyglot.PolyglotLanguage
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::preinitialize(com.oracle.truffle.polyglot.PolyglotEngineImpl, com.oracle.truffle.polyglot.PolyglotContextConfig.PreinitConfig, com.oracle.truffle.polyglot.PolyglotSharingLayer, java.util.Set<com.oracle.truffle.polyglot.PolyglotLanguage>, boolean):com.oracle.truffle.polyglot.PolyglotContextImpl 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getOrCreateContextLoggers():java.lang.Object 	 com.oracle.truffle.polyglot.PolyglotContextConfig
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::getAllLoggers():java.lang.Object[] 	 com.oracle.truffle.polyglot.PolyglotEngineImpl
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl.ContextWeakReference::freeSharing(com.oracle.truffle.polyglot.PolyglotContextImpl):void 	 com.oracle.truffle.polyglot.PolyglotSharingLayer
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::overridesPatchContext(java.lang.String):boolean 	 com.oracle.truffle.polyglot.LanguageCache
Move Method	com.oracle.truffle.polyglot.PolyglotContextImpl::runOnExited(int):void 	 com.oracle.truffle.polyglot.PolyglotContextConfig
Move Method	com.oracle.truffle.polyglot.PolyglotExecuteNode::doCached(com.oracle.truffle.polyglot.PolyglotLanguageContext, java.lang.Object, java.lang.Object[], java.lang.Class<?>, java.lang.reflect.Type, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.polyglot.InteropLibrary, com.oracle.truffle.polyglot.PolyglotLanguageContext.ToGuestValuesNode, com.oracle.truffle.polyglot.PolyglotToHostNode, com.oracle.truffle.polyglot.InlinedConditionProfile, com.oracle.truffle.polyglot.InlinedConditionProfile, com.oracle.truffle.polyglot.InlinedBranchProfile, com.oracle.truffle.polyglot.InlinedBranchProfile, com.oracle.truffle.polyglot.InlinedBranchProfile):java.lang.Object 	 com.oracle.truffle.polyglot.PolyglotInteropErrors
Move Method	com.oracle.truffle.polyglot.PolyglotToHostNode::doDefault(com.oracle.truffle.api.nodes.Node, com.oracle.truffle.polyglot.PolyglotLanguageContext, java.lang.Object, java.lang.Class<?>, java.lang.reflect.Type, com.oracle.truffle.polyglot.AbstractHostLanguageService, com.oracle.truffle.api.nodes.Node):java.lang.Object 	 com.oracle.truffle.polyglot.PolyglotContextImpl
Move Method	com.oracle.truffle.polyglot.PolyglotToHostNode::inlineToHost(com.oracle.truffle.polyglot.InlineTarget):com.oracle.truffle.api.nodes.Node 	 com.oracle.truffle.api.impl.Accessor.HostSupport
Move Method	com.oracle.truffle.runtime.OptimizedOSRLoopNode::profilingLoop(com.oracle.truffle.api.frame.VirtualFrame):java.lang.Object 	 com.oracle.truffle.api.nodes.RepeatingNode
Move Method	com.oracle.truffle.runtime.OptimizedOSRLoopNode::compilingLoop(com.oracle.truffle.api.frame.VirtualFrame):java.lang.Object 	 com.oracle.truffle.api.nodes.RepeatingNode
Move Method	com.oracle.truffle.runtime.OptimizedOSRLoopNode::createRootNodeImpl(com.oracle.truffle.api.nodes.RootNode, java.lang.Class<? extends com.oracle.truffle.api.frame.VirtualFrame>):com.oracle.truffle.runtime.OptimizedOSRLoopNode.AbstractLoopOSRRootNode 	 com.oracle.truffle.api.nodes.RootNode
Move Method	com.oracle.truffle.runtime.OptimizedOSRLoopNode::create(com.oracle.truffle.api.nodes.RepeatingNode):com.oracle.truffle.api.nodes.LoopNode 	 com.oracle.truffle.runtime.OptimizedTVMCI
Move Method	com.oracle.truffle.runtime.BytecodeOSRRootNode::materializeCalled(com.oracle.truffle.api.frame.FrameDescriptor):boolean 	 com.oracle.truffle.api.Truffle
Move Method	com.oracle.truffle.runtime.OptimizedBlockNode::profileArg(int):int 	 com.oracle.truffle.api.Assumption
Move Method	com.oracle.truffle.runtime.OptimizedBlockNode::makeAlwaysZeroAssumption(boolean):com.oracle.truffle.api.Assumption 	 com.oracle.truffle.api.Truffle
Move Method	com.oracle.truffle.runtime.OptimizedBlockNode::preparePartialBlockCompilations(com.oracle.truffle.runtime.OptimizedCallTarget):java.util.List<com.oracle.truffle.runtime.OptimizedCallTarget> 	 com.oracle.truffle.api.nodes.NodeUtil
Move Method	com.oracle.truffle.runtime.OptimizedBlockNode::computePartialBlocks(com.oracle.truffle.runtime.OptimizedCallTarget, com.oracle.truffle.runtime.OptimizedBlockNode<T>, com.oracle.truffle.runtime.OptimizedBlockNode.BlockVisitor, java.lang.Object[], int):com.oracle.truffle.runtime.OptimizedBlockNode.PartialBlocks<T> 	 com.oracle.truffle.runtime.OptimizedBlockNode.BlockVisitor
Move Method	com.oracle.truffle.runtime.OptimizedBlockNode.BlockVisitor::computeBlock(com.oracle.truffle.runtime.OptimizedBlockNode<T>):void 	 com.oracle.truffle.runtime.OptimizedBlockNode.PartialBlocks
Move Method	com.oracle.truffle.runtime.OptimizedBlockNode.PartialBlockRootNode::readAndProfileArg(java.lang.Object[]):int 	 com.oracle.truffle.api.Assumption
Move Method	com.oracle.truffle.sl.nodes.SLStatementNode::formatSourceSection(com.oracle.truffle.api.nodes.Node):java.lang.String 	 com.oracle.truffle.api.source.SourceSection
Move Method	com.oracle.truffle.sl.nodes.controlflow.SLBlockNode::getStatements():java.util.List<com.oracle.truffle.sl.nodes.SLStatementNode> 	 com.oracle.truffle.api.nodes.BlockNode
Move Method	com.oracle.truffle.sl.nodes.controlflow.SLIfNode::evaluateCondition(com.oracle.truffle.api.frame.VirtualFrame):boolean 	 com.oracle.truffle.sl.nodes.SLExpressionNode
Move Method	com.oracle.truffle.sl.nodes.controlflow.SLWhileRepeatingNode::evaluateCondition(com.oracle.truffle.api.frame.VirtualFrame):boolean 	 com.oracle.truffle.sl.nodes.SLExpressionNode
Move Method	com.oracle.truffle.sl.nodes.expression.SLAddNode::doSLBigInteger(com.oracle.truffle.sl.runtime.SLBigInteger, com.oracle.truffle.sl.runtime.SLBigInteger):com.oracle.truffle.sl.runtime.SLBigInteger 	 com.oracle.truffle.sl.runtime.SLBigInteger
Move Method	com.oracle.truffle.sl.nodes.expression.SLAddNode::doString(java.lang.Object, java.lang.Object, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode, com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode, com.oracle.truffle.api.strings.TruffleString.ConcatNode):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.api.strings.TruffleString.ConcatNode
Move Method	com.oracle.truffle.sl.nodes.expression.SLDivNode::doSLBigInteger(com.oracle.truffle.sl.runtime.SLBigInteger, com.oracle.truffle.sl.runtime.SLBigInteger):com.oracle.truffle.sl.runtime.SLBigInteger 	 com.oracle.truffle.sl.runtime.SLBigInteger
Move Method	com.oracle.truffle.sl.nodes.expression.SLEqualNode::doBigNumber(com.oracle.truffle.sl.runtime.SLBigInteger, com.oracle.truffle.sl.runtime.SLBigInteger):boolean 	 com.oracle.truffle.sl.runtime.SLBigInteger
Move Method	com.oracle.truffle.sl.nodes.expression.SLEqualNode::doTruffleString(com.oracle.truffle.api.strings.TruffleString, com.oracle.truffle.api.strings.TruffleString, com.oracle.truffle.api.strings.TruffleString.EqualNode):boolean 	 com.oracle.truffle.api.strings.TruffleString.EqualNode
Move Method	com.oracle.truffle.sl.nodes.expression.SLLessThanNode::doSLBigInteger(com.oracle.truffle.sl.runtime.SLBigInteger, com.oracle.truffle.sl.runtime.SLBigInteger):boolean 	 com.oracle.truffle.sl.runtime.SLBigInteger
Move Method	com.oracle.truffle.sl.nodes.expression.SLMulNode::doSLBigInteger(com.oracle.truffle.sl.runtime.SLBigInteger, com.oracle.truffle.sl.runtime.SLBigInteger):com.oracle.truffle.sl.runtime.SLBigInteger 	 com.oracle.truffle.sl.runtime.SLBigInteger
Move Method	com.oracle.truffle.sl.nodes.expression.SLReadPropertyNode::readSLObject(com.oracle.truffle.sl.runtime.SLObject, java.lang.Object, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.sl.nodes.expression.DynamicObjectLibrary, com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode):java.lang.Object 	 com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode
Move Method	com.oracle.truffle.sl.nodes.expression.SLReadPropertyNode::readObject(java.lang.Object, java.lang.Object, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.sl.nodes.expression.InteropLibrary, com.oracle.truffle.sl.nodes.util.SLToMemberNode):java.lang.Object 	 com.oracle.truffle.sl.nodes.util.SLToMemberNode
Move Method	com.oracle.truffle.sl.nodes.expression.SLSubNode::doSLBigInteger(com.oracle.truffle.sl.runtime.SLBigInteger, com.oracle.truffle.sl.runtime.SLBigInteger):com.oracle.truffle.sl.runtime.SLBigInteger 	 com.oracle.truffle.sl.runtime.SLBigInteger
Move Method	com.oracle.truffle.sl.nodes.expression.SLWritePropertyNode::writeSLObject(com.oracle.truffle.sl.runtime.SLObject, java.lang.Object, java.lang.Object, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.sl.nodes.expression.DynamicObjectLibrary, com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode):java.lang.Object 	 com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode
Move Method	com.oracle.truffle.sl.nodes.expression.SLWritePropertyNode::writeObject(java.lang.Object, java.lang.Object, java.lang.Object, com.oracle.truffle.api.nodes.Node, com.oracle.truffle.sl.nodes.expression.InteropLibrary, com.oracle.truffle.sl.nodes.util.SLToMemberNode):java.lang.Object 	 com.oracle.truffle.sl.nodes.util.SLToMemberNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject::toDisplayString(boolean):java.lang.Object 	 com.oracle.truffle.sl.nodes.SLRootNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject::getSourceLocation():com.oracle.truffle.api.source.SourceSection 	 com.oracle.truffle.sl.nodes.SLRootNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject::getMembers(boolean):java.lang.Object 	 com.oracle.truffle.sl.nodes.SLRootNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject.ExistsMember::doGeneric(com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject, java.lang.String):boolean 	 com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject.ModifiableMember::doGeneric(com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject, java.lang.String):boolean 	 com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject.ReadMember::doRead(com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject, java.lang.String, int):java.lang.Object 	 com.oracle.truffle.sl.runtime.SLNull
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.ArgumentsObject::findArgumentIndex(java.lang.String):int 	 com.oracle.truffle.sl.nodes.local.SLWriteLocalVariableNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject.ExistsMember::doGeneric(com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject, java.lang.String):boolean 	 com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject.ModifiableMember::doGeneric(com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject, java.lang.String):boolean 	 com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject.ReadMember::doRead(com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject, java.lang.String, int):java.lang.Object 	 com.oracle.truffle.sl.runtime.SLNull
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject.WriteMember::doWrite(com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject, java.lang.String, com.oracle.truffle.sl.nodes.local.SLWriteLocalVariableNode, java.lang.Object):void 	 com.oracle.truffle.sl.nodes.local.SLWriteLocalVariableNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject::getVisibleVariablesIndex():int 	 com.oracle.truffle.sl.nodes.local.SLScopedNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.VariablesObject::findWriteNode(java.lang.String):com.oracle.truffle.sl.nodes.local.SLWriteLocalVariableNode 	 com.oracle.truffle.sl.nodes.local.SLWriteLocalVariableNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.Key::asString():java.lang.String 	 com.oracle.truffle.sl.nodes.local.SLWriteLocalVariableNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.Key::asTruffleString():com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.sl.nodes.local.SLWriteLocalVariableNode
Move Method	com.oracle.truffle.sl.nodes.local.SLScopedNode.Key::hasSourceLocation():boolean 	 com.oracle.truffle.sl.nodes.local.SLWriteLocalVariableNode
Move Method	com.oracle.truffle.sl.nodes.util.SLToMemberNode::fromTruffleString(com.oracle.truffle.api.strings.TruffleString, com.oracle.truffle.api.strings.TruffleString.ToJavaStringNode):java.lang.String 	 com.oracle.truffle.api.strings.TruffleString.ToJavaStringNode
Move Method	com.oracle.truffle.sl.nodes.util.SLToMemberNode::fromBigNumber(com.oracle.truffle.sl.runtime.SLBigInteger):java.lang.String 	 com.oracle.truffle.sl.runtime.SLBigInteger
Move Method	com.oracle.truffle.sl.nodes.util.SLToMemberNode::bigNumberToString(com.oracle.truffle.sl.runtime.SLBigInteger):java.lang.String 	 com.oracle.truffle.sl.runtime.SLBigInteger
Move Method	com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode::fromNull(com.oracle.truffle.sl.runtime.SLNull):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.sl.runtime.SLStrings
Move Method	com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode::fromString(java.lang.String, com.oracle.truffle.api.strings.TruffleString.FromJavaStringNode):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.api.strings.TruffleString.FromJavaStringNode
Move Method	com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode::fromLong(long, com.oracle.truffle.api.strings.TruffleString.FromLongNode):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.api.strings.TruffleString.FromLongNode
Move Method	com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode::fromBigNumber(com.oracle.truffle.sl.runtime.SLBigInteger, com.oracle.truffle.api.strings.TruffleString.FromJavaStringNode):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.api.strings.TruffleString.FromJavaStringNode
Move Method	com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode::fromFunction(com.oracle.truffle.sl.runtime.SLFunction):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.sl.runtime.SLFunction
Move Method	com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode::fromInterop(java.lang.Object, com.oracle.truffle.sl.nodes.util.InteropLibrary, com.oracle.truffle.api.strings.TruffleString.FromLongNode, com.oracle.truffle.api.strings.TruffleString.FromJavaStringNode):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.api.CompilerDirectives
Move Method	com.oracle.truffle.sl.nodes.util.SLToTruffleStringNode::bigNumberToString(com.oracle.truffle.sl.runtime.SLBigInteger):java.lang.String 	 com.oracle.truffle.sl.runtime.SLBigInteger
Move Method	com.oracle.truffle.sl.nodes.util.SLUnboxNode::fromString(java.lang.String, com.oracle.truffle.api.strings.TruffleString.FromJavaStringNode):com.oracle.truffle.api.strings.TruffleString 	 com.oracle.truffle.api.strings.TruffleString.FromJavaStringNode
Move Method	com.oracle.truffle.sl.nodes.util.SLUnboxNode::fromForeign(java.lang.Object, com.oracle.truffle.sl.nodes.util.InteropLibrary):java.lang.Object 	 com.oracle.truffle.api.CompilerDirectives
Move Method	org.graalvm.visualizer.coordinator.impl.AbstractOutlineNode::getUserName():java.lang.String 	 org.graalvm.visualizer.data.FolderElement
Move Method	org.graalvm.visualizer.data.InputNode::mapPorts():void 	 org.graalvm.visualizer.data.serialization.Builder.NodeClass
Move Method	org.graalvm.visualizer.source.impl.SourceRepositoryNode::createFileRootNode(org.graalvm.visualizer.source.impl.FileRoot, org.graalvm.visualizer.source.impl.SourceRepositoryImpl):org.graalvm.visualizer.source.impl.Node 	 org.graalvm.visualizer.source.impl.FileRoot
Move Method	org.graalvm.wasm.nodes.WasmInstrumentableFunctionNode::enterErrorBranch():void 	 org.graalvm.wasm.WasmCodeEntry
Move Method	org.graalvm.wasm.nodes.WasmInstrumentableFunctionNode::paramCount():int 	 org.graalvm.wasm.WasmModule
Move Method	org.graalvm.wasm.nodes.WasmInstrumentableFunctionNode::name():java.lang.String 	 org.graalvm.wasm.WasmCodeEntry
Move Method	org.graalvm.wasm.nodes.WasmInstrumentableFunctionNode::getScope(com.oracle.truffle.api.frame.Frame, boolean):java.lang.Object 	 org.graalvm.wasm.nodes.WasmInstrumentationSupportNode
Move Method	org.graalvm.wasm.nodes.WasmInstrumentableFunctionNode::loadByteArrayFromMemory(com.oracle.truffle.api.frame.MaterializedFrame, long, int):byte[] 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmInstrumentationSupportNode::enterAt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 com.oracle.truffle.api.instrumentation.InstrumentableNode.WrapperNode
Move Method	org.graalvm.wasm.nodes.WasmInstrumentationSupportNode::exitAt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 com.oracle.truffle.api.instrumentation.ProbeNode
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::enterErrorBranch():void 	 org.graalvm.wasm.WasmCodeEntry
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::failFunctionTypeCheck(org.graalvm.wasm.WasmFunction, int):void 	 org.graalvm.wasm.WasmFunction
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::executeDirectCall(com.oracle.truffle.api.frame.VirtualFrame, int, org.graalvm.wasm.WasmInstance, int, org.graalvm.wasm.WasmFunction, java.lang.Object[]):int 	 com.oracle.truffle.api.TruffleContext
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::assertDirectCall(org.graalvm.wasm.WasmInstance, org.graalvm.wasm.WasmFunction, com.oracle.truffle.api.nodes.DirectCallNode):boolean 	 org.graalvm.wasm.WasmFunction
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::executeIndirectCallNode(int, com.oracle.truffle.api.CallTarget, java.lang.Object[]):java.lang.Object 	 org.graalvm.wasm.nodes.WasmIndirectCallNode
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::load(org.graalvm.wasm.memory.WasmMemory, com.oracle.truffle.api.frame.VirtualFrame, int, int, long):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::store(org.graalvm.wasm.memory.WasmMemory, com.oracle.truffle.api.frame.VirtualFrame, int, int, long):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::executeAtomicAtAddress(org.graalvm.wasm.memory.WasmMemory, com.oracle.truffle.api.frame.VirtualFrame, int, int, long):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::loadVector(org.graalvm.wasm.memory.WasmMemory, com.oracle.truffle.api.frame.VirtualFrame, int, int, long):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::storeVector(org.graalvm.wasm.memory.WasmMemory, long, org.graalvm.wasm.api.Vector128):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::loadVectorLane(org.graalvm.wasm.memory.WasmMemory, com.oracle.truffle.api.frame.VirtualFrame, int, int, long, int, org.graalvm.wasm.api.Vector128):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::storeVectorLane(org.graalvm.wasm.memory.WasmMemory, int, long, int, org.graalvm.wasm.api.Vector128):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::global_set(org.graalvm.wasm.WasmContext, org.graalvm.wasm.WasmInstance, com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::global_get(org.graalvm.wasm.WasmContext, org.graalvm.wasm.WasmInstance, com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::local_tee(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::local_tee_obj(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::local_set(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::local_set_obj(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::local_get(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::local_get_obj(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_eqz(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_eqz(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_eq(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_ne(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_lt_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_lt_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_gt_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_gt_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_le_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_le_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_ge_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_ge_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_eq(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_ne(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_lt_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_lt_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_gt_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_gt_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_le_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_le_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_ge_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_ge_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_eq(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_ne(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_lt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_gt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_le(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_ge(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_eq(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_ne(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_lt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_gt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_le(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_ge(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_clz(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_ctz(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_popcnt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_add(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_sub(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_mul(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_and(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_or(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_xor(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_shl(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_shr_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_shr_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_rotl(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_rotr(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_clz(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_ctz(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_popcnt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_add(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_sub(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_mul(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_and(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_or(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_xor(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_shl(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_shr_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_shr_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_rotl(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_rotr(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_abs(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_neg(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_ceil(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_floor(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_trunc(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_nearest(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_sqrt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_add(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_sub(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_mul(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_div(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_min(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_max(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_copysign(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_abs(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_neg(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_ceil(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_floor(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_trunc(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_nearest(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_sqrt(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_add(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_sub(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_mul(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_div(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_min(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_max(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_copysign(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_wrap_i64(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_trunc_sat_f32_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_trunc_sat_f32_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_trunc_sat_f64_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_trunc_sat_f64_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_extend_i32_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_extend_i32_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_trunc_sat_f32_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_trunc_sat_f32_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_trunc_sat_f64_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_trunc_sat_f64_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_convert_i32_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_convert_i32_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_convert_i64_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_convert_i64_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_demote_f64(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_convert_i32_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_convert_i32_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_convert_i64_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_convert_i64_u(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_promote_f32(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_reinterpret_f32(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_reinterpret_f64(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f32_reinterpret_i32(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::f64_reinterpret_i64(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_extend8_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i32_extend16_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_extend8_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_extend16_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::i64_extend32_s(com.oracle.truffle.api.frame.VirtualFrame, int):void 	 org.graalvm.wasm.nodes.WasmFrame
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::table_init(org.graalvm.wasm.WasmContext, org.graalvm.wasm.WasmInstance, int, int, int, int, int):void 	 org.graalvm.wasm.WasmTable
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::table_get(org.graalvm.wasm.WasmContext, org.graalvm.wasm.WasmInstance, com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.WasmTable
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::table_set(org.graalvm.wasm.WasmContext, org.graalvm.wasm.WasmInstance, com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::table_size(org.graalvm.wasm.WasmContext, org.graalvm.wasm.WasmInstance, com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 org.graalvm.wasm.TableRegistry
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::table_grow(org.graalvm.wasm.WasmContext, org.graalvm.wasm.WasmInstance, int, java.lang.Object, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::table_copy(org.graalvm.wasm.WasmContext, org.graalvm.wasm.WasmInstance, int, int, int, int, int):void 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::table_fill(org.graalvm.wasm.WasmContext, org.graalvm.wasm.WasmInstance, int, java.lang.Object, int, int):void 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::memory_init(org.graalvm.wasm.WasmInstance, int, int, long, int, int):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::memory_init_unsafe(org.graalvm.wasm.WasmInstance, int, int, long, int, int):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::data_drop(org.graalvm.wasm.WasmInstance, int):void 	 org.graalvm.wasm.RuntimeState
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::data_drop_unsafe(org.graalvm.wasm.WasmInstance, int):void 	 org.graalvm.wasm.RuntimeState
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::memory_fill(org.graalvm.wasm.WasmInstance, long, int, long, int):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::memory_copy(org.graalvm.wasm.WasmInstance, long, long, long, int, int):void 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::resolveCallNode(org.graalvm.wasm.WasmInstance, int):void 	 org.graalvm.wasm.WasmFunction
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::createArgumentsForCall(com.oracle.truffle.api.frame.VirtualFrame, int, int, int):java.lang.Object[] 	 org.graalvm.wasm.WasmModule
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::unwindPrimitiveStack(com.oracle.truffle.api.frame.VirtualFrame, int, int, int):void 	 com.oracle.truffle.api.CompilerAsserts
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::unwindObjectStack(com.oracle.truffle.api.frame.VirtualFrame, int, int, int):void 	 com.oracle.truffle.api.CompilerAsserts
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::unwindStack(com.oracle.truffle.api.frame.VirtualFrame, int, int, int):void 	 com.oracle.truffle.api.CompilerAsserts
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::dropStack(com.oracle.truffle.api.frame.VirtualFrame, int, int):void 	 com.oracle.truffle.api.CompilerAsserts
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::profileCondition(byte[], int, boolean):boolean 	 com.oracle.truffle.api.CompilerDirectives
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::updateBranchTableProfile(byte[], int, int):void 	 com.oracle.truffle.api.CompilerDirectives
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::profileBranchTable(byte[], int, int, boolean):boolean 	 com.oracle.truffle.api.CompilerDirectives
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::pushDirectCallResult(com.oracle.truffle.api.frame.VirtualFrame, int, org.graalvm.wasm.WasmFunction, java.lang.Object, org.graalvm.wasm.WasmLanguage):int 	 org.graalvm.wasm.WasmFunction
Move Method	org.graalvm.wasm.nodes.WasmFunctionNode::pushIndirectCallResult(com.oracle.truffle.api.frame.VirtualFrame, int, int, java.lang.Object, org.graalvm.wasm.WasmLanguage):int 	 org.graalvm.wasm.WasmModule
Move Method	org.graalvm.wasm.nodes.WasmIndirectCallNode::doCached(com.oracle.truffle.api.CallTarget, java.lang.Object[], com.oracle.truffle.api.nodes.DirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.DirectCallNode
Move Method	org.graalvm.wasm.nodes.WasmIndirectCallNode::doIndirect(com.oracle.truffle.api.CallTarget, java.lang.Object[], com.oracle.truffle.api.nodes.IndirectCallNode):java.lang.Object 	 com.oracle.truffle.api.nodes.IndirectCallNode
Move Method	org.graalvm.wasm.nodes.WasmRootNode::moveArgumentsToLocals(com.oracle.truffle.api.frame.VirtualFrame):void 	 org.graalvm.wasm.nodes.WasmInstrumentableFunctionNode
Move Method	org.graalvm.wasm.nodes.WasmRootNode::initializeLocals(com.oracle.truffle.api.frame.VirtualFrame):void 	 org.graalvm.wasm.nodes.WasmInstrumentableFunctionNode
Move Method	org.graalvm.wasm.predefined.testutil.RunCustomInitializationNode::initializeModule(java.lang.Object):void 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiClockTimeGetNode::unimplementedClock(org.graalvm.wasm.predefined.wasi.types.Clockid):org.graalvm.wasm.exception.WasmException 	 org.graalvm.wasm.exception.WasmException
Move Method	org.graalvm.wasm.predefined.wasi.WasiConstantRandomGetNode::randomGet(org.graalvm.wasm.memory.WasmMemory, int, int):int 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdFdstatGetNode::fdFdstatGet(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdFdstatSetFlagsNode::fdFdstatSetFlags(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, short):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdReadNode::fdRead(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int, int):int 	 org.graalvm.wasm.predefined.wasi.fd.Fd
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathCreateDirectoryNode::pathCreateDirectory(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathFileStatGetNode::pathFilestatGet(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathFilestatSetTimesNode::pathFilestatSetTimeNode(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int, int, long, long, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathLinkNode::pathLink(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int, int, int, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathOpenNode::pathOpen(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int, int, short, long, long, short, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathRemoveDirectoryNode::pathRemoveDirectory(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathRenameNode::pathRename(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int, int, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathSymlinkNode::pathSymlink(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathUnlinkFileNode::pathUnlinkFile(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiRandomGetNode::randomGet(org.graalvm.wasm.memory.WasmMemory, int, int):int 	 org.graalvm.wasm.memory.WasmMemory
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdCloseNode::fdClose(org.graalvm.wasm.WasmContext, int):int 	 org.graalvm.wasm.predefined.wasi.fd.Fd
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdFilestatGetNode::fdFilestatGet(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdFilestatSetTimesNode::fdstatSetTime(org.graalvm.wasm.WasmContext, int, long, long, int):int 	 org.graalvm.wasm.predefined.wasi.fd.Fd
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdPrestatDirNameNode::fdPrestatDirName(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdPrestatGetNode::fdPrestatGet(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdSeekNode::fdSeek(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, long, int, int):int 	 org.graalvm.wasm.WasmContext
Move Method	org.graalvm.wasm.predefined.wasi.WasiFdWriteNode::fdWrite(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int, int):int 	 org.graalvm.wasm.predefined.wasi.fd.Fd
Move Method	org.graalvm.wasm.predefined.wasi.WasiPathReadLinkNode::pathReadLink(org.graalvm.wasm.WasmContext, org.graalvm.wasm.memory.WasmMemory, int, int, int, int, int):int 	 org.graalvm.wasm.WasmContext