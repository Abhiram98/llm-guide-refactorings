[
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeMarkUnsafeAccess(graph EncodedGraph) : void extracted from public decode(encodedGraph EncodedGraph, nodeReferences Iterable<EncodedGraph.EncodedNodeReference>) : void in class jdk.graal.compiler.nodes.GraphDecoder & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 571,
                    "endLine": 600,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public decode(encodedGraph EncodedGraph, nodeReferences Iterable<EncodedGraph.EncodedNodeReference>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 595,
                    "endLine": 595,
                    "startColumn": 17,
                    "endColumn": 42,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 594,
                    "endLine": 596,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 594,
                    "endLine": 596,
                    "startColumn": 49,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1135,
                    "endLine": 1139,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeMarkUnsafeAccess(graph EncodedGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1137,
                    "endLine": 1137,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1136,
                    "endLine": 1138,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1136,
                    "endLine": 1138,
                    "startColumn": 38,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 571,
                    "endLine": 598,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public decode(encodedGraph EncodedGraph, nodeReferences Iterable<EncodedGraph.EncodedNodeReference>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 594,
                    "endLine": 594,
                    "startColumn": 13,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.maybeMarkUnsafeAccess(encodedGraph)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 433,
        "extraction_results": {
            "success": true,
            "newCommitHash": "1945e880c1c304df4d3102c6a819b64173d71590",
            "newBranchName": "extract-maybeMarkUnsafeAccess-decode-d0041dd-1"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "url": "https://github.com/oracle/graal/commit/7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getSizeInBytes() : int extracted from private parseIntegerConstantValue(info PropertyInfo<Object>) : void in class com.oracle.svm.hosted.c.query.QueryResultParser & moved to class com.oracle.svm.hosted.c.info.SizableInfo",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/QueryResultParser.java",
                    "startLine": 187,
                    "endLine": 202,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseIntegerConstantValue(info PropertyInfo<Object>) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/QueryResultParser.java",
                    "startLine": 189,
                    "endLine": 189,
                    "startColumn": 9,
                    "endColumn": 81,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 96,
                    "endLine": 98,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getSizeInBytes() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 9,
                    "endColumn": 44,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/QueryResultParser.java",
                    "startLine": 208,
                    "endLine": 219,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseIntegerConstantValue(info PropertyInfo<Object>) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/QueryResultParser.java",
                    "startLine": 213,
                    "endLine": 213,
                    "startColumn": 23,
                    "endColumn": 46,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "parent.getSizeInBytes()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 440,
        "extraction_results": {
            "success": true,
            "newCommitHash": "b00fed42af5f6d33ccdca427621175cd5e2218c2",
            "newBranchName": "extract-getSizeInBytes-parseIntegerConstantValue-324b856"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c1fc3905c614510bae727216ee3066ae99d45a3d",
        "url": "https://github.com/oracle/graal/commit/c1fc3905c614510bae727216ee3066ae99d45a3d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public checkExpiration() : void extracted from public apply(closure BlockIteratorClosure<StateT>, start HIRBlock, initialState StateT, stopAtBlock Predicate<HIRBlock>) : EconomicMap<FixedNode,StateT> in class jdk.graal.compiler.phases.graph.ReentrantBlockIterator & moved to class jdk.graal.compiler.core.common.util.CompilationAlarm",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 131,
                    "endLine": 202,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public apply(closure BlockIteratorClosure<StateT>, start HIRBlock, initialState StateT, stopAtBlock Predicate<HIRBlock>) : EconomicMap<FixedNode,StateT>"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 149,
                    "endLine": 149,
                    "startColumn": 17,
                    "endColumn": 117,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 147,
                    "endLine": 150,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 147,
                    "endLine": 150,
                    "startColumn": 48,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/util/CompilationAlarm.java",
                    "startLine": 99,
                    "endLine": 106,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public checkExpiration() : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/util/CompilationAlarm.java",
                    "startLine": 104,
                    "endLine": 104,
                    "startColumn": 13,
                    "endColumn": 94,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/util/CompilationAlarm.java",
                    "startLine": 103,
                    "endLine": 105,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/util/CompilationAlarm.java",
                    "startLine": 103,
                    "endLine": 105,
                    "startColumn": 27,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 129,
                    "endLine": 196,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public apply(closure BlockIteratorClosure<StateT>, start HIRBlock, initialState StateT, stopAtBlock Predicate<HIRBlock>) : EconomicMap<FixedNode,StateT>"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 144,
                    "endLine": 144,
                    "startColumn": 13,
                    "endColumn": 47,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "compilationAlarm.checkExpiration()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 476,
        "extraction_results": {
            "success": true,
            "newCommitHash": "191a54eba4ada16612d3c115c14e991cf0941fa6",
            "newBranchName": "extract-checkExpiration-apply-c8e9e12"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "ca796650fa81760f3bc0498851334b132b826f9a",
        "url": "https://github.com/oracle/graal/commit/ca796650fa81760f3bc0498851334b132b826f9a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public checkSanityAfterCollection() : void extracted from private postcondition() : void in class com.oracle.svm.core.genscavenge.GCImpl & moved to class com.oracle.svm.core.genscavenge.YoungGeneration",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 440,
                    "endLine": 444,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private postcondition() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 443,
                    "endLine": 443,
                    "startColumn": 9,
                    "endColumn": 104,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/YoungGeneration.java",
                    "startLine": 334,
                    "endLine": 337,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public checkSanityAfterCollection() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/YoungGeneration.java",
                    "startLine": 336,
                    "endLine": 336,
                    "startColumn": 9,
                    "endColumn": 76,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 444,
                    "endLine": 448,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private checkSanityAfterCollection() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 446,
                    "endLine": 446,
                    "startColumn": 9,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "heap.getYoungGeneration().checkSanityAfterCollection()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 447,
                    "endLine": 447,
                    "startColumn": 9,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "heap.getOldGeneration().checkSanityAfterCollection()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 481,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a885dd5d3d3f6c21706115af9b892ac3efd3d8e1",
            "newBranchName": "extract-checkSanityAfterCollection-postcondition-68e7fa1"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "62cf889a84c204b3c995a38beb48d35443a5f0a8",
        "url": "https://github.com/oracle/graal/commit/62cf889a84c204b3c995a38beb48d35443a5f0a8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package languageHomes() : Map<String,Path> extracted from package createForEngine(engine PolyglotEngineImpl, resourcesFileSystem FileSystem, delegateFileSystem FileSystem) : ResourcesFileSystem in class com.oracle.truffle.polyglot.FileSystems.ResourcesFileSystem & moved to class com.oracle.truffle.polyglot.PolyglotEngineImpl",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1231,
                    "endLine": 1242,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package createForEngine(engine PolyglotEngineImpl, resourcesFileSystem FileSystem, delegateFileSystem FileSystem) : ResourcesFileSystem"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1232,
                    "endLine": 1232,
                    "startColumn": 13,
                    "endColumn": 55,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1235,
                    "endLine": 1235,
                    "startColumn": 21,
                    "endColumn": 82,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1236,
                    "endLine": 1238,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1234,
                    "endLine": 1239,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1233,
                    "endLine": 1240,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1236,
                    "endLine": 1238,
                    "startColumn": 47,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1234,
                    "endLine": 1239,
                    "startColumn": 39,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1233,
                    "endLine": 1240,
                    "startColumn": 64,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2340,
                    "endLine": 2352,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package languageHomes() : Map<String,Path>"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2341,
                    "endLine": 2341,
                    "startColumn": 9,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2345,
                    "endLine": 2345,
                    "startColumn": 17,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2346,
                    "endLine": 2348,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2343,
                    "endLine": 2349,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2342,
                    "endLine": 2350,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2346,
                    "endLine": 2348,
                    "startColumn": 43,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2343,
                    "endLine": 2349,
                    "startColumn": 35,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2342,
                    "endLine": 2350,
                    "startColumn": 53,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1231,
                    "endLine": 1233,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package createForEngine(engine PolyglotEngineImpl, resourcesFileSystem FileSystem, delegateFileSystem FileSystem) : ResourcesFileSystem"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1232,
                    "endLine": 1232,
                    "startColumn": 127,
                    "endColumn": 149,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "engine.languageHomes()"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2344,
                    "endLine": 2344,
                    "startColumn": 17,
                    "endColumn": 54,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2347,
                    "endLine": 2347,
                    "startColumn": 21,
                    "endColumn": 77,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2351,
                    "endLine": 2351,
                    "startColumn": 9,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 486,
        "extraction_results": {
            "success": true,
            "newCommitHash": "be4c3997b8549decd497525356b8fe98fe000060",
            "newBranchName": "extract-languageHomes-createForEngine-27fe3e8"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "62cf889a84c204b3c995a38beb48d35443a5f0a8",
        "url": "https://github.com/oracle/graal/commit/62cf889a84c204b3c995a38beb48d35443a5f0a8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package languageHomes() : Map<String,Path> extracted from package preinitialize(engine PolyglotEngineImpl, preinitConfig PreinitConfig, sharableLayer PolyglotSharingLayer, languagesToPreinitialize Set<PolyglotLanguage>, emitWarning boolean) : PolyglotContextImpl in class com.oracle.truffle.polyglot.PolyglotContextImpl & moved to class com.oracle.truffle.polyglot.PolyglotEngineImpl",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3551,
                    "endLine": 3628,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package preinitialize(engine PolyglotEngineImpl, preinitConfig PreinitConfig, sharableLayer PolyglotSharingLayer, languagesToPreinitialize Set<PolyglotLanguage>, emitWarning boolean) : PolyglotContextImpl"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3613,
                    "endLine": 3613,
                    "startColumn": 13,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3616,
                    "endLine": 3616,
                    "startColumn": 21,
                    "endColumn": 58,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3617,
                    "endLine": 3617,
                    "startColumn": 21,
                    "endColumn": 67,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3619,
                    "endLine": 3619,
                    "startColumn": 25,
                    "endColumn": 81,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3618,
                    "endLine": 3620,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3615,
                    "endLine": 3621,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3614,
                    "endLine": 3622,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3618,
                    "endLine": 3620,
                    "startColumn": 47,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3615,
                    "endLine": 3621,
                    "startColumn": 39,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3614,
                    "endLine": 3622,
                    "startColumn": 64,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2340,
                    "endLine": 2352,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package languageHomes() : Map<String,Path>"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2341,
                    "endLine": 2341,
                    "startColumn": 9,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2344,
                    "endLine": 2344,
                    "startColumn": 17,
                    "endColumn": 54,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2345,
                    "endLine": 2345,
                    "startColumn": 17,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2347,
                    "endLine": 2347,
                    "startColumn": 21,
                    "endColumn": 77,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2346,
                    "endLine": 2348,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2343,
                    "endLine": 2349,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2342,
                    "endLine": 2350,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2346,
                    "endLine": 2348,
                    "startColumn": 43,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2343,
                    "endLine": 2349,
                    "startColumn": 35,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2342,
                    "endLine": 2350,
                    "startColumn": 53,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3551,
                    "endLine": 3618,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package preinitialize(engine PolyglotEngineImpl, preinitConfig PreinitConfig, sharableLayer PolyglotSharingLayer, languagesToPreinitialize Set<PolyglotLanguage>, emitWarning boolean) : PolyglotContextImpl"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3613,
                    "endLine": 3613,
                    "startColumn": 47,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "engine.languageHomes()"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2351,
                    "endLine": 2351,
                    "startColumn": 9,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 487,
        "extraction_results": {
            "success": true,
            "newCommitHash": "12668a78c336901d84c3681a5fc4cd9f49014d4e",
            "newBranchName": "extract-languageHomes-preinitialize-27fe3e8"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "4943dd979eeaba50486f93ba4ff63ea9eb85160e",
        "url": "https://github.com/oracle/graal/commit/4943dd979eeaba50486f93ba4ff63ea9eb85160e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public fireNodeEvent(e NodeEvent, node Node) : void extracted from private maybeNotifyInputChanged(node Node) : void in class jdk.graal.compiler.graph.Node & moved to class jdk.graal.compiler.graph.Graph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1197,
                    "endLine": 1206,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private maybeNotifyInputChanged(node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1200,
                    "endLine": 1200,
                    "startColumn": 13,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1202,
                    "endLine": 1202,
                    "startColumn": 17,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1201,
                    "endLine": 1203,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1201,
                    "endLine": 1203,
                    "startColumn": 35,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 700,
                    "endLine": 708,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public fireNodeEvent(e NodeEvent, node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 702,
                    "endLine": 702,
                    "startColumn": 13,
                    "endColumn": 53,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 704,
                    "endLine": 704,
                    "startColumn": 17,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 701,
                    "endLine": 707,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 701,
                    "endLine": 707,
                    "startColumn": 40,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1197,
                    "endLine": 1203,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private maybeNotifyInputChanged(node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1200,
                    "endLine": 1200,
                    "startColumn": 13,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.fireNodeEvent(Graph.NodeEvent.INPUT_CHANGED,node)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 705,
                    "endLine": 705,
                    "startColumn": 17,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 703,
                    "endLine": 706,
                    "startColumn": 16,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 703,
                    "endLine": 706,
                    "startColumn": 13,
                    "endColumn": 33,
                    "codeElementType": "DO_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 488,
        "extraction_results": {
            "success": true,
            "newCommitHash": "ea3e8addca923104a2134a38798f312c9b108161",
            "newBranchName": "extract-fireNodeEvent-maybeNotifyInputChanged-9633a3f"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "4943dd979eeaba50486f93ba4ff63ea9eb85160e",
        "url": "https://github.com/oracle/graal/commit/4943dd979eeaba50486f93ba4ff63ea9eb85160e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public fireNodeEvent(e NodeEvent, node Node) : void extracted from public maybeNotifyZeroUsages(node Node) : void in class jdk.graal.compiler.graph.Node & moved to class jdk.graal.compiler.graph.Graph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1208,
                    "endLine": 1221,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public maybeNotifyZeroUsages(node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1216,
                    "endLine": 1216,
                    "startColumn": 13,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1218,
                    "endLine": 1218,
                    "startColumn": 17,
                    "endColumn": 67,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1217,
                    "endLine": 1219,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1217,
                    "endLine": 1219,
                    "startColumn": 35,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 700,
                    "endLine": 708,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public fireNodeEvent(e NodeEvent, node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 702,
                    "endLine": 702,
                    "startColumn": 13,
                    "endColumn": 53,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 704,
                    "endLine": 704,
                    "startColumn": 17,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 701,
                    "endLine": 707,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 701,
                    "endLine": 707,
                    "startColumn": 40,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1205,
                    "endLine": 1215,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public maybeNotifyZeroUsages(node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1213,
                    "endLine": 1213,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.fireNodeEvent(Graph.NodeEvent.ZERO_USAGES,node)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 705,
                    "endLine": 705,
                    "startColumn": 17,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 703,
                    "endLine": 706,
                    "startColumn": 16,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 703,
                    "endLine": 706,
                    "startColumn": 13,
                    "endColumn": 33,
                    "codeElementType": "DO_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 489,
        "extraction_results": {
            "success": true,
            "newCommitHash": "3a0ba381b79623df51c83d7e265aed0f23bb6c7d",
            "newBranchName": "extract-fireNodeEvent-maybeNotifyZeroUsages-9633a3f"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d450dc2e5817d2bbeb9c0e9cecff779910255a67",
        "url": "https://github.com/oracle/graal/commit/d450dc2e5817d2bbeb9c0e9cecff779910255a67",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public notWeakerThan(connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : boolean extracted from package compute(graph StructuredGraph, backendBlocks boolean, connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : ControlFlowGraph in class jdk.graal.compiler.nodes.cfg.ControlFlowGraph & moved to class jdk.graal.compiler.nodes.cfg.ControlFlowGraph.BuildConfiguration",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 133,
                    "endLine": 196,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package compute(graph StructuredGraph, backendBlocks boolean, connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : ControlFlowGraph"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 182,
                    "endLine": 182,
                    "startColumn": 17,
                    "endColumn": 93,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 186,
                    "endLine": 186,
                    "startColumn": 17,
                    "endColumn": 80,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 179,
                    "endLine": 179,
                    "startColumn": 17,
                    "endColumn": 83,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 175,
                    "endLine": 175,
                    "startColumn": 17,
                    "endColumn": 70,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 232,
                    "endLine": 241,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public notWeakerThan(connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 239,
                    "endLine": 240,
                    "startColumn": 13,
                    "endColumn": 134,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 133,
                    "endLine": 193,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package compute(graph StructuredGraph, modifiableBlocks boolean, connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : ControlFlowGraph"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 149,
                    "endLine": 149,
                    "startColumn": 21,
                    "endColumn": 139,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "cfg.buildConfig.notWeakerThan(connectBlocks,computeFrequency,computeLoops,computeDominators,computePostdominators)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 490,
        "extraction_results": {
            "success": true,
            "newCommitHash": "c87ca336197635cd25fcb9bba370d9b35ebbb4b6",
            "newBranchName": "extract-notWeakerThan-compute-4943dd9"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "06e830443f638e80588387e122a92351b1e11675",
        "url": "https://github.com/oracle/graal/commit/06e830443f638e80588387e122a92351b1e11675",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package endRecording() : void extracted from public endRecording() : void in class com.oracle.svm.core.jfr.SubstrateJVM & moved to class com.oracle.svm.core.jfr.JfrRecorderThread",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 345,
                    "endLine": 355,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public endRecording() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 354,
                    "endLine": 354,
                    "startColumn": 9,
                    "endColumn": 24,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 353,
                    "endLine": 353,
                    "startColumn": 9,
                    "endColumn": 72,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 113,
                    "endLine": 121,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package endRecording() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 117,
                    "endLine": 117,
                    "startColumn": 13,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 116,
                    "endLine": 116,
                    "startColumn": 13,
                    "endColumn": 102,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 345,
                    "endLine": 354,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public endRecording() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 353,
                    "endLine": 353,
                    "startColumn": 9,
                    "endColumn": 38,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "recorderThread.endRecording()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 114,
                    "endLine": 114,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 119,
                    "endLine": 119,
                    "startColumn": 13,
                    "endColumn": 27,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 115,
                    "endLine": 120,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 118,
                    "endLine": 120,
                    "startColumn": 19,
                    "endColumn": 10,
                    "codeElementType": "FINALLY_BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 491,
        "extraction_results": {
            "success": true,
            "newCommitHash": "39102b1cc735d9432bdadb318dd4378f877ca443",
            "newBranchName": "extract-endRecording-endRecording-fc7078a"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "dd975be5c61014a1febde1b8d3f67a2e50e84b63",
        "url": "https://github.com/oracle/graal/commit/dd975be5c61014a1febde1b8d3f67a2e50e84b63",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public toJson(builder JsonBuilder.ObjectBuilder) : void extracted from public afterCompilation(access AfterCompilationAccess) : void in class com.oracle.svm.hosted.dashboard.DashboardDumpFeature & moved to class com.oracle.svm.hosted.dashboard.CodeBreakdown",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 152,
                    "endLine": 183,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public afterCompilation(access AfterCompilationAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 174,
                    "endLine": 174,
                    "startColumn": 41,
                    "endColumn": 54,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 63,
                    "endLine": 74,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public toJson(builder JsonBuilder.ObjectBuilder) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 9,
                    "endColumn": 17,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 163,
                    "endLine": 195,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public afterCompilation(access AfterCompilationAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 174,
                    "endLine": 174,
                    "startColumn": 41,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "dump.toJson(builder)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 68,
                    "endLine": 70,
                    "startColumn": 21,
                    "endColumn": 63,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 67,
                    "endLine": 71,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 66,
                    "endLine": 72,
                    "startColumn": 70,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 66,
                    "endLine": 72,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 65,
                    "endLine": 73,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 495,
        "extraction_results": {
            "success": true,
            "newCommitHash": "70e3402349041725ede71febccbbe12a6aaef398",
            "newBranchName": "extract-toJson-afterCompilation-26fbc9c-1"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "e2b81f790c3f1c2e2d2b137ea1ff1824a6f696e2",
        "url": "https://github.com/oracle/graal/commit/e2b81f790c3f1c2e2d2b137ea1ff1824a6f696e2",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public registerAsUnsafeAllocated(reason Object) : boolean extracted from private registerClass(condition ConfigurationCondition, clazz Class<?>, unsafeInstantiated boolean, allowForName boolean) : void in class com.oracle.svm.hosted.reflect.ReflectionDataBuilder & moved to class com.oracle.graal.pointsto.meta.AnalysisType",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/ReflectionDataBuilder.java",
                    "startLine": 226,
                    "endLine": 258,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private registerClass(condition ConfigurationCondition, clazz Class<?>, unsafeInstantiated boolean, allowForName boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/ReflectionDataBuilder.java",
                    "startLine": 234,
                    "endLine": 234,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 531,
                    "endLine": 534,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public registerAsUnsafeAllocated(reason Object) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 532,
                    "endLine": 532,
                    "startColumn": 9,
                    "endColumn": 40,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/ReflectionDataBuilder.java",
                    "startLine": 226,
                    "endLine": 258,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private registerClass(condition ConfigurationCondition, clazz Class<?>, unsafeInstantiated boolean, allowForName boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/ReflectionDataBuilder.java",
                    "startLine": 234,
                    "endLine": 234,
                    "startColumn": 13,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "type.registerAsUnsafeAllocated(\"Is registered for reflection.\")"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 533,
                    "endLine": 533,
                    "startColumn": 9,
                    "endColumn": 78,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 497,
        "extraction_results": {
            "success": true,
            "newCommitHash": "ecc656d04d0eff6ad53d74d5179f005b36b3d0fc",
            "newBranchName": "extract-registerAsUnsafeAllocated-registerClass-a25a7b6"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "59063acffc31c2ba274cfe09856964c0a07a2cd0",
        "url": "https://github.com/oracle/graal/commit/59063acffc31c2ba274cfe09856964c0a07a2cd0",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public pop(k JavaKind) : JavaKind extracted from private popSignature(sig Symbol<Type>[], isStatic boolean, frame Builder) : void in class com.oracle.truffle.espresso.analysis.frame.FrameAnalysis & moved to class com.oracle.truffle.espresso.vm.continuation.EspressoFrameDescriptor.Builder",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 287,
                    "endLine": 298,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private popSignature(sig Symbol<Type>[], isStatic boolean, frame Builder) : void"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 292,
                    "endLine": 292,
                    "startColumn": 17,
                    "endColumn": 29,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 290,
                    "endLine": 290,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 291,
                    "endLine": 293,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 291,
                    "endLine": 293,
                    "startColumn": 36,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 306,
                    "endLine": 314,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public pop(k JavaKind) : JavaKind"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 310,
                    "endLine": 310,
                    "startColumn": 17,
                    "endColumn": 40,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 307,
                    "endLine": 307,
                    "startColumn": 13,
                    "endColumn": 34,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 309,
                    "endLine": 312,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 309,
                    "endLine": 312,
                    "startColumn": 36,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 287,
                    "endLine": 295,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private popSignature(sig Symbol<Type>[], isStatic boolean, frame Builder) : void"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 290,
                    "endLine": 290,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "frame.pop(k)"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 308,
                    "endLine": 308,
                    "startColumn": 13,
                    "endColumn": 29,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 311,
                    "endLine": 311,
                    "startColumn": 17,
                    "endColumn": 50,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 313,
                    "endLine": 313,
                    "startColumn": 13,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 500,
        "extraction_results": {
            "success": true,
            "newCommitHash": "da227e8cbc7fe514a8193e2e8aca4fcdc2efd640",
            "newBranchName": "extract-pop-popSignature-861ec35"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "980115905f92f0abdc70769d2118711bf563ce5f",
        "url": "https://github.com/oracle/graal/commit/980115905f92f0abdc70769d2118711bf563ce5f",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public areNextInOrder(block HIRBlock, successor HIRBlock) : boolean extracted from public isNormalLoopExit(block HIRBlock, successor HIRBlock, stackifierData StackifierData) : boolean in class jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration & moved to class jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/stackifier/blocks/LabeledBlockGeneration.java",
                    "startLine": 330,
                    "endLine": 373,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public isNormalLoopExit(block HIRBlock, successor HIRBlock, stackifierData StackifierData) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/stackifier/blocks/LabeledBlockGeneration.java",
                    "startLine": 370,
                    "endLine": 370,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/StackifierData.java",
                    "startLine": 112,
                    "endLine": 118,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public areNextInOrder(block HIRBlock, successor HIRBlock) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/StackifierData.java",
                    "startLine": 117,
                    "endLine": 117,
                    "startColumn": 9,
                    "endColumn": 63,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/stackifier/blocks/LabeledBlockGeneration.java",
                    "startLine": 330,
                    "endLine": 373,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public isNormalLoopExit(block HIRBlock, successor HIRBlock, stackifierData StackifierData) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/stackifier/blocks/LabeledBlockGeneration.java",
                    "startLine": 370,
                    "endLine": 370,
                    "startColumn": 20,
                    "endColumn": 75,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "stackifierData.areNextInOrder(lastLoopBlock,successor)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 520,
        "extraction_results": {
            "success": true,
            "newCommitHash": "1474cba384b3ef13c94e9c2e47139550049c5880",
            "newBranchName": "extract-areNextInOrder-isNormalLoopExit-2adb917"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "8aea207041533f50e294b14291597c89f77a0f22",
        "url": "https://github.com/oracle/graal/commit/8aea207041533f50e294b14291597c89f77a0f22",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public sortAndAssignOffsets() : int extracted from public beforeCompilation(config BeforeCompilationAccess) : void in class com.oracle.svm.hosted.thread.VMThreadFeature & moved to class com.oracle.svm.hosted.thread.VMThreadLocalCollector",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 220,
                    "endLine": 249,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public beforeCompilation(config BeforeCompilationAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 224,
                    "endLine": 224,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 226,
                    "endLine": 226,
                    "startColumn": 13,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 227,
                    "endLine": 227,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 230,
                    "endLine": 230,
                    "startColumn": 17,
                    "endColumn": 70,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 232,
                    "endLine": 232,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 233,
                    "endLine": 233,
                    "startColumn": 13,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 236,
                    "endLine": 236,
                    "startColumn": 17,
                    "endColumn": 130,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 223,
                    "endLine": 223,
                    "startColumn": 9,
                    "endColumn": 74,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 222,
                    "endLine": 222,
                    "startColumn": 9,
                    "endColumn": 98,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 229,
                    "endLine": 231,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 235,
                    "endLine": 237,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 225,
                    "endLine": 238,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 229,
                    "endLine": 231,
                    "startColumn": 32,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 235,
                    "endLine": 237,
                    "startColumn": 47,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 225,
                    "endLine": 238,
                    "startColumn": 63,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 147,
                    "endLine": 168,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public sortAndAssignOffsets() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 151,
                    "endLine": 151,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 154,
                    "endLine": 154,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 157,
                    "endLine": 157,
                    "startColumn": 17,
                    "endColumn": 70,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 160,
                    "endLine": 160,
                    "startColumn": 13,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 163,
                    "endLine": 163,
                    "startColumn": 17,
                    "endColumn": 130,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 150,
                    "endLine": 150,
                    "startColumn": 9,
                    "endColumn": 52,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 156,
                    "endLine": 158,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 162,
                    "endLine": 164,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 152,
                    "endLine": 165,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 156,
                    "endLine": 158,
                    "startColumn": 32,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 162,
                    "endLine": 164,
                    "startColumn": 47,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 152,
                    "endLine": 165,
                    "startColumn": 63,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 225,
                    "endLine": 250,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public beforeCompilation(config BeforeCompilationAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 228,
                    "endLine": 228,
                    "startColumn": 26,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadLocalCollector.sortAndAssignOffsets()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 167,
                    "endLine": 167,
                    "startColumn": 9,
                    "endColumn": 27,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 528,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a673079ff9cfdc0e82be4e17c1c8cfe5d6290b6e",
            "newBranchName": "extract-sortAndAssignOffsets-beforeCompilation-89a77ab"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "url": "https://github.com/oracle/graal/commit/abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public moveInt(dst Register, imm int) : void extracted from public emitCode(crb CompilationResultBuilder, masm AMD64MacroAssembler) : void in class jdk.graal.compiler.lir.amd64.AMD64ConvertFloatToIntegerOp & moved to class jdk.graal.compiler.asm.amd64.AMD64MacroAssembler",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64ConvertFloatToIntegerOp.java",
                    "startLine": 86,
                    "endLine": 163,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public emitCode(crb CompilationResultBuilder, masm AMD64MacroAssembler) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64ConvertFloatToIntegerOp.java",
                    "startLine": 132,
                    "endLine": 132,
                    "startColumn": 17,
                    "endColumn": 35,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1443,
                    "endLine": 1452,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public moveInt(dst Register, imm int) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1451,
                    "endLine": 1451,
                    "startColumn": 9,
                    "endColumn": 24,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64ConvertFloatToIntegerOp.java",
                    "startLine": 86,
                    "endLine": 163,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public emitCode(crb CompilationResultBuilder, masm AMD64MacroAssembler) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64ConvertFloatToIntegerOp.java",
                    "startLine": 132,
                    "endLine": 132,
                    "startColumn": 17,
                    "endColumn": 37,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "masm.moveInt(dst,0)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1445,
                    "endLine": 1445,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1447,
                    "endLine": 1447,
                    "startColumn": 17,
                    "endColumn": 46,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1448,
                    "endLine": 1448,
                    "startColumn": 17,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1446,
                    "endLine": 1449,
                    "startColumn": 59,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1446,
                    "endLine": 1449,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1444,
                    "endLine": 1450,
                    "startColumn": 23,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1444,
                    "endLine": 1450,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 563,
        "extraction_results": {
            "success": true,
            "newCommitHash": "0d144e149b34e174e452827083b42720ae984d65",
            "newBranchName": "extract-moveInt-emitCode-db59458"
        }
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "url": "https://github.com/oracle/graal/commit/abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public moveIntSignExtend(result Register, imm int) : void extracted from public const2reg(crb CompilationResultBuilder, masm AMD64MacroAssembler, result Register, input JavaConstant, moveKind AMD64Kind) : void in class jdk.graal.compiler.lir.amd64.AMD64Move & moved to class jdk.graal.compiler.asm.amd64.AMD64MacroAssembler",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 684,
                    "endLine": 764,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public const2reg(crb CompilationResultBuilder, masm AMD64MacroAssembler, result Register, input JavaConstant, moveKind AMD64Kind) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 706,
                    "endLine": 706,
                    "startColumn": 21,
                    "endColumn": 63,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1465,
                    "endLine": 1474,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public moveIntSignExtend(result Register, imm int) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1473,
                    "endLine": 1473,
                    "startColumn": 9,
                    "endColumn": 29,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 684,
                    "endLine": 763,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public const2reg(crb CompilationResultBuilder, masm AMD64MacroAssembler, result Register, input JavaConstant, moveKind AMD64Kind) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 705,
                    "endLine": 705,
                    "startColumn": 21,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "masm.moveIntSignExtend(result,(int)input.asLong())"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 739,
                    "endLine": 739,
                    "startColumn": 25,
                    "endColumn": 58,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "masm.moveIntSignExtend(result,0)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1467,
                    "endLine": 1467,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1470,
                    "endLine": 1470,
                    "startColumn": 17,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1469,
                    "endLine": 1469,
                    "startColumn": 17,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1468,
                    "endLine": 1471,
                    "startColumn": 59,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1468,
                    "endLine": 1471,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1466,
                    "endLine": 1472,
                    "startColumn": 23,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1466,
                    "endLine": 1472,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 565,
        "extraction_results": {
            "success": true,
            "newCommitHash": "ca02acf4f5c1dac329f8d8135e1ff840a8b77a53",
            "newBranchName": "extract-moveIntSignExtend-const2reg-db59458"
        }
    }
]