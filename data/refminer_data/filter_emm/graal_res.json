[
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "ec1620008a77b2007c4f1d87c9fb953ca1491b99",
        "url": "https://github.com/oracle/graal/commit/ec1620008a77b2007c4f1d87c9fb953ca1491b99",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public store(globalValueType byte, address int, value Object) : void extracted from public initializeGlobal(context WasmContext, instance WasmInstance, globalIndex int, initBytecode byte[]) : void in class org.graalvm.wasm.Linker & moved to class org.graalvm.wasm.GlobalRegistry",
            "leftSideLocations": [
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 316,
                    "endLine": 338,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public initializeGlobal(context WasmContext, instance WasmInstance, globalIndex int, initBytecode byte[]) : void"
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 323,
                    "endLine": 323,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 326,
                    "endLine": 326,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 329,
                    "endLine": 329,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 332,
                    "endLine": 332,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 336,
                    "endLine": 336,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 321,
                    "endLine": 321,
                    "startColumn": 13,
                    "endColumn": 27,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 324,
                    "endLine": 324,
                    "startColumn": 13,
                    "endColumn": 27,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 327,
                    "endLine": 327,
                    "startColumn": 13,
                    "endColumn": 27,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 330,
                    "endLine": 330,
                    "startColumn": 13,
                    "endColumn": 27,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 333,
                    "endLine": 333,
                    "startColumn": 13,
                    "endColumn": 31,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 334,
                    "endLine": 334,
                    "startColumn": 13,
                    "endColumn": 33,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 335,
                    "endLine": 335,
                    "startColumn": 17,
                    "endColumn": 60,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 320,
                    "endLine": 337,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "SWITCH_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 148,
                    "endLine": 172,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public store(globalValueType byte, address int, value Object) : void"
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 152,
                    "endLine": 152,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 155,
                    "endLine": 155,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 158,
                    "endLine": 158,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 161,
                    "endLine": 161,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 164,
                    "endLine": 164,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 150,
                    "endLine": 150,
                    "startColumn": 13,
                    "endColumn": 36,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 36,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 156,
                    "endLine": 156,
                    "startColumn": 13,
                    "endColumn": 36,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 13,
                    "endColumn": 36,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 162,
                    "endLine": 162,
                    "startColumn": 13,
                    "endColumn": 37,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 166,
                    "endLine": 166,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 167,
                    "endLine": 167,
                    "startColumn": 17,
                    "endColumn": 48,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 149,
                    "endLine": 171,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "SWITCH_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 319,
                    "endLine": 322,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public initializeGlobal(context WasmContext, instance WasmInstance, globalIndex int, initBytecode byte[]) : void"
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/Linker.java",
                    "startLine": 321,
                    "endLine": 321,
                    "startColumn": 9,
                    "endColumn": 128,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "context.globals().store(instance.module().globalValueType(globalIndex),instance.globalAddress(globalIndex),initValue)"
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 151,
                    "endLine": 151,
                    "startColumn": 17,
                    "endColumn": 48,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 154,
                    "endLine": 154,
                    "startColumn": 17,
                    "endColumn": 50,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 157,
                    "endLine": 157,
                    "startColumn": 17,
                    "endColumn": 75,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 160,
                    "endLine": 160,
                    "startColumn": 17,
                    "endColumn": 80,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 163,
                    "endLine": 163,
                    "startColumn": 17,
                    "endColumn": 60,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 165,
                    "endLine": 165,
                    "startColumn": 13,
                    "endColumn": 40,
                    "codeElementType": "SWITCH_CASE",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 168,
                    "endLine": 168,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 169,
                    "endLine": 169,
                    "startColumn": 13,
                    "endColumn": 21,
                    "codeElementType": "SWITCH_CASE",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "wasm/src/org.graalvm.wasm/src/org/graalvm/wasm/GlobalRegistry.java",
                    "startLine": 170,
                    "endLine": 170,
                    "startColumn": 17,
                    "endColumn": 63,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 396
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "2ee164de1b1670b0526f0954116337d427415118",
        "url": "https://github.com/oracle/graal/commit/2ee164de1b1670b0526f0954116337d427415118",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public eagerlyInitializeVarHandle(varHandle VarHandle) : void extracted from private isVarHandleMethod(method ResolvedJavaMethod, args ValueNode[]) : boolean in class com.oracle.svm.hosted.phases.IntrinsifyMethodHandlesInvocationPlugin & moved to class com.oracle.svm.core.jdk.VarHandleFeature",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 300,
                    "endLine": 366,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private isVarHandleMethod(method ResolvedJavaMethod, args ValueNode[]) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 329,
                    "endLine": 329,
                    "startColumn": 17,
                    "endColumn": 69,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 330,
                    "endLine": 330,
                    "startColumn": 17,
                    "endColumn": 54,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 343,
                    "endLine": 343,
                    "startColumn": 21,
                    "endColumn": 97,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 348,
                    "endLine": 348,
                    "startColumn": 21,
                    "endColumn": 58,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 355,
                    "endLine": 355,
                    "startColumn": 25,
                    "endColumn": 96,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 359,
                    "endLine": 359,
                    "startColumn": 17,
                    "endColumn": 54,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 350,
                    "endLine": 356,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 338,
                    "endLine": 357,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 321,
                    "endLine": 360,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 358,
                    "endLine": 360,
                    "startColumn": 15,
                    "endColumn": 14,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 350,
                    "endLine": 356,
                    "startColumn": 48,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 338,
                    "endLine": 357,
                    "startColumn": 87,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 128,
                    "endLine": 164,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public eagerlyInitializeVarHandle(varHandle VarHandle) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 136,
                    "endLine": 136,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 137,
                    "endLine": 137,
                    "startColumn": 13,
                    "endColumn": 50,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 149,
                    "endLine": 149,
                    "startColumn": 17,
                    "endColumn": 93,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 154,
                    "endLine": 154,
                    "startColumn": 17,
                    "endColumn": 54,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 158,
                    "endLine": 158,
                    "startColumn": 21,
                    "endColumn": 92,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 162,
                    "endLine": 162,
                    "startColumn": 13,
                    "endColumn": 50,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 156,
                    "endLine": 159,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 145,
                    "endLine": 160,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 129,
                    "endLine": 163,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 161,
                    "endLine": 163,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 156,
                    "endLine": 159,
                    "startColumn": 44,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/VarHandleFeature.java",
                    "startLine": 145,
                    "endLine": 160,
                    "startColumn": 83,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 282,
                    "endLine": 307,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private isVarHandleMethod(method ResolvedJavaMethod, args ValueNode[]) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/IntrinsifyMethodHandlesInvocationPlugin.java",
                    "startLine": 302,
                    "endLine": 302,
                    "startColumn": 13,
                    "endColumn": 133,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "VarHandleFeature.eagerlyInitializeVarHandle(hostedSnippetReflection.asObject(VarHandle.class,args[0].asJavaConstant()))"
                }
            ],
            "isStatic": true
        },
        "ref_id": 397
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "21c82ca47405877dea8059257f164f03857ee7d1",
        "url": "https://github.com/oracle/graal/commit/21c82ca47405877dea8059257f164f03857ee7d1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeAddPositivePi(length ValueNode, insertionPosition FixedWithNextNode) : ValueNode extracted from public simplify(tool SimplifierTool) : void in class jdk.graal.compiler.nodes.memory.ReadNode & moved to class jdk.graal.compiler.nodes.java.ArrayLengthNode",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 154,
                    "endLine": 182,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public simplify(tool SimplifierTool) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 169,
                    "endLine": 169,
                    "startColumn": 21,
                    "endColumn": 52,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 171,
                    "endLine": 171,
                    "startColumn": 25,
                    "endColumn": 78,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 172,
                    "endLine": 172,
                    "startColumn": 25,
                    "endColumn": 54,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 173,
                    "endLine": 173,
                    "startColumn": 25,
                    "endColumn": 113,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 176,
                    "endLine": 176,
                    "startColumn": 25,
                    "endColumn": 70,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 170,
                    "endLine": 174,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 170,
                    "endLine": 174,
                    "startColumn": 127,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 179,
                    "endLine": 198,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeAddPositivePi(length ValueNode, insertionPosition FixedWithNextNode) : ValueNode"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 191,
                    "endLine": 191,
                    "startColumn": 9,
                    "endColumn": 40,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 193,
                    "endLine": 193,
                    "startColumn": 13,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 194,
                    "endLine": 194,
                    "startColumn": 13,
                    "endColumn": 55,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 195,
                    "endLine": 195,
                    "startColumn": 13,
                    "endColumn": 101,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 197,
                    "endLine": 197,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 192,
                    "endLine": 196,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 192,
                    "endLine": 196,
                    "startColumn": 115,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 153,
                    "endLine": 173,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public simplify(tool SimplifierTool) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/memory/ReadNode.java",
                    "startLine": 168,
                    "endLine": 168,
                    "startColumn": 45,
                    "endColumn": 93,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ArrayLengthNode.maybeAddPositivePi(length,this)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 189,
                    "endLine": 189,
                    "startColumn": 9,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/java/ArrayLengthNode.java",
                    "startLine": 190,
                    "endLine": 190,
                    "startColumn": 9,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 398
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "2f1f657d73fa709aebfa9693c16e8e4450d7ac5a",
        "url": "https://github.com/oracle/graal/commit/2f1f657d73fa709aebfa9693c16e8e4450d7ac5a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public canUseWithoutProxy(cfg ControlFlowGraph, def Node, use Node) : boolean extracted from public substitute(n Node, cfg ControlFlowGraph, licmNodes NodeBitMap, invariantInLoop LoopEx) : void in class jdk.graal.compiler.phases.common.DominatorBasedGlobalValueNumberingPhase.ValueMap & moved to class jdk.graal.compiler.phases.common.util.LoopUtility",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 586,
                    "endLine": 646,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public substitute(n Node, cfg ControlFlowGraph, licmNodes NodeBitMap, invariantInLoop LoopEx) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 615,
                    "endLine": 615,
                    "startColumn": 17,
                    "endColumn": 53,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 616,
                    "endLine": 616,
                    "startColumn": 17,
                    "endColumn": 61,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 617,
                    "endLine": 617,
                    "startColumn": 17,
                    "endColumn": 61,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 621,
                    "endLine": 632,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 619,
                    "endLine": 633,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 621,
                    "endLine": 628,
                    "startColumn": 42,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 628,
                    "endLine": 632,
                    "startColumn": 28,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 619,
                    "endLine": 633,
                    "startColumn": 38,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 624,
                    "endLine": 624,
                    "startColumn": 29,
                    "endColumn": 63,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 624,
                    "endLine": 624,
                    "startColumn": 29,
                    "endColumn": 63,
                    "codeElementType": "PREFIX_EXPRESSION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 57,
                    "endLine": 92,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public canUseWithoutProxy(cfg ControlFlowGraph, def Node, use Node) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 76,
                    "endLine": 76,
                    "startColumn": 9,
                    "endColumn": 47,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 78,
                    "endLine": 78,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 82,
                    "endLine": 89,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 80,
                    "endLine": 90,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 82,
                    "endLine": 86,
                    "startColumn": 34,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 80,
                    "endLine": 90,
                    "startColumn": 30,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 17,
                    "endColumn": 58,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 24,
                    "endColumn": 57,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 587,
                    "endLine": 632,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public substitute(n Node, cfg ControlFlowGraph, licmNodes NodeBitMap, invariantInLoop LoopEx) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/DominatorBasedGlobalValueNumberingPhase.java",
                    "startLine": 616,
                    "endLine": 616,
                    "startColumn": 22,
                    "endColumn": 75,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "LoopUtility.canUseWithoutProxy(cfg,edgeDataEqual,n)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 74,
                    "endLine": 74,
                    "startColumn": 13,
                    "endColumn": 26,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 77,
                    "endLine": 77,
                    "startColumn": 9,
                    "endColumn": 47,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 17,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 91,
                    "endLine": 91,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 63,
                    "endLine": 65,
                    "startColumn": 104,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 63,
                    "endLine": 65,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 66,
                    "endLine": 75,
                    "startColumn": 53,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 66,
                    "endLine": 75,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 399
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "92c9a70a9ef18c299c990e244111b63daef7599b",
        "url": "https://github.com/oracle/graal/commit/92c9a70a9ef18c299c990e244111b63daef7599b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getSpan() : UnsignedWord extracted from private remove(sample OldObject) : void in class com.oracle.svm.core.jfr.oldobject.OldObjectSampler & moved to class com.oracle.svm.core.jfr.oldobject.JfrOldObject",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/oldobject/OldObjectSampler.java",
                    "startLine": 98,
                    "endLine": 115,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private remove(sample OldObject) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/oldobject/OldObjectSampler.java",
                    "startLine": 109,
                    "endLine": 109,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/oldobject/JfrOldObject.java",
                    "startLine": 99,
                    "endLine": 102,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getSpan() : UnsignedWord"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/oldobject/JfrOldObject.java",
                    "startLine": 101,
                    "endLine": 101,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/oldobject/JfrOldObjectSampler.java",
                    "startLine": 111,
                    "endLine": 129,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private remove(sample JfrOldObject) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/oldobject/JfrOldObjectSampler.java",
                    "startLine": 120,
                    "endLine": 120,
                    "startColumn": 31,
                    "endColumn": 47,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "sample.getSpan()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/oldobject/JfrOldObjectSampler.java",
                    "startLine": 124,
                    "endLine": 124,
                    "startColumn": 50,
                    "endColumn": 66,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "sample.getSpan()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 400
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeResourceSupport<ConfigurationCondition> extracted from public addResourceBundle(module Module, baseBundleName String, locales Locale[]) : void in class org.graalvm.nativeimage.hosted.RuntimeResourceAccess & moved to class org.graalvm.nativeimage.impl.RuntimeResourceSupport",
            "leftSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeResourceAccess.java",
                    "startLine": 90,
                    "endLine": 101,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public addResourceBundle(module Module, baseBundleName String, locales Locale[]) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeResourceAccess.java",
                    "startLine": 99,
                    "endLine": 100,
                    "startColumn": 9,
                    "endColumn": 89,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 50,
                    "endLine": 53,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeResourceSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 52,
                    "endLine": 52,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeResourceAccess.java",
                    "startLine": 90,
                    "endLine": 101,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public addResourceBundle(module Module, baseBundleName String, locales Locale[]) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeResourceAccess.java",
                    "startLine": 99,
                    "endLine": 99,
                    "startColumn": 9,
                    "endColumn": 43,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "RuntimeResourceSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 401
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeResourceSupport<ConfigurationCondition> extracted from public addResourceBundle(module Module, bundleName String) : void in class org.graalvm.nativeimage.hosted.RuntimeResourceAccess & moved to class org.graalvm.nativeimage.impl.RuntimeResourceSupport",
            "leftSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeResourceAccess.java",
                    "startLine": 103,
                    "endLine": 113,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public addResourceBundle(module Module, bundleName String) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeResourceAccess.java",
                    "startLine": 111,
                    "endLine": 112,
                    "startColumn": 9,
                    "endColumn": 61,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 50,
                    "endLine": 53,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeResourceSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 52,
                    "endLine": 52,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeResourceAccess.java",
                    "startLine": 103,
                    "endLine": 113,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public addResourceBundle(module Module, bundleName String) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeResourceAccess.java",
                    "startLine": 111,
                    "endLine": 111,
                    "startColumn": 9,
                    "endColumn": 43,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "RuntimeResourceSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 402
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeResourceSupport<ConfigurationCondition> extracted from public beforeAnalysis(access BeforeAnalysisAccess) : void in class com.oracle.svm.hosted.ResourcesFeature & moved to class org.graalvm.nativeimage.impl.RuntimeResourceSupport",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ResourcesFeature.java",
                    "startLine": 434,
                    "endLine": 475,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public beforeAnalysis(access BeforeAnalysisAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ResourcesFeature.java",
                    "startLine": 436,
                    "endLine": 436,
                    "startColumn": 9,
                    "endColumn": 186,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 50,
                    "endLine": 53,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeResourceSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 52,
                    "endLine": 52,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ResourcesFeature.java",
                    "startLine": 419,
                    "endLine": 463,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public beforeAnalysis(access BeforeAnalysisAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ResourcesFeature.java",
                    "startLine": 422,
                    "endLine": 422,
                    "startColumn": 25,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ClassInitializationSupport.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ResourcesFeature.java",
                    "startLine": 423,
                    "endLine": 423,
                    "startColumn": 123,
                    "endColumn": 152,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 403
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeResourceSupport<ConfigurationCondition> extracted from package registerResources() : void in class com.oracle.svm.hosted.xml.XMLParsersRegistration.TransformerClassesAndResources & moved to class org.graalvm.nativeimage.impl.RuntimeResourceSupport",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 128,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package registerResources() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 136,
                    "endLine": 136,
                    "startColumn": 13,
                    "endColumn": 193,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 50,
                    "endLine": 53,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeResourceSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 52,
                    "endLine": 52,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 128,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package registerResources() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 136,
                    "endLine": 136,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 137,
                    "endLine": 137,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 138,
                    "endLine": 138,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 139,
                    "endLine": 139,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 140,
                    "endLine": 140,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 141,
                    "endLine": 141,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 142,
                    "endLine": 142,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 143,
                    "endLine": 143,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 144,
                    "endLine": 144,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 145,
                    "endLine": 145,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 146,
                    "endLine": 146,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 147,
                    "endLine": 147,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 149,
                    "endLine": 149,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 150,
                    "endLine": 150,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 151,
                    "endLine": 151,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 404
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeResourceSupport<ConfigurationCondition> extracted from public duringSetup(access DuringSetupAccess) : void in class com.oracle.svm.truffle.TruffleBaseFeature & moved to class org.graalvm.nativeimage.impl.RuntimeResourceSupport",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.truffle/src/com/oracle/svm/truffle/TruffleBaseFeature.java",
                    "startLine": 461,
                    "endLine": 522,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public duringSetup(access DuringSetupAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.truffle/src/com/oracle/svm/truffle/TruffleBaseFeature.java",
                    "startLine": 520,
                    "endLine": 520,
                    "startColumn": 13,
                    "endColumn": 167,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 50,
                    "endLine": 53,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeResourceSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeResourceSupport.java",
                    "startLine": 52,
                    "endLine": 52,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.truffle/src/com/oracle/svm/truffle/TruffleBaseFeature.java",
                    "startLine": 461,
                    "endLine": 522,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public duringSetup(access DuringSetupAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.truffle/src/com/oracle/svm/truffle/TruffleBaseFeature.java",
                    "startLine": 520,
                    "endLine": 520,
                    "startColumn": 13,
                    "endColumn": 47,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "RuntimeResourceSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 405
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeSerializationSupport<ConfigurationCondition> extracted from public registerIncludingAssociatedClasses(clazz Class<?>) : void in class org.graalvm.nativeimage.hosted.RuntimeSerialization & moved to class org.graalvm.nativeimage.impl.RuntimeSerializationSupport",
            "leftSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 58,
                    "endLine": 77,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public registerIncludingAssociatedClasses(clazz Class<?>) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 76,
                    "endLine": 76,
                    "startColumn": 9,
                    "endColumn": 146,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 51,
                    "endLine": 54,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeSerializationSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 53,
                    "endLine": 53,
                    "startColumn": 9,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 57,
                    "endLine": 76,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public registerIncludingAssociatedClasses(clazz Class<?>) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 75,
                    "endLine": 75,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "RuntimeSerializationSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 406
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeSerializationSupport<ConfigurationCondition> extracted from public register(classes Class<?>...) : void in class org.graalvm.nativeimage.hosted.RuntimeSerialization & moved to class org.graalvm.nativeimage.impl.RuntimeSerializationSupport",
            "leftSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 79,
                    "endLine": 86,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public register(classes Class<?>...) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 9,
                    "endColumn": 122,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 51,
                    "endLine": 54,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeSerializationSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 53,
                    "endLine": 53,
                    "startColumn": 9,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 78,
                    "endLine": 85,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public register(classes Class<?>...) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 84,
                    "endLine": 84,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "RuntimeSerializationSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 407
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeSerializationSupport<ConfigurationCondition> extracted from public registerWithTargetConstructorClass(clazz Class<?>, customTargetConstructorClazz Class<?>) : void in class org.graalvm.nativeimage.hosted.RuntimeSerialization & moved to class org.graalvm.nativeimage.impl.RuntimeSerializationSupport",
            "leftSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 88,
                    "endLine": 101,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public registerWithTargetConstructorClass(clazz Class<?>, customTargetConstructorClazz Class<?>) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 100,
                    "endLine": 100,
                    "startColumn": 9,
                    "endColumn": 176,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 51,
                    "endLine": 54,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeSerializationSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 53,
                    "endLine": 53,
                    "startColumn": 9,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 87,
                    "endLine": 100,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public registerWithTargetConstructorClass(clazz Class<?>, customTargetConstructorClazz Class<?>) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 99,
                    "endLine": 99,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "RuntimeSerializationSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 408
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeSerializationSupport<ConfigurationCondition> extracted from public registerLambdaCapturingClass(lambdaCapturingClass Class<?>) : void in class org.graalvm.nativeimage.hosted.RuntimeSerialization & moved to class org.graalvm.nativeimage.impl.RuntimeSerializationSupport",
            "leftSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 103,
                    "endLine": 112,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public registerLambdaCapturingClass(lambdaCapturingClass Class<?>) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 111,
                    "endLine": 111,
                    "startColumn": 9,
                    "endColumn": 155,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 51,
                    "endLine": 54,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeSerializationSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 53,
                    "endLine": 53,
                    "startColumn": 9,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 102,
                    "endLine": 111,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public registerLambdaCapturingClass(lambdaCapturingClass Class<?>) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 110,
                    "endLine": 110,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "RuntimeSerializationSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 409
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : RuntimeSerializationSupport<ConfigurationCondition> extracted from public registerProxyClass(implementedInterfaces Class<?>...) : void in class org.graalvm.nativeimage.hosted.RuntimeSerialization & moved to class org.graalvm.nativeimage.impl.RuntimeSerializationSupport",
            "leftSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 114,
                    "endLine": 123,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public registerProxyClass(implementedInterfaces Class<?>...) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 122,
                    "endLine": 122,
                    "startColumn": 9,
                    "endColumn": 146,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 51,
                    "endLine": 54,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : RuntimeSerializationSupport<ConfigurationCondition>"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java",
                    "startLine": 53,
                    "endLine": 53,
                    "startColumn": 9,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 113,
                    "endLine": 122,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public registerProxyClass(implementedInterfaces Class<?>...) : void"
                },
                {
                    "filePath": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java",
                    "startLine": 121,
                    "endLine": 121,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "RuntimeSerializationSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 410
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : ResourcesRegistry<ConfigurationCondition> extracted from public beforeAnalysis(access BeforeAnalysisAccess) : void in class com.oracle.svm.core.jdk.SimpleWebServerFeature & moved to class com.oracle.svm.core.configure.ResourcesRegistry",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/JavaNetHttpFeature.java",
                    "startLine": 94,
                    "endLine": 99,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public beforeAnalysis(access BeforeAnalysisAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/JavaNetHttpFeature.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 13,
                    "endColumn": 175,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ResourcesRegistry.java",
                    "startLine": 36,
                    "endLine": 39,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : ResourcesRegistry<ConfigurationCondition>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ResourcesRegistry.java",
                    "startLine": 38,
                    "endLine": 38,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/JavaNetHttpFeature.java",
                    "startLine": 94,
                    "endLine": 99,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public beforeAnalysis(access BeforeAnalysisAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/JavaNetHttpFeature.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 411
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fff140bbe181fab684e36a98b554224f7886c6f1",
        "url": "https://github.com/oracle/graal/commit/fff140bbe181fab684e36a98b554224f7886c6f1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : ResourcesRegistry<ConfigurationCondition> extracted from package registerResources() : void in class com.oracle.svm.hosted.xml.XMLParsersRegistration.TransformerClassesAndResources & moved to class com.oracle.svm.core.configure.ResourcesRegistry",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 128,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package registerResources() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 136,
                    "endLine": 136,
                    "startColumn": 13,
                    "endColumn": 193,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ResourcesRegistry.java",
                    "startLine": 36,
                    "endLine": 39,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : ResourcesRegistry<ConfigurationCondition>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ResourcesRegistry.java",
                    "startLine": 38,
                    "endLine": 38,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 128,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package registerResources() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 136,
                    "endLine": 136,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 137,
                    "endLine": 137,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 138,
                    "endLine": 138,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 139,
                    "endLine": 139,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 140,
                    "endLine": 140,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 141,
                    "endLine": 141,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 142,
                    "endLine": 142,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 143,
                    "endLine": 143,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 144,
                    "endLine": 144,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 145,
                    "endLine": 145,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 146,
                    "endLine": 146,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 147,
                    "endLine": 147,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 149,
                    "endLine": 149,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 150,
                    "endLine": 150,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/xml/XMLParsersRegistration.java",
                    "startLine": 151,
                    "endLine": 151,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ResourcesRegistry.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 412
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "f53346cbfd2d12a575026f9bd7553e083406b0ef",
        "url": "https://github.com/oracle/graal/commit/f53346cbfd2d12a575026f9bd7553e083406b0ef",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isLambdaClassName(className String) : boolean extracted from public classesSet(packageNameOnly boolean) : Set<String> in class com.oracle.graal.pointsto.reports.CallTreePrinter & moved to class jdk.graal.compiler.java.LambdaUtils",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 333,
                    "endLine": 347,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public classesSet(packageNameOnly boolean) : Set<String>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 339,
                    "endLine": 339,
                    "startColumn": 21,
                    "endColumn": 75,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/java/LambdaUtils.java",
                    "startLine": 213,
                    "endLine": 221,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isLambdaClassName(className String) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/java/LambdaUtils.java",
                    "startLine": 220,
                    "endLine": 220,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 333,
                    "endLine": 347,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public classesSet(packageNameOnly boolean) : Set<String>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 339,
                    "endLine": 339,
                    "startColumn": 21,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "LambdaUtils.isLambdaClassName(name)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 413
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "e6a0a965ccb66ef6c0606674c3eebb97cfa9f53c",
        "url": "https://github.com/oracle/graal/commit/e6a0a965ccb66ef6c0606674c3eebb97cfa9f53c",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public forRuntimeCompilation(heapConstant ImageHeapConstant) : JavaConstant extracted from public apply(source Object) : Object in class com.oracle.svm.graal.hosted.runtimecompilation.GraalGraphObjectReplacer & moved to class com.oracle.svm.graal.SubstrateGraalUtils",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/hosted/runtimecompilation/GraalGraphObjectReplacer.java",
                    "startLine": 140,
                    "endLine": 221,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public apply(source Object) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/hosted/runtimecompilation/GraalGraphObjectReplacer.java",
                    "startLine": 205,
                    "endLine": 205,
                    "startColumn": 13,
                    "endColumn": 154,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/hosted/runtimecompilation/GraalGraphObjectReplacer.java",
                    "startLine": 206,
                    "endLine": 206,
                    "startColumn": 13,
                    "endColumn": 51,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/SubstrateGraalUtils.java",
                    "startLine": 204,
                    "endLine": 214,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public forRuntimeCompilation(heapConstant ImageHeapConstant) : JavaConstant"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/SubstrateGraalUtils.java",
                    "startLine": 212,
                    "endLine": 212,
                    "startColumn": 9,
                    "endColumn": 144,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/SubstrateGraalUtils.java",
                    "startLine": 211,
                    "endLine": 211,
                    "startColumn": 9,
                    "endColumn": 68,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/hosted/runtimecompilation/GraalGraphObjectReplacer.java",
                    "startLine": 141,
                    "endLine": 221,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public apply(source Object) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/hosted/runtimecompilation/GraalGraphObjectReplacer.java",
                    "startLine": 206,
                    "endLine": 206,
                    "startColumn": 20,
                    "endColumn": 75,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SubstrateGraalUtils.forRuntimeCompilation(heapConstant)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/SubstrateGraalUtils.java",
                    "startLine": 213,
                    "endLine": 213,
                    "startColumn": 9,
                    "endColumn": 29,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 414
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "f3f87fc89fc150b36e796973502cefa587fa1d33",
        "url": "https://github.com/oracle/graal/commit/f3f87fc89fc150b36e796973502cefa587fa1d33",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public printStackTrace(t Throwable) : void extracted from private compileMethod(method HotSpotResolvedJavaMethod, classPos int, libgraal LibGraalParams, compileTime AtomicLong, memoryUsed AtomicLong, compileTimes Map<ResolvedJavaMethod,Long>) : void in class jdk.graal.compiler.hotspot.test.CompileTheWorld & moved to class jdk.graal.compiler.hotspot.test.CompileTheWorld",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompileTheWorld.java",
                    "startLine": 1356,
                    "endLine": 1429,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private compileMethod(method HotSpotResolvedJavaMethod, classPos int, libgraal LibGraalParams, compileTime AtomicLong, memoryUsed AtomicLong, compileTimes Map<ResolvedJavaMethod,Long>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompileTheWorld.java",
                    "startLine": 1427,
                    "endLine": 1427,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompileTheWorld.java",
                    "startLine": 306,
                    "endLine": 310,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public printStackTrace(t Throwable) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompileTheWorld.java",
                    "startLine": 308,
                    "endLine": 308,
                    "startColumn": 13,
                    "endColumn": 40,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/StandaloneBulkCompile.java",
                    "startLine": 471,
                    "endLine": 499,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public compile(compilation Compilation, libgraal LibGraalParams, options OptionValues) : CompilationResult"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/StandaloneBulkCompile.java",
                    "startLine": 496,
                    "endLine": 496,
                    "startColumn": 13,
                    "endColumn": 39,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "t.printStackTrace(TTY.out)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompileTheWorld.java",
                    "startLine": 307,
                    "endLine": 309,
                    "startColumn": 22,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompileTheWorld.java",
                    "startLine": 307,
                    "endLine": 309,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 415
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "e89daab7d48185b51efc1b5c12925bf4a9398406",
        "url": "https://github.com/oracle/graal/commit/e89daab7d48185b51efc1b5c12925bf4a9398406",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isMethodHandleIntrinsificationRoot(method ResolvedJavaMethod) : boolean extracted from protected openCalleeScope(outer AbstractPolicyScope, method AnalysisMethod) : AbstractPolicyScope in class com.oracle.svm.graal.hosted.runtimecompilation.RuntimeCompilationFeature.RuntimeCompilationInlineBeforeAnalysisPolicy & moved to class com.oracle.svm.hosted.phases.InlineBeforeAnalysisPolicyUtils",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/hosted/runtimecompilation/RuntimeCompilationFeature.java",
                    "startLine": 877,
                    "endLine": 906,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected openCalleeScope(outer AbstractPolicyScope, method AnalysisMethod) : AbstractPolicyScope"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/hosted/runtimecompilation/RuntimeCompilationFeature.java",
                    "startLine": 898,
                    "endLine": 898,
                    "startColumn": 13,
                    "endColumn": 197,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/InlineBeforeAnalysisPolicyUtils.java",
                    "startLine": 133,
                    "endLine": 135,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isMethodHandleIntrinsificationRoot(method ResolvedJavaMethod) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/InlineBeforeAnalysisPolicyUtils.java",
                    "startLine": 134,
                    "endLine": 134,
                    "startColumn": 9,
                    "endColumn": 94,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/hosted/runtimecompilation/RuntimeCompilationFeature.java",
                    "startLine": 878,
                    "endLine": 907,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected openCalleeScope(outer AbstractPolicyScope, method AnalysisMethod) : AbstractPolicyScope"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/hosted/runtimecompilation/RuntimeCompilationFeature.java",
                    "startLine": 899,
                    "endLine": 899,
                    "startColumn": 87,
                    "endColumn": 161,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "InlineBeforeAnalysisPolicyUtils.isMethodHandleIntrinsificationRoot(method)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 416
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "e89daab7d48185b51efc1b5c12925bf4a9398406",
        "url": "https://github.com/oracle/graal/commit/e89daab7d48185b51efc1b5c12925bf4a9398406",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isMethodHandleIntrinsificationRoot(method ResolvedJavaMethod) : boolean extracted from public processNonInlinedInvoke(providers CoreProviders, node CallTargetNode) : boolean in class com.oracle.svm.hosted.phases.InlineBeforeAnalysisPolicyUtils.AccumulativeInlineScope & moved to class com.oracle.svm.hosted.phases.InlineBeforeAnalysisPolicyUtils",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/InlineBeforeAnalysisPolicyUtils.java",
                    "startLine": 499,
                    "endLine": 510,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public processNonInlinedInvoke(providers CoreProviders, node CallTargetNode) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/InlineBeforeAnalysisPolicyUtils.java",
                    "startLine": 501,
                    "endLine": 501,
                    "startColumn": 17,
                    "endColumn": 138,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/InlineBeforeAnalysisPolicyUtils.java",
                    "startLine": 133,
                    "endLine": 135,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isMethodHandleIntrinsificationRoot(method ResolvedJavaMethod) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/InlineBeforeAnalysisPolicyUtils.java",
                    "startLine": 134,
                    "endLine": 134,
                    "startColumn": 9,
                    "endColumn": 94,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/InlineBeforeAnalysisPolicyUtils.java",
                    "startLine": 463,
                    "endLine": 474,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public processNonInlinedInvoke(providers CoreProviders, node CallTargetNode) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/InlineBeforeAnalysisPolicyUtils.java",
                    "startLine": 465,
                    "endLine": 465,
                    "startColumn": 48,
                    "endColumn": 103,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "isMethodHandleIntrinsificationRoot(node.targetMethod())"
                }
            ],
            "isStatic": true
        },
        "ref_id": 417
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "6c47c2403d1752462c9ad89f3ffe4efefed28cb2",
        "url": "https://github.com/oracle/graal/commit/6c47c2403d1752462c9ad89f3ffe4efefed28cb2",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public forObject(object Object, identityHashCode int) : JavaConstant extracted from public hostedToRuntime(heapConstant ImageHeapConstant) : JavaConstant in class com.oracle.svm.graal.SubstrateGraalUtils & moved to class com.oracle.svm.core.meta.SubstrateObjectConstant",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/SubstrateGraalUtils.java",
                    "startLine": 207,
                    "endLine": 217,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public hostedToRuntime(heapConstant ImageHeapConstant) : JavaConstant"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/SubstrateGraalUtils.java",
                    "startLine": 216,
                    "endLine": 216,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/meta/SubstrateObjectConstant.java",
                    "startLine": 42,
                    "endLine": 44,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public forObject(object Object, identityHashCode int) : JavaConstant"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/meta/SubstrateObjectConstant.java",
                    "startLine": 43,
                    "endLine": 43,
                    "startColumn": 9,
                    "endColumn": 59,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/SubstrateGraalUtils.java",
                    "startLine": 207,
                    "endLine": 217,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public hostedToRuntime(heapConstant ImageHeapConstant) : JavaConstant"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal/src/com/oracle/svm/graal/SubstrateGraalUtils.java",
                    "startLine": 216,
                    "endLine": 216,
                    "startColumn": 16,
                    "endColumn": 99,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SubstrateObjectConstant.forObject(hostedObject,heapConstant.getIdentityHashCode())"
                }
            ],
            "isStatic": true
        },
        "ref_id": 418
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "95c9ee1c27c322c85e29d128631876680cee7ffd",
        "url": "https://github.com/oracle/graal/commit/95c9ee1c27c322c85e29d128631876680cee7ffd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T extracted from private registerSerializationPlugins(loader ImageClassLoader, plugins InvocationPlugins, reason ParsingReason) : void in class com.oracle.svm.hosted.snippets.SubstrateGraphBuilderPlugins & moved to class jdk.graal.compiler.replacements.StandardGraphBuilderPlugins",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 213,
                    "endLine": 271,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private registerSerializationPlugins(loader ImageClassLoader, plugins InvocationPlugins, reason ParsingReason) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 225,
                    "endLine": 225,
                    "startColumn": 25,
                    "endColumn": 120,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 229,
                    "endLine": 229,
                    "startColumn": 21,
                    "endColumn": 34,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 288,
                    "endLine": 297,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 294,
                    "endLine": 294,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 213,
                    "endLine": 271,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private registerSerializationPlugins(loader ImageClassLoader, plugins InvocationPlugins, reason ParsingReason) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 224,
                    "endLine": 224,
                    "startColumn": 38,
                    "endColumn": 84,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,String.class,patternNode)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 243,
                    "endLine": 243,
                    "startColumn": 42,
                    "endColumn": 85,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Class.class,clazzNode)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 260,
                    "endLine": 260,
                    "startColumn": 37,
                    "endColumn": 80,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Class.class,clazzNode)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 261,
                    "endLine": 261,
                    "startColumn": 43,
                    "endColumn": 98,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Constructor.class,constructorNode)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 148,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 419
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "95c9ee1c27c322c85e29d128631876680cee7ffd",
        "url": "https://github.com/oracle/graal/commit/95c9ee1c27c322c85e29d128631876680cee7ffd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T extracted from private interceptUpdaterInvoke(b GraphBuilderContext, tclassNode ValueNode, fieldNameNode ValueNode) : void in class com.oracle.svm.hosted.snippets.SubstrateGraphBuilderPlugins & moved to class jdk.graal.compiler.replacements.StandardGraphBuilderPlugins",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 696,
                    "endLine": 722,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private interceptUpdaterInvoke(b GraphBuilderContext, tclassNode ValueNode, fieldNameNode ValueNode) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 702,
                    "endLine": 702,
                    "startColumn": 13,
                    "endColumn": 107,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 288,
                    "endLine": 297,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 294,
                    "endLine": 294,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 698,
                    "endLine": 724,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private interceptUpdaterInvoke(b GraphBuilderContext, tclassNode ValueNode, fieldNameNode ValueNode) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 703,
                    "endLine": 703,
                    "startColumn": 27,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Class.class,tclassNode)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 704,
                    "endLine": 704,
                    "startColumn": 28,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,String.class,fieldNameNode)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 148,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 420
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "95c9ee1c27c322c85e29d128631876680cee7ffd",
        "url": "https://github.com/oracle/graal/commit/95c9ee1c27c322c85e29d128631876680cee7ffd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T extracted from private registerUnsafePlugins(plugins InvocationPlugins) : void in class com.oracle.svm.hosted.snippets.SubstrateGraphBuilderPlugins & moved to class jdk.graal.compiler.replacements.StandardGraphBuilderPlugins",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 745,
                    "endLine": 776,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private registerUnsafePlugins(plugins InvocationPlugins) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 758,
                    "endLine": 758,
                    "startColumn": 21,
                    "endColumn": 113,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 767,
                    "endLine": 767,
                    "startColumn": 17,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 288,
                    "endLine": 297,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 294,
                    "endLine": 294,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 747,
                    "endLine": 775,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private registerUnsafePlugins(plugins InvocationPlugins) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 755,
                    "endLine": 755,
                    "startColumn": 34,
                    "endColumn": 77,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Class.class,classNode)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 756,
                    "endLine": 756,
                    "startColumn": 36,
                    "endColumn": 79,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,String.class,nameNode)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 148,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 421
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "95c9ee1c27c322c85e29d128631876680cee7ffd",
        "url": "https://github.com/oracle/graal/commit/95c9ee1c27c322c85e29d128631876680cee7ffd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T extracted from private registerUnsafePlugins(r Registration, isSunMiscUnsafe boolean) : void in class com.oracle.svm.hosted.snippets.SubstrateGraphBuilderPlugins & moved to class jdk.graal.compiler.replacements.StandardGraphBuilderPlugins",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 778,
                    "endLine": 837,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private registerUnsafePlugins(r Registration, isSunMiscUnsafe boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 786,
                    "endLine": 786,
                    "startColumn": 21,
                    "endColumn": 116,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 288,
                    "endLine": 297,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 294,
                    "endLine": 294,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 777,
                    "endLine": 827,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private registerUnsafePlugins(r Registration, isSunMiscUnsafe boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 781,
                    "endLine": 781,
                    "startColumn": 37,
                    "endColumn": 80,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Field.class,fieldNode)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 791,
                    "endLine": 791,
                    "startColumn": 37,
                    "endColumn": 80,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Field.class,fieldNode)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 802,
                    "endLine": 802,
                    "startColumn": 37,
                    "endColumn": 80,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Field.class,fieldNode)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 148,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 422
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "95c9ee1c27c322c85e29d128631876680cee7ffd",
        "url": "https://github.com/oracle/graal/commit/95c9ee1c27c322c85e29d128631876680cee7ffd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T extracted from private registerArrayPlugins(plugins InvocationPlugins) : void in class com.oracle.svm.hosted.snippets.SubstrateGraphBuilderPlugins & moved to class jdk.graal.compiler.replacements.StandardGraphBuilderPlugins",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 876,
                    "endLine": 901,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private registerArrayPlugins(plugins InvocationPlugins) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 889,
                    "endLine": 889,
                    "startColumn": 21,
                    "endColumn": 113,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 898,
                    "endLine": 898,
                    "startColumn": 17,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 288,
                    "endLine": 297,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 294,
                    "endLine": 294,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 870,
                    "endLine": 893,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private registerArrayPlugins(plugins InvocationPlugins) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 881,
                    "endLine": 881,
                    "startColumn": 34,
                    "endColumn": 77,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Class.class,clazzNode)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 148,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 423
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "95c9ee1c27c322c85e29d128631876680cee7ffd",
        "url": "https://github.com/oracle/graal/commit/95c9ee1c27c322c85e29d128631876680cee7ffd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T extracted from public registerClassDesiredAssertionStatusPlugin(plugins InvocationPlugins) : void in class com.oracle.svm.hosted.snippets.SubstrateGraphBuilderPlugins & moved to class jdk.graal.compiler.replacements.StandardGraphBuilderPlugins",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 1097,
                    "endLine": 1119,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public registerClassDesiredAssertionStatusPlugin(plugins InvocationPlugins) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 1104,
                    "endLine": 1104,
                    "startColumn": 21,
                    "endColumn": 107,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 1116,
                    "endLine": 1116,
                    "startColumn": 17,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 1103,
                    "endLine": 1115,
                    "startColumn": 79,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 288,
                    "endLine": 297,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public asConstantObject(b GraphBuilderContext, type Class<T>, node ValueNode) : T"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 294,
                    "endLine": 294,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 148,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 1088,
                    "endLine": 1106,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public registerClassDesiredAssertionStatusPlugin(plugins InvocationPlugins) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/snippets/SubstrateGraphBuilderPlugins.java",
                    "startLine": 1093,
                    "endLine": 1093,
                    "startColumn": 37,
                    "endColumn": 91,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asConstantObject(b,Object.class,receiver.get(false))"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 293,
                    "endLine": 295,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 424
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61e5903252fa588063d1a1c47b8d241613564b73",
        "url": "https://github.com/oracle/graal/commit/61e5903252fa588063d1a1c47b8d241613564b73",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public get() : Term extracted from private expandQuantifier(toExpand QuantifiableTerm, unroll boolean) : void in class com.oracle.truffle.regex.tregex.parser.RegexASTPostProcessor.UnrollQuantifiersVisitor.QuantifierExpander & moved to class com.oracle.truffle.regex.tregex.parser.RegexASTPostProcessor.UnrollQuantifiersVisitor.QuantifierExpander.TermCopySupplier",
            "leftSideLocations": [
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 276,
                    "endLine": 327,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private expandQuantifier(toExpand QuantifiableTerm, unroll boolean) : void"
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 298,
                    "endLine": 298,
                    "startColumn": 25,
                    "endColumn": 40,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 295,
                    "endLine": 295,
                    "startColumn": 25,
                    "endColumn": 64,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 329,
                    "endLine": 337,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public get() : Term"
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 333,
                    "endLine": 333,
                    "startColumn": 25,
                    "endColumn": 37,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 335,
                    "endLine": 335,
                    "startColumn": 25,
                    "endColumn": 55,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 275,
                    "endLine": 311,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private expandQuantifier(toExpand QuantifiableTerm, unroll boolean) : void"
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 292,
                    "endLine": 292,
                    "startColumn": 37,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "copySupplier.get()"
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 332,
                    "endLine": 332,
                    "startColumn": 25,
                    "endColumn": 48,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 334,
                    "endLine": 336,
                    "startColumn": 28,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 331,
                    "endLine": 336,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/RegexASTPostProcessor.java",
                    "startLine": 331,
                    "endLine": 334,
                    "startColumn": 43,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 425
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c2e8fec200a2c36aa7b2ead1e6a60bab42c78f17",
        "url": "https://github.com/oracle/graal/commit/c2e8fec200a2c36aa7b2ead1e6a60bab42c78f17",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public shutdownHook() : RuntimeSupport.Hook extracted from public beforeAnalysis(access BeforeAnalysisAccess) : void in class com.oracle.svm.core.util.CounterFeature & moved to class com.oracle.svm.core.util.CounterSupport",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/util/CounterFeature.java",
                    "startLine": 46,
                    "endLine": 66,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public beforeAnalysis(access BeforeAnalysisAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/util/CounterFeature.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 13,
                    "endColumn": 91,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/util/CounterSupport.java",
                    "startLine": 54,
                    "endLine": 56,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public shutdownHook() : RuntimeSupport.Hook"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/util/CounterSupport.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 9,
                    "endColumn": 84,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/util/CounterFeature.java",
                    "startLine": 46,
                    "endLine": 66,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public beforeAnalysis(access BeforeAnalysisAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/util/CounterFeature.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 64,
                    "endColumn": 93,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CounterSupport.shutdownHook()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/util/CounterSupport.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 36,
                    "endColumn": 83,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 426
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "1c37f51477cb8d7d7c5a7a1a47d0cdcf7154880e",
        "url": "https://github.com/oracle/graal/commit/1c37f51477cb8d7d7c5a7a1a47d0cdcf7154880e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isApproximatelyInRange(probability double, min double, max double) : boolean extracted from public setTrueSuccessorProbability(profileData BranchProbabilityData) : void in class jdk.graal.compiler.nodes.IfNode & moved to class jdk.graal.compiler.nodes.ProfileData",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/IfNode.java",
                    "startLine": 178,
                    "endLine": 183,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public setTrueSuccessorProbability(profileData BranchProbabilityData) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/IfNode.java",
                    "startLine": 180,
                    "endLine": 180,
                    "startColumn": 9,
                    "endColumn": 122,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/ProfileData.java",
                    "startLine": 141,
                    "endLine": 149,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isApproximatelyInRange(probability double, min double, max double) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/ProfileData.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 9,
                    "endColumn": 77,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/IfNode.java",
                    "startLine": 178,
                    "endLine": 183,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public setTrueSuccessorProbability(profileData BranchProbabilityData) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/IfNode.java",
                    "startLine": 180,
                    "endLine": 180,
                    "startColumn": 16,
                    "endColumn": 66,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ProfileData.isApproximatelyInRange(prob,0.0,1.0)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 427
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "54a27b9508b10cc8f7cc7623d42f67f7e5071918",
        "url": "https://github.com/oracle/graal/commit/54a27b9508b10cc8f7cc7623d42f67f7e5071918",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private getModules(moduleExtensions ModuleExtension[], original DirectCallNode, context EspressoContext) : StaticObject extracted from package doDefault(context EspressoContext, original DirectCallNode) : StaticObject in class com.oracle.truffle.espresso.substitutions.Target_jdk_internal_module_ModuleLoaderMap.BootModules & moved to class com.oracle.truffle.espresso.substitutions.Target_jdk_internal_module_ModuleLoaderMap",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 51,
                    "endLine": 66,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package doDefault(context EspressoContext, original DirectCallNode) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 56,
                    "endLine": 56,
                    "startColumn": 13,
                    "endColumn": 43,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 58,
                    "endLine": 59,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 62,
                    "endLine": 62,
                    "startColumn": 17,
                    "endColumn": 39,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 65,
                    "endLine": 65,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 61,
                    "endLine": 63,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 61,
                    "endLine": 63,
                    "startColumn": 41,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 74,
                    "endLine": 85,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private getModules(moduleExtensions ModuleExtension[], original DirectCallNode, context EspressoContext) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 75,
                    "endLine": 75,
                    "startColumn": 9,
                    "endColumn": 39,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 77,
                    "endLine": 78,
                    "startColumn": 9,
                    "endColumn": 70,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 81,
                    "endLine": 81,
                    "startColumn": 13,
                    "endColumn": 35,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 84,
                    "endLine": 84,
                    "startColumn": 9,
                    "endColumn": 61,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 80,
                    "endLine": 82,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 80,
                    "endLine": 82,
                    "startColumn": 37,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 51,
                    "endLine": 57,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package doDefault(context EspressoContext, original DirectCallNode) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 56,
                    "endLine": 56,
                    "startColumn": 20,
                    "endColumn": 93,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "getModules(ModuleExtension.getBootExtensions(context),original,context)"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_jdk_internal_module_ModuleLoaderMap.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 9,
                    "endColumn": 57,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 428
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fc4c523ffcb9ac63c6c5cc8b8094f2c323210936",
        "url": "https://github.com/oracle/graal/commit/fc4c523ffcb9ac63c6c5cc8b8094f2c323210936",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public buildTypeMetadata(hUniverse HostedUniverse, types Collection<HostedType>, objectType HostedType, cloneableType HostedType, serializableType HostedType) : int extracted from public build(debug DebugContext) : void in class com.oracle.svm.hosted.meta.UniverseBuilder & moved to class com.oracle.svm.hosted.meta.TypeCheckBuilder",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 133,
                    "endLine": 210,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public build(debug DebugContext) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 182,
                    "endLine": 182,
                    "startColumn": 13,
                    "endColumn": 108,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 183,
                    "endLine": 183,
                    "startColumn": 13,
                    "endColumn": 62,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 184,
                    "endLine": 188,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 184,
                    "endLine": 186,
                    "startColumn": 53,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 186,
                    "endLine": 188,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 158,
                    "endLine": 168,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public buildTypeMetadata(hUniverse HostedUniverse, types Collection<HostedType>, objectType HostedType, cloneableType HostedType, serializableType HostedType) : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 9,
                    "endColumn": 96,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 160,
                    "endLine": 160,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 161,
                    "endLine": 167,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 161,
                    "endLine": 164,
                    "startColumn": 49,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 164,
                    "endLine": 167,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 131,
                    "endLine": 202,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public build(debug DebugContext) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 180,
                    "endLine": 180,
                    "startColumn": 37,
                    "endColumn": 137,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "TypeCheckBuilder.buildTypeMetadata(hUniverse,allTypes,objectType,cloneableType,serializableType)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 162,
                    "endLine": 162,
                    "startColumn": 13,
                    "endColumn": 60,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 163,
                    "endLine": 163,
                    "startColumn": 13,
                    "endColumn": 51,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 165,
                    "endLine": 165,
                    "startColumn": 13,
                    "endColumn": 58,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 166,
                    "endLine": 166,
                    "startColumn": 13,
                    "endColumn": 50,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 429
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public markUnsafeAccess(nodeClass Class<?>) : void extracted from protected createUnsafeAccess(value ValueNode, b GraphBuilderContext, nodeConstructor UnsafeNodeConstructor) : void in class jdk.graal.compiler.replacements.StandardGraphBuilderPlugins.UnsafeAccessPlugin & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1448,
                    "endLine": 1510,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected createUnsafeAccess(value ValueNode, b GraphBuilderContext, nodeConstructor UnsafeNodeConstructor) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1450,
                    "endLine": 1450,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1122,
                    "endLine": 1133,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public markUnsafeAccess(nodeClass Class<?>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1132,
                    "endLine": 1132,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1448,
                    "endLine": 1510,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected createUnsafeAccess(value ValueNode, b GraphBuilderContext, nodeConstructor UnsafeNodeConstructor, constructorClass Class<?>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1450,
                    "endLine": 1450,
                    "startColumn": 13,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.markUnsafeAccess(constructorClass)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1131,
                    "endLine": 1131,
                    "startColumn": 9,
                    "endColumn": 151,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 430
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public markUnsafeAccess(nodeClass Class<?>) : void extracted from public apply(b GraphBuilderContext, targetMethod ResolvedJavaMethod, unsafe Receiver, address ValueNode) : boolean in class jdk.graal.compiler.replacements.StandardGraphBuilderPlugins.UnsafeGetPlugin & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1525,
                    "endLine": 1532,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public apply(b GraphBuilderContext, targetMethod ResolvedJavaMethod, unsafe Receiver, address ValueNode) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1530,
                    "endLine": 1530,
                    "startColumn": 13,
                    "endColumn": 45,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1122,
                    "endLine": 1133,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public markUnsafeAccess(nodeClass Class<?>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1132,
                    "endLine": 1132,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1525,
                    "endLine": 1532,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public apply(b GraphBuilderContext, targetMethod ResolvedJavaMethod, unsafe Receiver, address ValueNode) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1530,
                    "endLine": 1530,
                    "startColumn": 13,
                    "endColumn": 70,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "b.getGraph().markUnsafeAccess(UnsafeMemoryLoadNode.class)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1131,
                    "endLine": 1131,
                    "startColumn": 9,
                    "endColumn": 151,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 431
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public markUnsafeAccess(nodeClass Class<?>) : void extracted from public apply(b GraphBuilderContext, targetMethod ResolvedJavaMethod, unsafe Receiver, address ValueNode, value ValueNode) : boolean in class jdk.graal.compiler.replacements.StandardGraphBuilderPlugins.UnsafePutPlugin & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1563,
                    "endLine": 1572,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public apply(b GraphBuilderContext, targetMethod ResolvedJavaMethod, unsafe Receiver, address ValueNode, value ValueNode) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1570,
                    "endLine": 1570,
                    "startColumn": 13,
                    "endColumn": 45,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1122,
                    "endLine": 1133,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public markUnsafeAccess(nodeClass Class<?>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1132,
                    "endLine": 1132,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1563,
                    "endLine": 1572,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public apply(b GraphBuilderContext, targetMethod ResolvedJavaMethod, unsafe Receiver, address ValueNode, value ValueNode) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/StandardGraphBuilderPlugins.java",
                    "startLine": 1570,
                    "endLine": 1570,
                    "startColumn": 13,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "b.getGraph().markUnsafeAccess(UnsafeMemoryStoreNode.class)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1131,
                    "endLine": 1131,
                    "startColumn": 9,
                    "endColumn": 151,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 432
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeMarkUnsafeAccess(graph EncodedGraph) : void extracted from public decode(encodedGraph EncodedGraph, nodeReferences Iterable<EncodedGraph.EncodedNodeReference>) : void in class jdk.graal.compiler.nodes.GraphDecoder & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 571,
                    "endLine": 600,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public decode(encodedGraph EncodedGraph, nodeReferences Iterable<EncodedGraph.EncodedNodeReference>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 595,
                    "endLine": 595,
                    "startColumn": 17,
                    "endColumn": 42,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 594,
                    "endLine": 596,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 594,
                    "endLine": 596,
                    "startColumn": 49,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1135,
                    "endLine": 1139,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeMarkUnsafeAccess(graph EncodedGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1137,
                    "endLine": 1137,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1136,
                    "endLine": 1138,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1136,
                    "endLine": 1138,
                    "startColumn": 38,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 571,
                    "endLine": 598,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public decode(encodedGraph EncodedGraph, nodeReferences Iterable<EncodedGraph.EncodedNodeReference>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 594,
                    "endLine": 594,
                    "startColumn": 13,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.maybeMarkUnsafeAccess(encodedGraph)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 433
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeMarkUnsafeAccess(graph EncodedGraph) : void extracted from protected recordGraphElements(encodedGraph EncodedGraph) : void in class jdk.graal.compiler.nodes.GraphDecoder & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 602,
                    "endLine": 621,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected recordGraphElements(encodedGraph EncodedGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 619,
                    "endLine": 619,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 618,
                    "endLine": 620,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 618,
                    "endLine": 620,
                    "startColumn": 45,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1135,
                    "endLine": 1139,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeMarkUnsafeAccess(graph EncodedGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1137,
                    "endLine": 1137,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1136,
                    "endLine": 1138,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1136,
                    "endLine": 1138,
                    "startColumn": 38,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 600,
                    "endLine": 617,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected recordGraphElements(encodedGraph EncodedGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 616,
                    "endLine": 616,
                    "startColumn": 9,
                    "endColumn": 50,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.maybeMarkUnsafeAccess(encodedGraph)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 434
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeMarkUnsafeAccess(graph EncodedGraph) : void extracted from private finishInlining(invoke Invoke, graph StructuredGraph, firstNode FixedNode, returnNodes List<ReturnNode>, unwindNode UnwindNode, inlineGraph StructuredGraph, inlineeReturnAction InlineeReturnAction, beforeInlining Graph.Mark) : ValueNode in class jdk.graal.compiler.phases.common.inlining.InliningUtil & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 594,
                    "endLine": 677,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private finishInlining(invoke Invoke, graph StructuredGraph, firstNode FixedNode, returnNodes List<ReturnNode>, unwindNode UnwindNode, inlineGraph StructuredGraph, inlineeReturnAction InlineeReturnAction, beforeInlining Graph.Mark) : ValueNode"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 671,
                    "endLine": 671,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 670,
                    "endLine": 672,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 670,
                    "endLine": 672,
                    "startColumn": 44,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1135,
                    "endLine": 1139,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeMarkUnsafeAccess(graph EncodedGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1137,
                    "endLine": 1137,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1136,
                    "endLine": 1138,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1136,
                    "endLine": 1138,
                    "startColumn": 38,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 594,
                    "endLine": 675,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private finishInlining(invoke Invoke, graph StructuredGraph, firstNode FixedNode, returnNodes List<ReturnNode>, unwindNode UnwindNode, inlineGraph StructuredGraph, inlineeReturnAction InlineeReturnAction, beforeInlining Graph.Mark) : ValueNode"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 670,
                    "endLine": 670,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.maybeMarkUnsafeAccess(inlineGraph)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 435
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeMarkUnsafeAccess(graph StructuredGraph) : void extracted from public decode(encodedGraph EncodedGraph, nodeReferences Iterable<EncodedGraph.EncodedNodeReference>) : void in class jdk.graal.compiler.nodes.GraphDecoder & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 571,
                    "endLine": 600,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public decode(encodedGraph EncodedGraph, nodeReferences Iterable<EncodedGraph.EncodedNodeReference>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 595,
                    "endLine": 595,
                    "startColumn": 17,
                    "endColumn": 42,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1141,
                    "endLine": 1145,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeMarkUnsafeAccess(graph StructuredGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1143,
                    "endLine": 1143,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 571,
                    "endLine": 598,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public decode(encodedGraph EncodedGraph, nodeReferences Iterable<EncodedGraph.EncodedNodeReference>) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 594,
                    "endLine": 594,
                    "startColumn": 13,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.maybeMarkUnsafeAccess(encodedGraph)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1142,
                    "endLine": 1144,
                    "startColumn": 38,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1142,
                    "endLine": 1144,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 436
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeMarkUnsafeAccess(graph StructuredGraph) : void extracted from protected recordGraphElements(encodedGraph EncodedGraph) : void in class jdk.graal.compiler.nodes.GraphDecoder & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 602,
                    "endLine": 621,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected recordGraphElements(encodedGraph EncodedGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 619,
                    "endLine": 619,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1141,
                    "endLine": 1145,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeMarkUnsafeAccess(graph StructuredGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1143,
                    "endLine": 1143,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 600,
                    "endLine": 617,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected recordGraphElements(encodedGraph EncodedGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/GraphDecoder.java",
                    "startLine": 616,
                    "endLine": 616,
                    "startColumn": 9,
                    "endColumn": 50,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.maybeMarkUnsafeAccess(encodedGraph)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1142,
                    "endLine": 1144,
                    "startColumn": 38,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1142,
                    "endLine": 1144,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 437
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fb3b5f597e78a4288158088b211948ca5edcd61b",
        "url": "https://github.com/oracle/graal/commit/fb3b5f597e78a4288158088b211948ca5edcd61b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeMarkUnsafeAccess(graph StructuredGraph) : void extracted from private finishInlining(invoke Invoke, graph StructuredGraph, firstNode FixedNode, returnNodes List<ReturnNode>, unwindNode UnwindNode, inlineGraph StructuredGraph, inlineeReturnAction InlineeReturnAction, beforeInlining Graph.Mark) : ValueNode in class jdk.graal.compiler.phases.common.inlining.InliningUtil & moved to class jdk.graal.compiler.nodes.StructuredGraph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 594,
                    "endLine": 677,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private finishInlining(invoke Invoke, graph StructuredGraph, firstNode FixedNode, returnNodes List<ReturnNode>, unwindNode UnwindNode, inlineGraph StructuredGraph, inlineeReturnAction InlineeReturnAction, beforeInlining Graph.Mark) : ValueNode"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 671,
                    "endLine": 671,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1141,
                    "endLine": 1145,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeMarkUnsafeAccess(graph StructuredGraph) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1143,
                    "endLine": 1143,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 594,
                    "endLine": 675,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private finishInlining(invoke Invoke, graph StructuredGraph, firstNode FixedNode, returnNodes List<ReturnNode>, unwindNode UnwindNode, inlineGraph StructuredGraph, inlineeReturnAction InlineeReturnAction, beforeInlining Graph.Mark) : ValueNode"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/inlining/InliningUtil.java",
                    "startLine": 670,
                    "endLine": 670,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.maybeMarkUnsafeAccess(inlineGraph)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1142,
                    "endLine": 1144,
                    "startColumn": 38,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/StructuredGraph.java",
                    "startLine": 1142,
                    "endLine": 1144,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 438
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "260f5d32a00d863cac38027b608d63674ccbaa51",
        "url": "https://github.com/oracle/graal/commit/260f5d32a00d863cac38027b608d63674ccbaa51",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public positivePi(n long) : long extracted from public guardLoopEntered(condition boolean, guardedValue int) : int in class jdk.graal.compiler.core.test.CountedLoopMaxTripCountPiTest & moved to class jdk.graal.compiler.api.directives.GraalDirectives",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/core/test/CountedLoopMaxTripCountPiTest.java",
                    "startLine": 53,
                    "endLine": 58,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public guardLoopEntered(condition boolean, guardedValue int) : int"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/core/test/CountedLoopMaxTripCountPiTest.java",
                    "startLine": 57,
                    "endLine": 57,
                    "startColumn": 9,
                    "endColumn": 41,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/api/directives/GraalDirectives.java",
                    "startLine": 171,
                    "endLine": 177,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public positivePi(n long) : long"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/api/directives/GraalDirectives.java",
                    "startLine": 176,
                    "endLine": 176,
                    "startColumn": 9,
                    "endColumn": 18,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/core/test/CountedLoopMaxTripCountPiTest.java",
                    "startLine": 44,
                    "endLine": 49,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public guardLoopEntered(condition boolean, guardedValue int) : int"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/core/test/CountedLoopMaxTripCountPiTest.java",
                    "startLine": 48,
                    "endLine": 48,
                    "startColumn": 16,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "GraalDirectives.positivePi(guardedValue)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 439
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "url": "https://github.com/oracle/graal/commit/7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getSizeInBytes() : int extracted from private parseIntegerConstantValue(info PropertyInfo<Object>) : void in class com.oracle.svm.hosted.c.query.QueryResultParser & moved to class com.oracle.svm.hosted.c.info.SizableInfo",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/QueryResultParser.java",
                    "startLine": 187,
                    "endLine": 202,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseIntegerConstantValue(info PropertyInfo<Object>) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/QueryResultParser.java",
                    "startLine": 189,
                    "endLine": 189,
                    "startColumn": 9,
                    "endColumn": 81,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 96,
                    "endLine": 98,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getSizeInBytes() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 9,
                    "endColumn": 44,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/QueryResultParser.java",
                    "startLine": 208,
                    "endLine": 219,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseIntegerConstantValue(info PropertyInfo<Object>) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/QueryResultParser.java",
                    "startLine": 213,
                    "endLine": 213,
                    "startColumn": 23,
                    "endColumn": 46,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "parent.getSizeInBytes()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 440
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "url": "https://github.com/oracle/graal/commit/7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getSizeInBytes() : int extracted from private planLayout(info RawStructureInfo) : void in class com.oracle.svm.hosted.c.query.RawStructureLayoutPlanner & moved to class com.oracle.svm.hosted.c.info.SizableInfo",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/RawStructureLayoutPlanner.java",
                    "startLine": 153,
                    "endLine": 208,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private planLayout(info RawStructureInfo) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/RawStructureLayoutPlanner.java",
                    "startLine": 158,
                    "endLine": 158,
                    "startColumn": 9,
                    "endColumn": 113,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 96,
                    "endLine": 98,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getSizeInBytes() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 9,
                    "endColumn": 44,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/RawStructureLayoutPlanner.java",
                    "startLine": 147,
                    "endLine": 202,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private planLayout(info RawStructureInfo) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/RawStructureLayoutPlanner.java",
                    "startLine": 152,
                    "endLine": 152,
                    "startColumn": 60,
                    "endColumn": 97,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "info.getParentInfo().getSizeInBytes()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/RawStructureLayoutPlanner.java",
                    "startLine": 167,
                    "endLine": 167,
                    "startColumn": 33,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "f2.getSizeInBytes()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/RawStructureLayoutPlanner.java",
                    "startLine": 167,
                    "endLine": 167,
                    "startColumn": 55,
                    "endColumn": 74,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "f1.getSizeInBytes()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/RawStructureLayoutPlanner.java",
                    "startLine": 171,
                    "endLine": 171,
                    "startColumn": 29,
                    "endColumn": 51,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "finfo.getSizeInBytes()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 441
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "url": "https://github.com/oracle/graal/commit/7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getSizeInBytes() : int extracted from private checkSizeAndSignedness(sizableInfo SizableInfo, type ResolvedJavaType, method ResolvedJavaMethod, isReturn boolean) : void in class com.oracle.svm.hosted.c.query.SizeAndSignednessVerifier & moved to class com.oracle.svm.hosted.c.info.SizableInfo",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/SizeAndSignednessVerifier.java",
                    "startLine": 240,
                    "endLine": 252,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private checkSizeAndSignedness(sizableInfo SizableInfo, type ResolvedJavaType, method ResolvedJavaMethod, isReturn boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/SizeAndSignednessVerifier.java",
                    "startLine": 242,
                    "endLine": 242,
                    "startColumn": 9,
                    "endColumn": 125,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 96,
                    "endLine": 98,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getSizeInBytes() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 9,
                    "endColumn": 44,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/SizeAndSignednessVerifier.java",
                    "startLine": 241,
                    "endLine": 275,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private verifySize(sizableInfo SizableInfo, type ResolvedJavaType, method ResolvedJavaMethod, isReturn boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/query/SizeAndSignednessVerifier.java",
                    "startLine": 262,
                    "endLine": 262,
                    "startColumn": 85,
                    "endColumn": 113,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "sizableInfo.getSizeInBytes()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 442
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "url": "https://github.com/oracle/graal/commit/7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getSizeInBytes() : int extracted from public size() : int in class com.oracle.svm.hosted.image.NativeImageDebugInfoProvider.NativeImageDebugForeignFieldInfo & moved to class com.oracle.svm.hosted.c.info.SizableInfo",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/image/NativeImageDebugInfoProvider.java",
                    "startLine": 771,
                    "endLine": 774,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public size() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/image/NativeImageDebugInfoProvider.java",
                    "startLine": 773,
                    "endLine": 773,
                    "startColumn": 13,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 96,
                    "endLine": 98,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getSizeInBytes() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 9,
                    "endColumn": 44,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/image/NativeImageDebugInfoProvider.java",
                    "startLine": 771,
                    "endLine": 774,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public size() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/image/NativeImageDebugInfoProvider.java",
                    "startLine": 773,
                    "endLine": 773,
                    "startColumn": 20,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "structFieldInfo.getSizeInBytes()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 443
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "url": "https://github.com/oracle/graal/commit/7dfe0687b15825a8d2ee93d295e3a55bdf28250f",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getSizeInBytes() : int extracted from private replaceBitfieldAccessor(b GraphBuilderContext, method AnalysisMethod, args ValueNode[], bitfieldInfo StructBitfieldInfo, accessorInfo AccessorInfo) : boolean in class com.oracle.svm.hosted.phases.CInterfaceInvocationPlugin & moved to class com.oracle.svm.hosted.c.info.SizableInfo",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/CInterfaceInvocationPlugin.java",
                    "startLine": 224,
                    "endLine": 338,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private replaceBitfieldAccessor(b GraphBuilderContext, method AnalysisMethod, args ValueNode[], bitfieldInfo StructBitfieldInfo, accessorInfo AccessorInfo) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/CInterfaceInvocationPlugin.java",
                    "startLine": 229,
                    "endLine": 229,
                    "startColumn": 9,
                    "endColumn": 117,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 96,
                    "endLine": 98,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getSizeInBytes() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/info/SizableInfo.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 9,
                    "endColumn": 44,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/CInterfaceInvocationPlugin.java",
                    "startLine": 237,
                    "endLine": 362,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private replaceBitfieldAccessor(b GraphBuilderContext, method AnalysisMethod, args ValueNode[], bitfieldInfo StructBitfieldInfo, accessorInfo AccessorInfo) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/CInterfaceInvocationPlugin.java",
                    "startLine": 242,
                    "endLine": 242,
                    "startColumn": 48,
                    "endColumn": 105,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "((SizableInfo)bitfieldInfo.getParent()).getSizeInBytes()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/phases/CInterfaceInvocationPlugin.java",
                    "startLine": 273,
                    "endLine": 273,
                    "startColumn": 48,
                    "endColumn": 105,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "((SizableInfo)bitfieldInfo.getParent()).getSizeInBytes()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 444
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "8fb2ec3e04bbd2a7218e4c8549a23c08f88cc16d",
        "url": "https://github.com/oracle/graal/commit/8fb2ec3e04bbd2a7218e4c8549a23c08f88cc16d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private getString(f int, combined String, pattern String) : String extracted from package doDefault(self StaticObject, p StaticObject, f int, context EspressoContext, regexInterop InteropLibrary, original DirectCallNode) : void in class com.oracle.truffle.espresso.substitutions.Target_java_util_regex_Pattern.Init & moved to class com.oracle.truffle.espresso.substitutions.Target_java_util_regex_Pattern",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Pattern.java",
                    "startLine": 88,
                    "endLine": 135,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package doDefault(self StaticObject, p StaticObject, f int, context EspressoContext, regexInterop InteropLibrary, original DirectCallNode) : void"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Pattern.java",
                    "startLine": 98,
                    "endLine": 98,
                    "startColumn": 13,
                    "endColumn": 81,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Pattern.java",
                    "startLine": 146,
                    "endLine": 150,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private getString(f int, combined String, pattern String) : String"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Pattern.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 9,
                    "endColumn": 77,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Pattern.java",
                    "startLine": 89,
                    "endLine": 137,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package doDefault(self StaticObject, p StaticObject, f int, context EspressoContext, regexInterop InteropLibrary, original DirectCallNode) : void"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Pattern.java",
                    "startLine": 99,
                    "endLine": 99,
                    "startColumn": 32,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "getString(f,combined,pattern)"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Pattern.java",
                    "startLine": 149,
                    "endLine": 149,
                    "startColumn": 9,
                    "endColumn": 26,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 445
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "db267e5ba9c465d3c696fbf9c9934ff88854faf4",
        "url": "https://github.com/oracle/graal/commit/db267e5ba9c465d3c696fbf9c9934ff88854faf4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private getSource(context EspressoContext, method String, pattern String, patternObject StaticObject) : Source extracted from private compile(context EspressoContext, regexInterop InteropLibrary, self StaticObject, method String, destination Field) : Object in class com.oracle.truffle.espresso.substitutions.Target_java_util_regex_Matcher & moved to class com.oracle.truffle.espresso.substitutions.Target_java_util_regex_Matcher",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 133,
                    "endLine": 179,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private compile(context EspressoContext, regexInterop InteropLibrary, self StaticObject, method String, destination Field) : Object"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 138,
                    "endLine": 138,
                    "startColumn": 9,
                    "endColumn": 115,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 139,
                    "endLine": 139,
                    "startColumn": 9,
                    "endColumn": 146,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 140,
                    "endLine": 140,
                    "startColumn": 9,
                    "endColumn": 83,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 436,
                    "endLine": 441,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private getSource(context EspressoContext, method String, pattern String, patternObject StaticObject) : Source"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 438,
                    "endLine": 438,
                    "startColumn": 9,
                    "endColumn": 115,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 439,
                    "endLine": 439,
                    "startColumn": 9,
                    "endColumn": 146,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 440,
                    "endLine": 440,
                    "startColumn": 9,
                    "endColumn": 77,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 324,
                    "endLine": 371,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package doDefault(context EspressoContext, self StaticObject, method String, destination Field, regexObjectInterop InteropLibrary, integerInterop InteropLibrary, mapInterop InteropLibrary, stringInterop InteropLibrary, arrayInterop InteropLibrary) : Object"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/substitutions/Target_java_util_regex_Matcher.java",
                    "startLine": 334,
                    "endLine": 334,
                    "startColumn": 26,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "getSource(context,method,pattern,patternObject)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 446
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "de05d2fce24497678199d6819cb7686f6f858545",
        "url": "https://github.com/oracle/graal/commit/de05d2fce24497678199d6819cb7686f6f858545",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isSupportedScript(scriptName String) : boolean extracted from public getScriptJava(name String) : CodePointSet in class com.oracle.truffle.regex.charset.UnicodeProperties & moved to class com.oracle.truffle.regex.charset.UnicodeProperties",
            "leftSideLocations": [
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/charset/UnicodeProperties.java",
                    "startLine": 100,
                    "endLine": 115,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getScriptJava(name String) : CodePointSet"
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/charset/UnicodeProperties.java",
                    "startLine": 110,
                    "endLine": 110,
                    "startColumn": 13,
                    "endColumn": 26,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/charset/UnicodeProperties.java",
                    "startLine": 194,
                    "endLine": 196,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isSupportedScript(scriptName String) : boolean"
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/charset/UnicodeProperties.java",
                    "startLine": 195,
                    "endLine": 195,
                    "startColumn": 9,
                    "endColumn": 80,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/flavors/java/JavaUnicodeProperties.java",
                    "startLine": 288,
                    "endLine": 299,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package getScript(name String) : CodePointSet"
                },
                {
                    "filePath": "regex/src/com.oracle.truffle.regex/src/com/oracle/truffle/regex/tregex/parser/flavors/java/JavaUnicodeProperties.java",
                    "startLine": 295,
                    "endLine": 295,
                    "startColumn": 13,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "unicode.isSupportedScript(normalizedName)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 447
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "1543c02dbb820284b0d6057ce3301da95d444120",
        "url": "https://github.com/oracle/graal/commit/1543c02dbb820284b0d6057ce3301da95d444120",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public createLabsJDKVersion(jdkVersionString String, jvmciBuild int) : Version extracted from private getVersion(jdkVersion String, major int, minor int, build int) : Version in class jdk.graal.compiler.hotspot.test.JVMCIVersionCheckTest & moved to class jdk.graal.compiler.hotspot.JVMCIVersionCheck",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckTest.java",
                    "startLine": 110,
                    "endLine": 118,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private getVersion(jdkVersion String, major int, minor int, build int) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckTest.java",
                    "startLine": 113,
                    "endLine": 113,
                    "startColumn": 13,
                    "endColumn": 51,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 66,
                    "endLine": 72,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public createLabsJDKVersion(jdkVersionString String, jvmciBuild int) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 71,
                    "endLine": 71,
                    "startColumn": 9,
                    "endColumn": 58,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckTest.java",
                    "startLine": 110,
                    "endLine": 118,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private getVersion(jdkVersion String, major int, minor int, build int) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckTest.java",
                    "startLine": 113,
                    "endLine": 113,
                    "startColumn": 20,
                    "endColumn": 77,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "JVMCIVersionCheck.createLabsJDKVersion(jdkVersion,build)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 448
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "1543c02dbb820284b0d6057ce3301da95d444120",
        "url": "https://github.com/oracle/graal/commit/1543c02dbb820284b0d6057ce3301da95d444120",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public createLabsJDKVersion(jdkVersionString String, jvmciBuild int) : Version extracted from package parse(vmVersion String) : Version in class jdk.graal.compiler.hotspot.JVMCIVersionCheck.Version & moved to class jdk.graal.compiler.hotspot.JVMCIVersionCheck",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 74,
                    "endLine": 102,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package parse(vmVersion String) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 82,
                    "endLine": 82,
                    "startColumn": 25,
                    "endColumn": 68,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 66,
                    "endLine": 72,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public createLabsJDKVersion(jdkVersionString String, jvmciBuild int) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 71,
                    "endLine": 71,
                    "startColumn": 9,
                    "endColumn": 58,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 99,
                    "endLine": 127,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package parse(vmVersion String) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 107,
                    "endLine": 107,
                    "startColumn": 32,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "createLabsJDKVersion(jdkVersion,jvmciBuild)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 449
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "1543c02dbb820284b0d6057ce3301da95d444120",
        "url": "https://github.com/oracle/graal/commit/1543c02dbb820284b0d6057ce3301da95d444120",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public createOpenJDKVersion(jdkVersionString String) : Version extracted from package parse(vmVersion String) : Version in class jdk.graal.compiler.hotspot.JVMCIVersionCheck.Version & moved to class jdk.graal.compiler.hotspot.JVMCIVersionCheck",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 74,
                    "endLine": 102,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package parse(vmVersion String) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 96,
                    "endLine": 96,
                    "startColumn": 21,
                    "endColumn": 65,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 74,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public createOpenJDKVersion(jdkVersionString String) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 80,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 46,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 99,
                    "endLine": 127,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package parse(vmVersion String) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 121,
                    "endLine": 121,
                    "startColumn": 28,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "createOpenJDKVersion(stripVersion(vmVersion))"
                }
            ],
            "isStatic": true
        },
        "ref_id": 450
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "1543c02dbb820284b0d6057ce3301da95d444120",
        "url": "https://github.com/oracle/graal/commit/1543c02dbb820284b0d6057ce3301da95d444120",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public createLegacyVersion(jvmciMajor int, jvmciMinor int, jvmciBuild int) : Version extracted from private testVersion(javaVmVersion String) : void in class jdk.graal.compiler.hotspot.test.JVMCIVersionCheckMaxValueTest & moved to class jdk.graal.compiler.hotspot.JVMCIVersionCheck",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckMaxValueTest.java",
                    "startLine": 55,
                    "endLine": 73,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private testVersion(javaVmVersion String) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckMaxValueTest.java",
                    "startLine": 57,
                    "endLine": 57,
                    "startColumn": 13,
                    "endColumn": 92,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 83,
                    "endLine": 89,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public createLegacyVersion(jvmciMajor int, jvmciMinor int, jvmciBuild int) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckMaxValueTest.java",
                    "startLine": 55,
                    "endLine": 73,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private testVersion(javaVmVersion String) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckMaxValueTest.java",
                    "startLine": 57,
                    "endLine": 57,
                    "startColumn": 52,
                    "endColumn": 99,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "JVMCIVersionCheck.createLegacyVersion(20,0,1)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 451
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "1543c02dbb820284b0d6057ce3301da95d444120",
        "url": "https://github.com/oracle/graal/commit/1543c02dbb820284b0d6057ce3301da95d444120",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public createLegacyVersion(jvmciMajor int, jvmciMinor int, jvmciBuild int) : Version extracted from private getVersion(jdkVersion String, major int, minor int, build int) : Version in class jdk.graal.compiler.hotspot.test.JVMCIVersionCheckTest & moved to class jdk.graal.compiler.hotspot.JVMCIVersionCheck",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckTest.java",
                    "startLine": 110,
                    "endLine": 118,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private getVersion(jdkVersion String, major int, minor int, build int) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckTest.java",
                    "startLine": 116,
                    "endLine": 116,
                    "startColumn": 13,
                    "endColumn": 53,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 83,
                    "endLine": 89,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public createLegacyVersion(jvmciMajor int, jvmciMinor int, jvmciBuild int) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckTest.java",
                    "startLine": 110,
                    "endLine": 118,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private getVersion(jdkVersion String, major int, minor int, build int) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/JVMCIVersionCheckTest.java",
                    "startLine": 116,
                    "endLine": 116,
                    "startColumn": 20,
                    "endColumn": 78,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "JVMCIVersionCheck.createLegacyVersion(major,minor,build)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 452
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "1543c02dbb820284b0d6057ce3301da95d444120",
        "url": "https://github.com/oracle/graal/commit/1543c02dbb820284b0d6057ce3301da95d444120",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public createLegacyVersion(jvmciMajor int, jvmciMinor int, jvmciBuild int) : Version extracted from package parse(vmVersion String) : Version in class jdk.graal.compiler.hotspot.JVMCIVersionCheck.Version & moved to class jdk.graal.compiler.hotspot.JVMCIVersionCheck",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 74,
                    "endLine": 102,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package parse(vmVersion String) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 25,
                    "endColumn": 80,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 83,
                    "endLine": 89,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public createLegacyVersion(jvmciMajor int, jvmciMinor int, jvmciBuild int) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 99,
                    "endLine": 127,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package parse(vmVersion String) : Version"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/JVMCIVersionCheck.java",
                    "startLine": 112,
                    "endLine": 112,
                    "startColumn": 32,
                    "endColumn": 87,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "createLegacyVersion(jvmciMajor,jvmciMinor,jvmciBuild)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 453
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "ecb15a8a16a18c7f7716b72effd3676d7e3cb536",
        "url": "https://github.com/oracle/graal/commit/ecb15a8a16a18c7f7716b72effd3676d7e3cb536",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public guardTrySkipPi(guard GuardingNode, condition LogicNode, negated boolean) : boolean extracted from public simplify(tool SimplifierTool) : void in class jdk.graal.compiler.nodes.FixedGuardNode & moved to class jdk.graal.compiler.nodes.util.GraphUtil",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 77,
                    "endLine": 222,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public simplify(tool SimplifierTool) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 156,
                    "endLine": 156,
                    "startColumn": 13,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 160,
                    "endLine": 160,
                    "startColumn": 21,
                    "endColumn": 64,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 162,
                    "endLine": 162,
                    "startColumn": 25,
                    "endColumn": 72,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 163,
                    "endLine": 163,
                    "startColumn": 25,
                    "endColumn": 89,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 170,
                    "endLine": 170,
                    "startColumn": 29,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 171,
                    "endLine": 171,
                    "startColumn": 29,
                    "endColumn": 58,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 173,
                    "endLine": 173,
                    "startColumn": 33,
                    "endColumn": 95,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 176,
                    "endLine": 176,
                    "startColumn": 37,
                    "endColumn": 182,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 178,
                    "endLine": 178,
                    "startColumn": 37,
                    "endColumn": 182,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 181,
                    "endLine": 181,
                    "startColumn": 29,
                    "endColumn": 117,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 192,
                    "endLine": 192,
                    "startColumn": 33,
                    "endColumn": 80,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 193,
                    "endLine": 193,
                    "startColumn": 33,
                    "endColumn": 112,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 199,
                    "endLine": 199,
                    "startColumn": 33,
                    "endColumn": 132,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 200,
                    "endLine": 200,
                    "startColumn": 33,
                    "endColumn": 155,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 202,
                    "endLine": 204,
                    "startColumn": 37,
                    "endColumn": 72,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 209,
                    "endLine": 209,
                    "startColumn": 37,
                    "endColumn": 176,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 210,
                    "endLine": 210,
                    "startColumn": 37,
                    "endColumn": 118,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 211,
                    "endLine": 211,
                    "startColumn": 37,
                    "endColumn": 100,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 213,
                    "endLine": 213,
                    "startColumn": 37,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 177,
                    "endLine": 179,
                    "startColumn": 40,
                    "endColumn": 34,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 175,
                    "endLine": 179,
                    "startColumn": 33,
                    "endColumn": 34,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 174,
                    "endLine": 180,
                    "startColumn": 36,
                    "endColumn": 30,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 172,
                    "endLine": 180,
                    "startColumn": 29,
                    "endColumn": 30,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 183,
                    "endLine": 216,
                    "startColumn": 29,
                    "endColumn": 30,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 165,
                    "endLine": 217,
                    "startColumn": 25,
                    "endColumn": 26,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 161,
                    "endLine": 218,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 158,
                    "endLine": 220,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 201,
                    "endLine": 215,
                    "startColumn": 33,
                    "endColumn": 34,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 159,
                    "endLine": 219,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 101,
                    "endColumn": 135,
                    "codeElementType": "INFIX_EXPRESSION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 177,
                    "endLine": 179,
                    "startColumn": 67,
                    "endColumn": 34,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 175,
                    "endLine": 177,
                    "startColumn": 60,
                    "endColumn": 34,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 174,
                    "endLine": 180,
                    "startColumn": 91,
                    "endColumn": 30,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 172,
                    "endLine": 174,
                    "startColumn": 83,
                    "endColumn": 30,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 183,
                    "endLine": 216,
                    "startColumn": 54,
                    "endColumn": 30,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 165,
                    "endLine": 217,
                    "startColumn": 108,
                    "endColumn": 26,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 161,
                    "endLine": 218,
                    "startColumn": 76,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 158,
                    "endLine": 220,
                    "startColumn": 78,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 201,
                    "endLine": 215,
                    "startColumn": 72,
                    "endColumn": 34,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 159,
                    "endLine": 219,
                    "startColumn": 137,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1468,
                    "endLine": 1579,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public guardTrySkipPi(guard GuardingNode, condition LogicNode, negated boolean) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1503,
                    "endLine": 1503,
                    "startColumn": 9,
                    "endColumn": 54,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1508,
                    "endLine": 1508,
                    "startColumn": 21,
                    "endColumn": 64,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1510,
                    "endLine": 1510,
                    "startColumn": 25,
                    "endColumn": 72,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1511,
                    "endLine": 1511,
                    "startColumn": 25,
                    "endColumn": 89,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1518,
                    "endLine": 1518,
                    "startColumn": 29,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1519,
                    "endLine": 1519,
                    "startColumn": 29,
                    "endColumn": 58,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1521,
                    "endLine": 1521,
                    "startColumn": 33,
                    "endColumn": 91,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1524,
                    "endLine": 1524,
                    "startColumn": 37,
                    "endColumn": 178,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1526,
                    "endLine": 1526,
                    "startColumn": 37,
                    "endColumn": 178,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1529,
                    "endLine": 1529,
                    "startColumn": 29,
                    "endColumn": 117,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1540,
                    "endLine": 1540,
                    "startColumn": 33,
                    "endColumn": 80,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1541,
                    "endLine": 1541,
                    "startColumn": 33,
                    "endColumn": 112,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1547,
                    "endLine": 1547,
                    "startColumn": 33,
                    "endColumn": 132,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1548,
                    "endLine": 1548,
                    "startColumn": 33,
                    "endColumn": 155,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1550,
                    "endLine": 1552,
                    "startColumn": 37,
                    "endColumn": 72,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1557,
                    "endLine": 1557,
                    "startColumn": 37,
                    "endColumn": 176,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1558,
                    "endLine": 1558,
                    "startColumn": 37,
                    "endColumn": 118,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1559,
                    "endLine": 1559,
                    "startColumn": 37,
                    "endColumn": 100,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1569,
                    "endLine": 1569,
                    "startColumn": 37,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1525,
                    "endLine": 1527,
                    "startColumn": 40,
                    "endColumn": 34,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1523,
                    "endLine": 1527,
                    "startColumn": 33,
                    "endColumn": 34,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1522,
                    "endLine": 1528,
                    "startColumn": 36,
                    "endColumn": 30,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1520,
                    "endLine": 1528,
                    "startColumn": 29,
                    "endColumn": 30,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1531,
                    "endLine": 1572,
                    "startColumn": 29,
                    "endColumn": 30,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1513,
                    "endLine": 1573,
                    "startColumn": 25,
                    "endColumn": 26,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1509,
                    "endLine": 1574,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1505,
                    "endLine": 1577,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1549,
                    "endLine": 1571,
                    "startColumn": 33,
                    "endColumn": 34,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1507,
                    "endLine": 1575,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1507,
                    "endLine": 1507,
                    "startColumn": 21,
                    "endColumn": 55,
                    "codeElementType": "INFIX_EXPRESSION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1525,
                    "endLine": 1527,
                    "startColumn": 67,
                    "endColumn": 34,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1523,
                    "endLine": 1525,
                    "startColumn": 60,
                    "endColumn": 34,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1522,
                    "endLine": 1528,
                    "startColumn": 91,
                    "endColumn": 30,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1520,
                    "endLine": 1522,
                    "startColumn": 83,
                    "endColumn": 30,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1531,
                    "endLine": 1572,
                    "startColumn": 54,
                    "endColumn": 30,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1513,
                    "endLine": 1573,
                    "startColumn": 108,
                    "endColumn": 26,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1509,
                    "endLine": 1574,
                    "startColumn": 76,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1505,
                    "endLine": 1577,
                    "startColumn": 74,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1549,
                    "endLine": 1571,
                    "startColumn": 72,
                    "endColumn": 34,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1507,
                    "endLine": 1575,
                    "startColumn": 57,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 77,
                    "endLine": 130,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public simplify(tool SimplifierTool) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/FixedGuardNode.java",
                    "startLine": 126,
                    "endLine": 126,
                    "startColumn": 17,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "GraphUtil.guardTrySkipPi(this,getCondition(),isNegated())"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1500,
                    "endLine": 1500,
                    "startColumn": 13,
                    "endColumn": 26,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1502,
                    "endLine": 1502,
                    "startColumn": 9,
                    "endColumn": 34,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1561,
                    "endLine": 1561,
                    "startColumn": 41,
                    "endColumn": 80,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1563,
                    "endLine": 1563,
                    "startColumn": 41,
                    "endColumn": 91,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1565,
                    "endLine": 1565,
                    "startColumn": 41,
                    "endColumn": 108,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1567,
                    "endLine": 1567,
                    "startColumn": 41,
                    "endColumn": 97,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1570,
                    "endLine": 1570,
                    "startColumn": 37,
                    "endColumn": 53,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1578,
                    "endLine": 1578,
                    "startColumn": 9,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1499,
                    "endLine": 1501,
                    "startColumn": 109,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1499,
                    "endLine": 1501,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1560,
                    "endLine": 1562,
                    "startColumn": 86,
                    "endColumn": 38,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1562,
                    "endLine": 1564,
                    "startColumn": 99,
                    "endColumn": 38,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1564,
                    "endLine": 1566,
                    "startColumn": 85,
                    "endColumn": 38,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1566,
                    "endLine": 1568,
                    "startColumn": 44,
                    "endColumn": 38,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1564,
                    "endLine": 1568,
                    "startColumn": 44,
                    "endColumn": 38,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1562,
                    "endLine": 1568,
                    "startColumn": 44,
                    "endColumn": 38,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1560,
                    "endLine": 1568,
                    "startColumn": 37,
                    "endColumn": 38,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1506,
                    "endLine": 1576,
                    "startColumn": 92,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/GraphUtil.java",
                    "startLine": 1506,
                    "endLine": 1576,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 454
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "a5fe420e3226bfd9640eb6565fabee310223b31c",
        "url": "https://github.com/oracle/graal/commit/a5fe420e3226bfd9640eb6565fabee310223b31c",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public computeNextTypeId() : int extracted from public AnalysisType(universe AnalysisUniverse, javaType ResolvedJavaType, storageKind JavaKind, objectType AnalysisType, cloneableType AnalysisType) in class com.oracle.graal.pointsto.meta.AnalysisType & moved to class com.oracle.graal.pointsto.meta.AnalysisUniverse",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 231,
                    "endLine": 333,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public AnalysisType(universe AnalysisUniverse, javaType ResolvedJavaType, storageKind JavaKind, objectType AnalysisType, cloneableType AnalysisType)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 9,
                    "endColumn": 57,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 764,
                    "endLine": 766,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public computeNextTypeId() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 765,
                    "endLine": 765,
                    "startColumn": 9,
                    "endColumn": 45,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 233,
                    "endLine": 355,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public AnalysisType(universe AnalysisUniverse, javaType ResolvedJavaType, storageKind JavaKind, objectType AnalysisType, cloneableType AnalysisType)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 311,
                    "endLine": 311,
                    "startColumn": 27,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "universe.computeNextTypeId()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 315,
                    "endLine": 315,
                    "startColumn": 23,
                    "endColumn": 51,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "universe.computeNextTypeId()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 455
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "a5fe420e3226bfd9640eb6565fabee310223b31c",
        "url": "https://github.com/oracle/graal/commit/a5fe420e3226bfd9640eb6565fabee310223b31c",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public computeNextMethodId() : int extracted from protected AnalysisMethod(universe AnalysisUniverse, wrapped ResolvedJavaMethod, multiMethodKey MultiMethodKey, multiMethodMap Map<MultiMethodKey,MultiMethod>) in class com.oracle.graal.pointsto.meta.AnalysisMethod & moved to class com.oracle.graal.pointsto.meta.AnalysisUniverse",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisMethod.java",
                    "startLine": 180,
                    "endLine": 226,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected AnalysisMethod(universe AnalysisUniverse, wrapped ResolvedJavaMethod, multiMethodKey MultiMethodKey, multiMethodMap Map<MultiMethodKey,MultiMethod>)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisMethod.java",
                    "startLine": 183,
                    "endLine": 183,
                    "startColumn": 9,
                    "endColumn": 54,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 768,
                    "endLine": 770,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public computeNextMethodId() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 769,
                    "endLine": 769,
                    "startColumn": 9,
                    "endColumn": 47,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisMethod.java",
                    "startLine": 182,
                    "endLine": 245,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected AnalysisMethod(universe AnalysisUniverse, wrapped ResolvedJavaMethod, multiMethodKey MultiMethodKey, multiMethodMap Map<MultiMethodKey,MultiMethod>)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisMethod.java",
                    "startLine": 203,
                    "endLine": 203,
                    "startColumn": 22,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "universe.computeNextMethodId()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisMethod.java",
                    "startLine": 207,
                    "endLine": 207,
                    "startColumn": 18,
                    "endColumn": 48,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "universe.computeNextMethodId()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 456
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "bd9f95af2d98b5133547f8ad867ca8f856b5006b",
        "url": "https://github.com/oracle/graal/commit/bd9f95af2d98b5133547f8ad867ca8f856b5006b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public computeNextFieldId() : int extracted from public AnalysisField(universe AnalysisUniverse, wrappedField ResolvedJavaField) in class com.oracle.graal.pointsto.meta.AnalysisField & moved to class com.oracle.graal.pointsto.meta.AnalysisUniverse",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisField.java",
                    "startLine": 128,
                    "endLine": 153,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public AnalysisField(universe AnalysisUniverse, wrappedField ResolvedJavaField)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisField.java",
                    "startLine": 135,
                    "endLine": 135,
                    "startColumn": 9,
                    "endColumn": 58,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 792,
                    "endLine": 794,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public computeNextFieldId() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 793,
                    "endLine": 793,
                    "startColumn": 9,
                    "endColumn": 46,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisField.java",
                    "startLine": 130,
                    "endLine": 172,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public AnalysisField(universe AnalysisUniverse, wrappedField ResolvedJavaField)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisField.java",
                    "startLine": 165,
                    "endLine": 165,
                    "startColumn": 22,
                    "endColumn": 51,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "universe.computeNextFieldId()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisField.java",
                    "startLine": 169,
                    "endLine": 169,
                    "startColumn": 18,
                    "endColumn": 47,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "universe.computeNextFieldId()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 457
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "e41cd149fa761c45e278f0fdda14ebe41a15a09a",
        "url": "https://github.com/oracle/graal/commit/e41cd149fa761c45e278f0fdda14ebe41a15a09a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package setSourceClassAndMethodName(clazz Class<?>, methodName String) : void extracted from protected fillSourceFields(method ResolvedJavaMethod, resultFrameInfo FrameInfoQueryResult) : void in class com.oracle.svm.core.code.FrameInfoEncoder.SourceFieldsFromMethod & moved to class com.oracle.svm.core.code.FrameInfoQueryResult",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/FrameInfoEncoder.java",
                    "startLine": 134,
                    "endLine": 146,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected fillSourceFields(method ResolvedJavaMethod, resultFrameInfo FrameInfoQueryResult) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/FrameInfoEncoder.java",
                    "startLine": 145,
                    "endLine": 145,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/FrameInfoQueryResult.java",
                    "startLine": 367,
                    "endLine": 372,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package setSourceClassAndMethodName(clazz Class<?>, methodName String) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/FrameInfoQueryResult.java",
                    "startLine": 371,
                    "endLine": 371,
                    "startColumn": 9,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/FrameInfoEncoder.java",
                    "startLine": 132,
                    "endLine": 148,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected fillSourceFields(method ResolvedJavaMethod, resultFrameInfo FrameInfoQueryResult) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/FrameInfoEncoder.java",
                    "startLine": 147,
                    "endLine": 147,
                    "startColumn": 13,
                    "endColumn": 87,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "resultFrameInfo.setSourceClassAndMethodName(sourceClass,sourceMethodName)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/FrameInfoQueryResult.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 85,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/FrameInfoQueryResult.java",
                    "startLine": 370,
                    "endLine": 370,
                    "startColumn": 9,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 458
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0a900c4019e312ab6becfb297a986ee54837f586",
        "url": "https://github.com/oracle/graal/commit/0a900c4019e312ab6becfb297a986ee54837f586",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : MetadataAccessor extracted from private decodeAndThrowError(index int) : void in class com.oracle.svm.core.code.RuntimeMetadataDecoderImpl & moved to class com.oracle.svm.core.reflect.RuntimeMetadataDecoder.MetadataAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 255,
                    "endLine": 263,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private decodeAndThrowError(index int) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 262,
                    "endLine": 262,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : MetadataAccessor"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 255,
                    "endLine": 263,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private decodeAndThrowError(index int) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 262,
                    "endLine": 262,
                    "startColumn": 19,
                    "endColumn": 47,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 459
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0a900c4019e312ab6becfb297a986ee54837f586",
        "url": "https://github.com/oracle/graal/commit/0a900c4019e312ab6becfb297a986ee54837f586",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : MetadataAccessor extracted from private decodeType(buf UnsafeArrayTypeReader) : Class<?> in class com.oracle.svm.core.code.RuntimeMetadataDecoderImpl & moved to class com.oracle.svm.core.reflect.RuntimeMetadataDecoder.MetadataAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 616,
                    "endLine": 623,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private decodeType(buf UnsafeArrayTypeReader) : Class<?>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 622,
                    "endLine": 622,
                    "startColumn": 9,
                    "endColumn": 84,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : MetadataAccessor"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 616,
                    "endLine": 623,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private decodeType(buf UnsafeArrayTypeReader) : Class<?>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 622,
                    "endLine": 622,
                    "startColumn": 16,
                    "endColumn": 44,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 460
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0a900c4019e312ab6becfb297a986ee54837f586",
        "url": "https://github.com/oracle/graal/commit/0a900c4019e312ab6becfb297a986ee54837f586",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : MetadataAccessor extracted from private decodeMemberName(buf UnsafeArrayTypeReader) : String in class com.oracle.svm.core.code.RuntimeMetadataDecoderImpl & moved to class com.oracle.svm.core.reflect.RuntimeMetadataDecoder.MetadataAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 625,
                    "endLine": 631,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private decodeMemberName(buf UnsafeArrayTypeReader) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 628,
                    "endLine": 628,
                    "startColumn": 9,
                    "endColumn": 95,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : MetadataAccessor"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 625,
                    "endLine": 631,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private decodeMemberName(buf UnsafeArrayTypeReader) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 628,
                    "endLine": 628,
                    "startColumn": 23,
                    "endColumn": 51,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 461
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0a900c4019e312ab6becfb297a986ee54837f586",
        "url": "https://github.com/oracle/graal/commit/0a900c4019e312ab6becfb297a986ee54837f586",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : MetadataAccessor extracted from private decodeOtherString(buf UnsafeArrayTypeReader) : String in class com.oracle.svm.core.code.RuntimeMetadataDecoderImpl & moved to class com.oracle.svm.core.reflect.RuntimeMetadataDecoder.MetadataAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 633,
                    "endLine": 639,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private decodeOtherString(buf UnsafeArrayTypeReader) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 636,
                    "endLine": 636,
                    "startColumn": 9,
                    "endColumn": 96,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : MetadataAccessor"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 633,
                    "endLine": 639,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private decodeOtherString(buf UnsafeArrayTypeReader) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 636,
                    "endLine": 636,
                    "startColumn": 23,
                    "endColumn": 51,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 462
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0a900c4019e312ab6becfb297a986ee54837f586",
        "url": "https://github.com/oracle/graal/commit/0a900c4019e312ab6becfb297a986ee54837f586",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : MetadataAccessor extracted from private decodeObject(buf UnsafeArrayTypeReader) : Object in class com.oracle.svm.core.code.RuntimeMetadataDecoderImpl & moved to class com.oracle.svm.core.reflect.RuntimeMetadataDecoder.MetadataAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 641,
                    "endLine": 651,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private decodeObject(buf UnsafeArrayTypeReader) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 650,
                    "endLine": 650,
                    "startColumn": 9,
                    "endColumn": 86,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : MetadataAccessor"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 641,
                    "endLine": 651,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private decodeObject(buf UnsafeArrayTypeReader) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/code/RuntimeMetadataDecoderImpl.java",
                    "startLine": 650,
                    "endLine": 650,
                    "startColumn": 16,
                    "endColumn": 44,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 463
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0a900c4019e312ab6becfb297a986ee54837f586",
        "url": "https://github.com/oracle/graal/commit/0a900c4019e312ab6becfb297a986ee54837f586",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : MetadataAccessor extracted from private parseAnnotation2(buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool, container Class<?>, exceptionOnMissingAnnotationClass boolean, selectAnnotationClasses Class<? extends Annotation>[]) : Annotation in class com.oracle.svm.core.reflect.target.Target_sun_reflect_annotation_AnnotationParser & moved to class com.oracle.svm.core.reflect.RuntimeMetadataDecoder.MetadataAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 57,
                    "endLine": 112,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseAnnotation2(buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool, container Class<?>, exceptionOnMissingAnnotationClass boolean, selectAnnotationClasses Class<? extends Annotation>[]) : Annotation"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 13,
                    "endColumn": 134,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : MetadataAccessor"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 54,
                    "endLine": 109,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseAnnotation2(buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool, container Class<?>, exceptionOnMissingAnnotationClass boolean, selectAnnotationClasses Class<? extends Annotation>[]) : Annotation"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 67,
                    "endLine": 67,
                    "startColumn": 61,
                    "endColumn": 89,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 94,
                    "endLine": 94,
                    "startColumn": 33,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 464
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0a900c4019e312ab6becfb297a986ee54837f586",
        "url": "https://github.com/oracle/graal/commit/0a900c4019e312ab6becfb297a986ee54837f586",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : MetadataAccessor extracted from private parseEnumValue(enumType Class<? extends Enum>, buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool, container Class<?>) : Object in class com.oracle.svm.core.reflect.target.Target_sun_reflect_annotation_AnnotationParser & moved to class com.oracle.svm.core.reflect.RuntimeMetadataDecoder.MetadataAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 132,
                    "endLine": 152,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseEnumValue(enumType Class<? extends Enum>, buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool, container Class<?>) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 139,
                    "endLine": 139,
                    "startColumn": 9,
                    "endColumn": 128,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : MetadataAccessor"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 129,
                    "endLine": 149,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseEnumValue(enumType Class<? extends Enum>, buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool, container Class<?>) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 136,
                    "endLine": 136,
                    "startColumn": 28,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 138,
                    "endLine": 138,
                    "startColumn": 47,
                    "endColumn": 75,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 465
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0a900c4019e312ab6becfb297a986ee54837f586",
        "url": "https://github.com/oracle/graal/commit/0a900c4019e312ab6becfb297a986ee54837f586",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : MetadataAccessor extracted from private parseConst(tag int, buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool) : Object in class com.oracle.svm.core.reflect.target.Target_sun_reflect_annotation_AnnotationParser & moved to class com.oracle.svm.core.reflect.RuntimeMetadataDecoder.MetadataAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 154,
                    "endLine": 184,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseConst(tag int, buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 179,
                    "endLine": 179,
                    "startColumn": 17,
                    "endColumn": 118,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : MetadataAccessor"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 151,
                    "endLine": 181,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseConst(tag int, buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 174,
                    "endLine": 174,
                    "startColumn": 24,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 176,
                    "endLine": 176,
                    "startColumn": 24,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 466
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0a900c4019e312ab6becfb297a986ee54837f586",
        "url": "https://github.com/oracle/graal/commit/0a900c4019e312ab6becfb297a986ee54837f586",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : MetadataAccessor extracted from private parseStringArray(length int, buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool) : Object in class com.oracle.svm.core.reflect.target.Target_sun_reflect_annotation_AnnotationParser & moved to class com.oracle.svm.core.reflect.RuntimeMetadataDecoder.MetadataAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 343,
                    "endLine": 361,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseStringArray(length int, buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 354,
                    "endLine": 354,
                    "startColumn": 17,
                    "endColumn": 121,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : MetadataAccessor"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/RuntimeMetadataDecoder.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 340,
                    "endLine": 358,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseStringArray(length int, buf ByteBuffer, constPool Target_jdk_internal_reflect_ConstantPool) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/target/Target_sun_reflect_annotation_AnnotationParser.java",
                    "startLine": 351,
                    "endLine": 351,
                    "startColumn": 29,
                    "endColumn": 57,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "MetadataAccessor.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 467
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0b5da12012c15b73daebb72b962ecd8410c2af76",
        "url": "https://github.com/oracle/graal/commit/0b5da12012c15b73daebb72b962ecd8410c2af76",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public preserveFramePointer(isStub boolean) : boolean extracted from public rawEnter(crb CompilationResultBuilder, frameMap FrameMap, masm AArch64MacroAssembler, config GraalHotSpotVMConfig) : void in class jdk.graal.compiler.hotspot.aarch64.AArch64HotSpotBackend & moved to class jdk.graal.compiler.hotspot.GraalHotSpotVMConfig",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/aarch64/AArch64HotSpotBackend.java",
                    "startLine": 192,
                    "endLine": 220,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public rawEnter(crb CompilationResultBuilder, frameMap FrameMap, masm AArch64MacroAssembler, config GraalHotSpotVMConfig) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/aarch64/AArch64HotSpotBackend.java",
                    "startLine": 208,
                    "endLine": 208,
                    "startColumn": 21,
                    "endColumn": 48,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/aarch64/AArch64HotSpotBackend.java",
                    "startLine": 208,
                    "endLine": 208,
                    "startColumn": 28,
                    "endColumn": 48,
                    "codeElementType": "SIMPLE_NAME",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/aarch64/AArch64HotSpotBackend.java",
                    "startLine": 214,
                    "endLine": 214,
                    "startColumn": 21,
                    "endColumn": 48,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/aarch64/AArch64HotSpotBackend.java",
                    "startLine": 214,
                    "endLine": 214,
                    "startColumn": 28,
                    "endColumn": 48,
                    "codeElementType": "SIMPLE_NAME",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/GraalHotSpotVMConfig.java",
                    "startLine": 157,
                    "endLine": 159,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public preserveFramePointer(isStub boolean) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/GraalHotSpotVMConfig.java",
                    "startLine": 158,
                    "endLine": 158,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/GraalHotSpotVMConfig.java",
                    "startLine": 158,
                    "endLine": 158,
                    "startColumn": 16,
                    "endColumn": 36,
                    "codeElementType": "SIMPLE_NAME",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/aarch64/AArch64HotSpotBackend.java",
                    "startLine": 192,
                    "endLine": 220,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public rawEnter(crb CompilationResultBuilder, frameMap FrameMap, masm AArch64MacroAssembler, config GraalHotSpotVMConfig, isStub boolean) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/aarch64/AArch64HotSpotBackend.java",
                    "startLine": 208,
                    "endLine": 208,
                    "startColumn": 21,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "config.preserveFramePointer(isStub)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/aarch64/AArch64HotSpotBackend.java",
                    "startLine": 214,
                    "endLine": 214,
                    "startColumn": 21,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "config.preserveFramePointer(isStub)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 468
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0b5da12012c15b73daebb72b962ecd8410c2af76",
        "url": "https://github.com/oracle/graal/commit/0b5da12012c15b73daebb72b962ecd8410c2af76",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public preserveFramePointer(isStub boolean) : boolean extracted from public beforeRegisterAllocation() : void in class jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRGenerator & moved to class jdk.graal.compiler.hotspot.GraalHotSpotVMConfig",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.java",
                    "startLine": 483,
                    "endLine": 511,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public beforeRegisterAllocation() : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.java",
                    "startLine": 488,
                    "endLine": 488,
                    "startColumn": 13,
                    "endColumn": 40,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.java",
                    "startLine": 488,
                    "endLine": 488,
                    "startColumn": 20,
                    "endColumn": 40,
                    "codeElementType": "SIMPLE_NAME",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/GraalHotSpotVMConfig.java",
                    "startLine": 157,
                    "endLine": 159,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public preserveFramePointer(isStub boolean) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/GraalHotSpotVMConfig.java",
                    "startLine": 158,
                    "endLine": 158,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/GraalHotSpotVMConfig.java",
                    "startLine": 158,
                    "endLine": 158,
                    "startColumn": 16,
                    "endColumn": 36,
                    "codeElementType": "SIMPLE_NAME",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.java",
                    "startLine": 484,
                    "endLine": 512,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public beforeRegisterAllocation() : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 13,
                    "endColumn": 59,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "config.preserveFramePointer(getStub() != null)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 469
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "46840b4fc7365b8789262ca96ece3cddcf72a943",
        "url": "https://github.com/oracle/graal/commit/46840b4fc7365b8789262ca96ece3cddcf72a943",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public create() : TransitionMap<K,V> extracted from private newTransitionMap() : TransitionMap<Transition,ShapeImpl> in class com.oracle.truffle.object.ShapeImpl & moved to class com.oracle.truffle.object.TransitionMap",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.object/src/com/oracle/truffle/object/ShapeImpl.java",
                    "startLine": 428,
                    "endLine": 430,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private newTransitionMap() : TransitionMap<Transition,ShapeImpl>"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.object/src/com/oracle/truffle/object/ShapeImpl.java",
                    "startLine": 429,
                    "endLine": 429,
                    "startColumn": 9,
                    "endColumn": 38,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.object/src/com/oracle/truffle/object/TransitionMap.java",
                    "startLine": 65,
                    "endLine": 67,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public create() : TransitionMap<K,V>"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.object/src/com/oracle/truffle/object/TransitionMap.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 9,
                    "endColumn": 46,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.object/src/com/oracle/truffle/object/ShapeImpl.java",
                    "startLine": 428,
                    "endLine": 430,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private newTransitionMap() : TransitionMap<Transition,ShapeImpl>"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.object/src/com/oracle/truffle/object/ShapeImpl.java",
                    "startLine": 429,
                    "endLine": 429,
                    "startColumn": 16,
                    "endColumn": 38,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "TransitionMap.create()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 470
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "2d970d6e87339bc31ca0987fccf66d8d15e194ab",
        "url": "https://github.com/oracle/graal/commit/2d970d6e87339bc31ca0987fccf66d8d15e194ab",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public invokeSpecial(obj Object, args Object[]) : Object extracted from public invokeSpecial(obj Object, args Object[]) : Object in class com.oracle.svm.core.reflect.SubstrateMethodAccessor & moved to class com.oracle.svm.core.reflect.SubstrateAccessor",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateMethodAccessor.java",
                    "startLine": 159,
                    "endLine": 170,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public invokeSpecial(obj Object, args Object[]) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateMethodAccessor.java",
                    "startLine": 165,
                    "endLine": 165,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateMethodAccessor.java",
                    "startLine": 167,
                    "endLine": 167,
                    "startColumn": 13,
                    "endColumn": 98,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateMethodAccessor.java",
                    "startLine": 169,
                    "endLine": 169,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateMethodAccessor.java",
                    "startLine": 166,
                    "endLine": 168,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateMethodAccessor.java",
                    "startLine": 166,
                    "endLine": 168,
                    "startColumn": 30,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateAccessor.java",
                    "startLine": 96,
                    "endLine": 102,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public invokeSpecial(obj Object, args Object[]) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateAccessor.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateAccessor.java",
                    "startLine": 99,
                    "endLine": 99,
                    "startColumn": 13,
                    "endColumn": 98,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateAccessor.java",
                    "startLine": 101,
                    "endLine": 101,
                    "startColumn": 9,
                    "endColumn": 115,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateAccessor.java",
                    "startLine": 98,
                    "endLine": 100,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateAccessor.java",
                    "startLine": 98,
                    "endLine": 100,
                    "startColumn": 30,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateMethodAccessor.java",
                    "startLine": 159,
                    "endLine": 166,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public invokeSpecial(obj Object, args Object[]) : Object"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/SubstrateMethodAccessor.java",
                    "startLine": 165,
                    "endLine": 165,
                    "startColumn": 16,
                    "endColumn": 46,
                    "codeElementType": "SUPER_METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "super.invokeSpecial(obj,args)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 471
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "cfb7cec198334a7218fed5948bab12a5ae42c7f4",
        "url": "https://github.com/oracle/graal/commit/cfb7cec198334a7218fed5948bab12a5ae42c7f4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public defaultUniqueShortName(m Member) : String extracted from public uniqueShortName(m Member) : String in class com.oracle.svm.core.UniqueShortNameProviderDefaultImpl & moved to class com.oracle.svm.core.SubstrateUtil",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 51,
                    "endLine": 74,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public uniqueShortName(m Member) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 53,
                    "endLine": 53,
                    "startColumn": 9,
                    "endColumn": 54,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 54,
                    "endLine": 54,
                    "startColumn": 9,
                    "endColumn": 70,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 56,
                    "endLine": 56,
                    "startColumn": 13,
                    "endColumn": 39,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 58,
                    "endLine": 58,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 61,
                    "endLine": 61,
                    "startColumn": 13,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 63,
                    "endLine": 63,
                    "startColumn": 17,
                    "endColumn": 58,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 65,
                    "endLine": 65,
                    "startColumn": 13,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 67,
                    "endLine": 67,
                    "startColumn": 17,
                    "endColumn": 73,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 55,
                    "endLine": 59,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 62,
                    "endLine": 64,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 66,
                    "endLine": 68,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 60,
                    "endLine": 69,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 55,
                    "endLine": 57,
                    "startColumn": 39,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 57,
                    "endLine": 59,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 62,
                    "endLine": 64,
                    "startColumn": 69,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 66,
                    "endLine": 68,
                    "startColumn": 38,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 60,
                    "endLine": 69,
                    "startColumn": 38,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 361,
                    "endLine": 383,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public defaultUniqueShortName(m Member) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 362,
                    "endLine": 362,
                    "startColumn": 9,
                    "endColumn": 54,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 363,
                    "endLine": 363,
                    "startColumn": 9,
                    "endColumn": 70,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 365,
                    "endLine": 365,
                    "startColumn": 13,
                    "endColumn": 39,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 367,
                    "endLine": 367,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 370,
                    "endLine": 370,
                    "startColumn": 13,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 372,
                    "endLine": 372,
                    "startColumn": 17,
                    "endColumn": 58,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 374,
                    "endLine": 374,
                    "startColumn": 13,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 376,
                    "endLine": 376,
                    "startColumn": 17,
                    "endColumn": 73,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 364,
                    "endLine": 368,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 371,
                    "endLine": 373,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 375,
                    "endLine": 377,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 369,
                    "endLine": 378,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 364,
                    "endLine": 366,
                    "startColumn": 39,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 366,
                    "endLine": 368,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 371,
                    "endLine": 373,
                    "startColumn": 69,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 375,
                    "endLine": 377,
                    "startColumn": 38,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 369,
                    "endLine": 378,
                    "startColumn": 38,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 48,
                    "endLine": 51,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public uniqueShortName(m Member) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/UniqueShortNameProviderDefaultImpl.java",
                    "startLine": 50,
                    "endLine": 50,
                    "startColumn": 16,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SubstrateUtil.defaultUniqueShortName(m)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateUtil.java",
                    "startLine": 380,
                    "endLine": 382,
                    "startColumn": 9,
                    "endColumn": 60,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 472
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "2f694d81e1095a690f01ad80ff92609892cb009a",
        "url": "https://github.com/oracle/graal/commit/2f694d81e1095a690f01ad80ff92609892cb009a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package getStackLimit() : int extracted from public getStackLimit() : int in class com.oracle.truffle.tools.profiler.CPUSampler & moved to class com.oracle.truffle.tools.profiler.SafepointStackSampler",
            "leftSideLocations": [
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 262,
                    "endLine": 268,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getStackLimit() : int"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 267,
                    "endLine": 267,
                    "startColumn": 9,
                    "endColumn": 27,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/SafepointStackSampler.java",
                    "startLine": 168,
                    "endLine": 170,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package getStackLimit() : int"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/SafepointStackSampler.java",
                    "startLine": 169,
                    "endLine": 169,
                    "startColumn": 9,
                    "endColumn": 27,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 263,
                    "endLine": 269,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getStackLimit() : int"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 268,
                    "endLine": 268,
                    "startColumn": 16,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "safepointStackSampler.getStackLimit()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 473
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "2f694d81e1095a690f01ad80ff92609892cb009a",
        "url": "https://github.com/oracle/graal/commit/2f694d81e1095a690f01ad80ff92609892cb009a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package setStackLimit(stackLimit int) : void extracted from public setStackLimit(stackLimit int) : void in class com.oracle.truffle.tools.profiler.CPUSampler & moved to class com.oracle.truffle.tools.profiler.SafepointStackSampler",
            "leftSideLocations": [
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 270,
                    "endLine": 283,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public setStackLimit(stackLimit int) : void"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 282,
                    "endLine": 282,
                    "startColumn": 9,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/SafepointStackSampler.java",
                    "startLine": 172,
                    "endLine": 175,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package setStackLimit(stackLimit int) : void"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/SafepointStackSampler.java",
                    "startLine": 173,
                    "endLine": 173,
                    "startColumn": 9,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 271,
                    "endLine": 284,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public setStackLimit(stackLimit int) : void"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 283,
                    "endLine": 283,
                    "startColumn": 9,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "this.safepointStackSampler.setStackLimit(stackLimit)"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/SafepointStackSampler.java",
                    "startLine": 174,
                    "endLine": 174,
                    "startColumn": 9,
                    "endColumn": 40,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 474
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "2f694d81e1095a690f01ad80ff92609892cb009a",
        "url": "https://github.com/oracle/graal/commit/2f694d81e1095a690f01ad80ff92609892cb009a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package getSourceSectionFilter() : SourceSectionFilter extracted from public getFilter() : SourceSectionFilter in class com.oracle.truffle.tools.profiler.CPUSampler & moved to class com.oracle.truffle.tools.profiler.SafepointStackSampler",
            "leftSideLocations": [
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 300,
                    "endLine": 306,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getFilter() : SourceSectionFilter"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 305,
                    "endLine": 305,
                    "startColumn": 9,
                    "endColumn": 23,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/SafepointStackSampler.java",
                    "startLine": 177,
                    "endLine": 179,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package getSourceSectionFilter() : SourceSectionFilter"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/SafepointStackSampler.java",
                    "startLine": 178,
                    "endLine": 178,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 301,
                    "endLine": 307,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getFilter() : SourceSectionFilter"
                },
                {
                    "filePath": "tools/src/com.oracle.truffle.tools.profiler/src/com/oracle/truffle/tools/profiler/CPUSampler.java",
                    "startLine": 306,
                    "endLine": 306,
                    "startColumn": 16,
                    "endColumn": 62,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "safepointStackSampler.getSourceSectionFilter()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 475
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c1fc3905c614510bae727216ee3066ae99d45a3d",
        "url": "https://github.com/oracle/graal/commit/c1fc3905c614510bae727216ee3066ae99d45a3d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public checkExpiration() : void extracted from public apply(closure BlockIteratorClosure<StateT>, start HIRBlock, initialState StateT, stopAtBlock Predicate<HIRBlock>) : EconomicMap<FixedNode,StateT> in class jdk.graal.compiler.phases.graph.ReentrantBlockIterator & moved to class jdk.graal.compiler.core.common.util.CompilationAlarm",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 131,
                    "endLine": 202,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public apply(closure BlockIteratorClosure<StateT>, start HIRBlock, initialState StateT, stopAtBlock Predicate<HIRBlock>) : EconomicMap<FixedNode,StateT>"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 149,
                    "endLine": 149,
                    "startColumn": 17,
                    "endColumn": 117,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 147,
                    "endLine": 150,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 147,
                    "endLine": 150,
                    "startColumn": 48,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/util/CompilationAlarm.java",
                    "startLine": 99,
                    "endLine": 106,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public checkExpiration() : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/util/CompilationAlarm.java",
                    "startLine": 104,
                    "endLine": 104,
                    "startColumn": 13,
                    "endColumn": 94,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/util/CompilationAlarm.java",
                    "startLine": 103,
                    "endLine": 105,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/util/CompilationAlarm.java",
                    "startLine": 103,
                    "endLine": 105,
                    "startColumn": 27,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 129,
                    "endLine": 196,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public apply(closure BlockIteratorClosure<StateT>, start HIRBlock, initialState StateT, stopAtBlock Predicate<HIRBlock>) : EconomicMap<FixedNode,StateT>"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/graph/ReentrantBlockIterator.java",
                    "startLine": 144,
                    "endLine": 144,
                    "startColumn": 13,
                    "endColumn": 47,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "compilationAlarm.checkExpiration()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 476
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "19009b612e860fb38e2604e238905c1a2a95bb64",
        "url": "https://github.com/oracle/graal/commit/19009b612e860fb38e2604e238905c1a2a95bb64",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method protected parseType(data EconomicMap<String,Object>) : Optional<String> extracted from private parseClass(data EconomicMap<String,Object>) : void in class com.oracle.svm.core.configure.ReflectionConfigurationParser & moved to class com.oracle.svm.core.configure.ConfigurationParser",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ReflectionConfigurationParser.java",
                    "startLine": 77,
                    "endLine": 227,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseClass(data EconomicMap<String,Object>) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ReflectionConfigurationParser.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 9,
                    "endColumn": 46,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ReflectionConfigurationParser.java",
                    "startLine": 106,
                    "endLine": 106,
                    "startColumn": 13,
                    "endColumn": 85,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ReflectionConfigurationParser.java",
                    "startLine": 93,
                    "endLine": 107,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ReflectionConfigurationParser.java",
                    "startLine": 93,
                    "endLine": 105,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 236,
                    "endLine": 246,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "protected parseType(data EconomicMap<String,Object>) : Optional<String>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 237,
                    "endLine": 237,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 238,
                    "endLine": 238,
                    "startColumn": 9,
                    "endColumn": 42,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 239,
                    "endLine": 245,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 239,
                    "endLine": 241,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ReflectionConfigurationParser.java",
                    "startLine": 78,
                    "endLine": 210,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseClass(data EconomicMap<String,Object>) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ReflectionConfigurationParser.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 38,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "parseType(data)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 240,
                    "endLine": 240,
                    "startColumn": 13,
                    "endColumn": 50,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 242,
                    "endLine": 242,
                    "startColumn": 13,
                    "endColumn": 48,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 244,
                    "endLine": 244,
                    "startColumn": 13,
                    "endColumn": 88,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 241,
                    "endLine": 243,
                    "startColumn": 34,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 243,
                    "endLine": 245,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 241,
                    "endLine": 245,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 477
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "19009b612e860fb38e2604e238905c1a2a95bb64",
        "url": "https://github.com/oracle/graal/commit/19009b612e860fb38e2604e238905c1a2a95bb64",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method protected parseType(data EconomicMap<String,Object>) : Optional<String> extracted from private parseSerializationDescriptorObject(data EconomicMap<String,Object>, lambdaCapturingType boolean) : void in class com.oracle.svm.core.configure.SerializationConfigurationParser & moved to class com.oracle.svm.core.configure.ConfigurationParser",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 96,
                    "endLine": 134,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseSerializationDescriptorObject(data EconomicMap<String,Object>, lambdaCapturingType boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 111,
                    "endLine": 111,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 124,
                    "endLine": 124,
                    "startColumn": 13,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 112,
                    "endLine": 125,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 112,
                    "endLine": 123,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 123,
                    "endLine": 125,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 236,
                    "endLine": 246,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "protected parseType(data EconomicMap<String,Object>) : Optional<String>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 237,
                    "endLine": 237,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 242,
                    "endLine": 242,
                    "startColumn": 13,
                    "endColumn": 48,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 239,
                    "endLine": 245,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 239,
                    "endLine": 241,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 241,
                    "endLine": 243,
                    "startColumn": 34,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 95,
                    "endLine": 122,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseSerializationDescriptorObject(data EconomicMap<String,Object>, lambdaCapturingType boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 110,
                    "endLine": 110,
                    "startColumn": 36,
                    "endColumn": 51,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "parseType(data)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 238,
                    "endLine": 238,
                    "startColumn": 9,
                    "endColumn": 42,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 240,
                    "endLine": 240,
                    "startColumn": 13,
                    "endColumn": 50,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 244,
                    "endLine": 244,
                    "startColumn": 13,
                    "endColumn": 88,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 243,
                    "endLine": 245,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/ConfigurationParser.java",
                    "startLine": 241,
                    "endLine": 245,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 478
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "a5af7062936d049c7c13ebeb28ec0be7caea1389",
        "url": "https://github.com/oracle/graal/commit/a5af7062936d049c7c13ebeb28ec0be7caea1389",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getUserName(uid int) : String extracted from public create() : ByteBuffer in class com.oracle.svm.core.posix.jvmstat.PosixPerfMemoryProvider & moved to class com.oracle.svm.core.posix.PosixUtils",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.posix/src/com/oracle/svm/core/posix/jvmstat/PosixPerfMemoryProvider.java",
                    "startLine": 100,
                    "endLine": 151,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public create() : ByteBuffer"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.posix/src/com/oracle/svm/core/posix/jvmstat/PosixPerfMemoryProvider.java",
                    "startLine": 114,
                    "endLine": 114,
                    "startColumn": 9,
                    "endColumn": 71,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.posix/src/com/oracle/svm/core/posix/PosixUtils.java",
                    "startLine": 347,
                    "endLine": 349,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getUserName(uid int) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.posix/src/com/oracle/svm/core/posix/PosixUtils.java",
                    "startLine": 348,
                    "endLine": 348,
                    "startColumn": 9,
                    "endColumn": 44,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.posix/src/com/oracle/svm/core/posix/jvmstat/PosixPerfMemoryProvider.java",
                    "startLine": 95,
                    "endLine": 146,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public create() : ByteBuffer"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.posix/src/com/oracle/svm/core/posix/jvmstat/PosixPerfMemoryProvider.java",
                    "startLine": 109,
                    "endLine": 109,
                    "startColumn": 27,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "PosixUtils.getUserName(Unistd.NoTransitions.geteuid())"
                }
            ],
            "isStatic": true
        },
        "ref_id": 479
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "b339017b56f3c38f65884f1d0caf6422e5fb8cfd",
        "url": "https://github.com/oracle/graal/commit/b339017b56f3c38f65884f1d0caf6422e5fb8cfd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public preserveArgfile() : Subprocess extracted from public testHelper(initialOutputProbes List<Probe>, initialZipProbes List<ZipProbe>, extraVmArgs List<String>, mainClassAndArgs String...) : void in class jdk.graal.compiler.hotspot.test.CompilationWrapperTest & moved to class jdk.graal.compiler.test.SubprocessUtil.Subprocess",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompilationWrapperTest.java",
                    "startLine": 239,
                    "endLine": 330,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testHelper(initialOutputProbes List<Probe>, initialZipProbes List<ZipProbe>, extraVmArgs List<String>, mainClassAndArgs String...) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompilationWrapperTest.java",
                    "startLine": 255,
                    "endLine": 255,
                    "startColumn": 13,
                    "endColumn": 47,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 298,
                    "endLine": 307,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public preserveArgfile() : Subprocess"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 303,
                    "endLine": 303,
                    "startColumn": 17,
                    "endColumn": 61,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompilationWrapperTest.java",
                    "startLine": 239,
                    "endLine": 330,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testHelper(initialOutputProbes List<Probe>, initialZipProbes List<ZipProbe>, extraVmArgs List<String>, mainClassAndArgs String...) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompilationWrapperTest.java",
                    "startLine": 255,
                    "endLine": 255,
                    "startColumn": 41,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "proc.preserveArgfile()"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompilationWrapperTest.java",
                    "startLine": 277,
                    "endLine": 277,
                    "startColumn": 145,
                    "endColumn": 167,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "proc.preserveArgfile()"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/hotspot/test/CompilationWrapperTest.java",
                    "startLine": 320,
                    "endLine": 320,
                    "startColumn": 146,
                    "endColumn": 168,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "proc.preserveArgfile()"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 305,
                    "endLine": 305,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 306,
                    "endLine": 306,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 302,
                    "endLine": 304,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 302,
                    "endLine": 304,
                    "startColumn": 43,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 480
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "ca796650fa81760f3bc0498851334b132b826f9a",
        "url": "https://github.com/oracle/graal/commit/ca796650fa81760f3bc0498851334b132b826f9a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public checkSanityAfterCollection() : void extracted from private postcondition() : void in class com.oracle.svm.core.genscavenge.GCImpl & moved to class com.oracle.svm.core.genscavenge.YoungGeneration",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 440,
                    "endLine": 444,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private postcondition() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 443,
                    "endLine": 443,
                    "startColumn": 9,
                    "endColumn": 104,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/YoungGeneration.java",
                    "startLine": 334,
                    "endLine": 337,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public checkSanityAfterCollection() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/YoungGeneration.java",
                    "startLine": 336,
                    "endLine": 336,
                    "startColumn": 9,
                    "endColumn": 76,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 444,
                    "endLine": 448,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private checkSanityAfterCollection() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 446,
                    "endLine": 446,
                    "startColumn": 9,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "heap.getYoungGeneration().checkSanityAfterCollection()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 447,
                    "endLine": 447,
                    "startColumn": 9,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "heap.getOldGeneration().checkSanityAfterCollection()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 481
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "71d61a904ac5387b4e71439eaa4ec6d70355d301",
        "url": "https://github.com/oracle/graal/commit/71d61a904ac5387b4e71439eaa4ec6d70355d301",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isCompactingOldSpace() : boolean extracted from public isReachable(ptrToObj Pointer) : boolean in class com.oracle.svm.core.genscavenge.RuntimeCodeCacheReachabilityAnalyzer & moved to class com.oracle.svm.core.genscavenge.Space",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/RuntimeCodeCacheReachabilityAnalyzer.java",
                    "startLine": 67,
                    "endLine": 90,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public isReachable(ptrToObj Pointer) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/RuntimeCodeCacheReachabilityAnalyzer.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 13,
                    "endColumn": 118,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/RuntimeCodeCacheReachabilityAnalyzer.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 13,
                    "endColumn": 50,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/Space.java",
                    "startLine": 135,
                    "endLine": 139,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isCompactingOldSpace() : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/Space.java",
                    "startLine": 138,
                    "endLine": 138,
                    "startColumn": 9,
                    "endColumn": 70,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/Space.java",
                    "startLine": 138,
                    "endLine": 138,
                    "startColumn": 16,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/RuntimeCodeCacheReachabilityAnalyzer.java",
                    "startLine": 67,
                    "endLine": 90,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public isReachable(ptrToObj Pointer) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/RuntimeCodeCacheReachabilityAnalyzer.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 13,
                    "endColumn": 41,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "space.isCompactingOldSpace()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 482
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "6ea5eec50102acf7f80826e4675c799b78f94b65",
        "url": "https://github.com/oracle/graal/commit/6ea5eec50102acf7f80826e4675c799b78f94b65",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : DynamicHubSupport extracted from public buildTypeInformation(hUniverse HostedUniverse) : void in class com.oracle.svm.hosted.meta.TypeCheckBuilder & moved to class com.oracle.svm.core.hub.DynamicHubSupport",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 438,
                    "endLine": 517,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public buildTypeInformation(hUniverse HostedUniverse) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 452,
                    "endLine": 452,
                    "startColumn": 9,
                    "endColumn": 97,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/hub/DynamicHubSupport.java",
                    "startLine": 45,
                    "endLine": 47,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : DynamicHubSupport"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/hub/DynamicHubSupport.java",
                    "startLine": 46,
                    "endLine": 46,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 440,
                    "endLine": 523,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public buildTypeInformation(hUniverse HostedUniverse, startingTypeID int) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/TypeCheckBuilder.java",
                    "startLine": 466,
                    "endLine": 466,
                    "startColumn": 9,
                    "endColumn": 38,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "DynamicHubSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 483
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "6ea5eec50102acf7f80826e4675c799b78f94b65",
        "url": "https://github.com/oracle/graal/commit/6ea5eec50102acf7f80826e4675c799b78f94b65",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : DynamicHubSupport extracted from private buildHubs() : void in class com.oracle.svm.hosted.meta.UniverseBuilder & moved to class com.oracle.svm.core.hub.DynamicHubSupport",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 850,
                    "endLine": 969,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private buildHubs() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 859,
                    "endLine": 859,
                    "startColumn": 9,
                    "endColumn": 114,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/hub/DynamicHubSupport.java",
                    "startLine": 45,
                    "endLine": 47,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : DynamicHubSupport"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/hub/DynamicHubSupport.java",
                    "startLine": 46,
                    "endLine": 46,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 850,
                    "endLine": 969,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private buildHubs() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/UniverseBuilder.java",
                    "startLine": 859,
                    "endLine": 859,
                    "startColumn": 9,
                    "endColumn": 38,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "DynamicHubSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 484
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "b9196ed776ce9e0da4a3d5d0865c2460698f0993",
        "url": "https://github.com/oracle/graal/commit/b9196ed776ce9e0da4a3d5d0865c2460698f0993",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public nowAsFileName() : String extracted from private createArgfile() : Path in class jdk.graal.compiler.test.SubprocessUtil & moved to class jdk.graal.compiler.test.GraalTest",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 529,
                    "endLine": 549,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private createArgfile() : Path"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 541,
                    "endLine": 541,
                    "startColumn": 17,
                    "endColumn": 78,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/GraalTest.java",
                    "startLine": 619,
                    "endLine": 625,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public nowAsFileName() : String"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/GraalTest.java",
                    "startLine": 624,
                    "endLine": 624,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 533,
                    "endLine": 551,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private createArgfile() : Path"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/test/SubprocessUtil.java",
                    "startLine": 544,
                    "endLine": 544,
                    "startColumn": 56,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "GraalTest.nowAsFileName()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 485
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "62cf889a84c204b3c995a38beb48d35443a5f0a8",
        "url": "https://github.com/oracle/graal/commit/62cf889a84c204b3c995a38beb48d35443a5f0a8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package languageHomes() : Map<String,Path> extracted from package createForEngine(engine PolyglotEngineImpl, resourcesFileSystem FileSystem, delegateFileSystem FileSystem) : ResourcesFileSystem in class com.oracle.truffle.polyglot.FileSystems.ResourcesFileSystem & moved to class com.oracle.truffle.polyglot.PolyglotEngineImpl",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1231,
                    "endLine": 1242,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package createForEngine(engine PolyglotEngineImpl, resourcesFileSystem FileSystem, delegateFileSystem FileSystem) : ResourcesFileSystem"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1232,
                    "endLine": 1232,
                    "startColumn": 13,
                    "endColumn": 55,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1235,
                    "endLine": 1235,
                    "startColumn": 21,
                    "endColumn": 82,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1236,
                    "endLine": 1238,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1234,
                    "endLine": 1239,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1233,
                    "endLine": 1240,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1236,
                    "endLine": 1238,
                    "startColumn": 47,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1234,
                    "endLine": 1239,
                    "startColumn": 39,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1233,
                    "endLine": 1240,
                    "startColumn": 64,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2340,
                    "endLine": 2352,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package languageHomes() : Map<String,Path>"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2341,
                    "endLine": 2341,
                    "startColumn": 9,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2345,
                    "endLine": 2345,
                    "startColumn": 17,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2346,
                    "endLine": 2348,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2343,
                    "endLine": 2349,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2342,
                    "endLine": 2350,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2346,
                    "endLine": 2348,
                    "startColumn": 43,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2343,
                    "endLine": 2349,
                    "startColumn": 35,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2342,
                    "endLine": 2350,
                    "startColumn": 53,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1231,
                    "endLine": 1233,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package createForEngine(engine PolyglotEngineImpl, resourcesFileSystem FileSystem, delegateFileSystem FileSystem) : ResourcesFileSystem"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/FileSystems.java",
                    "startLine": 1232,
                    "endLine": 1232,
                    "startColumn": 127,
                    "endColumn": 149,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "engine.languageHomes()"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2344,
                    "endLine": 2344,
                    "startColumn": 17,
                    "endColumn": 54,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2347,
                    "endLine": 2347,
                    "startColumn": 21,
                    "endColumn": 77,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2351,
                    "endLine": 2351,
                    "startColumn": 9,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 486
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "62cf889a84c204b3c995a38beb48d35443a5f0a8",
        "url": "https://github.com/oracle/graal/commit/62cf889a84c204b3c995a38beb48d35443a5f0a8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package languageHomes() : Map<String,Path> extracted from package preinitialize(engine PolyglotEngineImpl, preinitConfig PreinitConfig, sharableLayer PolyglotSharingLayer, languagesToPreinitialize Set<PolyglotLanguage>, emitWarning boolean) : PolyglotContextImpl in class com.oracle.truffle.polyglot.PolyglotContextImpl & moved to class com.oracle.truffle.polyglot.PolyglotEngineImpl",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3551,
                    "endLine": 3628,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package preinitialize(engine PolyglotEngineImpl, preinitConfig PreinitConfig, sharableLayer PolyglotSharingLayer, languagesToPreinitialize Set<PolyglotLanguage>, emitWarning boolean) : PolyglotContextImpl"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3613,
                    "endLine": 3613,
                    "startColumn": 13,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3616,
                    "endLine": 3616,
                    "startColumn": 21,
                    "endColumn": 58,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3617,
                    "endLine": 3617,
                    "startColumn": 21,
                    "endColumn": 67,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3619,
                    "endLine": 3619,
                    "startColumn": 25,
                    "endColumn": 81,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3618,
                    "endLine": 3620,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3615,
                    "endLine": 3621,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3614,
                    "endLine": 3622,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3618,
                    "endLine": 3620,
                    "startColumn": 47,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3615,
                    "endLine": 3621,
                    "startColumn": 39,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3614,
                    "endLine": 3622,
                    "startColumn": 64,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2340,
                    "endLine": 2352,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package languageHomes() : Map<String,Path>"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2341,
                    "endLine": 2341,
                    "startColumn": 9,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2344,
                    "endLine": 2344,
                    "startColumn": 17,
                    "endColumn": 54,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2345,
                    "endLine": 2345,
                    "startColumn": 17,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2347,
                    "endLine": 2347,
                    "startColumn": 21,
                    "endColumn": 77,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2346,
                    "endLine": 2348,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2343,
                    "endLine": 2349,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2342,
                    "endLine": 2350,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2346,
                    "endLine": 2348,
                    "startColumn": 43,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2343,
                    "endLine": 2349,
                    "startColumn": 35,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2342,
                    "endLine": 2350,
                    "startColumn": 53,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3551,
                    "endLine": 3618,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package preinitialize(engine PolyglotEngineImpl, preinitConfig PreinitConfig, sharableLayer PolyglotSharingLayer, languagesToPreinitialize Set<PolyglotLanguage>, emitWarning boolean) : PolyglotContextImpl"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotContextImpl.java",
                    "startLine": 3613,
                    "endLine": 3613,
                    "startColumn": 47,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "engine.languageHomes()"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.polyglot/src/com/oracle/truffle/polyglot/PolyglotEngineImpl.java",
                    "startLine": 2351,
                    "endLine": 2351,
                    "startColumn": 9,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 487
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "4943dd979eeaba50486f93ba4ff63ea9eb85160e",
        "url": "https://github.com/oracle/graal/commit/4943dd979eeaba50486f93ba4ff63ea9eb85160e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public fireNodeEvent(e NodeEvent, node Node) : void extracted from private maybeNotifyInputChanged(node Node) : void in class jdk.graal.compiler.graph.Node & moved to class jdk.graal.compiler.graph.Graph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1197,
                    "endLine": 1206,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private maybeNotifyInputChanged(node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1200,
                    "endLine": 1200,
                    "startColumn": 13,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1202,
                    "endLine": 1202,
                    "startColumn": 17,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1201,
                    "endLine": 1203,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1201,
                    "endLine": 1203,
                    "startColumn": 35,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 700,
                    "endLine": 708,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public fireNodeEvent(e NodeEvent, node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 702,
                    "endLine": 702,
                    "startColumn": 13,
                    "endColumn": 53,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 704,
                    "endLine": 704,
                    "startColumn": 17,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 701,
                    "endLine": 707,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 701,
                    "endLine": 707,
                    "startColumn": 40,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1197,
                    "endLine": 1203,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private maybeNotifyInputChanged(node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1200,
                    "endLine": 1200,
                    "startColumn": 13,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.fireNodeEvent(Graph.NodeEvent.INPUT_CHANGED,node)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 705,
                    "endLine": 705,
                    "startColumn": 17,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 703,
                    "endLine": 706,
                    "startColumn": 16,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 703,
                    "endLine": 706,
                    "startColumn": 13,
                    "endColumn": 33,
                    "codeElementType": "DO_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 488
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "4943dd979eeaba50486f93ba4ff63ea9eb85160e",
        "url": "https://github.com/oracle/graal/commit/4943dd979eeaba50486f93ba4ff63ea9eb85160e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public fireNodeEvent(e NodeEvent, node Node) : void extracted from public maybeNotifyZeroUsages(node Node) : void in class jdk.graal.compiler.graph.Node & moved to class jdk.graal.compiler.graph.Graph",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1208,
                    "endLine": 1221,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public maybeNotifyZeroUsages(node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1216,
                    "endLine": 1216,
                    "startColumn": 13,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1218,
                    "endLine": 1218,
                    "startColumn": 17,
                    "endColumn": 67,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1217,
                    "endLine": 1219,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1217,
                    "endLine": 1219,
                    "startColumn": 35,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 700,
                    "endLine": 708,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public fireNodeEvent(e NodeEvent, node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 702,
                    "endLine": 702,
                    "startColumn": 13,
                    "endColumn": 53,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 704,
                    "endLine": 704,
                    "startColumn": 17,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 701,
                    "endLine": 707,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 701,
                    "endLine": 707,
                    "startColumn": 40,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1205,
                    "endLine": 1215,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public maybeNotifyZeroUsages(node Node) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Node.java",
                    "startLine": 1213,
                    "endLine": 1213,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "graph.fireNodeEvent(Graph.NodeEvent.ZERO_USAGES,node)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 705,
                    "endLine": 705,
                    "startColumn": 17,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 703,
                    "endLine": 706,
                    "startColumn": 16,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/graph/Graph.java",
                    "startLine": 703,
                    "endLine": 706,
                    "startColumn": 13,
                    "endColumn": 33,
                    "codeElementType": "DO_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 489
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d450dc2e5817d2bbeb9c0e9cecff779910255a67",
        "url": "https://github.com/oracle/graal/commit/d450dc2e5817d2bbeb9c0e9cecff779910255a67",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public notWeakerThan(connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : boolean extracted from package compute(graph StructuredGraph, backendBlocks boolean, connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : ControlFlowGraph in class jdk.graal.compiler.nodes.cfg.ControlFlowGraph & moved to class jdk.graal.compiler.nodes.cfg.ControlFlowGraph.BuildConfiguration",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 133,
                    "endLine": 196,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package compute(graph StructuredGraph, backendBlocks boolean, connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : ControlFlowGraph"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 182,
                    "endLine": 182,
                    "startColumn": 17,
                    "endColumn": 93,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 186,
                    "endLine": 186,
                    "startColumn": 17,
                    "endColumn": 80,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 179,
                    "endLine": 179,
                    "startColumn": 17,
                    "endColumn": 83,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 175,
                    "endLine": 175,
                    "startColumn": 17,
                    "endColumn": 70,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 232,
                    "endLine": 241,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public notWeakerThan(connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 239,
                    "endLine": 240,
                    "startColumn": 13,
                    "endColumn": 134,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 133,
                    "endLine": 193,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package compute(graph StructuredGraph, modifiableBlocks boolean, connectBlocks boolean, computeFrequency boolean, computeLoops boolean, computeDominators boolean, computePostdominators boolean) : ControlFlowGraph"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/cfg/ControlFlowGraph.java",
                    "startLine": 149,
                    "endLine": 149,
                    "startColumn": 21,
                    "endColumn": 139,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "cfg.buildConfig.notWeakerThan(connectBlocks,computeFrequency,computeLoops,computeDominators,computePostdominators)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 490
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "06e830443f638e80588387e122a92351b1e11675",
        "url": "https://github.com/oracle/graal/commit/06e830443f638e80588387e122a92351b1e11675",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package endRecording() : void extracted from public endRecording() : void in class com.oracle.svm.core.jfr.SubstrateJVM & moved to class com.oracle.svm.core.jfr.JfrRecorderThread",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 345,
                    "endLine": 355,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public endRecording() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 354,
                    "endLine": 354,
                    "startColumn": 9,
                    "endColumn": 24,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 353,
                    "endLine": 353,
                    "startColumn": 9,
                    "endColumn": 72,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 113,
                    "endLine": 121,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package endRecording() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 117,
                    "endLine": 117,
                    "startColumn": 13,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 116,
                    "endLine": 116,
                    "startColumn": 13,
                    "endColumn": 102,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 345,
                    "endLine": 354,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public endRecording() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/SubstrateJVM.java",
                    "startLine": 353,
                    "endLine": 353,
                    "startColumn": 9,
                    "endColumn": 38,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "recorderThread.endRecording()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 114,
                    "endLine": 114,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 119,
                    "endLine": 119,
                    "startColumn": 13,
                    "endColumn": 27,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 115,
                    "endLine": 120,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jfr/JfrRecorderThread.java",
                    "startLine": 118,
                    "endLine": 120,
                    "startColumn": 19,
                    "endColumn": 10,
                    "codeElementType": "FINALLY_BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 491
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "7b6b46c950ba3685f21d4cf1e97adfda98642643",
        "url": "https://github.com/oracle/graal/commit/7b6b46c950ba3685f21d4cf1e97adfda98642643",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public onCompilationFailed(target OptimizedCallTarget, reason String, bailout boolean, permanentBailout boolean, tier int, serializedException Supplier<String>) : void extracted from private notifyCompilationFailure(callTarget OptimizedCallTarget, t Throwable, compilationStarted boolean, tier int) : void in class com.oracle.truffle.runtime.OptimizedTruffleRuntime & moved to class com.oracle.truffle.runtime.OptimizedTruffleRuntimeListener",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntime.java",
                    "startLine": 916,
                    "endLine": 927,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private notifyCompilationFailure(callTarget OptimizedCallTarget, t Throwable, compilationStarted boolean, tier int) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntime.java",
                    "startLine": 919,
                    "endLine": 919,
                    "startColumn": 17,
                    "endColumn": 93,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntimeListener.java",
                    "startLine": 256,
                    "endLine": 277,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public onCompilationFailed(target OptimizedCallTarget, reason String, bailout boolean, permanentBailout boolean, tier int, serializedException Supplier<String>) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntimeListener.java",
                    "startLine": 276,
                    "endLine": 276,
                    "startColumn": 9,
                    "endColumn": 78,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntime.java",
                    "startLine": 916,
                    "endLine": 927,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private notifyCompilationFailure(callTarget OptimizedCallTarget, t Throwable, compilationStarted boolean, tier int) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntime.java",
                    "startLine": 919,
                    "endLine": 919,
                    "startColumn": 17,
                    "endColumn": 139,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "listeners.onCompilationFailed(callTarget,t.toString(),false,false,tier,() -> TruffleCompilable.serializeException(t))"
                }
            ],
            "isStatic": false
        },
        "ref_id": 492
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "7b6b46c950ba3685f21d4cf1e97adfda98642643",
        "url": "https://github.com/oracle/graal/commit/7b6b46c950ba3685f21d4cf1e97adfda98642643",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public onCompilationFailed(target OptimizedCallTarget, reason String, bailout boolean, permanentBailout boolean, tier int, serializedException Supplier<String>) : void extracted from public onCompilationFailed(target OptimizedCallTarget, reason String, bailout boolean, permanent boolean, tier int) : void in class com.oracle.truffle.runtime.OptimizedTruffleRuntimeListenerDispatcher & moved to class com.oracle.truffle.runtime.OptimizedTruffleRuntimeListener",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntimeListenerDispatcher.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public onCompilationFailed(target OptimizedCallTarget, reason String, bailout boolean, permanent boolean, tier int) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntimeListenerDispatcher.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 32,
                    "endColumn": 95,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntimeListener.java",
                    "startLine": 256,
                    "endLine": 277,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public onCompilationFailed(target OptimizedCallTarget, reason String, bailout boolean, permanentBailout boolean, tier int, serializedException Supplier<String>) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntimeListener.java",
                    "startLine": 276,
                    "endLine": 276,
                    "startColumn": 9,
                    "endColumn": 78,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntimeListenerDispatcher.java",
                    "startLine": 87,
                    "endLine": 90,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public onCompilationFailed(target OptimizedCallTarget, reason String, bailout boolean, permanent boolean, tier int, serializedException Supplier<String>) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.runtime/src/com/oracle/truffle/runtime/OptimizedTruffleRuntimeListenerDispatcher.java",
                    "startLine": 89,
                    "endLine": 89,
                    "startColumn": 32,
                    "endColumn": 116,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "l.onCompilationFailed(target,reason,bailout,permanent,tier,serializedException)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 493
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "0ab51074c4a4a7f76d325f82570a001cd4c3e7ed",
        "url": "https://github.com/oracle/graal/commit/0ab51074c4a4a7f76d325f82570a001cd4c3e7ed",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public multiplyExact(bits int, a long, b long) : long extracted from private constantStrideSafe() : long in class jdk.graal.compiler.nodes.loop.DerivedOffsetInductionVariable & moved to class jdk.graal.compiler.phases.common.util.LoopUtility",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/loop/DerivedOffsetInductionVariable.java",
                    "startLine": 103,
                    "endLine": 108,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private constantStrideSafe() : long"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/loop/DerivedOffsetInductionVariable.java",
                    "startLine": 105,
                    "endLine": 105,
                    "startColumn": 13,
                    "endColumn": 66,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 90,
                    "endLine": 101,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public multiplyExact(bits int, a long, b long) : long"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 13,
                    "endColumn": 45,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/loop/DerivedOffsetInductionVariable.java",
                    "startLine": 105,
                    "endLine": 110,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private constantStrideSafe() : long"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/loop/DerivedOffsetInductionVariable.java",
                    "startLine": 107,
                    "endLine": 107,
                    "startColumn": 20,
                    "endColumn": 126,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "LoopUtility.multiplyExact(IntegerStamp.getBits(offset.stamp(NodeView.DEFAULT)),base.constantStride(),-1)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 13,
                    "endColumn": 30,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 93,
                    "endLine": 93,
                    "startColumn": 13,
                    "endColumn": 30,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 94,
                    "endLine": 94,
                    "startColumn": 13,
                    "endColumn": 117,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 95,
                    "endLine": 95,
                    "startColumn": 13,
                    "endColumn": 47,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 99,
                    "endLine": 99,
                    "startColumn": 13,
                    "endColumn": 113,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 91,
                    "endLine": 96,
                    "startColumn": 25,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 98,
                    "endLine": 100,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 96,
                    "endLine": 100,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 91,
                    "endLine": 100,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/phases/common/util/LoopUtility.java",
                    "startLine": 96,
                    "endLine": 98,
                    "startColumn": 32,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 494
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "dd975be5c61014a1febde1b8d3f67a2e50e84b63",
        "url": "https://github.com/oracle/graal/commit/dd975be5c61014a1febde1b8d3f67a2e50e84b63",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public toJson(builder JsonBuilder.ObjectBuilder) : void extracted from public afterCompilation(access AfterCompilationAccess) : void in class com.oracle.svm.hosted.dashboard.DashboardDumpFeature & moved to class com.oracle.svm.hosted.dashboard.CodeBreakdown",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 152,
                    "endLine": 183,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public afterCompilation(access AfterCompilationAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 174,
                    "endLine": 174,
                    "startColumn": 41,
                    "endColumn": 54,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 63,
                    "endLine": 74,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public toJson(builder JsonBuilder.ObjectBuilder) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 9,
                    "endColumn": 17,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 163,
                    "endLine": 195,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public afterCompilation(access AfterCompilationAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 174,
                    "endLine": 174,
                    "startColumn": 41,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "dump.toJson(builder)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 68,
                    "endLine": 70,
                    "startColumn": 21,
                    "endColumn": 63,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 67,
                    "endLine": 71,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 66,
                    "endLine": 72,
                    "startColumn": 70,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 66,
                    "endLine": 72,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/CodeBreakdown.java",
                    "startLine": 65,
                    "endLine": 73,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 495
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "dd975be5c61014a1febde1b8d3f67a2e50e84b63",
        "url": "https://github.com/oracle/graal/commit/dd975be5c61014a1febde1b8d3f67a2e50e84b63",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public toJson(builder JsonBuilder.ObjectBuilder) : void extracted from public afterHeapLayout(access AfterHeapLayoutAccess) : void in class com.oracle.svm.hosted.dashboard.DashboardDumpFeature & moved to class com.oracle.svm.hosted.dashboard.HeapBreakdown",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 185,
                    "endLine": 216,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public afterHeapLayout(access AfterHeapLayoutAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 207,
                    "endLine": 207,
                    "startColumn": 41,
                    "endColumn": 54,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/HeapBreakdown.java",
                    "startLine": 79,
                    "endLine": 92,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public toJson(builder JsonBuilder.ObjectBuilder) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/HeapBreakdown.java",
                    "startLine": 80,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 17,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 197,
                    "endLine": 229,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public afterHeapLayout(access AfterHeapLayoutAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/DashboardDumpFeature.java",
                    "startLine": 208,
                    "endLine": 208,
                    "startColumn": 41,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "dump.toJson(builder)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/HeapBreakdown.java",
                    "startLine": 83,
                    "endLine": 83,
                    "startColumn": 17,
                    "endColumn": 46,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/HeapBreakdown.java",
                    "startLine": 84,
                    "endLine": 84,
                    "startColumn": 17,
                    "endColumn": 53,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/HeapBreakdown.java",
                    "startLine": 86,
                    "endLine": 88,
                    "startColumn": 21,
                    "endColumn": 59,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/HeapBreakdown.java",
                    "startLine": 85,
                    "endLine": 89,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/HeapBreakdown.java",
                    "startLine": 82,
                    "endLine": 90,
                    "startColumn": 74,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/HeapBreakdown.java",
                    "startLine": 82,
                    "endLine": 90,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/dashboard/HeapBreakdown.java",
                    "startLine": 81,
                    "endLine": 91,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 496
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "e2b81f790c3f1c2e2d2b137ea1ff1824a6f696e2",
        "url": "https://github.com/oracle/graal/commit/e2b81f790c3f1c2e2d2b137ea1ff1824a6f696e2",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public registerAsUnsafeAllocated(reason Object) : boolean extracted from private registerClass(condition ConfigurationCondition, clazz Class<?>, unsafeInstantiated boolean, allowForName boolean) : void in class com.oracle.svm.hosted.reflect.ReflectionDataBuilder & moved to class com.oracle.graal.pointsto.meta.AnalysisType",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/ReflectionDataBuilder.java",
                    "startLine": 226,
                    "endLine": 258,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private registerClass(condition ConfigurationCondition, clazz Class<?>, unsafeInstantiated boolean, allowForName boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/ReflectionDataBuilder.java",
                    "startLine": 234,
                    "endLine": 234,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 531,
                    "endLine": 534,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public registerAsUnsafeAllocated(reason Object) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 532,
                    "endLine": 532,
                    "startColumn": 9,
                    "endColumn": 40,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/ReflectionDataBuilder.java",
                    "startLine": 226,
                    "endLine": 258,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private registerClass(condition ConfigurationCondition, clazz Class<?>, unsafeInstantiated boolean, allowForName boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/ReflectionDataBuilder.java",
                    "startLine": 234,
                    "endLine": 234,
                    "startColumn": 13,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "type.registerAsUnsafeAllocated(\"Is registered for reflection.\")"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisType.java",
                    "startLine": 533,
                    "endLine": 533,
                    "startColumn": 9,
                    "endColumn": 78,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 497
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "7a0ba35fa0352a0ab015fd046037c53358940eae",
        "url": "https://github.com/oracle/graal/commit/7a0ba35fa0352a0ab015fd046037c53358940eae",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public usesMonitors() : boolean extracted from public usesMonitors() : boolean in class com.oracle.truffle.espresso.impl.Method.MethodVersion & moved to class com.oracle.truffle.espresso.classfile.attributes.CodeAttribute",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/impl/Method.java",
                    "startLine": 1607,
                    "endLine": 1629,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public usesMonitors() : boolean"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/impl/Method.java",
                    "startLine": 1609,
                    "endLine": 1609,
                    "startColumn": 17,
                    "endColumn": 42,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/attributes/CodeAttribute.java",
                    "startLine": 119,
                    "endLine": 121,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public usesMonitors() : boolean"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/attributes/CodeAttribute.java",
                    "startLine": 120,
                    "endLine": 120,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/impl/Method.java",
                    "startLine": 1602,
                    "endLine": 1605,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public usesMonitors() : boolean"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/impl/Method.java",
                    "startLine": 1604,
                    "endLine": 1604,
                    "startColumn": 20,
                    "endColumn": 48,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "codeAttribute.usesMonitors()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 498
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "ecd4a8ae1fa22f3ecaf273e5c27a7f9402d32dee",
        "url": "https://github.com/oracle/graal/commit/ecd4a8ae1fa22f3ecaf273e5c27a7f9402d32dee",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private suspend() : void extracted from public suspend() : void in class com.oracle.truffle.espresso.continuations.Continuation.SuspendCapability & moved to class com.oracle.truffle.espresso.continuations.Continuation",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso.continuations/src/com/oracle/truffle/espresso/continuations/Continuation.java",
                    "startLine": 338,
                    "endLine": 368,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public suspend() : void"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso.continuations/src/com/oracle/truffle/espresso/continuations/Continuation.java",
                    "startLine": 354,
                    "endLine": 354,
                    "startColumn": 17,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso.continuations/src/com/oracle/truffle/espresso/continuations/Continuation.java",
                    "startLine": 787,
                    "endLine": 789,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private suspend() : void"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso.continuations/src/com/oracle/truffle/espresso/continuations/Continuation.java",
                    "startLine": 788,
                    "endLine": 788,
                    "startColumn": 9,
                    "endColumn": 20,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso.continuations/src/com/oracle/truffle/espresso/continuations/Continuation.java",
                    "startLine": 330,
                    "endLine": 360,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public suspend() : void"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso.continuations/src/com/oracle/truffle/espresso/continuations/Continuation.java",
                    "startLine": 346,
                    "endLine": 346,
                    "startColumn": 17,
                    "endColumn": 44,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "Continuation.this.suspend()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 499
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "59063acffc31c2ba274cfe09856964c0a07a2cd0",
        "url": "https://github.com/oracle/graal/commit/59063acffc31c2ba274cfe09856964c0a07a2cd0",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public pop(k JavaKind) : JavaKind extracted from private popSignature(sig Symbol<Type>[], isStatic boolean, frame Builder) : void in class com.oracle.truffle.espresso.analysis.frame.FrameAnalysis & moved to class com.oracle.truffle.espresso.vm.continuation.EspressoFrameDescriptor.Builder",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 287,
                    "endLine": 298,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private popSignature(sig Symbol<Type>[], isStatic boolean, frame Builder) : void"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 292,
                    "endLine": 292,
                    "startColumn": 17,
                    "endColumn": 29,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 290,
                    "endLine": 290,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 291,
                    "endLine": 293,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 291,
                    "endLine": 293,
                    "startColumn": 36,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 306,
                    "endLine": 314,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public pop(k JavaKind) : JavaKind"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 310,
                    "endLine": 310,
                    "startColumn": 17,
                    "endColumn": 40,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 307,
                    "endLine": 307,
                    "startColumn": 13,
                    "endColumn": 34,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 309,
                    "endLine": 312,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 309,
                    "endLine": 312,
                    "startColumn": 36,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 287,
                    "endLine": 295,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private popSignature(sig Symbol<Type>[], isStatic boolean, frame Builder) : void"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/analysis/frame/FrameAnalysis.java",
                    "startLine": 290,
                    "endLine": 290,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "frame.pop(k)"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 308,
                    "endLine": 308,
                    "startColumn": 13,
                    "endColumn": 29,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 311,
                    "endLine": 311,
                    "startColumn": 17,
                    "endColumn": 50,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/vm/continuation/EspressoFrameDescriptor.java",
                    "startLine": 313,
                    "endLine": 313,
                    "startColumn": 13,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 500
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "07234ed89cf83e086a35dd36dfe6ab8b32929c6e",
        "url": "https://github.com/oracle/graal/commit/07234ed89cf83e086a35dd36dfe6ab8b32929c6e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public sizeOfJavaStackWalk() : int extracted from private defaultUnwindException(startSP Pointer, fromMethodWithCalleeSavedRegisters boolean) : void in class com.oracle.svm.core.snippets.ExceptionUnwind & moved to class com.oracle.svm.core.stack.JavaStackWalker",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/snippets/ExceptionUnwind.java",
                    "startLine": 180,
                    "endLine": 242,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private defaultUnwindException(startSP Pointer, fromMethodWithCalleeSavedRegisters boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/snippets/ExceptionUnwind.java",
                    "startLine": 221,
                    "endLine": 221,
                    "startColumn": 17,
                    "endColumn": 70,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 116,
                    "endLine": 119,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public sizeOfJavaStackWalk() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 118,
                    "endLine": 118,
                    "startColumn": 9,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/snippets/ExceptionUnwind.java",
                    "startLine": 180,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private defaultUnwindException(startSP Pointer, fromMethodWithCalleeSavedRegisters boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/snippets/ExceptionUnwind.java",
                    "startLine": 190,
                    "endLine": 190,
                    "startColumn": 45,
                    "endColumn": 82,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "JavaStackWalker.sizeOfJavaStackWalk()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 501
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "07234ed89cf83e086a35dd36dfe6ab8b32929c6e",
        "url": "https://github.com/oracle/graal/commit/07234ed89cf83e086a35dd36dfe6ab8b32929c6e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public initialize(walk JavaStackWalk, thread IsolateThread, startSP Pointer) : void extracted from package walkStackRoots(visitor ObjectReferenceVisitor, currentThreadSp Pointer, currentThreadIp CodePointer, visitRuntimeCodeInfo boolean) : void in class com.oracle.svm.core.genscavenge.GCImpl & moved to class com.oracle.svm.core.stack.JavaStackWalker",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 813,
                    "endLine": 838,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package walkStackRoots(visitor ObjectReferenceVisitor, currentThreadSp Pointer, currentThreadIp CodePointer, visitRuntimeCodeInfo boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 834,
                    "endLine": 834,
                    "startColumn": 17,
                    "endColumn": 57,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 151,
                    "endLine": 154,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public initialize(walk JavaStackWalk, thread IsolateThread, startSP Pointer) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 9,
                    "endColumn": 136,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 809,
                    "endLine": 831,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package walkStackRoots(visitor ObjectReferenceVisitor, currentThreadSp Pointer, visitRuntimeCodeInfo boolean) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GCImpl.java",
                    "startLine": 817,
                    "endLine": 817,
                    "startColumn": 9,
                    "endColumn": 80,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "JavaStackWalker.initialize(walk,CurrentIsolate.getCurrentThread(),sp)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 502
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "07234ed89cf83e086a35dd36dfe6ab8b32929c6e",
        "url": "https://github.com/oracle/graal/commit/07234ed89cf83e086a35dd36dfe6ab8b32929c6e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public initialize(walk JavaStackWalk, continuation StoredContinuation) : void extracted from private advancePhysically0() : boolean in class com.oracle.svm.core.jdk.Target_java_lang_StackWalker.ContinuationSpliterator & moved to class com.oracle.svm.core.stack.JavaStackWalker",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_lang_StackWalker.java",
                    "startLine": 311,
                    "endLine": 354,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private advancePhysically0() : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_lang_StackWalker.java",
                    "startLine": 326,
                    "endLine": 326,
                    "startColumn": 13,
                    "endColumn": 107,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_lang_StackWalker.java",
                    "startLine": 314,
                    "endLine": 314,
                    "startColumn": 17,
                    "endColumn": 92,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_lang_StackWalker.java",
                    "startLine": 334,
                    "endLine": 334,
                    "startColumn": 21,
                    "endColumn": 96,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_lang_StackWalker.java",
                    "startLine": 313,
                    "endLine": 319,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_lang_StackWalker.java",
                    "startLine": 313,
                    "endLine": 317,
                    "startColumn": 56,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_lang_StackWalker.java",
                    "startLine": 333,
                    "endLine": 337,
                    "startColumn": 62,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 179,
                    "endLine": 192,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public initialize(walk JavaStackWalk, continuation StoredContinuation) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 183,
                    "endLine": 183,
                    "startColumn": 9,
                    "endColumn": 76,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 188,
                    "endLine": 188,
                    "startColumn": 13,
                    "endColumn": 85,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 189,
                    "endLine": 189,
                    "startColumn": 13,
                    "endColumn": 81,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 184,
                    "endLine": 191,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 184,
                    "endLine": 187,
                    "startColumn": 31,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 187,
                    "endLine": 191,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_lang_StackWalker.java",
                    "startLine": 287,
                    "endLine": 324,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private advancePhysically0() : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_lang_StackWalker.java",
                    "startLine": 299,
                    "endLine": 299,
                    "startColumn": 17,
                    "endColumn": 57,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "JavaStackWalker.initialize(walk,stored)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 181,
                    "endLine": 181,
                    "startColumn": 9,
                    "endColumn": 37,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 186,
                    "endLine": 186,
                    "startColumn": 13,
                    "endColumn": 37,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/stack/JavaStackWalker.java",
                    "startLine": 190,
                    "endLine": 190,
                    "startColumn": 13,
                    "endColumn": 81,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 503
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "fecc133925c6edc4289991abd70d6ea26df04747",
        "url": "https://github.com/oracle/graal/commit/fecc133925c6edc4289991abd70d6ea26df04747",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getTotalBufferSize(dataSize UnsignedWord) : UnsignedWord extracted from private tryAllocateBuffer0() : SamplerBuffer in class com.oracle.svm.core.sampler.SamplerBufferPool & moved to class com.oracle.svm.core.sampler.SamplerBufferAccess",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/sampler/SamplerBufferPool.java",
                    "startLine": 159,
                    "endLine": 172,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private tryAllocateBuffer0() : SamplerBuffer"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/sampler/SamplerBufferPool.java",
                    "startLine": 161,
                    "endLine": 161,
                    "startColumn": 9,
                    "endColumn": 71,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/sampler/SamplerBufferAccess.java",
                    "startLine": 54,
                    "endLine": 57,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getTotalBufferSize(dataSize UnsignedWord) : UnsignedWord"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/sampler/SamplerBufferAccess.java",
                    "startLine": 56,
                    "endLine": 56,
                    "startColumn": 9,
                    "endColumn": 66,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/sampler/SamplerBufferPool.java",
                    "startLine": 159,
                    "endLine": 170,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private tryAllocateBuffer0() : SamplerBuffer"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/sampler/SamplerBufferPool.java",
                    "startLine": 162,
                    "endLine": 162,
                    "startColumn": 60,
                    "endColumn": 108,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SamplerBufferAccess.getTotalBufferSize(dataSize)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 504
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "987c9832f8e3c8b5f780f4b10700ec2715f2841c",
        "url": "https://github.com/oracle/graal/commit/987c9832f8e3c8b5f780f4b10700ec2715f2841c",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public create(strictMetadata boolean, conditionResolver ConfigurationConditionResolver<C>, serializationSupport RuntimeSerializationSupport<C>, strictConfiguration boolean) : SerializationConfigurationParser<C> extracted from public duringSetup(a DuringSetupAccess) : void in class com.oracle.svm.hosted.reflect.serialize.SerializationFeature & moved to class com.oracle.svm.core.configure.SerializationConfigurationParser",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/serialize/SerializationFeature.java",
                    "startLine": 122,
                    "endLine": 144,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public duringSetup(a DuringSetupAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/serialize/SerializationFeature.java",
                    "startLine": 138,
                    "endLine": 139,
                    "startColumn": 9,
                    "endColumn": 84,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/serialize/SerializationFeature.java",
                    "startLine": 131,
                    "endLine": 132,
                    "startColumn": 9,
                    "endColumn": 84,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 43,
                    "endLine": 50,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public create(strictMetadata boolean, conditionResolver ConfigurationConditionResolver<C>, serializationSupport RuntimeSerializationSupport<C>, strictConfiguration boolean) : SerializationConfigurationParser<C>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 46,
                    "endLine": 46,
                    "startColumn": 13,
                    "endColumn": 116,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 48,
                    "endLine": 48,
                    "startColumn": 13,
                    "endColumn": 127,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/serialize/SerializationFeature.java",
                    "startLine": 122,
                    "endLine": 150,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public duringSetup(a DuringSetupAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/serialize/SerializationFeature.java",
                    "startLine": 134,
                    "endLine": 135,
                    "startColumn": 75,
                    "endColumn": 45,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SerializationConfigurationParser.create(true,conditionResolver,serializationBuilder,strictConfiguration)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/serialize/SerializationFeature.java",
                    "startLine": 138,
                    "endLine": 139,
                    "startColumn": 88,
                    "endColumn": 45,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SerializationConfigurationParser.create(false,conditionResolver,serializationDenyRegistry,strictConfiguration)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/reflect/serialize/SerializationFeature.java",
                    "startLine": 144,
                    "endLine": 145,
                    "startColumn": 81,
                    "endColumn": 45,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SerializationConfigurationParser.create(false,conditionResolver,serializationBuilder,strictConfiguration)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 45,
                    "endLine": 47,
                    "startColumn": 29,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 47,
                    "endLine": 49,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/configure/SerializationConfigurationParser.java",
                    "startLine": 45,
                    "endLine": 49,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 505
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "9b546961950fba0e9908a2144f1c610f054cff56",
        "url": "https://github.com/oracle/graal/commit/9b546961950fba0e9908a2144f1c610f054cff56",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : SerializationSupport extracted from private getGeneratedSerializationName(type AnalysisType) : String in class com.oracle.svm.hosted.heap.SVMImageLayerSnapshotUtil & moved to class com.oracle.svm.core.reflect.serialize.SerializationSupport",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/heap/SVMImageLayerSnapshotUtil.java",
                    "startLine": 122,
                    "endLine": 127,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private getGeneratedSerializationName(type AnalysisType) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/heap/SVMImageLayerSnapshotUtil.java",
                    "startLine": 124,
                    "endLine": 124,
                    "startColumn": 9,
                    "endColumn": 129,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/serialize/SerializationSupport.java",
                    "startLine": 53,
                    "endLine": 55,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : SerializationSupport"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/reflect/serialize/SerializationSupport.java",
                    "startLine": 54,
                    "endLine": 54,
                    "startColumn": 9,
                    "endColumn": 91,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/heap/SVMImageLayerSnapshotUtil.java",
                    "startLine": 119,
                    "endLine": 124,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private getGeneratedSerializationName(type AnalysisType) : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/heap/SVMImageLayerSnapshotUtil.java",
                    "startLine": 121,
                    "endLine": 121,
                    "startColumn": 54,
                    "endColumn": 86,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SerializationSupport.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 506
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public reschedule() : void extracted from public testConditionAndSafepoints() : void in class com.oracle.truffle.api.test.TruffleSafepointTest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 817,
                    "endLine": 891,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testConditionAndSafepoints() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 856,
                    "endLine": 856,
                    "startColumn": 21,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 453,
                    "endLine": 456,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public reschedule() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 455,
                    "endLine": 455,
                    "startColumn": 9,
                    "endColumn": 24,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 833,
                    "endLine": 907,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testConditionAndSafepoints() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 872,
                    "endLine": 872,
                    "startColumn": 21,
                    "endColumn": 33,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "reschedule()"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 895,
                    "endLine": 895,
                    "startColumn": 21,
                    "endColumn": 33,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "reschedule()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 507
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from public testStatementLimitDifferentPerContextParallel() : void in class com.oracle.truffle.api.instrumentation.test.ResourceLimitsTest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 268,
                    "endLine": 332,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testStatementLimitDifferentPerContextParallel() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 279,
                    "endLine": 279,
                    "startColumn": 13,
                    "endColumn": 80,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 279,
                    "endLine": 279,
                    "startColumn": 47,
                    "endColumn": 79,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 276,
                    "endLine": 341,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testStatementLimitDifferentPerContextParallel(vthreads boolean) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 288,
                    "endLine": 288,
                    "startColumn": 47,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(20,vthreads)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 508
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from public testSharedContextStatementLimitParallel() : void in class com.oracle.truffle.api.instrumentation.test.ResourceLimitsTest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 373,
                    "endLine": 420,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testSharedContextStatementLimitParallel() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 386,
                    "endLine": 386,
                    "startColumn": 13,
                    "endColumn": 80,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 386,
                    "endLine": 386,
                    "startColumn": 47,
                    "endColumn": 79,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 382,
                    "endLine": 430,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testSharedContextStatementLimitParallel(vthreads boolean) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 396,
                    "endLine": 396,
                    "startColumn": 47,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(20,vthreads)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 509
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from public testParallelContextStatementLimit() : void in class com.oracle.truffle.api.instrumentation.test.ResourceLimitsTest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 422,
                    "endLine": 465,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testParallelContextStatementLimit() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 435,
                    "endLine": 435,
                    "startColumn": 9,
                    "endColumn": 76,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 435,
                    "endLine": 435,
                    "startColumn": 43,
                    "endColumn": 75,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 432,
                    "endLine": 476,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testParallelContextStatementLimit(vthreads boolean) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 446,
                    "endLine": 446,
                    "startColumn": 43,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(20,vthreads)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 510
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from public testParallelContextStatementLimit2() : void in class com.oracle.truffle.api.instrumentation.test.ResourceLimitsTest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 467,
                    "endLine": 514,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testParallelContextStatementLimit2() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 483,
                    "endLine": 483,
                    "startColumn": 9,
                    "endColumn": 76,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 483,
                    "endLine": 483,
                    "startColumn": 43,
                    "endColumn": 75,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 478,
                    "endLine": 526,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testParallelContextStatementLimit2(vthreads boolean) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 495,
                    "endLine": 495,
                    "startColumn": 43,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(20,vthreads)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 511
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from public testParallelMultiContextStatementLimit() : void in class com.oracle.truffle.api.instrumentation.test.ResourceLimitsTest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 516,
                    "endLine": 584,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testParallelMultiContextStatementLimit() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 529,
                    "endLine": 529,
                    "startColumn": 13,
                    "endColumn": 85,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 529,
                    "endLine": 529,
                    "startColumn": 47,
                    "endColumn": 84,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 528,
                    "endLine": 597,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testParallelMultiContextStatementLimit(vthreads boolean) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 542,
                    "endLine": 542,
                    "startColumn": 47,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(threads,vthreads)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 512
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from public testParallelMultiContextStatementResetLimit() : void in class com.oracle.truffle.api.instrumentation.test.ResourceLimitsTest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 597,
                    "endLine": 667,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testParallelMultiContextStatementResetLimit() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 610,
                    "endLine": 610,
                    "startColumn": 13,
                    "endColumn": 85,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 610,
                    "endLine": 610,
                    "startColumn": 47,
                    "endColumn": 84,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 610,
                    "endLine": 681,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testParallelMultiContextStatementResetLimit(vthreads boolean) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.instrumentation.test/src/com/oracle/truffle/api/instrumentation/test/ResourceLimitsTest.java",
                    "startLine": 624,
                    "endLine": 624,
                    "startColumn": 47,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(threads,vthreads)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 513
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from public testEnterSlowPathFallback() : void in class com.oracle.truffle.api.test.TruffleSafepointTest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 229,
                    "endLine": 291,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testEnterSlowPathFallback() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 231,
                    "endLine": 231,
                    "startColumn": 9,
                    "endColumn": 75,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 231,
                    "endLine": 231,
                    "startColumn": 43,
                    "endColumn": 74,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 239,
                    "endLine": 301,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testEnterSlowPathFallback() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/TruffleSafepointTest.java",
                    "startLine": 241,
                    "endLine": 241,
                    "startColumn": 43,
                    "endColumn": 66,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(1,vthreads)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 514
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from public testGetCurrentContextNotEnteredRaceCondition() : void in class com.oracle.truffle.api.test.polyglot.ContextAPITest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1182,
                    "endLine": 1209,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testGetCurrentContextNotEnteredRaceCondition() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1189,
                    "endLine": 1189,
                    "startColumn": 13,
                    "endColumn": 79,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1189,
                    "endLine": 1189,
                    "startColumn": 47,
                    "endColumn": 78,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1185,
                    "endLine": 1216,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testGetCurrentContextNotEnteredRaceCondition() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1196,
                    "endLine": 1196,
                    "startColumn": 47,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(1,false)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 515
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from public testGetCurrentContextEnteredRaceCondition() : void in class com.oracle.truffle.api.test.polyglot.ContextAPITest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1211,
                    "endLine": 1240,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testGetCurrentContextEnteredRaceCondition() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1217,
                    "endLine": 1217,
                    "startColumn": 13,
                    "endColumn": 79,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1217,
                    "endLine": 1217,
                    "startColumn": 47,
                    "endColumn": 78,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1218,
                    "endLine": 1248,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testGetCurrentContextEnteredRaceCondition() : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextAPITest.java",
                    "startLine": 1225,
                    "endLine": 1225,
                    "startColumn": 47,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(1,false)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 516
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "url": "https://github.com/oracle/graal/commit/61bb7361d0444557e2545fddd2c271a86cd3b16e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public threadPool(threads int, vthreads boolean) : ExecutorService extracted from private runInParallel(callable Runnable) : void in class com.oracle.truffle.api.test.polyglot.ContextLocalTest & moved to class com.oracle.truffle.api.test.polyglot.AbstractPolyglotTest",
            "leftSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextLocalTest.java",
                    "startLine": 151,
                    "endLine": 168,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private runInParallel(callable Runnable) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextLocalTest.java",
                    "startLine": 152,
                    "endLine": 152,
                    "startColumn": 9,
                    "endColumn": 78,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextLocalTest.java",
                    "startLine": 152,
                    "endLine": 152,
                    "startColumn": 36,
                    "endColumn": 77,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 493,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public threadPool(threads int, vthreads boolean) : ExecutorService"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 111,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/AbstractPolyglotTest.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 73,
                    "endColumn": 110,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextLocalTest.java",
                    "startLine": 158,
                    "endLine": 180,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private runInParallel(vthreads boolean, callable Runnable) : void"
                },
                {
                    "filePath": "truffle/src/com.oracle.truffle.api.test/src/com/oracle/truffle/api/test/polyglot/ContextLocalTest.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 36,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadPool(PARALLELISM,vthreads)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 517
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "38707d067f939e6d43dd54185c4e4bca137ee2eb",
        "url": "https://github.com/oracle/graal/commit/38707d067f939e6d43dd54185c4e4bca137ee2eb",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private maybeOverrideEvex(masm AMD64MacroAssembler, enc AMD64SIMDInstructionEncoding, slot AllocatableValue) : AMD64SIMDInstructionEncoding extracted from public emitCode(crb CompilationResultBuilder, masm AMD64MacroAssembler) : void in class jdk.graal.compiler.lir.amd64.vector.AMD64VectorMove.StackMoveOp & moved to class jdk.graal.compiler.lir.amd64.vector.AMD64VectorMove",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 239,
                    "endLine": 259,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public emitCode(crb CompilationResultBuilder, masm AMD64MacroAssembler) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 247,
                    "endLine": 248,
                    "startColumn": 17,
                    "endColumn": 90,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 242,
                    "endLine": 250,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 242,
                    "endLine": 250,
                    "startColumn": 81,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 70,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private maybeOverrideEvex(masm AMD64MacroAssembler, enc AMD64SIMDInstructionEncoding, slot AllocatableValue) : AMD64SIMDInstructionEncoding"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 76,
                    "endLine": 77,
                    "startColumn": 13,
                    "endColumn": 86,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 71,
                    "endLine": 79,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 71,
                    "endLine": 79,
                    "startColumn": 103,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 245,
                    "endLine": 256,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public emitCode(crb CompilationResultBuilder, masm AMD64MacroAssembler) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 247,
                    "endLine": 247,
                    "startColumn": 54,
                    "endColumn": 99,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "maybeOverrideEvex(masm,encoding,backupSlot)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 78,
                    "endLine": 78,
                    "startColumn": 13,
                    "endColumn": 54,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/vector/AMD64VectorMove.java",
                    "startLine": 80,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 20,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 518
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "9053df339199434f82c7bc304097650680d46fbe",
        "url": "https://github.com/oracle/graal/commit/9053df339199434f82c7bc304097650680d46fbe",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method protected setLirGen(lirGen LIRGenerator) : void extracted from public LIRGenerator(lirKindTool LIRKindTool, arithmeticLIRGen ArithmeticLIRGenerator, barrierSetLIRGen BarrierSetLIRGeneratorTool, moveFactory MoveFactory, providers CoreProviders, res LIRGenerationResult) in class jdk.graal.compiler.lir.gen.LIRGenerator & moved to class jdk.graal.compiler.lir.gen.ArithmeticLIRGenerator",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/gen/LIRGenerator.java",
                    "startLine": 112,
                    "endLine": 128,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public LIRGenerator(lirKindTool LIRKindTool, arithmeticLIRGen ArithmeticLIRGenerator, barrierSetLIRGen BarrierSetLIRGeneratorTool, moveFactory MoveFactory, providers CoreProviders, res LIRGenerationResult)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/gen/LIRGenerator.java",
                    "startLine": 124,
                    "endLine": 124,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/gen/LIRGenerator.java",
                    "startLine": 125,
                    "endLine": 125,
                    "startColumn": 9,
                    "endColumn": 40,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/gen/ArithmeticLIRGenerator.java",
                    "startLine": 44,
                    "endLine": 47,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "protected setLirGen(lirGen LIRGenerator) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/gen/ArithmeticLIRGenerator.java",
                    "startLine": 45,
                    "endLine": 45,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/gen/ArithmeticLIRGenerator.java",
                    "startLine": 46,
                    "endLine": 46,
                    "startColumn": 9,
                    "endColumn": 30,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/gen/LIRGenerator.java",
                    "startLine": 112,
                    "endLine": 128,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public LIRGenerator(lirKindTool LIRKindTool, arithmeticLIRGen ArithmeticLIRGenerator, barrierSetLIRGen BarrierSetLIRGeneratorTool, moveFactory MoveFactory, providers CoreProviders, res LIRGenerationResult)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/gen/LIRGenerator.java",
                    "startLine": 127,
                    "endLine": 127,
                    "startColumn": 9,
                    "endColumn": 41,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "arithmeticLIRGen.setLirGen(this)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 519
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "980115905f92f0abdc70769d2118711bf563ce5f",
        "url": "https://github.com/oracle/graal/commit/980115905f92f0abdc70769d2118711bf563ce5f",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public areNextInOrder(block HIRBlock, successor HIRBlock) : boolean extracted from public isNormalLoopExit(block HIRBlock, successor HIRBlock, stackifierData StackifierData) : boolean in class jdk.graal.compiler.hightiercodegen.reconstruction.stackifier.blocks.LabeledBlockGeneration & moved to class jdk.graal.compiler.hightiercodegen.reconstruction.StackifierData",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/stackifier/blocks/LabeledBlockGeneration.java",
                    "startLine": 330,
                    "endLine": 373,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public isNormalLoopExit(block HIRBlock, successor HIRBlock, stackifierData StackifierData) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/stackifier/blocks/LabeledBlockGeneration.java",
                    "startLine": 370,
                    "endLine": 370,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/StackifierData.java",
                    "startLine": 112,
                    "endLine": 118,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public areNextInOrder(block HIRBlock, successor HIRBlock) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/StackifierData.java",
                    "startLine": 117,
                    "endLine": 117,
                    "startColumn": 9,
                    "endColumn": 63,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/stackifier/blocks/LabeledBlockGeneration.java",
                    "startLine": 330,
                    "endLine": 373,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public isNormalLoopExit(block HIRBlock, successor HIRBlock, stackifierData StackifierData) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/reconstruction/stackifier/blocks/LabeledBlockGeneration.java",
                    "startLine": 370,
                    "endLine": 370,
                    "startColumn": 20,
                    "endColumn": 75,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "stackifierData.areNextInOrder(lastLoopBlock,successor)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 520
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "8fd219149dd7388df134eb41491077e891609f05",
        "url": "https://github.com/oracle/graal/commit/8fd219149dd7388df134eb41491077e891609f05",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public useSerialGC() : boolean extracted from public GenScavengeMemoryPoolMXBeans() in class com.oracle.svm.core.genscavenge.GenScavengeMemoryPoolMXBeans & moved to class com.oracle.svm.core.SubstrateOptions",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GenScavengeMemoryPoolMXBeans.java",
                    "startLine": 53,
                    "endLine": 67,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public GenScavengeMemoryPoolMXBeans()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GenScavengeMemoryPoolMXBeans.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 13,
                    "endColumn": 52,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GenScavengeMemoryPoolMXBeans.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 13,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 487,
                    "endLine": 490,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public useSerialGC() : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 9,
                    "endColumn": 146,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 63,
                    "endColumn": 103,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GenScavengeMemoryPoolMXBeans.java",
                    "startLine": 53,
                    "endLine": 67,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public GenScavengeMemoryPoolMXBeans()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/GenScavengeMemoryPoolMXBeans.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 13,
                    "endColumn": 43,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SubstrateOptions.useSerialGC()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 521
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "8fd219149dd7388df134eb41491077e891609f05",
        "url": "https://github.com/oracle/graal/commit/8fd219149dd7388df134eb41491077e891609f05",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public useSerialGC() : boolean extracted from private serialGCOnly(optionKey OptionKey<?>) : void in class com.oracle.svm.core.genscavenge.SerialGCOptions & moved to class com.oracle.svm.core.SubstrateOptions",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/SerialGCOptions.java",
                    "startLine": 125,
                    "endLine": 129,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private serialGCOnly(optionKey OptionKey<?>) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/SerialGCOptions.java",
                    "startLine": 126,
                    "endLine": 126,
                    "startColumn": 13,
                    "endColumn": 53,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/SerialGCOptions.java",
                    "startLine": 126,
                    "endLine": 126,
                    "startColumn": 14,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 487,
                    "endLine": 490,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public useSerialGC() : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 9,
                    "endColumn": 146,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 63,
                    "endColumn": 103,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/SerialGCOptions.java",
                    "startLine": 125,
                    "endLine": 129,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private serialGCOnly(optionKey OptionKey<?>) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/SerialGCOptions.java",
                    "startLine": 126,
                    "endLine": 126,
                    "startColumn": 14,
                    "endColumn": 44,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SubstrateOptions.useSerialGC()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 522
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "8fd219149dd7388df134eb41491077e891609f05",
        "url": "https://github.com/oracle/graal/commit/8fd219149dd7388df134eb41491077e891609f05",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public useSerialGC() : boolean extracted from private createPerfData() : PerfDataHolder in class com.oracle.svm.core.genscavenge.graal.GenScavengeGCFeature & moved to class com.oracle.svm.core.SubstrateOptions",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/graal/GenScavengeGCFeature.java",
                    "startLine": 173,
                    "endLine": 180,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private createPerfData() : PerfDataHolder"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/graal/GenScavengeGCFeature.java",
                    "startLine": 174,
                    "endLine": 174,
                    "startColumn": 13,
                    "endColumn": 52,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/graal/GenScavengeGCFeature.java",
                    "startLine": 174,
                    "endLine": 174,
                    "startColumn": 13,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 487,
                    "endLine": 490,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public useSerialGC() : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 9,
                    "endColumn": 146,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 63,
                    "endColumn": 103,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/graal/GenScavengeGCFeature.java",
                    "startLine": 173,
                    "endLine": 180,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private createPerfData() : PerfDataHolder"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core.genscavenge/src/com/oracle/svm/core/genscavenge/graal/GenScavengeGCFeature.java",
                    "startLine": 174,
                    "endLine": 174,
                    "startColumn": 13,
                    "endColumn": 43,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SubstrateOptions.useSerialGC()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 523
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "8fd219149dd7388df134eb41491077e891609f05",
        "url": "https://github.com/oracle/graal/commit/8fd219149dd7388df134eb41491077e891609f05",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public useSerialGC() : boolean extracted from private shouldValidate(option RuntimeOptionKey<?>) : boolean in class com.oracle.svm.core.IsolateArgumentParser & moved to class com.oracle.svm.core.SubstrateOptions",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/IsolateArgumentParser.java",
                    "startLine": 212,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private shouldValidate(option RuntimeOptionKey<?>) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/IsolateArgumentParser.java",
                    "startLine": 213,
                    "endLine": 213,
                    "startColumn": 13,
                    "endColumn": 52,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/IsolateArgumentParser.java",
                    "startLine": 213,
                    "endLine": 213,
                    "startColumn": 13,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 487,
                    "endLine": 490,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public useSerialGC() : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 9,
                    "endColumn": 146,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 63,
                    "endColumn": 103,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/IsolateArgumentParser.java",
                    "startLine": 212,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private shouldValidate(option RuntimeOptionKey<?>) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/IsolateArgumentParser.java",
                    "startLine": 213,
                    "endLine": 213,
                    "startColumn": 13,
                    "endColumn": 43,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SubstrateOptions.useSerialGC()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 524
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "8fd219149dd7388df134eb41491077e891609f05",
        "url": "https://github.com/oracle/graal/commit/8fd219149dd7388df134eb41491077e891609f05",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public useSerialGC() : boolean extracted from protected getSelectedGCName() : String in class com.oracle.svm.hosted.VMFeature & moved to class com.oracle.svm.core.SubstrateOptions",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/VMFeature.java",
                    "startLine": 65,
                    "endLine": 73,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected getSelectedGCName() : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/VMFeature.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 13,
                    "endColumn": 52,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/VMFeature.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 13,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/VMFeature.java",
                    "startLine": 68,
                    "endLine": 68,
                    "startColumn": 20,
                    "endColumn": 60,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 487,
                    "endLine": 490,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public useSerialGC() : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 9,
                    "endColumn": 146,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java",
                    "startLine": 489,
                    "endLine": 489,
                    "startColumn": 63,
                    "endColumn": 103,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/VMFeature.java",
                    "startLine": 65,
                    "endLine": 73,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected getSelectedGCName() : String"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/VMFeature.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 13,
                    "endColumn": 43,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SubstrateOptions.useSerialGC()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 525
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "bed8eb8aa3cef4629a4a8304ce736930e3c8f3c8",
        "url": "https://github.com/oracle/graal/commit/bed8eb8aa3cef4629a4a8304ce736930e3c8f3c8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package create(continuation ContinuationImpl) : SuspendCapability extracted from private run() : void in class org.graalvm.continuations.ContinuationImpl & moved to class org.graalvm.continuations.SuspendCapability",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/org.graalvm.continuations/src/org/graalvm/continuations/ContinuationImpl.java",
                    "startLine": 403,
                    "endLine": 435,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private run() : void"
                },
                {
                    "filePath": "espresso/src/org.graalvm.continuations/src/org/graalvm/continuations/ContinuationImpl.java",
                    "startLine": 409,
                    "endLine": 409,
                    "startColumn": 9,
                    "endColumn": 61,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/org.graalvm.continuations/src/org/graalvm/continuations/SuspendCapability.java",
                    "startLine": 21,
                    "endLine": 23,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package create(continuation ContinuationImpl) : SuspendCapability"
                },
                {
                    "filePath": "espresso/src/org.graalvm.continuations/src/org/graalvm/continuations/SuspendCapability.java",
                    "startLine": 22,
                    "endLine": 22,
                    "startColumn": 9,
                    "endColumn": 52,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/org.graalvm.continuations/src/org/graalvm/continuations/ContinuationImpl.java",
                    "startLine": 415,
                    "endLine": 447,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private run() : void"
                },
                {
                    "filePath": "espresso/src/org.graalvm.continuations/src/org/graalvm/continuations/ContinuationImpl.java",
                    "startLine": 421,
                    "endLine": 421,
                    "startColumn": 33,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SuspendCapability.create(this)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 526
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "3d55ef11b03a1106cb1def2961b692f18039d7e1",
        "url": "https://github.com/oracle/graal/commit/3d55ef11b03a1106cb1def2961b692f18039d7e1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package printProperties(compilerOptions OptionValues, out PrintStream) : void extracted from public printProperties(out PrintStream) : void in class jdk.graal.compiler.hotspot.HotSpotGraalCompilerFactory & moved to class jdk.graal.compiler.hotspot.HotSpotGraalOptionValues",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalCompilerFactory.java",
                    "startLine": 144,
                    "endLine": 154,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public printProperties(out PrintStream) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalCompilerFactory.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 9,
                    "endColumn": 101,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalCompilerFactory.java",
                    "startLine": 152,
                    "endLine": 152,
                    "startColumn": 9,
                    "endColumn": 68,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalOptionValues.java",
                    "startLine": 215,
                    "endLine": 221,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package printProperties(compilerOptions OptionValues, out PrintStream) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalOptionValues.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 109,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalOptionValues.java",
                    "startLine": 216,
                    "endLine": 216,
                    "startColumn": 9,
                    "endColumn": 104,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalCompilerFactory.java",
                    "startLine": 142,
                    "endLine": 151,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public printProperties(out PrintStream) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalCompilerFactory.java",
                    "startLine": 150,
                    "endLine": 150,
                    "startColumn": 9,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "HotSpotGraalOptionValues.printProperties(options,out)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalOptionValues.java",
                    "startLine": 219,
                    "endLine": 219,
                    "startColumn": 13,
                    "endColumn": 78,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalOptionValues.java",
                    "startLine": 218,
                    "endLine": 220,
                    "startColumn": 18,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hotspot/HotSpotGraalOptionValues.java",
                    "startLine": 218,
                    "endLine": 220,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 527
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "8aea207041533f50e294b14291597c89f77a0f22",
        "url": "https://github.com/oracle/graal/commit/8aea207041533f50e294b14291597c89f77a0f22",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public sortAndAssignOffsets() : int extracted from public beforeCompilation(config BeforeCompilationAccess) : void in class com.oracle.svm.hosted.thread.VMThreadFeature & moved to class com.oracle.svm.hosted.thread.VMThreadLocalCollector",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 220,
                    "endLine": 249,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public beforeCompilation(config BeforeCompilationAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 224,
                    "endLine": 224,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 226,
                    "endLine": 226,
                    "startColumn": 13,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 227,
                    "endLine": 227,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 230,
                    "endLine": 230,
                    "startColumn": 17,
                    "endColumn": 70,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 232,
                    "endLine": 232,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 233,
                    "endLine": 233,
                    "startColumn": 13,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 236,
                    "endLine": 236,
                    "startColumn": 17,
                    "endColumn": 130,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 223,
                    "endLine": 223,
                    "startColumn": 9,
                    "endColumn": 74,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 222,
                    "endLine": 222,
                    "startColumn": 9,
                    "endColumn": 98,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 229,
                    "endLine": 231,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 235,
                    "endLine": 237,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 225,
                    "endLine": 238,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 229,
                    "endLine": 231,
                    "startColumn": 32,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 235,
                    "endLine": 237,
                    "startColumn": 47,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 225,
                    "endLine": 238,
                    "startColumn": 63,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 147,
                    "endLine": 168,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public sortAndAssignOffsets() : int"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 151,
                    "endLine": 151,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 13,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 154,
                    "endLine": 154,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 157,
                    "endLine": 157,
                    "startColumn": 17,
                    "endColumn": 70,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 160,
                    "endLine": 160,
                    "startColumn": 13,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 163,
                    "endLine": 163,
                    "startColumn": 17,
                    "endColumn": 130,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 150,
                    "endLine": 150,
                    "startColumn": 9,
                    "endColumn": 52,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 156,
                    "endLine": 158,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 162,
                    "endLine": 164,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 152,
                    "endLine": 165,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 156,
                    "endLine": 158,
                    "startColumn": 32,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 162,
                    "endLine": 164,
                    "startColumn": 47,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 152,
                    "endLine": 165,
                    "startColumn": 63,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 225,
                    "endLine": 250,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public beforeCompilation(config BeforeCompilationAccess) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadFeature.java",
                    "startLine": 228,
                    "endLine": 228,
                    "startColumn": 26,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "threadLocalCollector.sortAndAssignOffsets()"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/thread/VMThreadLocalCollector.java",
                    "startLine": 167,
                    "endLine": 167,
                    "startColumn": 9,
                    "endColumn": 27,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 528
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "4077d3eff8df3c2f32b84baa17dbef76d7eba0bc",
        "url": "https://github.com/oracle/graal/commit/4077d3eff8df3c2f32b84baa17dbef76d7eba0bc",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public apply() : void extracted from public main(args String[]) : void in class org.graalvm.igvutil.IgvUtility & moved to class org.graalvm.igvutil.IgvUtility.Filter",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 23,
                    "endLine": 35,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public main(args String[]) : void"
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 33,
                    "endLine": 33,
                    "startColumn": 13,
                    "endColumn": 62,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 25,
                    "endLine": 25,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 26,
                    "endLine": 26,
                    "startColumn": 9,
                    "endColumn": 47,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 32,
                    "endLine": 32,
                    "startColumn": 13,
                    "endColumn": 80,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 30,
                    "endLine": 34,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 195,
                    "endLine": 212,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public apply() : void"
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 207,
                    "endLine": 207,
                    "startColumn": 21,
                    "endColumn": 70,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 206,
                    "endLine": 206,
                    "startColumn": 21,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 198,
                    "endLine": 198,
                    "startColumn": 13,
                    "endColumn": 130,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 200,
                    "endLine": 200,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 205,
                    "endLine": 208,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 246,
                    "endLine": 255,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public main(args String[]) : void"
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 254,
                    "endLine": 254,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "subcommand.getSelectedCommand().apply()"
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 197,
                    "endLine": 197,
                    "startColumn": 13,
                    "endColumn": 127,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 202,
                    "endLine": 202,
                    "startColumn": 13,
                    "endColumn": 56,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 203,
                    "endLine": 203,
                    "startColumn": 13,
                    "endColumn": 101,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 210,
                    "endLine": 210,
                    "startColumn": 13,
                    "endColumn": 28,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 211,
                    "endLine": 211,
                    "startColumn": 13,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 204,
                    "endLine": 209,
                    "startColumn": 55,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/org.graalvm.igvutil/src/org/graalvm/igvutil/IgvUtility.java",
                    "startLine": 204,
                    "endLine": 209,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 529
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "deffaa137c8b739b9b7a8a03d1510c9c46d366b1",
        "url": "https://github.com/oracle/graal/commit/deffaa137c8b739b9b7a8a03d1510c9c46d366b1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isStableJavaArray(array ValueNode) : boolean extracted from public canonical(tool CanonicalizerTool) : Node in class jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode & moved to class jdk.graal.compiler.nodes.util.ConstantReflectionUtil",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/nodes/ArrayIndexOfNode.java",
                    "startLine": 289,
                    "endLine": 375,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public canonical(tool CanonicalizerTool) : Node"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/nodes/ArrayIndexOfNode.java",
                    "startLine": 297,
                    "endLine": 301,
                    "startColumn": 13,
                    "endColumn": 47,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/ConstantReflectionUtil.java",
                    "startLine": 51,
                    "endLine": 57,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isStableJavaArray(array ValueNode) : boolean"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/util/ConstantReflectionUtil.java",
                    "startLine": 56,
                    "endLine": 56,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/nodes/ArrayIndexOfNode.java",
                    "startLine": 287,
                    "endLine": 371,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public canonical(tool CanonicalizerTool) : Node"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/nodes/ArrayIndexOfNode.java",
                    "startLine": 295,
                    "endLine": 295,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ConstantReflectionUtil.isStableJavaArray(arrayPointer)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 530
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "1d769c7ffe3fec32a6738ba96d803bf06cf9f444",
        "url": "https://github.com/oracle/graal/commit/1d769c7ffe3fec32a6738ba96d803bf06cf9f444",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getSavedProperty(name String) : String extracted from private getInteger(name String, def int) : int in class jdk.graal.compiler.replacements.InlineDuringParsingPlugin & moved to class jdk.graal.compiler.serviceprovider.GraalServices",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/InlineDuringParsingPlugin.java",
                    "startLine": 43,
                    "endLine": 49,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private getInteger(name String, def int) : int"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/InlineDuringParsingPlugin.java",
                    "startLine": 44,
                    "endLine": 44,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/serviceprovider/GraalServices.java",
                    "startLine": 137,
                    "endLine": 145,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getSavedProperty(name String) : String"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/serviceprovider/GraalServices.java",
                    "startLine": 144,
                    "endLine": 144,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/InlineDuringParsingPlugin.java",
                    "startLine": 43,
                    "endLine": 49,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private getInteger(name String, def int) : int"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/replacements/InlineDuringParsingPlugin.java",
                    "startLine": 44,
                    "endLine": 44,
                    "startColumn": 24,
                    "endColumn": 60,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "GraalServices.getSavedProperty(name)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/serviceprovider/GraalServices.java",
                    "startLine": 142,
                    "endLine": 142,
                    "startColumn": 13,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/serviceprovider/GraalServices.java",
                    "startLine": 141,
                    "endLine": 143,
                    "startColumn": 62,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/serviceprovider/GraalServices.java",
                    "startLine": 141,
                    "endLine": 143,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 531
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d60633ec003a71949d1433e688c695160ecc3529",
        "url": "https://github.com/oracle/graal/commit/d60633ec003a71949d1433e688c695160ecc3529",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package printOptions(out PrintStream, prefix String) : void extracted from private printLibgraalProperties(out PrintStream, prefix String) : void in class com.oracle.svm.graal.hotspot.libgraal.Target_jdk_graal_compiler_hotspot_HotSpotGraalOptionValues & moved to class com.oracle.svm.graal.hotspot.libgraal.HotSpotGraalOptionValuesUtil",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 461,
                    "endLine": 466,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private printLibgraalProperties(out PrintStream, prefix String) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 463,
                    "endLine": 463,
                    "startColumn": 9,
                    "endColumn": 73,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 464,
                    "endLine": 464,
                    "startColumn": 9,
                    "endColumn": 127,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 465,
                    "endLine": 465,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 491,
                    "endLine": 495,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package printOptions(out PrintStream, prefix String) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 492,
                    "endLine": 492,
                    "startColumn": 9,
                    "endColumn": 73,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 493,
                    "endLine": 493,
                    "startColumn": 9,
                    "endColumn": 127,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 494,
                    "endLine": 494,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 453,
                    "endLine": 456,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private printLibgraalProperties(out PrintStream, prefix String) : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.graal.hotspot.libgraal/src/com/oracle/svm/graal/hotspot/libgraal/LibGraalFeature.java",
                    "startLine": 455,
                    "endLine": 455,
                    "startColumn": 9,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "HotSpotGraalOptionValuesUtil.printOptions(out,prefix)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 532
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d9fb96832303e9295595a2ab67751476c42cc9ee",
        "url": "https://github.com/oracle/graal/commit/d9fb96832303e9295595a2ab67751476c42cc9ee",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public contains(object PlatformManagedObject) : boolean extracted from public isAllowedPlatformManagedObject(object PlatformManagedObject) : boolean in class com.oracle.svm.core.jdk.management.ManagementSupport & moved to class com.oracle.svm.core.jdk.management.ManagementSupport.MXBeans",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/ManagementSupport.java",
                    "startLine": 326,
                    "endLine": 349,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public isAllowedPlatformManagedObject(object PlatformManagedObject) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/ManagementSupport.java",
                    "startLine": 334,
                    "endLine": 334,
                    "startColumn": 21,
                    "endColumn": 82,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/ManagementSupport.java",
                    "startLine": 327,
                    "endLine": 327,
                    "startColumn": 13,
                    "endColumn": 107,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/ManagementSupport.java",
                    "startLine": 366,
                    "endLine": 368,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public contains(object PlatformManagedObject) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/ManagementSupport.java",
                    "startLine": 367,
                    "endLine": 367,
                    "startColumn": 13,
                    "endColumn": 45,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/ManagementSupport.java",
                    "startLine": 201,
                    "endLine": 225,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public isAllowedPlatformManagedObject(object PlatformManagedObject) : boolean"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/ManagementSupport.java",
                    "startLine": 203,
                    "endLine": 203,
                    "startColumn": 13,
                    "endColumn": 37,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "mxBeans.contains(object)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/ManagementSupport.java",
                    "startLine": 203,
                    "endLine": 203,
                    "startColumn": 41,
                    "endColumn": 84,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "GCRelatedMXBeans.mxBeans().contains(object)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/ManagementSupport.java",
                    "startLine": 210,
                    "endLine": 210,
                    "startColumn": 21,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ManagementFactory.getPlatformMXBeans(clazz).contains(object)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 533
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "89837ba44e2c49e9068a5c56edb8167def2b4e52",
        "url": "https://github.com/oracle/graal/commit/89837ba44e2c49e9068a5c56edb8167def2b4e52",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public usedSize() : long extracted from public usedSize() : long in class com.oracle.svm.core.heap.PhysicalMemory & moved to class com.oracle.svm.core.heap.PhysicalMemory.PhysicalMemorySupport",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/heap/PhysicalMemory.java",
                    "startLine": 97,
                    "endLine": 113,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public usedSize() : long"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/heap/PhysicalMemory.java",
                    "startLine": 112,
                    "endLine": 112,
                    "startColumn": 9,
                    "endColumn": 20,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/heap/PhysicalMemory.java",
                    "startLine": 53,
                    "endLine": 63,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public usedSize() : long"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/heap/PhysicalMemory.java",
                    "startLine": 62,
                    "endLine": 62,
                    "startColumn": 13,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/heap/PhysicalMemory.java",
                    "startLine": 102,
                    "endLine": 113,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public usedSize() : long"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/heap/PhysicalMemory.java",
                    "startLine": 112,
                    "endLine": 112,
                    "startColumn": 16,
                    "endColumn": 93,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ImageSingletons.lookup(PhysicalMemory.PhysicalMemorySupport.class).usedSize()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 534
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "url": "https://github.com/oracle/graal/commit/d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp extracted from private createFloatStamp(bits int, value double) : FloatStamp in class jdk.graal.compiler.nodes.test.FloatStampTest & moved to class jdk.graal.compiler.core.common.type.FloatStamp",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/nodes/test/FloatStampTest.java",
                    "startLine": 54,
                    "endLine": 59,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private createFloatStamp(bits int, value double) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/nodes/test/FloatStampTest.java",
                    "startLine": 58,
                    "endLine": 58,
                    "startColumn": 9,
                    "endColumn": 57,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 84,
                    "endLine": 94,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 93,
                    "endLine": 93,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/nodes/test/FloatStampTest.java",
                    "startLine": 62,
                    "endLine": 67,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private createFloatStamp(bits int, value double) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/nodes/test/FloatStampTest.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 16,
                    "endColumn": 59,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(bits,value,value,true)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 90,
                    "endLine": 90,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 91,
                    "endLine": 91,
                    "startColumn": 9,
                    "endColumn": 100,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 9,
                    "endColumn": 93,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 535
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "url": "https://github.com/oracle/graal/commit/d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp extracted from private floatStampForConstant(bound double, bits int) : FloatStamp in class jdk.graal.compiler.nodes.test.PrimitiveStampBoundaryTest & moved to class jdk.graal.compiler.core.common.type.FloatStamp",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/nodes/test/PrimitiveStampBoundaryTest.java",
                    "startLine": 294,
                    "endLine": 301,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private floatStampForConstant(bound double, bits int) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/nodes/test/PrimitiveStampBoundaryTest.java",
                    "startLine": 297,
                    "endLine": 297,
                    "startColumn": 13,
                    "endColumn": 79,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 84,
                    "endLine": 94,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 93,
                    "endLine": 93,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/nodes/test/PrimitiveStampBoundaryTest.java",
                    "startLine": 290,
                    "endLine": 297,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private floatStampForConstant(bound double, bits int) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/nodes/test/PrimitiveStampBoundaryTest.java",
                    "startLine": 293,
                    "endLine": 293,
                    "startColumn": 20,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(bits,fbound,fbound,!Float.isNaN(fbound))"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler.test/src/jdk/graal/compiler/nodes/test/PrimitiveStampBoundaryTest.java",
                    "startLine": 295,
                    "endLine": 295,
                    "startColumn": 20,
                    "endColumn": 79,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(bits,bound,bound,!Double.isNaN(bound))"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 90,
                    "endLine": 90,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 91,
                    "endLine": 91,
                    "startColumn": 9,
                    "endColumn": 100,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 9,
                    "endColumn": 93,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 536
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "url": "https://github.com/oracle/graal/commit/d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp extracted from public intToFloat(stamp IntegerStamp) : FloatStamp in class jdk.graal.compiler.core.common.calc.ReinterpretUtils & moved to class jdk.graal.compiler.core.common.type.FloatStamp",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/calc/ReinterpretUtils.java",
                    "startLine": 131,
                    "endLine": 222,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public intToFloat(stamp IntegerStamp) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/calc/ReinterpretUtils.java",
                    "startLine": 221,
                    "endLine": 221,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 84,
                    "endLine": 94,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 93,
                    "endLine": 93,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/calc/ReinterpretUtils.java",
                    "startLine": 131,
                    "endLine": 222,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public intToFloat(stamp IntegerStamp) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/calc/ReinterpretUtils.java",
                    "startLine": 221,
                    "endLine": 221,
                    "startColumn": 16,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(bits,lowerBound,upperBound,nonNaN)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 90,
                    "endLine": 90,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 91,
                    "endLine": 91,
                    "startColumn": 9,
                    "endColumn": 100,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 9,
                    "endColumn": 93,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 537
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "url": "https://github.com/oracle/graal/commit/d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp extracted from public forFloat(kind JavaKind, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp in class jdk.graal.compiler.core.common.type.StampFactory & moved to class jdk.graal.compiler.core.common.type.FloatStamp",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/StampFactory.java",
                    "startLine": 206,
                    "endLine": 209,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public forFloat(kind JavaKind, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/StampFactory.java",
                    "startLine": 208,
                    "endLine": 208,
                    "startColumn": 9,
                    "endColumn": 83,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 84,
                    "endLine": 94,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 93,
                    "endLine": 93,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/StampFactory.java",
                    "startLine": 206,
                    "endLine": 209,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public forFloat(kind JavaKind, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/StampFactory.java",
                    "startLine": 208,
                    "endLine": 208,
                    "startColumn": 16,
                    "endColumn": 85,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(kind.getBitCount(),lowerBound,upperBound,nonNaN)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 90,
                    "endLine": 90,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 91,
                    "endLine": 91,
                    "startColumn": 9,
                    "endColumn": 100,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 9,
                    "endColumn": 93,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 538
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "url": "https://github.com/oracle/graal/commit/d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp extracted from public computeStamp(magnitude Stamp, sign Stamp) : Stamp in class jdk.graal.compiler.nodes.calc.CopySignNode & moved to class jdk.graal.compiler.core.common.type.FloatStamp",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/CopySignNode.java",
                    "startLine": 54,
                    "endLine": 100,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public computeStamp(magnitude Stamp, sign Stamp) : Stamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/CopySignNode.java",
                    "startLine": 70,
                    "endLine": 70,
                    "startColumn": 21,
                    "endColumn": 156,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 84,
                    "endLine": 94,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 93,
                    "endLine": 93,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/CopySignNode.java",
                    "startLine": 54,
                    "endLine": 100,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public computeStamp(magnitude Stamp, sign Stamp) : Stamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/CopySignNode.java",
                    "startLine": 70,
                    "endLine": 70,
                    "startColumn": 28,
                    "endColumn": 158,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(magnitudeStamp.getBits(),-magnitudeStamp.upperBound(),-magnitudeStamp.lowerBound(),magnitudeStamp.isNonNaN())"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/CopySignNode.java",
                    "startLine": 74,
                    "endLine": 75,
                    "startColumn": 24,
                    "endColumn": 128,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(magnitudeStamp.getBits(),0,Math.max(-magnitudeStamp.lowerBound(),magnitudeStamp.upperBound()),magnitudeStamp.isNonNaN())"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/CopySignNode.java",
                    "startLine": 86,
                    "endLine": 86,
                    "startColumn": 28,
                    "endColumn": 158,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(magnitudeStamp.getBits(),-magnitudeStamp.upperBound(),-magnitudeStamp.lowerBound(),magnitudeStamp.isNonNaN())"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/CopySignNode.java",
                    "startLine": 90,
                    "endLine": 91,
                    "startColumn": 24,
                    "endColumn": 62,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(magnitudeStamp.getBits(),Math.min(magnitudeStamp.lowerBound(),-magnitudeStamp.upperBound()),0,magnitudeStamp.isNonNaN())"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/CopySignNode.java",
                    "startLine": 98,
                    "endLine": 99,
                    "startColumn": 16,
                    "endColumn": 51,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(magnitudeStamp.getBits(),Math.min(magnitudeStamp.lowerBound(),-magnitudeStamp.upperBound()),Math.max(-magnitudeStamp.lowerBound(),magnitudeStamp.upperBound()),magnitudeStamp.isNonNaN())"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 90,
                    "endLine": 90,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 91,
                    "endLine": 91,
                    "startColumn": 9,
                    "endColumn": 100,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 9,
                    "endColumn": 93,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 539
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "url": "https://github.com/oracle/graal/commit/d7672989059f3e188fa8b576fba2c1bbd5eb8e30",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp extracted from private roundStamp(stamp FloatStamp, mode RoundingMode) : FloatStamp in class jdk.graal.compiler.nodes.calc.RoundNode & moved to class jdk.graal.compiler.core.common.type.FloatStamp",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/RoundNode.java",
                    "startLine": 85,
                    "endLine": 93,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private roundStamp(stamp FloatStamp, mode RoundingMode) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/RoundNode.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 9,
                    "endColumn": 76,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 84,
                    "endLine": 94,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public create(bits int, lowerBound double, upperBound double, nonNaN boolean) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 93,
                    "endLine": 93,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/RoundNode.java",
                    "startLine": 85,
                    "endLine": 93,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private roundStamp(stamp FloatStamp, mode RoundingMode) : FloatStamp"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/nodes/calc/RoundNode.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 16,
                    "endColumn": 78,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FloatStamp.create(stamp.getBits(),min,max,stamp.isNonNaN())"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 13,
                    "endColumn": 110,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 90,
                    "endLine": 90,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 91,
                    "endLine": 91,
                    "startColumn": 9,
                    "endColumn": 100,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 9,
                    "endColumn": 93,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 33,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/type/FloatStamp.java",
                    "startLine": 86,
                    "endLine": 89,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 540
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "26279ecd18e55e2320f193aee4ccc693da257b62",
        "url": "https://github.com/oracle/graal/commit/26279ecd18e55e2320f193aee4ccc693da257b62",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package parseRuntimeVisibleAnnotations(attributeSize int, location AnnotationLocation) : RuntimeVisibleAnnotationsAttribute extracted from private parseMethod(isInterface boolean) : ParserMethod in class com.oracle.truffle.espresso.classfile.ClassfileParser & moved to class com.oracle.truffle.espresso.classfile.ClassfileParser.CommonAttributeParser",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 701,
                    "endLine": 887,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseMethod(isInterface boolean) : ParserMethod"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 819,
                    "endLine": 819,
                    "startColumn": 25,
                    "endColumn": 110,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 822,
                    "endLine": 822,
                    "startColumn": 21,
                    "endColumn": 71,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 823,
                    "endLine": 823,
                    "startColumn": 21,
                    "endColumn": 91,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 848,
                    "endLine": 848,
                    "startColumn": 21,
                    "endColumn": 106,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 791,
                    "endLine": 791,
                    "startColumn": 9,
                    "endColumn": 52,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 818,
                    "endLine": 820,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 818,
                    "endLine": 820,
                    "startColumn": 60,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 825,
                    "endLine": 825,
                    "startColumn": 26,
                    "endColumn": 35,
                    "codeElementType": "FOR_STATEMENT_INITIALIZER",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 712,
                    "endLine": 729,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package parseRuntimeVisibleAnnotations(attributeSize int, location AnnotationLocation) : RuntimeVisibleAnnotationsAttribute"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 715,
                    "endLine": 715,
                    "startColumn": 17,
                    "endColumn": 102,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 719,
                    "endLine": 719,
                    "startColumn": 13,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 720,
                    "endLine": 720,
                    "startColumn": 13,
                    "endColumn": 78,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 726,
                    "endLine": 726,
                    "startColumn": 13,
                    "endColumn": 87,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 727,
                    "endLine": 727,
                    "startColumn": 13,
                    "endColumn": 51,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 714,
                    "endLine": 716,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 714,
                    "endLine": 716,
                    "startColumn": 52,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 721,
                    "endLine": 721,
                    "startColumn": 13,
                    "endColumn": 27,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 761,
                    "endLine": 916,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseMethod(isInterface boolean) : ParserMethod"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 877,
                    "endLine": 877,
                    "startColumn": 70,
                    "endColumn": 164,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "commonAttributeParser.parseRuntimeVisibleAnnotations(attributeSize,AnnotationLocation.Method)"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 713,
                    "endLine": 713,
                    "startColumn": 13,
                    "endColumn": 67,
                    "codeElementType": "ASSERT_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 723,
                    "endLine": 723,
                    "startColumn": 17,
                    "endColumn": 61,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 728,
                    "endLine": 728,
                    "startColumn": 13,
                    "endColumn": 77,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 722,
                    "endLine": 724,
                    "startColumn": 56,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/classfile/ClassfileParser.java",
                    "startLine": 722,
                    "endLine": 724,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 541
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "ff68493204a3785f05531c27056975c37922bb4b",
        "url": "https://github.com/oracle/graal/commit/ff68493204a3785f05531c27056975c37922bb4b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public unsafeAbs(i int) : int extracted from public getEfficientIntLiteral(i long) : String in class jdk.graal.compiler.hightiercodegen.CodeGenTool & moved to class jdk.graal.compiler.core.common.NumUtil",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/CodeGenTool.java",
                    "startLine": 74,
                    "endLine": 99,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getEfficientIntLiteral(i long) : String"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/CodeGenTool.java",
                    "startLine": 86,
                    "endLine": 86,
                    "startColumn": 9,
                    "endColumn": 32,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/NumUtil.java",
                    "startLine": 430,
                    "endLine": 436,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public unsafeAbs(i int) : int"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/NumUtil.java",
                    "startLine": 435,
                    "endLine": 435,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/CodeGenTool.java",
                    "startLine": 74,
                    "endLine": 103,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getEfficientIntLiteral(i long) : String"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/CodeGenTool.java",
                    "startLine": 89,
                    "endLine": 89,
                    "startColumn": 26,
                    "endColumn": 46,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "NumUtil.unsafeAbs(i)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 542
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "ff68493204a3785f05531c27056975c37922bb4b",
        "url": "https://github.com/oracle/graal/commit/ff68493204a3785f05531c27056975c37922bb4b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public unsafeAbs(i int) : int extracted from public rational(numerator long, denominator long, decimals long) : Log in class com.oracle.svm.core.log.RealLog & moved to class jdk.graal.compiler.core.common.NumUtil",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 359,
                    "endLine": 403,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public rational(numerator long, denominator long, decimals long) : Log"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 392,
                    "endLine": 392,
                    "startColumn": 13,
                    "endColumn": 58,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/NumUtil.java",
                    "startLine": 430,
                    "endLine": 436,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public unsafeAbs(i int) : int"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/NumUtil.java",
                    "startLine": 435,
                    "endLine": 435,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 360,
                    "endLine": 405,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public rational(numerator long, denominator long, decimals long) : Log"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 394,
                    "endLine": 394,
                    "startColumn": 38,
                    "endColumn": 66,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "NumUtil.unsafeAbs(numerator)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 395,
                    "endLine": 395,
                    "startColumn": 40,
                    "endColumn": 70,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "NumUtil.unsafeAbs(denominator)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 543
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "ff68493204a3785f05531c27056975c37922bb4b",
        "url": "https://github.com/oracle/graal/commit/ff68493204a3785f05531c27056975c37922bb4b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public unsafeAbs(l long) : long extracted from public getEfficientIntLiteral(i long) : String in class jdk.graal.compiler.hightiercodegen.CodeGenTool & moved to class jdk.graal.compiler.core.common.NumUtil",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/CodeGenTool.java",
                    "startLine": 74,
                    "endLine": 99,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getEfficientIntLiteral(i long) : String"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/CodeGenTool.java",
                    "startLine": 86,
                    "endLine": 86,
                    "startColumn": 9,
                    "endColumn": 32,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/NumUtil.java",
                    "startLine": 438,
                    "endLine": 444,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public unsafeAbs(l long) : long"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/NumUtil.java",
                    "startLine": 443,
                    "endLine": 443,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/CodeGenTool.java",
                    "startLine": 74,
                    "endLine": 103,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getEfficientIntLiteral(i long) : String"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/hightiercodegen/CodeGenTool.java",
                    "startLine": 89,
                    "endLine": 89,
                    "startColumn": 26,
                    "endColumn": 46,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "NumUtil.unsafeAbs(i)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 544
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "ff68493204a3785f05531c27056975c37922bb4b",
        "url": "https://github.com/oracle/graal/commit/ff68493204a3785f05531c27056975c37922bb4b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public unsafeAbs(l long) : long extracted from public rational(numerator long, denominator long, decimals long) : Log in class com.oracle.svm.core.log.RealLog & moved to class jdk.graal.compiler.core.common.NumUtil",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 359,
                    "endLine": 403,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public rational(numerator long, denominator long, decimals long) : Log"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 392,
                    "endLine": 392,
                    "startColumn": 13,
                    "endColumn": 58,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/NumUtil.java",
                    "startLine": 438,
                    "endLine": 444,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public unsafeAbs(l long) : long"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/core/common/NumUtil.java",
                    "startLine": 443,
                    "endLine": 443,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 360,
                    "endLine": 405,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public rational(numerator long, denominator long, decimals long) : Log"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 394,
                    "endLine": 394,
                    "startColumn": 38,
                    "endColumn": 66,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "NumUtil.unsafeAbs(numerator)"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/log/RealLog.java",
                    "startLine": 395,
                    "endLine": 395,
                    "startColumn": 40,
                    "endColumn": 70,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "NumUtil.unsafeAbs(denominator)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 545
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doMappedInterface(value Object, targetType Klass, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary, error InlinedBranchProfile) : Object in class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode.GenericToEspresso & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 177,
                    "endLine": 199,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doMappedInterface(value Object, targetType Klass, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary, error InlinedBranchProfile) : Object"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 197,
                    "endLine": 197,
                    "startColumn": 17,
                    "endColumn": 169,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 177,
                    "endLine": 198,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doMappedInterface(value Object, targetType Klass, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary, error InlinedBranchProfile) : Object"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 197,
                    "endLine": 197,
                    "startColumn": 19,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "unsupportedType(value,targetType)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 546
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doTypeConverter(value Object, targetType Klass, lookupTypeConverter LookupTypeConverterNode, interop InteropLibrary, error InlinedBranchProfile) : Object in class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode.GenericToEspresso & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 220,
                    "endLine": 244,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doTypeConverter(value Object, targetType Klass, lookupTypeConverter LookupTypeConverterNode, interop InteropLibrary, error InlinedBranchProfile) : Object"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 242,
                    "endLine": 242,
                    "startColumn": 17,
                    "endColumn": 185,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 219,
                    "endLine": 242,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doTypeConverter(value Object, targetType Klass, lookupTypeConverter LookupTypeConverterNode, interop InteropLibrary, error InlinedBranchProfile) : Object"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 241,
                    "endLine": 241,
                    "startColumn": 19,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "unsupportedType(value,targetType)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 547
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doInternalTypeConverter(value Object, targetType Klass, converterToEspresso ToReference.DynamicToReference, lookupInternalTypeConverter LookupInternalTypeConverterNode, interop InteropLibrary, error InlinedBranchProfile) : Object in class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode.GenericToEspresso & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 246,
                    "endLine": 271,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doInternalTypeConverter(value Object, targetType Klass, converterToEspresso ToReference.DynamicToReference, lookupInternalTypeConverter LookupInternalTypeConverterNode, interop InteropLibrary, error InlinedBranchProfile) : Object"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 269,
                    "endLine": 269,
                    "startColumn": 17,
                    "endColumn": 185,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 244,
                    "endLine": 268,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doInternalTypeConverter(value Object, targetType Klass, converterToEspresso ToReference.DynamicToReference, lookupInternalTypeConverter LookupInternalTypeConverterNode, interop InteropLibrary, errorProfile InlinedBranchProfile) : Object"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 267,
                    "endLine": 267,
                    "startColumn": 19,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "unsupportedType(value,targetType)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 548
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doMappedInterface(value Object, targetType Klass, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.GenericToReference & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 361,
                    "endLine": 380,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doMappedInterface(value Object, targetType Klass, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 378,
                    "endLine": 378,
                    "startColumn": 17,
                    "endColumn": 169,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 360,
                    "endLine": 380,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doMappedInterface(value Object, targetType Klass, lookupProxyKlassNode LookupProxyKlassNode, errorProfile InlinedBranchProfile, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 379,
                    "endLine": 379,
                    "startColumn": 19,
                    "endColumn": 68,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,targetType)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 549
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doTypeConverter(value Object, targetType Klass, lookupTypeConverterNode LookupTypeConverterNode, interop InteropLibrary) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.GenericToReference & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 399,
                    "endLine": 420,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doTypeConverter(value Object, targetType Klass, lookupTypeConverterNode LookupTypeConverterNode, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 418,
                    "endLine": 418,
                    "startColumn": 17,
                    "endColumn": 185,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 399,
                    "endLine": 422,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doTypeConverter(value Object, targetType Klass, lookupTypeConverterNode LookupTypeConverterNode, errorProfile InlinedBranchProfile, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 421,
                    "endLine": 421,
                    "startColumn": 19,
                    "endColumn": 68,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,targetType)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 550
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doInternalTypeConverter(value Object, targetType Klass, lookupInternalTypeConverterNode LookupInternalTypeConverterNode, converterToEspresso ToReference.DynamicToReference, interop InteropLibrary) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.GenericToReference & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 422,
                    "endLine": 444,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doInternalTypeConverter(value Object, targetType Klass, lookupInternalTypeConverterNode LookupInternalTypeConverterNode, converterToEspresso ToReference.DynamicToReference, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 442,
                    "endLine": 442,
                    "startColumn": 17,
                    "endColumn": 185,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 424,
                    "endLine": 448,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doInternalTypeConverter(value Object, targetType Klass, lookupInternalTypeConverterNode LookupInternalTypeConverterNode, converterToEspresso ToReference.DynamicToReference, errorProfile InlinedBranchProfile, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 447,
                    "endLine": 447,
                    "startColumn": 19,
                    "endColumn": 68,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,targetType)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 551
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doMappedList(value Object, context EspressoContext, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.ToList & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 509,
                    "endLine": 525,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doMappedList(value Object, context EspressoContext, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 522,
                    "endLine": 522,
                    "startColumn": 17,
                    "endColumn": 120,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 509,
                    "endLine": 532,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doMappedList(value Object, context EspressoContext, meta Meta, errorProfile InlinedBranchProfile, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 531,
                    "endLine": 531,
                    "startColumn": 19,
                    "endColumn": 77,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,meta.java_util_List)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 552
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doMappedCollection(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.ToCollection & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 558,
                    "endLine": 574,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doMappedCollection(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 571,
                    "endLine": 571,
                    "startColumn": 17,
                    "endColumn": 126,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 565,
                    "endLine": 588,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doMappedCollection(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, errorProfile InlinedBranchProfile, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 587,
                    "endLine": 587,
                    "startColumn": 19,
                    "endColumn": 83,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,meta.java_util_Collection)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 553
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doMappedIterable(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.ToIterable & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 607,
                    "endLine": 623,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doMappedIterable(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 620,
                    "endLine": 620,
                    "startColumn": 17,
                    "endColumn": 124,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 621,
                    "endLine": 644,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doMappedIterable(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, errorProfile InlinedBranchProfile, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 643,
                    "endLine": 643,
                    "startColumn": 19,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,meta.java_lang_Iterable)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 554
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doMappedIterator(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.ToIterator & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 656,
                    "endLine": 672,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doMappedIterator(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 669,
                    "endLine": 669,
                    "startColumn": 17,
                    "endColumn": 124,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 677,
                    "endLine": 700,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doMappedIterator(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, errorProfile InlinedBranchProfile, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 698,
                    "endLine": 698,
                    "startColumn": 19,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,meta.java_util_Iterator)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 555
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doMappedMap(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.ToMap & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 705,
                    "endLine": 721,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doMappedMap(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 718,
                    "endLine": 718,
                    "startColumn": 17,
                    "endColumn": 119,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 733,
                    "endLine": 756,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doMappedMap(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, errorProfile InlinedBranchProfile, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 755,
                    "endLine": 755,
                    "startColumn": 19,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,meta.java_util_Map)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 556
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from public doMappedSet(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.ToSet & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 754,
                    "endLine": 769,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public doMappedSet(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 766,
                    "endLine": 766,
                    "startColumn": 17,
                    "endColumn": 119,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 789,
                    "endLine": 811,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public doMappedSet(value Object, meta Meta, language EspressoLanguage, lookupProxyKlassNode LookupProxyKlassNode, errorProfile InlinedBranchProfile, interop InteropLibrary) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 810,
                    "endLine": 810,
                    "startColumn": 19,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,meta.java_util_Set)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 557
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from package doForeignInterface(value Object, interop InteropLibrary, lookupProxyKlassNode LookupProxyKlassNode, errorProfile BranchProfile) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.ToMappedInterface & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1460,
                    "endLine": 1480,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package doForeignInterface(value Object, interop InteropLibrary, lookupProxyKlassNode LookupProxyKlassNode, errorProfile BranchProfile) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1478,
                    "endLine": 1478,
                    "startColumn": 17,
                    "endColumn": 185,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1509,
                    "endLine": 1529,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package doForeignInterface(value Object, interop InteropLibrary, lookupProxyKlassNode LookupProxyKlassNode, errorProfile InlinedBranchProfile) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1528,
                    "endLine": 1528,
                    "startColumn": 19,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "unsupportedType(value,targetType)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 558
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from package doForeignConverter(value Object, interop InteropLibrary, lookupTypeConverterNode LookupTypeConverterNode, errorProfile BranchProfile) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.ToMappedType & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1516,
                    "endLine": 1539,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package doForeignConverter(value Object, interop InteropLibrary, lookupTypeConverterNode LookupTypeConverterNode, errorProfile BranchProfile) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1537,
                    "endLine": 1537,
                    "startColumn": 17,
                    "endColumn": 185,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1565,
                    "endLine": 1588,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package doForeignConverter(value Object, interop InteropLibrary, lookupTypeConverterNode LookupTypeConverterNode, errorProfile InlinedBranchProfile) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1587,
                    "endLine": 1587,
                    "startColumn": 19,
                    "endColumn": 68,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,targetType)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 559
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "url": "https://github.com/oracle/graal/commit/c4579fdc6a00fac755d3caaf37be83677565c1b9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException extracted from package doForeignInternalConverter(value Object, interop InteropLibrary, lookupTypeConverterNode LookupInternalTypeConverterNode, converterToEspresso ToReference.DynamicToReference, errorProfile BranchProfile, meta Meta) : StaticObject in class com.oracle.truffle.espresso.nodes.interop.ToReference.ToMappedInternalType & moved to class com.oracle.truffle.espresso.nodes.interop.ToEspressoNode",
            "leftSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1575,
                    "endLine": 1600,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package doForeignInternalConverter(value Object, interop InteropLibrary, lookupTypeConverterNode LookupInternalTypeConverterNode, converterToEspresso ToReference.DynamicToReference, errorProfile BranchProfile, meta Meta) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1598,
                    "endLine": 1598,
                    "startColumn": 17,
                    "endColumn": 185,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 367,
                    "endLine": 370,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package unsupportedType(value Object, targetType Klass) : UnsupportedTypeException"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToEspressoNode.java",
                    "startLine": 369,
                    "endLine": 369,
                    "startColumn": 9,
                    "endColumn": 162,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1624,
                    "endLine": 1649,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package doForeignInternalConverter(value Object, interop InteropLibrary, lookupTypeConverterNode LookupInternalTypeConverterNode, converterToEspresso ToReference.DynamicToReference, errorProfile InlinedBranchProfile, meta Meta) : StaticObject"
                },
                {
                    "filePath": "espresso/src/com.oracle.truffle.espresso/src/com/oracle/truffle/espresso/nodes/interop/ToReference.java",
                    "startLine": 1648,
                    "endLine": 1648,
                    "startColumn": 19,
                    "endColumn": 68,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ToEspressoNode.unsupportedType(value,targetType)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 560
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "2fb7c37a825d3b95438da033f4876d8edfbcb84b",
        "url": "https://github.com/oracle/graal/commit/2fb7c37a825d3b95438da033f4876d8edfbcb84b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public singleton() : HostedMethodNameFactory extracted from private create0(wrapped AnalysisMethod, holder HostedType, signature ResolvedSignature<HostedType>, constantPool ConstantPool, handlers ExceptionHandler[], key MultiMethodKey, multiMethodMap Map<MultiMethodKey,MultiMethod>, localVariableTable LocalVariableTable) : HostedMethod in class com.oracle.svm.hosted.meta.HostedMethod & moved to class com.oracle.svm.hosted.meta.HostedMethodNameFactory",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/HostedMethod.java",
                    "startLine": 156,
                    "endLine": 174,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private create0(wrapped AnalysisMethod, holder HostedType, signature ResolvedSignature<HostedType>, constantPool ConstantPool, handlers ExceptionHandler[], key MultiMethodKey, multiMethodMap Map<MultiMethodKey,MultiMethod>, localVariableTable LocalVariableTable) : HostedMethod"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/HostedMethod.java",
                    "startLine": 171,
                    "endLine": 171,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/HostedMethodNameFactory.java",
                    "startLine": 51,
                    "endLine": 53,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public singleton() : HostedMethodNameFactory"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/HostedMethodNameFactory.java",
                    "startLine": 52,
                    "endLine": 52,
                    "startColumn": 9,
                    "endColumn": 70,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/HostedMethod.java",
                    "startLine": 148,
                    "endLine": 166,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private create0(wrapped AnalysisMethod, holder HostedType, signature ResolvedSignature<HostedType>, constantPool ConstantPool, handlers ExceptionHandler[], key MultiMethodKey, multiMethodMap Map<MultiMethodKey,MultiMethod>, localVariableTable LocalVariableTable) : HostedMethod"
                },
                {
                    "filePath": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/meta/HostedMethod.java",
                    "startLine": 163,
                    "endLine": 163,
                    "startColumn": 56,
                    "endColumn": 91,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "HostedMethodNameFactory.singleton()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 561
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "effcb4c60c4754ee23d246d9fa5182cf2f3da67d",
        "url": "https://github.com/oracle/graal/commit/effcb4c60c4754ee23d246d9fa5182cf2f3da67d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getCallTreeRoots(universe AnalysisUniverse) : List<AnalysisMethod> extracted from public buildCallTree() : void in class com.oracle.graal.pointsto.reports.CallTreePrinter & moved to class com.oracle.graal.pointsto.meta.AnalysisUniverse",
            "leftSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 183,
                    "endLine": 231,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public buildCallTree() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 185,
                    "endLine": 185,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 188,
                    "endLine": 188,
                    "startColumn": 17,
                    "endColumn": 30,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 192,
                    "endLine": 192,
                    "startColumn": 21,
                    "endColumn": 77,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 193,
                    "endLine": 193,
                    "startColumn": 21,
                    "endColumn": 37,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 187,
                    "endLine": 189,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 191,
                    "endLine": 194,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 190,
                    "endLine": 195,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 186,
                    "endLine": 196,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 187,
                    "endLine": 189,
                    "startColumn": 78,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 191,
                    "endLine": 194,
                    "startColumn": 83,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 190,
                    "endLine": 195,
                    "startColumn": 42,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 186,
                    "endLine": 196,
                    "startColumn": 64,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 566,
                    "endLine": 587,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getCallTreeRoots(universe AnalysisUniverse) : List<AnalysisMethod>"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 574,
                    "endLine": 574,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 577,
                    "endLine": 577,
                    "startColumn": 17,
                    "endColumn": 30,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 581,
                    "endLine": 581,
                    "startColumn": 21,
                    "endColumn": 77,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 582,
                    "endLine": 582,
                    "startColumn": 21,
                    "endColumn": 37,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 576,
                    "endLine": 578,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 580,
                    "endLine": 583,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 579,
                    "endLine": 584,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 575,
                    "endLine": 585,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 576,
                    "endLine": 578,
                    "startColumn": 78,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 580,
                    "endLine": 583,
                    "startColumn": 83,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 579,
                    "endLine": 584,
                    "startColumn": 42,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 575,
                    "endLine": 585,
                    "startColumn": 56,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 184,
                    "endLine": 221,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public buildCallTree() : void"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/reports/CallTreePrinter.java",
                    "startLine": 186,
                    "endLine": 186,
                    "startColumn": 38,
                    "endColumn": 89,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "AnalysisUniverse.getCallTreeRoots(bb.getUniverse())"
                },
                {
                    "filePath": "substratevm/src/com.oracle.graal.pointsto/src/com/oracle/graal/pointsto/meta/AnalysisUniverse.java",
                    "startLine": 586,
                    "endLine": 586,
                    "startColumn": 9,
                    "endColumn": 22,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 562
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "url": "https://github.com/oracle/graal/commit/abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public moveInt(dst Register, imm int) : void extracted from public emitCode(crb CompilationResultBuilder, masm AMD64MacroAssembler) : void in class jdk.graal.compiler.lir.amd64.AMD64ConvertFloatToIntegerOp & moved to class jdk.graal.compiler.asm.amd64.AMD64MacroAssembler",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64ConvertFloatToIntegerOp.java",
                    "startLine": 86,
                    "endLine": 163,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public emitCode(crb CompilationResultBuilder, masm AMD64MacroAssembler) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64ConvertFloatToIntegerOp.java",
                    "startLine": 132,
                    "endLine": 132,
                    "startColumn": 17,
                    "endColumn": 35,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1443,
                    "endLine": 1452,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public moveInt(dst Register, imm int) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1451,
                    "endLine": 1451,
                    "startColumn": 9,
                    "endColumn": 24,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64ConvertFloatToIntegerOp.java",
                    "startLine": 86,
                    "endLine": 163,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public emitCode(crb CompilationResultBuilder, masm AMD64MacroAssembler) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64ConvertFloatToIntegerOp.java",
                    "startLine": 132,
                    "endLine": 132,
                    "startColumn": 17,
                    "endColumn": 37,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "masm.moveInt(dst,0)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1445,
                    "endLine": 1445,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1447,
                    "endLine": 1447,
                    "startColumn": 17,
                    "endColumn": 46,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1448,
                    "endLine": 1448,
                    "startColumn": 17,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1446,
                    "endLine": 1449,
                    "startColumn": 59,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1446,
                    "endLine": 1449,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1444,
                    "endLine": 1450,
                    "startColumn": 23,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1444,
                    "endLine": 1450,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 563
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "url": "https://github.com/oracle/graal/commit/abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public moveInt(dst AMD64Address, imm int) : void extracted from public const2stack(crb CompilationResultBuilder, masm AMD64MacroAssembler, result Value, input JavaConstant) : void in class jdk.graal.compiler.lir.amd64.AMD64Move & moved to class jdk.graal.compiler.asm.amd64.AMD64MacroAssembler",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 788,
                    "endLine": 840,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public const2stack(crb CompilationResultBuilder, masm AMD64MacroAssembler, result Value, input JavaConstant) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 831,
                    "endLine": 831,
                    "startColumn": 17,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1454,
                    "endLine": 1463,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public moveInt(dst AMD64Address, imm int) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1462,
                    "endLine": 1462,
                    "startColumn": 9,
                    "endColumn": 24,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 787,
                    "endLine": 839,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public const2stack(crb CompilationResultBuilder, masm AMD64MacroAssembler, result Value, input JavaConstant) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 830,
                    "endLine": 830,
                    "startColumn": 17,
                    "endColumn": 46,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "masm.moveInt(dest,(int)imm)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1456,
                    "endLine": 1456,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1458,
                    "endLine": 1458,
                    "startColumn": 17,
                    "endColumn": 46,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1459,
                    "endLine": 1459,
                    "startColumn": 17,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1457,
                    "endLine": 1460,
                    "startColumn": 59,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1457,
                    "endLine": 1460,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1455,
                    "endLine": 1461,
                    "startColumn": 23,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1455,
                    "endLine": 1461,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 564
    },
    {
        "repository": "https://github.com/oracle/graal.git",
        "sha1": "abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "url": "https://github.com/oracle/graal/commit/abef2e2e60ecca41f00b487d04696a7bc53f4c85",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public moveIntSignExtend(result Register, imm int) : void extracted from public const2reg(crb CompilationResultBuilder, masm AMD64MacroAssembler, result Register, input JavaConstant, moveKind AMD64Kind) : void in class jdk.graal.compiler.lir.amd64.AMD64Move & moved to class jdk.graal.compiler.asm.amd64.AMD64MacroAssembler",
            "leftSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 684,
                    "endLine": 764,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public const2reg(crb CompilationResultBuilder, masm AMD64MacroAssembler, result Register, input JavaConstant, moveKind AMD64Kind) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 706,
                    "endLine": 706,
                    "startColumn": 21,
                    "endColumn": 63,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1465,
                    "endLine": 1474,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public moveIntSignExtend(result Register, imm int) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1473,
                    "endLine": 1473,
                    "startColumn": 9,
                    "endColumn": 29,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 684,
                    "endLine": 763,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public const2reg(crb CompilationResultBuilder, masm AMD64MacroAssembler, result Register, input JavaConstant, moveKind AMD64Kind) : void"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 705,
                    "endLine": 705,
                    "startColumn": 21,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "masm.moveIntSignExtend(result,(int)input.asLong())"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/lir/amd64/AMD64Move.java",
                    "startLine": 739,
                    "endLine": 739,
                    "startColumn": 25,
                    "endColumn": 58,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "masm.moveIntSignExtend(result,0)"
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1467,
                    "endLine": 1467,
                    "startColumn": 13,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1470,
                    "endLine": 1470,
                    "startColumn": 17,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1469,
                    "endLine": 1469,
                    "startColumn": 17,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1468,
                    "endLine": 1471,
                    "startColumn": 59,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1468,
                    "endLine": 1471,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1466,
                    "endLine": 1472,
                    "startColumn": 23,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "compiler/src/jdk.graal.compiler/src/jdk/graal/compiler/asm/amd64/AMD64MacroAssembler.java",
                    "startLine": 1466,
                    "endLine": 1472,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 565
    }
]