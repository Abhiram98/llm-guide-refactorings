[
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "6f0d07633a5c8e6511f3d16e04561cb277b65407",
        "url": "https://github.com/apache/flink/commit/6f0d07633a5c8e6511f3d16e04561cb277b65407",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getWindowSize() : Optional<Duration> extracted from private createEndingState() : State<T> in class org.apache.flink.cep.nfa.compiler.NFACompiler.NFAFactoryCompiler & moved to class org.apache.flink.cep.pattern.Quantifier.Times",
            "leftSideLocations": [
                {
                    "filePath": "flink-libraries/flink-cep/src/main/java/org/apache/flink/cep/nfa/compiler/NFACompiler.java",
                    "startLine": 314,
                    "endLine": 324,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private createEndingState() : State<T>"
                },
                {
                    "filePath": "flink-libraries/flink-cep/src/main/java/org/apache/flink/cep/nfa/compiler/NFACompiler.java",
                    "startLine": 321,
                    "endLine": 322,
                    "startColumn": 13,
                    "endColumn": 99,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-libraries/flink-cep/src/main/java/org/apache/flink/cep/pattern/Quantifier.java",
                    "startLine": 222,
                    "endLine": 224,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getWindowSize() : Optional<Duration>"
                },
                {
                    "filePath": "flink-libraries/flink-cep/src/main/java/org/apache/flink/cep/pattern/Quantifier.java",
                    "startLine": 223,
                    "endLine": 223,
                    "startColumn": 13,
                    "endColumn": 52,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-libraries/flink-cep/src/main/java/org/apache/flink/cep/nfa/compiler/NFACompiler.java",
                    "startLine": 314,
                    "endLine": 323,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private createEndingState() : State<T>"
                },
                {
                    "filePath": "flink-libraries/flink-cep/src/main/java/org/apache/flink/cep/nfa/compiler/NFACompiler.java",
                    "startLine": 321,
                    "endLine": 321,
                    "startColumn": 26,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "currentPattern.getWindowSize()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 21,
        "extraction_results": {
            "success": true,
            "newCommitHash": "eeaa68241593014a50ebbbf8bed822562d96ea3b",
            "newBranchName": "extract-getWindowSize-createEndingState-639deec"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "21403e31f4761bdddf5e4e802e0e5eb9b4533202",
        "url": "https://github.com/apache/flink/commit/21403e31f4761bdddf5e4e802e0e5eb9b4533202",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isQueryHint(hintName String) : boolean extracted from public visit(other RelNode) : RelNode in class org.apache.flink.table.planner.hint.ClearJoinHintsOnUnmatchedNodesShuttle & moved to class org.apache.flink.table.planner.hint.FlinkHints",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/hint/ClearJoinHintsOnUnmatchedNodesShuttle.java",
                    "startLine": 51,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public visit(other RelNode) : RelNode"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/hint/ClearJoinHintsOnUnmatchedNodesShuttle.java",
                    "startLine": 62,
                    "endLine": 62,
                    "startColumn": 42,
                    "endColumn": 81,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/hint/FlinkHints.java",
                    "startLine": 265,
                    "endLine": 268,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isQueryHint(hintName String) : boolean"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/hint/FlinkHints.java",
                    "startLine": 267,
                    "endLine": 267,
                    "startColumn": 9,
                    "endColumn": 95,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/hint/ClearQueryHintsOnUnmatchedNodesShuttle.java",
                    "startLine": 51,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public visit(other RelNode) : RelNode"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/hint/ClearQueryHintsOnUnmatchedNodesShuttle.java",
                    "startLine": 62,
                    "endLine": 62,
                    "startColumn": 42,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FlinkHints.isQueryHint(h.hintName)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 22,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "6afe98daf6190a77a67a1fa8ac8f12337a75f8e7",
        "url": "https://github.com/apache/flink/commit/6afe98daf6190a77a67a1fa8ac8f12337a75f8e7",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public createWriter(context WriterInitContext) : SinkWriter<InputT> extracted from public createWriter(initContext InitContext, context StateInitializationContext) : SinkWriter<InputT> in class org.apache.flink.streaming.runtime.operators.sink.StatefulSinkWriterStateHandler & moved to class org.apache.flink.api.connector.sink2.Sink",
            "leftSideLocations": [
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/sink/StatefulSinkWriterStateHandler.java",
                    "startLine": 89,
                    "endLine": 120,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public createWriter(initContext InitContext, context StateInitializationContext) : SinkWriter<InputT>"
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/sink/StatefulSinkWriterStateHandler.java",
                    "startLine": 117,
                    "endLine": 117,
                    "startColumn": 13,
                    "endColumn": 57,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/connector/sink2/Sink.java",
                    "startLine": 67,
                    "endLine": 76,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public createWriter(context WriterInitContext) : SinkWriter<InputT>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/connector/sink2/Sink.java",
                    "startLine": 75,
                    "endLine": 75,
                    "startColumn": 9,
                    "endColumn": 62,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/sink/StatefulSinkWriterStateHandler.java",
                    "startLine": 92,
                    "endLine": 128,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public createWriter(initContext WriterInitContext, context StateInitializationContext) : SinkWriter<InputT>"
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/sink/StatefulSinkWriterStateHandler.java",
                    "startLine": 125,
                    "endLine": 125,
                    "startColumn": 31,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "sink.createWriter(initContext)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 23,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "40cbf231e3dc15129b69136941adc15beebe8ef6",
        "url": "https://github.com/apache/flink/commit/40cbf231e3dc15129b69136941adc15beebe8ef6",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public createWriter(context WriterInitContext) : SinkWriter<InputT> extracted from public createWriter(initContext InitContext, context StateInitializationContext) : SinkWriter<InputT> in class org.apache.flink.streaming.runtime.operators.sink.StatefulSinkWriterStateHandler & moved to class org.apache.flink.api.connector.sink2.Sink",
            "leftSideLocations": [
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/sink/StatefulSinkWriterStateHandler.java",
                    "startLine": 89,
                    "endLine": 120,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public createWriter(initContext InitContext, context StateInitializationContext) : SinkWriter<InputT>"
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/sink/StatefulSinkWriterStateHandler.java",
                    "startLine": 117,
                    "endLine": 117,
                    "startColumn": 13,
                    "endColumn": 57,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/connector/sink2/Sink.java",
                    "startLine": 69,
                    "endLine": 78,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public createWriter(context WriterInitContext) : SinkWriter<InputT>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/connector/sink2/Sink.java",
                    "startLine": 77,
                    "endLine": 77,
                    "startColumn": 9,
                    "endColumn": 62,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/sink/StatefulSinkWriterStateHandler.java",
                    "startLine": 92,
                    "endLine": 128,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public createWriter(initContext WriterInitContext, context StateInitializationContext) : SinkWriter<InputT>"
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/sink/StatefulSinkWriterStateHandler.java",
                    "startLine": 125,
                    "endLine": 125,
                    "startColumn": 31,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "sink.createWriter(initContext)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 23,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "1f7622d4d23bfcb76f466469ec36585054864f04",
        "url": "https://github.com/apache/flink/commit/1f7622d4d23bfcb76f466469ec36585054864f04",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public convertConfigToWritableLines(configuration Configuration, flattenYaml boolean) : List<String> extracted from public appendConfiguration(config Configuration) : void in class org.apache.flink.tests.util.flink.FlinkDistribution & moved to class org.apache.flink.configuration.ConfigurationUtils",
            "leftSideLocations": [
                {
                    "filePath": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkDistribution.java",
                    "startLine": 415,
                    "endLine": 429,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public appendConfiguration(config Configuration) : void"
                },
                {
                    "filePath": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkDistribution.java",
                    "startLine": 422,
                    "endLine": 422,
                    "startColumn": 39,
                    "endColumn": 79,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkDistribution.java",
                    "startLine": 420,
                    "endLine": 423,
                    "startColumn": 9,
                    "endColumn": 55,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 204,
                    "endLine": 258,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public convertConfigToWritableLines(configuration Configuration, flattenYaml boolean) : List<String>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 255,
                    "endLine": 255,
                    "startColumn": 35,
                    "endColumn": 75,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 254,
                    "endLine": 256,
                    "startColumn": 13,
                    "endColumn": 51,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkDistribution.java",
                    "startLine": 416,
                    "endLine": 426,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public appendConfiguration(config Configuration) : void"
                },
                {
                    "filePath": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkDistribution.java",
                    "startLine": 425,
                    "endLine": 425,
                    "startColumn": 17,
                    "endColumn": 84,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ConfigurationUtils.convertConfigToWritableLines(mergedConfig,true)"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 250,
                    "endLine": 251,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 253,
                    "endLine": 253,
                    "startColumn": 13,
                    "endColumn": 85,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 249,
                    "endLine": 252,
                    "startColumn": 57,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 252,
                    "endLine": 257,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 249,
                    "endLine": 257,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 24,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "1f7622d4d23bfcb76f466469ec36585054864f04",
        "url": "https://github.com/apache/flink/commit/1f7622d4d23bfcb76f466469ec36585054864f04",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public convertConfigToWritableLines(configuration Configuration, flattenYaml boolean) : List<String> extracted from private createTemporaryFlinkConfFile(finalConfiguration Configuration, tempDirectory Path) : Path in class org.apache.flink.connector.testframe.container.FlinkImageBuilder & moved to class org.apache.flink.configuration.ConfigurationUtils",
            "leftSideLocations": [
                {
                    "filePath": "flink-test-utils-parent/flink-connector-test-utils/src/main/java/org/apache/flink/connector/testframe/container/FlinkImageBuilder.java",
                    "startLine": 293,
                    "endLine": 306,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private createTemporaryFlinkConfFile(finalConfiguration Configuration, tempDirectory Path) : Path"
                },
                {
                    "filePath": "flink-test-utils-parent/flink-connector-test-utils/src/main/java/org/apache/flink/connector/testframe/container/FlinkImageBuilder.java",
                    "startLine": 302,
                    "endLine": 302,
                    "startColumn": 39,
                    "endColumn": 79,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-test-utils-parent/flink-connector-test-utils/src/main/java/org/apache/flink/connector/testframe/container/FlinkImageBuilder.java",
                    "startLine": 299,
                    "endLine": 303,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 204,
                    "endLine": 258,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public convertConfigToWritableLines(configuration Configuration, flattenYaml boolean) : List<String>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 255,
                    "endLine": 255,
                    "startColumn": 35,
                    "endColumn": 75,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 254,
                    "endLine": 256,
                    "startColumn": 13,
                    "endColumn": 51,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-test-utils-parent/flink-connector-test-utils/src/main/java/org/apache/flink/connector/testframe/container/FlinkImageBuilder.java",
                    "startLine": 293,
                    "endLine": 304,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private createTemporaryFlinkConfFile(finalConfiguration Configuration, tempDirectory Path) : Path"
                },
                {
                    "filePath": "flink-test-utils-parent/flink-connector-test-utils/src/main/java/org/apache/flink/connector/testframe/container/FlinkImageBuilder.java",
                    "startLine": 301,
                    "endLine": 301,
                    "startColumn": 17,
                    "endColumn": 90,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ConfigurationUtils.convertConfigToWritableLines(finalConfiguration,true)"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 250,
                    "endLine": 251,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 253,
                    "endLine": 253,
                    "startColumn": 13,
                    "endColumn": 85,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 249,
                    "endLine": 252,
                    "startColumn": 57,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 252,
                    "endLine": 257,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/configuration/ConfigurationUtils.java",
                    "startLine": 249,
                    "endLine": 257,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 25,
        "extraction_results": {
            "success": true,
            "newCommitHash": "6e5b6b17fcd83bdb84e929e7e16b80da3554df2b",
            "newBranchName": "extract-convertConfigToWritableLines-createTemporaryFlinkConfFile-bcd448b"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "9a22ff7e961cb5d8b52401e567e59954bff35d50",
        "url": "https://github.com/apache/flink/commit/9a22ff7e961cb5d8b52401e567e59954bff35d50",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public accept(stateWindowResult W, stateWindowsToBeMerged Collection<W>) : void extracted from public merge(mergeResult W, mergedWindows Collection<W>, stateWindowResult W, stateWindowsToBeMerged Collection<W>) : void in class org.apache.flink.table.runtime.operators.window.groupwindow.internal.MergingWindowProcessFunction.MergingFunctionImpl & moved to class org.apache.flink.table.runtime.operators.window.groupwindow.internal.MergingWindowProcessFunction.DefaultAccMergingConsumer",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 129,
                    "endLine": 186,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public merge(mergeResult W, mergedWindows Collection<W>, stateWindowResult W, stateWindowsToBeMerged Collection<W>) : void"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 169,
                    "endLine": 169,
                    "startColumn": 17,
                    "endColumn": 82,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 171,
                    "endLine": 171,
                    "startColumn": 21,
                    "endColumn": 71,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 173,
                    "endLine": 173,
                    "startColumn": 17,
                    "endColumn": 80,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 175,
                    "endLine": 175,
                    "startColumn": 21,
                    "endColumn": 64,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 177,
                    "endLine": 177,
                    "startColumn": 25,
                    "endColumn": 56,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 180,
                    "endLine": 180,
                    "startColumn": 21,
                    "endColumn": 45,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 181,
                    "endLine": 181,
                    "startColumn": 21,
                    "endColumn": 47,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 183,
                    "endLine": 183,
                    "startColumn": 17,
                    "endColumn": 64,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 184,
                    "endLine": 184,
                    "startColumn": 17,
                    "endColumn": 73,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 170,
                    "endLine": 172,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 176,
                    "endLine": 178,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 174,
                    "endLine": 182,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 170,
                    "endLine": 172,
                    "startColumn": 40,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 176,
                    "endLine": 178,
                    "startColumn": 38,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 174,
                    "endLine": 182,
                    "startColumn": 52,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 214,
                    "endLine": 233,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public accept(stateWindowResult W, stateWindowsToBeMerged Collection<W>) : void"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 13,
                    "endColumn": 78,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 219,
                    "endLine": 219,
                    "startColumn": 17,
                    "endColumn": 67,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 221,
                    "endLine": 221,
                    "startColumn": 13,
                    "endColumn": 76,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 223,
                    "endLine": 223,
                    "startColumn": 17,
                    "endColumn": 60,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 225,
                    "endLine": 225,
                    "startColumn": 21,
                    "endColumn": 52,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 228,
                    "endLine": 228,
                    "startColumn": 17,
                    "endColumn": 41,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 229,
                    "endLine": 229,
                    "startColumn": 17,
                    "endColumn": 43,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 231,
                    "endLine": 231,
                    "startColumn": 13,
                    "endColumn": 60,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 232,
                    "endLine": 232,
                    "startColumn": 13,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 218,
                    "endLine": 220,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 224,
                    "endLine": 226,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 222,
                    "endLine": 230,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 218,
                    "endLine": 220,
                    "startColumn": 36,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 224,
                    "endLine": 226,
                    "startColumn": 34,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 222,
                    "endLine": 230,
                    "startColumn": 48,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 145,
                    "endLine": 191,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public merge(mergeResult W, mergedWindows Collection<W>, stateWindowResult W, stateWindowsToBeMerged Collection<W>) : void"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/operators/window/groupwindow/internal/MergingWindowProcessFunction.java",
                    "startLine": 186,
                    "endLine": 186,
                    "startColumn": 21,
                    "endColumn": 89,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "accMergingConsumer.accept(stateWindowResult,stateWindowsToBeMerged)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 26,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "84444d5071984a8543a81574dc69c0c9849a8a4a",
        "url": "https://github.com/apache/flink/commit/84444d5071984a8543a81574dc69c0c9849a8a4a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public createSerializer(config SerializerConfig) : TypeSerializer<T> extracted from public initializeSerializerUnlessSet(executionConfig ExecutionConfig) : void in class org.apache.flink.api.common.state.StateDescriptor & moved to class org.apache.flink.api.common.typeinfo.TypeInformation",
            "leftSideLocations": [
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/state/StateDescriptor.java",
                    "startLine": 312,
                    "endLine": 326,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public initializeSerializerUnlessSet(executionConfig ExecutionConfig) : void"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/state/StateDescriptor.java",
                    "startLine": 323,
                    "endLine": 323,
                    "startColumn": 25,
                    "endColumn": 82,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/state/StateDescriptor.java",
                    "startLine": 322,
                    "endLine": 324,
                    "startColumn": 65,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/typeinfo/TypeInformation.java",
                    "startLine": 171,
                    "endLine": 186,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public createSerializer(config SerializerConfig) : TypeSerializer<T>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/typeinfo/TypeInformation.java",
                    "startLine": 182,
                    "endLine": 182,
                    "startColumn": 13,
                    "endColumn": 54,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/typeinfo/TypeInformation.java",
                    "startLine": 180,
                    "endLine": 183,
                    "startColumn": 29,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/state/StateDescriptor.java",
                    "startLine": 312,
                    "endLine": 329,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public initializeSerializerUnlessSet(executionConfig ExecutionConfig) : void"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/state/StateDescriptor.java",
                    "startLine": 323,
                    "endLine": 326,
                    "startColumn": 32,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "typeInformation.createSerializer(executionConfig == null ? null : executionConfig.getSerializerConfig())"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/typeinfo/TypeInformation.java",
                    "startLine": 181,
                    "endLine": 181,
                    "startColumn": 13,
                    "endColumn": 100,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/typeinfo/TypeInformation.java",
                    "startLine": 184,
                    "endLine": 184,
                    "startColumn": 13,
                    "endColumn": 61,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/typeinfo/TypeInformation.java",
                    "startLine": 183,
                    "endLine": 185,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/api/common/typeinfo/TypeInformation.java",
                    "startLine": 180,
                    "endLine": 185,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 27,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "f32b2a9e347d7539819a88252e4e32deba247515",
        "url": "https://github.com/apache/flink/commit/f32b2a9e347d7539819a88252e4e32deba247515",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getOneInputOperatorDefaultMeta(stateTtlFromHint Long, tableConfig ReadableConfig, stateName String) : List<StateMetadata> extracted from public StreamExecGlobalGroupAggregate(tableConfig ReadableConfig, grouping int[], aggCalls AggregateCall[], aggCallNeedRetractions boolean[], localAggInputRowType RowType, generateUpdateBefore boolean, needRetraction boolean, indexOfCountStar Integer, inputProperty InputProperty, outputType RowType, description String) in class org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecGlobalGroupAggregate & moved to class org.apache.flink.table.planner.plan.nodes.exec.StateMetadata",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecGlobalGroupAggregate.java",
                    "startLine": 127,
                    "endLine": 155,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public StreamExecGlobalGroupAggregate(tableConfig ReadableConfig, grouping int[], aggCalls AggregateCall[], aggCallNeedRetractions boolean[], localAggInputRowType RowType, generateUpdateBefore boolean, needRetraction boolean, indexOfCountStar Integer, inputProperty InputProperty, outputType RowType, description String)"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecGlobalGroupAggregate.java",
                    "startLine": 139,
                    "endLine": 154,
                    "startColumn": 9,
                    "endColumn": 30,
                    "codeElementType": "CONSTRUCTOR_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/StateMetadata.java",
                    "startLine": 112,
                    "endLine": 121,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getOneInputOperatorDefaultMeta(stateTtlFromHint Long, tableConfig ReadableConfig, stateName String) : List<StateMetadata>"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/StateMetadata.java",
                    "startLine": 114,
                    "endLine": 120,
                    "startColumn": 9,
                    "endColumn": 37,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecGlobalGroupAggregate.java",
                    "startLine": 127,
                    "endLine": 157,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public StreamExecGlobalGroupAggregate(tableConfig ReadableConfig, grouping int[], aggCalls AggregateCall[], aggCallNeedRetractions boolean[], localAggInputRowType RowType, generateUpdateBefore boolean, needRetraction boolean, indexOfCountStar Integer, stateTtlFromHint Long, inputProperty InputProperty, outputType RowType, description String)"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecGlobalGroupAggregate.java",
                    "startLine": 152,
                    "endLine": 153,
                    "startColumn": 17,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "StateMetadata.getOneInputOperatorDefaultMeta(stateTtlFromHint,tableConfig,STATE_NAME)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 28,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "f32b2a9e347d7539819a88252e4e32deba247515",
        "url": "https://github.com/apache/flink/commit/f32b2a9e347d7539819a88252e4e32deba247515",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getOneInputOperatorDefaultMeta(stateTtlFromHint Long, tableConfig ReadableConfig, stateName String) : List<StateMetadata> extracted from public StreamExecGroupAggregate(tableConfig ReadableConfig, grouping int[], aggCalls AggregateCall[], aggCallNeedRetractions boolean[], generateUpdateBefore boolean, needRetraction boolean, inputProperty InputProperty, outputType RowType, description String) in class org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecGroupAggregate & moved to class org.apache.flink.table.planner.plan.nodes.exec.StateMetadata",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecGroupAggregate.java",
                    "startLine": 116,
                    "endLine": 139,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public StreamExecGroupAggregate(tableConfig ReadableConfig, grouping int[], aggCalls AggregateCall[], aggCallNeedRetractions boolean[], generateUpdateBefore boolean, needRetraction boolean, inputProperty InputProperty, outputType RowType, description String)"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecGroupAggregate.java",
                    "startLine": 126,
                    "endLine": 138,
                    "startColumn": 9,
                    "endColumn": 30,
                    "codeElementType": "CONSTRUCTOR_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/StateMetadata.java",
                    "startLine": 112,
                    "endLine": 121,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getOneInputOperatorDefaultMeta(stateTtlFromHint Long, tableConfig ReadableConfig, stateName String) : List<StateMetadata>"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/StateMetadata.java",
                    "startLine": 114,
                    "endLine": 120,
                    "startColumn": 9,
                    "endColumn": 37,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecGroupAggregate.java",
                    "startLine": 116,
                    "endLine": 141,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public StreamExecGroupAggregate(tableConfig ReadableConfig, grouping int[], aggCalls AggregateCall[], aggCallNeedRetractions boolean[], generateUpdateBefore boolean, needRetraction boolean, stateTtlFromHint Long, inputProperty InputProperty, outputType RowType, description String)"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecGroupAggregate.java",
                    "startLine": 136,
                    "endLine": 137,
                    "startColumn": 17,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "StateMetadata.getOneInputOperatorDefaultMeta(stateTtlFromHint,tableConfig,STATE_NAME)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 29,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "f32b2a9e347d7539819a88252e4e32deba247515",
        "url": "https://github.com/apache/flink/commit/f32b2a9e347d7539819a88252e4e32deba247515",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getOneInputOperatorDefaultMeta(stateTtlFromHint Long, tableConfig ReadableConfig, stateName String) : List<StateMetadata> extracted from public StreamExecIncrementalGroupAggregate(tableConfig ReadableConfig, partialAggGrouping int[], finalAggGrouping int[], partialOriginalAggCalls AggregateCall[], partialAggCallNeedRetractions boolean[], partialLocalAggInputType RowType, partialAggNeedRetraction boolean, inputProperty InputProperty, outputType RowType, description String) in class org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecIncrementalGroupAggregate & moved to class org.apache.flink.table.planner.plan.nodes.exec.StateMetadata",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecIncrementalGroupAggregate.java",
                    "startLine": 121,
                    "endLine": 147,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public StreamExecIncrementalGroupAggregate(tableConfig ReadableConfig, partialAggGrouping int[], finalAggGrouping int[], partialOriginalAggCalls AggregateCall[], partialAggCallNeedRetractions boolean[], partialLocalAggInputType RowType, partialAggNeedRetraction boolean, inputProperty InputProperty, outputType RowType, description String)"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecIncrementalGroupAggregate.java",
                    "startLine": 132,
                    "endLine": 146,
                    "startColumn": 9,
                    "endColumn": 30,
                    "codeElementType": "CONSTRUCTOR_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/StateMetadata.java",
                    "startLine": 112,
                    "endLine": 121,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getOneInputOperatorDefaultMeta(stateTtlFromHint Long, tableConfig ReadableConfig, stateName String) : List<StateMetadata>"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/StateMetadata.java",
                    "startLine": 114,
                    "endLine": 120,
                    "startColumn": 9,
                    "endColumn": 37,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecIncrementalGroupAggregate.java",
                    "startLine": 121,
                    "endLine": 149,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public StreamExecIncrementalGroupAggregate(tableConfig ReadableConfig, partialAggGrouping int[], finalAggGrouping int[], partialOriginalAggCalls AggregateCall[], partialAggCallNeedRetractions boolean[], partialLocalAggInputType RowType, partialAggNeedRetraction boolean, stateTtlFromHint Long, inputProperty InputProperty, outputType RowType, description String)"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecIncrementalGroupAggregate.java",
                    "startLine": 144,
                    "endLine": 145,
                    "startColumn": 17,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "StateMetadata.getOneInputOperatorDefaultMeta(stateTtlFromHint,tableConfig,STATE_NAME)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 30,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "cd9a9f76cbc3a288abd49ba12c0edba3ce208ec7",
        "url": "https://github.com/apache/flink/commit/cd9a9f76cbc3a288abd49ba12c0edba3ce208ec7",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(environment Environment) : SubtaskKey extracted from public FsMergingCheckpointStorageAccess(fs FileSystem, checkpointBaseDirectory Path, defaultSavepointDirectory Path, jobId JobID, fileSizeThreshold int, writeBufferSize int, fileMergingSnapshotManager FileMergingSnapshotManager, environment Environment) in class org.apache.flink.runtime.state.filesystem.FsMergingCheckpointStorageAccess & moved to class org.apache.flink.runtime.checkpoint.filemerging.FileMergingSnapshotManager.SubtaskKey",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsMergingCheckpointStorageAccess.java",
                    "startLine": 44,
                    "endLine": 67,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public FsMergingCheckpointStorageAccess(fs FileSystem, checkpointBaseDirectory Path, defaultSavepointDirectory Path, jobId JobID, fileSizeThreshold int, writeBufferSize int, fileMergingSnapshotManager FileMergingSnapshotManager, environment Environment)"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsMergingCheckpointStorageAccess.java",
                    "startLine": 63,
                    "endLine": 66,
                    "startColumn": 9,
                    "endColumn": 52,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/filemerging/FileMergingSnapshotManager.java",
                    "startLine": 181,
                    "endLine": 185,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(environment Environment) : SubtaskKey"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/filemerging/FileMergingSnapshotManager.java",
                    "startLine": 182,
                    "endLine": 184,
                    "startColumn": 13,
                    "endColumn": 48,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsMergingCheckpointStorageAccess.java",
                    "startLine": 43,
                    "endLine": 63,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public FsMergingCheckpointStorageAccess(fs FileSystem, checkpointBaseDirectory Path, defaultSavepointDirectory Path, jobId JobID, fileSizeThreshold int, writeBufferSize int, fileMergingSnapshotManager FileMergingSnapshotManager, environment Environment)"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsMergingCheckpointStorageAccess.java",
                    "startLine": 62,
                    "endLine": 62,
                    "startColumn": 27,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SubtaskKey.of(environment)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 31,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "21306f4f5dbcc72a2cde2f15e6c072951aa03f49",
        "url": "https://github.com/apache/flink/commit/21306f4f5dbcc72a2cde2f15e6c072951aa03f49",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private deleteBaseDirectory(baseDirectory String) : void extracted from public close() : void in class org.apache.flink.python.env.AbstractPythonEnvironmentManager.PythonLeasedResource & moved to class org.apache.flink.python.env.AbstractPythonEnvironmentManager",
            "leftSideLocations": [
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 476,
                    "endLine": 501,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public close() : void"
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 478,
                    "endLine": 478,
                    "startColumn": 13,
                    "endColumn": 29,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 481,
                    "endLine": 481,
                    "startColumn": 21,
                    "endColumn": 72,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 482,
                    "endLine": 482,
                    "startColumn": 21,
                    "endColumn": 27,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 484,
                    "endLine": 484,
                    "startColumn": 21,
                    "endColumn": 31,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 486,
                    "endLine": 490,
                    "startColumn": 25,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 492,
                    "endLine": 496,
                    "startColumn": 25,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 497,
                    "endLine": 497,
                    "startColumn": 25,
                    "endColumn": 31,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 480,
                    "endLine": 499,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 485,
                    "endLine": 498,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 483,
                    "endLine": 499,
                    "startColumn": 19,
                    "endColumn": 18,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 479,
                    "endLine": 500,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "WHILE_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 485,
                    "endLine": 491,
                    "startColumn": 68,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 491,
                    "endLine": 498,
                    "startColumn": 28,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 479,
                    "endLine": 500,
                    "startColumn": 26,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 223,
                    "endLine": 247,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private deleteBaseDirectory(baseDirectory String) : void"
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 224,
                    "endLine": 224,
                    "startColumn": 9,
                    "endColumn": 25,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 227,
                    "endLine": 227,
                    "startColumn": 17,
                    "endColumn": 68,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 228,
                    "endLine": 228,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 230,
                    "endLine": 230,
                    "startColumn": 17,
                    "endColumn": 27,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 232,
                    "endLine": 236,
                    "startColumn": 21,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 238,
                    "endLine": 242,
                    "startColumn": 21,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 243,
                    "endLine": 243,
                    "startColumn": 21,
                    "endColumn": 27,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 226,
                    "endLine": 245,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 231,
                    "endLine": 244,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 229,
                    "endLine": 245,
                    "startColumn": 15,
                    "endColumn": 14,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 225,
                    "endLine": 246,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "WHILE_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 231,
                    "endLine": 237,
                    "startColumn": 64,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 237,
                    "endLine": 244,
                    "startColumn": 24,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 225,
                    "endLine": 246,
                    "startColumn": 22,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 509,
                    "endLine": 512,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public close() : void"
                },
                {
                    "filePath": "flink-python/src/main/java/org/apache/flink/python/env/AbstractPythonEnvironmentManager.java",
                    "startLine": 511,
                    "endLine": 511,
                    "startColumn": 13,
                    "endColumn": 47,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "deleteBaseDirectory(baseDirectory)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 32,
        "extraction_results": {
            "success": true,
            "newCommitHash": "c847763a76ba9a0dccddb2c165b43bb87b81d5ff",
            "newBranchName": "extract-deleteBaseDirectory-close-3959289"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "2e257896661ad5e0dca521fa274cad3a0bae7a61",
        "url": "https://github.com/apache/flink/commit/2e257896661ad5e0dca521fa274cad3a0bae7a61",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getMinBuffersPerGate() : int extracted from public createGateBuffersSpec(configuredMaxRequiredBuffersPerGate Optional<Integer>, configuredNetworkBuffersPerChannel int, configuredFloatingNetworkBuffersPerGate int, partitionType ResultPartitionType, numInputChannels int, enableTieredStorage boolean) : GateBuffersSpec in class org.apache.flink.runtime.io.network.partition.consumer.InputGateSpecUtils & moved to class org.apache.flink.runtime.io.network.partition.hybrid.tiered.common.TieredStorageConfiguration",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/InputGateSpecUtils.java",
                    "startLine": 39,
                    "endLine": 75,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public createGateBuffersSpec(configuredMaxRequiredBuffersPerGate Optional<Integer>, configuredNetworkBuffersPerChannel int, configuredFloatingNetworkBuffersPerGate int, partitionType ResultPartitionType, numInputChannels int, enableTieredStorage boolean) : GateBuffersSpec"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/InputGateSpecUtils.java",
                    "startLine": 64,
                    "endLine": 67,
                    "startColumn": 9,
                    "endColumn": 50,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/InputGateSpecUtils.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 13,
                    "endColumn": 30,
                    "codeElementType": "SIMPLE_NAME",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/common/TieredStorageConfiguration.java",
                    "startLine": 166,
                    "endLine": 173,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getMinBuffersPerGate() : int"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/common/TieredStorageConfiguration.java",
                    "startLine": 172,
                    "endLine": 172,
                    "startColumn": 9,
                    "endColumn": 34,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/common/TieredStorageConfiguration.java",
                    "startLine": 172,
                    "endLine": 172,
                    "startColumn": 16,
                    "endColumn": 33,
                    "codeElementType": "SIMPLE_NAME",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/InputGateSpecUtils.java",
                    "startLine": 38,
                    "endLine": 75,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public createGateBuffersSpec(configuredMaxRequiredBuffersPerGate Optional<Integer>, configuredNetworkBuffersPerChannel int, configuredFloatingNetworkBuffersPerGate int, partitionType ResultPartitionType, numInputChannels int, tieredStorageConfiguration TieredStorageConfiguration) : GateBuffersSpec"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/InputGateSpecUtils.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 27,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "tieredStorageConfiguration.getMinBuffersPerGate()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 33,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "88138d08e731d3084d59bf14cc2fb51bdf4afbd8",
        "url": "https://github.com/apache/flink/commit/88138d08e731d3084d59bf14cc2fb51bdf4afbd8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public builder() : TestingBufferPool.Builder extracted from package testOnUpstreamBlockedAndResumed() : void in class org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannelTest & moved to class org.apache.flink.runtime.io.network.buffer.TestingBufferPool",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java",
                    "startLine": 1376,
                    "endLine": 1423,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package testOnUpstreamBlockedAndResumed() : void"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java",
                    "startLine": 1378,
                    "endLine": 1378,
                    "startColumn": 9,
                    "endColumn": 57,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/buffer/TestingBufferPool.java",
                    "startLine": 130,
                    "endLine": 132,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public builder() : TestingBufferPool.Builder"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/buffer/TestingBufferPool.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java",
                    "startLine": 1379,
                    "endLine": 1433,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package testOnUpstreamBlockedAndResumed() : void"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java",
                    "startLine": 1382,
                    "endLine": 1382,
                    "startColumn": 17,
                    "endColumn": 44,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "TestingBufferPool.builder()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 34,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "88138d08e731d3084d59bf14cc2fb51bdf4afbd8",
        "url": "https://github.com/apache/flink/commit/88138d08e731d3084d59bf14cc2fb51bdf4afbd8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public builder() : TestingBufferPool.Builder extracted from package testRequestBuffer() : void in class org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannelTest & moved to class org.apache.flink.runtime.io.network.buffer.TestingBufferPool",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java",
                    "startLine": 1425,
                    "endLine": 1448,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package testRequestBuffer() : void"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java",
                    "startLine": 1427,
                    "endLine": 1427,
                    "startColumn": 9,
                    "endColumn": 57,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/buffer/TestingBufferPool.java",
                    "startLine": 130,
                    "endLine": 132,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public builder() : TestingBufferPool.Builder"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/buffer/TestingBufferPool.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 9,
                    "endColumn": 48,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java",
                    "startLine": 1435,
                    "endLine": 1465,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package testRequestBuffer() : void"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java",
                    "startLine": 1438,
                    "endLine": 1438,
                    "startColumn": 17,
                    "endColumn": 44,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "TestingBufferPool.builder()"
                }
            ],
            "isStatic": true
        },
        "ref_id": 35,
        "extraction_results": {
            "success": true,
            "newCommitHash": "d03c97b06fe3bff25c9612705ec59b6894725bc9",
            "newBranchName": "extract-builder-testRequestBuffer-2e25789"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "ed75795e97800177cb67141ab838632d5ec55bb5",
        "url": "https://github.com/apache/flink/commit/ed75795e97800177cb67141ab838632d5ec55bb5",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isLocalRecoveryOrLocalBackupEnabled() : boolean extracted from public localStateStoreForSubtask(jobId JobID, allocationID AllocationID, jobVertexID JobVertexID, subtaskIndex int, clusterConfiguration Configuration, jobConfiguration Configuration) : TaskLocalStateStore in class org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager & moved to class org.apache.flink.runtime.state.LocalRecoveryConfig",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/TaskExecutorLocalStateStoresManager.java",
                    "startLine": 123,
                    "endLine": 225,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public localStateStoreForSubtask(jobId JobID, allocationID AllocationID, jobVertexID JobVertexID, subtaskIndex int, clusterConfiguration Configuration, jobConfiguration Configuration) : TaskLocalStateStore"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/TaskExecutorLocalStateStoresManager.java",
                    "startLine": 161,
                    "endLine": 161,
                    "startColumn": 21,
                    "endColumn": 41,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/TaskExecutorLocalStateStoresManager.java",
                    "startLine": 161,
                    "endLine": 161,
                    "startColumn": 21,
                    "endColumn": 41,
                    "codeElementType": "SIMPLE_NAME",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/LocalRecoveryConfig.java",
                    "startLine": 65,
                    "endLine": 67,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isLocalRecoveryOrLocalBackupEnabled() : boolean"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/LocalRecoveryConfig.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 9,
                    "endColumn": 59,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/LocalRecoveryConfig.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 16,
                    "endColumn": 36,
                    "codeElementType": "SIMPLE_NAME",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/TaskExecutorLocalStateStoresManager.java",
                    "startLine": 128,
                    "endLine": 230,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public localStateStoreForSubtask(jobId JobID, allocationID AllocationID, jobVertexID JobVertexID, subtaskIndex int, clusterConfiguration Configuration, jobConfiguration Configuration) : TaskLocalStateStore"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/TaskExecutorLocalStateStoresManager.java",
                    "startLine": 184,
                    "endLine": 184,
                    "startColumn": 21,
                    "endColumn": 78,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "localRecoveryConfig.isLocalRecoveryOrLocalBackupEnabled()"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/state/TaskExecutorLocalStateStoresManager.java",
                    "startLine": 193,
                    "endLine": 193,
                    "startColumn": 28,
                    "endColumn": 85,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "localRecoveryConfig.isLocalRecoveryOrLocalBackupEnabled()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 36,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "294084872604d599c1e2c52302ce0f08bb0e6492",
        "url": "https://github.com/apache/flink/commit/294084872604d599c1e2c52302ce0f08bb0e6492",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public handleRequest(state State, type StateRequestType, payload IN) : InternalStateFuture<OUT> extracted from public asyncClear() : StateFuture<Void> in class org.apache.flink.runtime.taskprocessing.AsyncExecutionControllerTest.TestValueState & moved to class org.apache.flink.runtime.asyncprocessing.AsyncExecutionController",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/taskprocessing/AsyncExecutionControllerTest.java",
                    "startLine": 204,
                    "endLine": 213,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public asyncClear() : StateFuture<Void>"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/taskprocessing/AsyncExecutionControllerTest.java",
                    "startLine": 212,
                    "endLine": 212,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 128,
                    "endLine": 152,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public handleRequest(state State, type StateRequestType, payload IN) : InternalStateFuture<OUT>"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 151,
                    "endLine": 151,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionControllerTest.java",
                    "startLine": 248,
                    "endLine": 251,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public asyncClear() : StateFuture<Void>"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionControllerTest.java",
                    "startLine": 250,
                    "endLine": 250,
                    "startColumn": 20,
                    "endColumn": 94,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asyncExecutionController.handleRequest(this,StateRequestType.CLEAR,null)"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 140,
                    "endLine": 140,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 141,
                    "endLine": 142,
                    "startColumn": 9,
                    "endColumn": 87,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 145,
                    "endLine": 145,
                    "startColumn": 13,
                    "endColumn": 41,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 147,
                    "endLine": 147,
                    "startColumn": 13,
                    "endColumn": 43,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 150,
                    "endLine": 150,
                    "startColumn": 9,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 144,
                    "endLine": 146,
                    "startColumn": 43,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 146,
                    "endLine": 148,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 144,
                    "endLine": 148,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 37,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "294084872604d599c1e2c52302ce0f08bb0e6492",
        "url": "https://github.com/apache/flink/commit/294084872604d599c1e2c52302ce0f08bb0e6492",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public handleRequest(state State, type StateRequestType, payload IN) : InternalStateFuture<OUT> extracted from public asyncValue() : StateFuture<Integer> in class org.apache.flink.runtime.taskprocessing.AsyncExecutionControllerTest.TestValueState & moved to class org.apache.flink.runtime.asyncprocessing.AsyncExecutionController",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/taskprocessing/AsyncExecutionControllerTest.java",
                    "startLine": 215,
                    "endLine": 224,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public asyncValue() : StateFuture<Integer>"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/taskprocessing/AsyncExecutionControllerTest.java",
                    "startLine": 223,
                    "endLine": 223,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 128,
                    "endLine": 152,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public handleRequest(state State, type StateRequestType, payload IN) : InternalStateFuture<OUT>"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 151,
                    "endLine": 151,
                    "startColumn": 9,
                    "endColumn": 28,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionControllerTest.java",
                    "startLine": 253,
                    "endLine": 256,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public asyncValue() : StateFuture<Integer>"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionControllerTest.java",
                    "startLine": 255,
                    "endLine": 255,
                    "startColumn": 20,
                    "endColumn": 98,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "asyncExecutionController.handleRequest(this,StateRequestType.VALUE_GET,null)"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 140,
                    "endLine": 140,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 141,
                    "endLine": 142,
                    "startColumn": 9,
                    "endColumn": 87,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 145,
                    "endLine": 145,
                    "startColumn": 13,
                    "endColumn": 41,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 147,
                    "endLine": 147,
                    "startColumn": 13,
                    "endColumn": 43,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 150,
                    "endLine": 150,
                    "startColumn": 9,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 144,
                    "endLine": 146,
                    "startColumn": 43,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 146,
                    "endLine": 148,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/asyncprocessing/AsyncExecutionController.java",
                    "startLine": 144,
                    "endLine": 148,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 38,
        "extraction_results": {
            "success": true,
            "newCommitHash": "d4246de9d95ed9c9e2679acd3b55f9fd7357c73e",
            "newBranchName": "extract-handleRequest-asyncValue-60c771b"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "b3fdb07c04114c515cfc5893e89528bbfb4384ed",
        "url": "https://github.com/apache/flink/commit/b3fdb07c04114c515cfc5893e89528bbfb4384ed",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getFileFromTargetDir(cls Class<?>, fileFilter Predicate<Path>) : File extracted from private getFlinkClientsJar() : File in class org.apache.flink.client.program.artifact.ArtifactFetchManagerTest & moved to class org.apache.flink.testutils.TestingUtils",
            "leftSideLocations": [
                {
                    "filePath": "flink-clients/src/test/java/org/apache/flink/client/program/artifact/ArtifactFetchManagerTest.java",
                    "startLine": 231,
                    "endLine": 251,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private getFlinkClientsJar() : File"
                },
                {
                    "filePath": "flink-clients/src/test/java/org/apache/flink/client/program/artifact/ArtifactFetchManagerTest.java",
                    "startLine": 248,
                    "endLine": 248,
                    "startColumn": 9,
                    "endColumn": 43,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-clients/src/test/java/org/apache/flink/client/program/artifact/ArtifactFetchManagerTest.java",
                    "startLine": 250,
                    "endLine": 250,
                    "startColumn": 9,
                    "endColumn": 52,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-clients/src/test/java/org/apache/flink/client/program/artifact/ArtifactFetchManagerTest.java",
                    "startLine": 232,
                    "endLine": 237,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-clients/src/test/java/org/apache/flink/client/program/artifact/ArtifactFetchManagerTest.java",
                    "startLine": 238,
                    "endLine": 238,
                    "startColumn": 9,
                    "endColumn": 60,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-clients/src/test/java/org/apache/flink/client/program/artifact/ArtifactFetchManagerTest.java",
                    "startLine": 240,
                    "endLine": 246,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-core/src/test/java/org/apache/flink/testutils/TestingUtils.java",
                    "startLine": 77,
                    "endLine": 87,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getFileFromTargetDir(cls Class<?>, fileFilter Predicate<Path>) : File"
                },
                {
                    "filePath": "flink-core/src/test/java/org/apache/flink/testutils/TestingUtils.java",
                    "startLine": 84,
                    "endLine": 84,
                    "startColumn": 9,
                    "endColumn": 43,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/test/java/org/apache/flink/testutils/TestingUtils.java",
                    "startLine": 86,
                    "endLine": 86,
                    "startColumn": 9,
                    "endColumn": 52,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/test/java/org/apache/flink/testutils/TestingUtils.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 9,
                    "endColumn": 98,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/test/java/org/apache/flink/testutils/TestingUtils.java",
                    "startLine": 80,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/test/java/org/apache/flink/testutils/TestingUtils.java",
                    "startLine": 82,
                    "endLine": 83,
                    "startColumn": 9,
                    "endColumn": 96,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-clients/src/test/java/org/apache/flink/client/program/artifact/ArtifactFetchManagerTest.java",
                    "startLine": 221,
                    "endLine": 228,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private getFlinkClientsJar() : File"
                },
                {
                    "filePath": "flink-clients/src/test/java/org/apache/flink/client/program/artifact/ArtifactFetchManagerTest.java",
                    "startLine": 222,
                    "endLine": 227,
                    "startColumn": 16,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "TestingUtils.getFileFromTargetDir(ArtifactFetchManager.class,p -> org.apache.flink.util.FileUtils.isJarFile(p) && p.toFile().getName().startsWith(\"flink-clients\") && !p.toFile().getName().contains(\"test-utils\"))"
                }
            ],
            "isStatic": true
        },
        "ref_id": 39,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "88f6d069784355a516ba3b94ef780597dca1adf4",
        "url": "https://github.com/apache/flink/commit/88f6d069784355a516ba3b94ef780597dca1adf4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public valueIsNull() : boolean extracted from public process() : CompletableFuture<Void> in class org.apache.flink.state.forst.ForStWriteBatchOperation & moved to class org.apache.flink.state.forst.ForStDBPutRequest",
            "leftSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 61,
                    "endLine": 87,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public process() : CompletableFuture<Void>"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 69,
                    "endLine": 69,
                    "startColumn": 33,
                    "endColumn": 54,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 50,
                    "endLine": 52,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public valueIsNull() : boolean"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 51,
                    "endLine": 51,
                    "startColumn": 9,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 54,
                    "endLine": 82,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public process() : CompletableFuture<Void>"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 61,
                    "endLine": 61,
                    "startColumn": 33,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "request.valueIsNull()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 40,
        "extraction_results": {
            "success": true,
            "newCommitHash": "88fa5edf85dcede4c745c035fb53ec6e11ea1512",
            "newBranchName": "extract-valueIsNull-process-ffa3869"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "88f6d069784355a516ba3b94ef780597dca1adf4",
        "url": "https://github.com/apache/flink/commit/88f6d069784355a516ba3b94ef780597dca1adf4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getColumnFamilyHandle() : ColumnFamilyHandle extracted from public process() : CompletableFuture<Void> in class org.apache.flink.state.forst.ForStWriteBatchOperation & moved to class org.apache.flink.state.forst.ForStDBPutRequest",
            "leftSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 61,
                    "endLine": 87,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public process() : CompletableFuture<Void>"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 71,
                    "endLine": 73,
                    "startColumn": 33,
                    "endColumn": 74,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 72,
                    "endLine": 72,
                    "startColumn": 41,
                    "endColumn": 70,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 54,
                    "endLine": 56,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getColumnFamilyHandle() : ColumnFamilyHandle"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 9,
                    "endColumn": 46,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 16,
                    "endColumn": 45,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 54,
                    "endLine": 82,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public process() : CompletableFuture<Void>"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 41,
                    "endColumn": 72,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "request.getColumnFamilyHandle()"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 68,
                    "endLine": 68,
                    "startColumn": 41,
                    "endColumn": 72,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "request.getColumnFamilyHandle()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 41,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "88f6d069784355a516ba3b94ef780597dca1adf4",
        "url": "https://github.com/apache/flink/commit/88f6d069784355a516ba3b94ef780597dca1adf4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getColumnFamilyHandle() : ColumnFamilyHandle extracted from public testValueStateWriteBatch() : void in class org.apache.flink.state.forst.ForStWriteBatchOperationTest & moved to class org.apache.flink.state.forst.ForStDBPutRequest",
            "leftSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 35,
                    "endLine": 61,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testValueStateWriteBatch() : void"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 58,
                    "endLine": 58,
                    "startColumn": 13,
                    "endColumn": 81,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 58,
                    "endLine": 58,
                    "startColumn": 40,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 54,
                    "endLine": 56,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getColumnFamilyHandle() : ColumnFamilyHandle"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 9,
                    "endColumn": 46,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 16,
                    "endColumn": 45,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 35,
                    "endLine": 61,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testValueStateWriteBatch() : void"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 58,
                    "endLine": 58,
                    "startColumn": 40,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "request.getColumnFamilyHandle()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 42,
        "extraction_results": {
            "success": true,
            "newCommitHash": "8a2a51d6ebbd77751725f0e5aac85c3a964fdfb7",
            "newBranchName": "extract-getColumnFamilyHandle-testValueStateWriteBatch-ffa3869"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "88f6d069784355a516ba3b94ef780597dca1adf4",
        "url": "https://github.com/apache/flink/commit/88f6d069784355a516ba3b94ef780597dca1adf4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getColumnFamilyHandle() : ColumnFamilyHandle extracted from public testWriteBatchWithNullValue() : void in class org.apache.flink.state.forst.ForStWriteBatchOperationTest & moved to class org.apache.flink.state.forst.ForStDBPutRequest",
            "leftSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 63,
                    "endLine": 99,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testWriteBatchWithNullValue() : void"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 95,
                    "endLine": 95,
                    "startColumn": 13,
                    "endColumn": 81,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 95,
                    "endLine": 95,
                    "startColumn": 40,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 54,
                    "endLine": 56,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getColumnFamilyHandle() : ColumnFamilyHandle"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 9,
                    "endColumn": 46,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 16,
                    "endColumn": 45,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 63,
                    "endLine": 112,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testWriteBatchWithNullValue() : void"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 105,
                    "endLine": 105,
                    "startColumn": 40,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "request.getColumnFamilyHandle()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 43,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "88f6d069784355a516ba3b94ef780597dca1adf4",
        "url": "https://github.com/apache/flink/commit/88f6d069784355a516ba3b94ef780597dca1adf4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public buildSerializedKey() : byte[] extracted from public process() : CompletableFuture<Void> in class org.apache.flink.state.forst.ForStWriteBatchOperation & moved to class org.apache.flink.state.forst.ForStDBPutRequest",
            "leftSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 61,
                    "endLine": 87,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public process() : CompletableFuture<Void>"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 71,
                    "endLine": 73,
                    "startColumn": 33,
                    "endColumn": 74,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 58,
                    "endLine": 60,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public buildSerializedKey() : byte[]"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 59,
                    "endLine": 59,
                    "startColumn": 9,
                    "endColumn": 40,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 54,
                    "endLine": 82,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public process() : CompletableFuture<Void>"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 65,
                    "endLine": 65,
                    "startColumn": 41,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "request.buildSerializedKey()"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStWriteBatchOperation.java",
                    "startLine": 69,
                    "endLine": 69,
                    "startColumn": 41,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "request.buildSerializedKey()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 44,
        "extraction_results": {
            "success": true,
            "newCommitHash": "1ac7ac57ced57a8d22a850e76985db7e754af2b2",
            "newBranchName": "extract-buildSerializedKey-process-ffa3869"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "88f6d069784355a516ba3b94ef780597dca1adf4",
        "url": "https://github.com/apache/flink/commit/88f6d069784355a516ba3b94ef780597dca1adf4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public buildSerializedKey() : byte[] extracted from public testValueStateWriteBatch() : void in class org.apache.flink.state.forst.ForStWriteBatchOperationTest & moved to class org.apache.flink.state.forst.ForStDBPutRequest",
            "leftSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 35,
                    "endLine": 61,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testValueStateWriteBatch() : void"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 57,
                    "endLine": 57,
                    "startColumn": 13,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 58,
                    "endLine": 60,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public buildSerializedKey() : byte[]"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 59,
                    "endLine": 59,
                    "startColumn": 9,
                    "endColumn": 40,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 35,
                    "endLine": 61,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testValueStateWriteBatch() : void"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 57,
                    "endLine": 57,
                    "startColumn": 31,
                    "endColumn": 59,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "request.buildSerializedKey()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 45,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "88f6d069784355a516ba3b94ef780597dca1adf4",
        "url": "https://github.com/apache/flink/commit/88f6d069784355a516ba3b94ef780597dca1adf4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public buildSerializedKey() : byte[] extracted from public testWriteBatchWithNullValue() : void in class org.apache.flink.state.forst.ForStWriteBatchOperationTest & moved to class org.apache.flink.state.forst.ForStDBPutRequest",
            "leftSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 63,
                    "endLine": 99,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testWriteBatchWithNullValue() : void"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 94,
                    "endLine": 94,
                    "startColumn": 13,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 58,
                    "endLine": 60,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public buildSerializedKey() : byte[]"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/main/java/org/apache/flink/state/forst/ForStDBPutRequest.java",
                    "startLine": 59,
                    "endLine": 59,
                    "startColumn": 9,
                    "endColumn": 40,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 63,
                    "endLine": 112,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testWriteBatchWithNullValue() : void"
                },
                {
                    "filePath": "flink-state-backends/flink-statebackend-forst/src/test/java/org/apache/flink/state/forst/ForStWriteBatchOperationTest.java",
                    "startLine": 104,
                    "endLine": 104,
                    "startColumn": 31,
                    "endColumn": 59,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "request.buildSerializedKey()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 46,
        "extraction_results": {
            "success": true,
            "newCommitHash": "eedeb1bf0c68465b453e5b976e7fff7a83bfd9a9",
            "newBranchName": "extract-buildSerializedKey-testWriteBatchWithNullValue-ffa3869"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "bb0f4429598db703e69d951986291862cbd5416b",
        "url": "https://github.com/apache/flink/commit/bb0f4429598db703e69d951986291862cbd5416b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public unchecked(functionWithException FunctionWithException<A,B,?>) : Function<A,B> extracted from public thenApply(fn Function<? super T,? extends U>) : StateFuture<U> in class org.apache.flink.core.state.StateFutureImpl & moved to class org.apache.flink.util.function.FunctionWithException",
            "leftSideLocations": [
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 54,
                    "endLine": 77,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public thenApply(fn Function<? super T,? extends U>) : StateFuture<U>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 59,
                    "endLine": 59,
                    "startColumn": 17,
                    "endColumn": 57,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 57,
                    "endLine": 76,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 74,
                    "endLine": 76,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 45,
                    "endLine": 63,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public unchecked(functionWithException FunctionWithException<A,B,?>) : Function<A,B>"
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 56,
                    "endLine": 56,
                    "startColumn": 17,
                    "endColumn": 55,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 55,
                    "endLine": 61,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 57,
                    "endLine": 61,
                    "startColumn": 15,
                    "endColumn": 14,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 59,
                    "endLine": 96,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public thenApply(fn FunctionWithException<? super T,? extends U,? extends Exception>) : StateFuture<U>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 73,
                    "endLine": 73,
                    "startColumn": 19,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FunctionWithException.unchecked(fn)"
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 54,
                    "endLine": 62,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 47,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "bb0f4429598db703e69d951986291862cbd5416b",
        "url": "https://github.com/apache/flink/commit/bb0f4429598db703e69d951986291862cbd5416b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public unchecked(functionWithException FunctionWithException<A,B,?>) : Function<A,B> extracted from public thenCompose(action Function<? super T,? extends StateFuture<U>>) : StateFuture<U> in class org.apache.flink.core.state.StateFutureImpl & moved to class org.apache.flink.util.function.FunctionWithException",
            "leftSideLocations": [
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 105,
                    "endLine": 128,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public thenCompose(action Function<? super T,? extends StateFuture<U>>) : StateFuture<U>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 108,
                    "endLine": 127,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 125,
                    "endLine": 127,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 45,
                    "endLine": 63,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public unchecked(functionWithException FunctionWithException<A,B,?>) : Function<A,B>"
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 55,
                    "endLine": 61,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 57,
                    "endLine": 61,
                    "startColumn": 15,
                    "endColumn": 14,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 137,
                    "endLine": 175,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public thenCompose(action FunctionWithException<? super T,? extends StateFuture<U>,? extends Exception>) : StateFuture<U>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 153,
                    "endLine": 153,
                    "startColumn": 20,
                    "endColumn": 59,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FunctionWithException.unchecked(action)"
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 54,
                    "endLine": 62,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/FunctionWithException.java",
                    "startLine": 56,
                    "endLine": 56,
                    "startColumn": 17,
                    "endColumn": 55,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 48,
        "extraction_results": {
            "success": true,
            "newCommitHash": "25b6ac2477514bf6815231f13b77d786d73ae85a",
            "newBranchName": "extract-unchecked-thenCompose-1c34ca0"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "bb0f4429598db703e69d951986291862cbd5416b",
        "url": "https://github.com/apache/flink/commit/bb0f4429598db703e69d951986291862cbd5416b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public unchecked(throwingConsumer ThrowingConsumer<A,?>) : Consumer<A> extracted from public thenAccept(action Consumer<? super T>) : StateFuture<Void> in class org.apache.flink.core.state.StateFutureImpl & moved to class org.apache.flink.util.function.ThrowingConsumer",
            "leftSideLocations": [
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 79,
                    "endLine": 103,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public thenAccept(action Consumer<? super T>) : StateFuture<Void>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 82,
                    "endLine": 102,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 100,
                    "endLine": 102,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/ThrowingConsumer.java",
                    "startLine": 44,
                    "endLine": 59,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public unchecked(throwingConsumer ThrowingConsumer<A,?>) : Consumer<A>"
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/ThrowingConsumer.java",
                    "startLine": 53,
                    "endLine": 57,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/ThrowingConsumer.java",
                    "startLine": 55,
                    "endLine": 57,
                    "startColumn": 15,
                    "endColumn": 14,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 98,
                    "endLine": 135,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public thenAccept(action ThrowingConsumer<? super T,? extends Exception>) : StateFuture<Void>"
                },
                {
                    "filePath": "flink-core/src/main/java/org/apache/flink/core/state/StateFutureImpl.java",
                    "startLine": 111,
                    "endLine": 111,
                    "startColumn": 13,
                    "endColumn": 47,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ThrowingConsumer.unchecked(action)"
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/ThrowingConsumer.java",
                    "startLine": 52,
                    "endLine": 58,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-core-api/src/main/java/org/apache/flink/util/function/ThrowingConsumer.java",
                    "startLine": 54,
                    "endLine": 54,
                    "startColumn": 17,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 49,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "3d40bd7dd197b12b7b156bd758b4129148e885d1",
        "url": "https://github.com/apache/flink/commit/3d40bd7dd197b12b7b156bd758b4129148e885d1",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private rewrite(rewriter TokenStreamRewriter) : Map<String,List<String>> extracted from public rewrite(context String) : RewriteGroupedCode in class org.apache.flink.table.codesplit.BlockStatementGrouper & moved to class org.apache.flink.table.codesplit.BlockStatementGrouper.BlockStatementGrouperVisitor",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 129,
                    "endLine": 164,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public rewrite(context String) : RewriteGroupedCode"
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 151,
                    "endLine": 152,
                    "startColumn": 9,
                    "endColumn": 74,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 160,
                    "endLine": 160,
                    "startColumn": 13,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 157,
                    "endLine": 157,
                    "startColumn": 34,
                    "endColumn": 60,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 155,
                    "endLine": 158,
                    "startColumn": 13,
                    "endColumn": 59,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 153,
                    "endLine": 161,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 154,
                    "endLine": 161,
                    "startColumn": 36,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 283,
                    "endLine": 302,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private rewrite(rewriter TokenStreamRewriter) : Map<String,List<String>>"
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 284,
                    "endLine": 285,
                    "startColumn": 13,
                    "endColumn": 78,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 298,
                    "endLine": 298,
                    "startColumn": 17,
                    "endColumn": 73,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 291,
                    "endLine": 291,
                    "startColumn": 44,
                    "endColumn": 64,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 289,
                    "endLine": 292,
                    "startColumn": 17,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 287,
                    "endLine": 299,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 287,
                    "endLine": 299,
                    "startColumn": 84,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 135,
                    "endLine": 151,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public rewrite(context String) : RewriteGroupedCode"
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 56,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "visitor.rewrite(rewriter)"
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 288,
                    "endLine": 288,
                    "startColumn": 17,
                    "endColumn": 74,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 293,
                    "endLine": 296,
                    "startColumn": 17,
                    "endColumn": 72,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-code-splitter/src/main/java/org/apache/flink/table/codesplit/BlockStatementGrouper.java",
                    "startLine": 301,
                    "endLine": 301,
                    "startColumn": 13,
                    "endColumn": 33,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 50,
        "extraction_results": {
            "success": true,
            "newCommitHash": "35a3a0727c94ebdeeb407153c9e6d3fdc94cb64f",
            "newBranchName": "extract-rewrite-rewrite-54f037f"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "b8173eb662ee5823de40de356869d0064de2c22a",
        "url": "https://github.com/apache/flink/commit/b8173eb662ee5823de40de356869d0064de2c22a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public setDynamicParallelism(parallelism int) : void extracted from private changeJobVertexParallelism(jobVertex ExecutionJobVertex, parallelism int) : void in class org.apache.flink.runtime.scheduler.adaptivebatch.AdaptiveBatchScheduler & moved to class org.apache.flink.runtime.jobgraph.JobVertex",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptivebatch/AdaptiveBatchScheduler.java",
                    "startLine": 627,
                    "endLine": 643,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private changeJobVertexParallelism(jobVertex ExecutionJobVertex, parallelism int) : void"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptivebatch/AdaptiveBatchScheduler.java",
                    "startLine": 633,
                    "endLine": 633,
                    "startColumn": 9,
                    "endColumn": 62,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/jobgraph/JobVertex.java",
                    "startLine": 281,
                    "endLine": 284,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public setDynamicParallelism(parallelism int) : void"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/jobgraph/JobVertex.java",
                    "startLine": 282,
                    "endLine": 282,
                    "startColumn": 9,
                    "endColumn": 37,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptivebatch/AdaptiveBatchScheduler.java",
                    "startLine": 627,
                    "endLine": 643,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private changeJobVertexParallelism(jobVertex ExecutionJobVertex, parallelism int) : void"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptivebatch/AdaptiveBatchScheduler.java",
                    "startLine": 633,
                    "endLine": 633,
                    "startColumn": 9,
                    "endColumn": 68,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "jobVertex.getJobVertex().setDynamicParallelism(parallelism)"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/jobgraph/JobVertex.java",
                    "startLine": 283,
                    "endLine": 283,
                    "startColumn": 9,
                    "endColumn": 40,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 51,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "32b563dd29c5b08e4574773815c014c1c0cca12e",
        "url": "https://github.com/apache/flink/commit/32b563dd29c5b08e4574773815c014c1c0cca12e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public addPartitionAndGetShuffleDescriptor(jobID JobID, resultPartitionID ResultPartitionID) : TierShuffleDescriptor extracted from package testAddAndReleasePartition() : void in class org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.RemoteTierMasterAgentTest & moved to class org.apache.flink.runtime.io.network.partition.hybrid.tiered.tier.remote.RemoteTierMasterAgent",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/tier/remote/RemoteTierMasterAgentTest.java",
                    "startLine": 40,
                    "endLine": 56,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package testAddAndReleasePartition() : void"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/tier/remote/RemoteTierMasterAgentTest.java",
                    "startLine": 53,
                    "endLine": 53,
                    "startColumn": 9,
                    "endColumn": 51,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/tier/remote/RemoteTierMasterAgent.java",
                    "startLine": 57,
                    "endLine": 65,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public addPartitionAndGetShuffleDescriptor(jobID JobID, resultPartitionID ResultPartitionID) : TierShuffleDescriptor"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/tier/remote/RemoteTierMasterAgent.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 9,
                    "endColumn": 61,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/tier/remote/RemoteTierMasterAgentTest.java",
                    "startLine": 42,
                    "endLine": 60,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package testAddAndReleasePartition() : void"
                },
                {
                    "filePath": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/tier/remote/RemoteTierMasterAgentTest.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 17,
                    "endColumn": 96,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "masterAgent.addPartitionAndGetShuffleDescriptor(new JobID(),resultPartitionID)"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/tier/remote/RemoteTierMasterAgent.java",
                    "startLine": 61,
                    "endLine": 63,
                    "startColumn": 9,
                    "endColumn": 96,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/hybrid/tiered/tier/remote/RemoteTierMasterAgent.java",
                    "startLine": 60,
                    "endLine": 60,
                    "startColumn": 9,
                    "endColumn": 77,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 52,
        "extraction_results": {
            "success": true,
            "newCommitHash": "526c65d3db5b19bfc2101cd68c9e08f502309b79",
            "newBranchName": "extract-addPartitionAndGetShuffleDescriptor-testAddAndReleasePartition-fe74f74"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "d0f9bb40a614c3c52c7abc9e608391e4bca9a3ca",
        "url": "https://github.com/apache/flink/commit/d0f9bb40a614c3c52c7abc9e608391e4bca9a3ca",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getDistributionFromSqlDistribution(distribution SqlDistribution) : TableDistribution extracted from private mergeDistribution(sourceTableDistribution Optional<TableDistribution>, sqlCreateTable SqlCreateTable, mergingStrategies Map<SqlTableLike.FeatureOption,SqlTableLike.MergingStrategy>) : Optional<TableDistribution> in class org.apache.flink.table.planner.operations.SqlCreateTableConverter & moved to class org.apache.flink.table.planner.utils.OperationConverterUtils",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 244,
                    "endLine": 280,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private mergeDistribution(sourceTableDistribution Optional<TableDistribution>, sqlCreateTable SqlCreateTable, mergingStrategies Map<SqlTableLike.FeatureOption,SqlTableLike.MergingStrategy>) : Optional<TableDistribution>"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 251,
                    "endLine": 256,
                    "startColumn": 13,
                    "endColumn": 89,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 257,
                    "endLine": 257,
                    "startColumn": 13,
                    "endColumn": 40,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 258,
                    "endLine": 258,
                    "startColumn": 13,
                    "endColumn": 89,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 260,
                    "endLine": 260,
                    "startColumn": 17,
                    "endColumn": 76,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 263,
                    "endLine": 263,
                    "startColumn": 13,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 265,
                    "endLine": 265,
                    "startColumn": 13,
                    "endColumn": 87,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 267,
                    "endLine": 270,
                    "startColumn": 17,
                    "endColumn": 63,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 269,
                    "endLine": 269,
                    "startColumn": 43,
                    "endColumn": 74,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 259,
                    "endLine": 261,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 266,
                    "endLine": 271,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 259,
                    "endLine": 261,
                    "startColumn": 53,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 266,
                    "endLine": 271,
                    "startColumn": 34,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 112,
                    "endLine": 135,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getDistributionFromSqlDistribution(distribution SqlDistribution) : TableDistribution"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 114,
                    "endLine": 118,
                    "startColumn": 9,
                    "endColumn": 85,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 119,
                    "endLine": 119,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 120,
                    "endLine": 120,
                    "startColumn": 9,
                    "endColumn": 65,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 122,
                    "endLine": 122,
                    "startColumn": 13,
                    "endColumn": 72,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 125,
                    "endLine": 125,
                    "startColumn": 9,
                    "endColumn": 62,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 127,
                    "endLine": 127,
                    "startColumn": 9,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 129,
                    "endLine": 132,
                    "startColumn": 13,
                    "endColumn": 59,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 39,
                    "endColumn": 70,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 121,
                    "endLine": 123,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 128,
                    "endLine": 133,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 121,
                    "endLine": 123,
                    "startColumn": 49,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 128,
                    "endLine": 133,
                    "startColumn": 30,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 242,
                    "endLine": 259,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private mergeDistribution(sourceTableDistribution Optional<TableDistribution>, sqlCreateTable SqlCreateTable, mergingStrategies Map<SqlTableLike.FeatureOption,SqlTableLike.MergingStrategy>) : Optional<TableDistribution>"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/operations/SqlCreateTableConverter.java",
                    "startLine": 250,
                    "endLine": 251,
                    "startColumn": 21,
                    "endColumn": 62,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "OperationConverterUtils.getDistributionFromSqlDistribution(sqlCreateTable.getDistribution())"
                },
                {
                    "filePath": "flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/utils/OperationConverterUtils.java",
                    "startLine": 134,
                    "endLine": 134,
                    "startColumn": 9,
                    "endColumn": 71,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 53,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "7f1399561b3ff303ea48ec0b93eef79eaaf3e4c8",
        "url": "https://github.com/apache/flink/commit/7f1399561b3ff303ea48ec0b93eef79eaaf3e4c8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public scheduleOperation(callback Runnable, delay Duration) : void extracted from private rescaleWhenCooldownPeriodIsOver() : void in class org.apache.flink.runtime.scheduler.adaptive.Executing & moved to class org.apache.flink.runtime.scheduler.adaptive.Executing",
            "leftSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptive/Executing.java",
                    "startLine": 207,
                    "endLine": 215,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private rescaleWhenCooldownPeriodIsOver() : void"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptive/Executing.java",
                    "startLine": 213,
                    "endLine": 213,
                    "startColumn": 13,
                    "endColumn": 78,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptive/Executing.java",
                    "startLine": 131,
                    "endLine": 134,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public scheduleOperation(callback Runnable, delay Duration) : void"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptive/Executing.java",
                    "startLine": 133,
                    "endLine": 133,
                    "startColumn": 9,
                    "endColumn": 51,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptive/DefaultRescaleManager.java",
                    "startLine": 96,
                    "endLine": 104,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public onChange() : void"
                },
                {
                    "filePath": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/adaptive/DefaultRescaleManager.java",
                    "startLine": 102,
                    "endLine": 102,
                    "startColumn": 13,
                    "endColumn": 85,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "rescaleContext.scheduleOperation(this::maybeRescale,scalingIntervalMin)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 54,
        "extraction_results": {
            "success": true,
            "newCommitHash": "aa7d4fc3b28b00dc0c56eb2053710ad2f4aee99b",
            "newBranchName": "extract-scheduleOperation-rescaleWhenCooldownPeriodIsOver-7fc3aac"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "02d89caede088d334daf13fb26103aaec6d3ac19",
        "url": "https://github.com/apache/flink/commit/02d89caede088d334daf13fb26103aaec6d3ac19",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public create(inputActivityClock RelativeClock) : TimestampsAndWatermarksContext extracted from public createProgressiveEventTimeLogic(watermarkStrategy WatermarkStrategy<E>, metrics MetricGroup, timeService ProcessingTimeService, periodicWatermarkIntervalMillis long) : TimestampsAndWatermarks<E> in class org.apache.flink.streaming.api.operators.source.TimestampsAndWatermarks & moved to class org.apache.flink.streaming.api.operators.source.TimestampsAndWatermarks.TimestampsAndWatermarksContextProvider",
            "leftSideLocations": [
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/source/TimestampsAndWatermarks.java",
                    "startLine": 90,
                    "endLine": 106,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public createProgressiveEventTimeLogic(watermarkStrategy WatermarkStrategy<E>, metrics MetricGroup, timeService ProcessingTimeService, periodicWatermarkIntervalMillis long) : TimestampsAndWatermarks<E>"
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/source/TimestampsAndWatermarks.java",
                    "startLine": 96,
                    "endLine": 96,
                    "startColumn": 9,
                    "endColumn": 100,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/source/TimestampsAndWatermarks.java",
                    "startLine": 143,
                    "endLine": 145,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public create(inputActivityClock RelativeClock) : TimestampsAndWatermarksContext"
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/source/TimestampsAndWatermarks.java",
                    "startLine": 144,
                    "endLine": 144,
                    "startColumn": 13,
                    "endColumn": 84,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/source/TimestampsAndWatermarks.java",
                    "startLine": 96,
                    "endLine": 120,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public createProgressiveEventTimeLogic(watermarkStrategy WatermarkStrategy<E>, metrics MetricGroup, timeService ProcessingTimeService, periodicWatermarkIntervalMillis long, mainInputActivityClock RelativeClock, clock Clock, taskIOMetricGroup TaskIOMetricGroup) : TimestampsAndWatermarks<E>"
                },
                {
                    "filePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/source/TimestampsAndWatermarks.java",
                    "startLine": 109,
                    "endLine": 109,
                    "startColumn": 25,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "contextProvider.create(mainInputActivityClock)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 55,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "e8c1d1b9d411e17130a57851c0bbaecb2e816048",
        "url": "https://github.com/apache/flink/commit/e8c1d1b9d411e17130a57851c0bbaecb2e816048",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getRegexpMatcher(str StringData, regex StringData) : Matcher extracted from public eval(str StringData, regex StringData) : Integer in class org.apache.flink.table.runtime.functions.scalar.RegexpCountFunction & moved to class org.apache.flink.table.runtime.functions.SqlFunctionUtils",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpCountFunction.java",
                    "startLine": 41,
                    "endLine": 59,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public eval(str StringData, regex StringData) : Integer"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpCountFunction.java",
                    "startLine": 50,
                    "endLine": 50,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpCountFunction.java",
                    "startLine": 48,
                    "endLine": 48,
                    "startColumn": 13,
                    "endColumn": 90,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpCountFunction.java",
                    "startLine": 47,
                    "endLine": 51,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpCountFunction.java",
                    "startLine": 49,
                    "endLine": 51,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpCountFunction.java",
                    "startLine": 42,
                    "endLine": 44,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpCountFunction.java",
                    "startLine": 42,
                    "endLine": 44,
                    "startColumn": 43,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 479,
                    "endLine": 492,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getRegexpMatcher(str StringData, regex StringData) : Matcher"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 490,
                    "endLine": 490,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 488,
                    "endLine": 488,
                    "startColumn": 13,
                    "endColumn": 87,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 487,
                    "endLine": 491,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 489,
                    "endLine": 491,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 484,
                    "endLine": 486,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 484,
                    "endLine": 486,
                    "startColumn": 43,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpCountFunction.java",
                    "startLine": 40,
                    "endLine": 51,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public eval(str StringData, regex StringData) : Integer"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpCountFunction.java",
                    "startLine": 41,
                    "endLine": 41,
                    "startColumn": 27,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "getRegexpMatcher(str,regex)"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 485,
                    "endLine": 485,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 56,
        "extraction_results": {
            "success": true,
            "newCommitHash": "c035f77a48381e9ba9eb419509e4bacb67f3fb40",
            "newBranchName": "extract-getRegexpMatcher-eval-cbbb1cd"
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "e8c1d1b9d411e17130a57851c0bbaecb2e816048",
        "url": "https://github.com/apache/flink/commit/e8c1d1b9d411e17130a57851c0bbaecb2e816048",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getRegexpMatcher(str StringData, regex StringData) : Matcher extracted from public eval(str StringData, regex StringData, extractIndex Number) : ArrayData in class org.apache.flink.table.runtime.functions.scalar.RegexpExtractAllFunction & moved to class org.apache.flink.table.runtime.functions.SqlFunctionUtils",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpExtractAllFunction.java",
                    "startLine": 50,
                    "endLine": 74,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public eval(str StringData, regex StringData, extractIndex Number) : ArrayData"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpExtractAllFunction.java",
                    "startLine": 60,
                    "endLine": 60,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpExtractAllFunction.java",
                    "startLine": 58,
                    "endLine": 58,
                    "startColumn": 13,
                    "endColumn": 90,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpExtractAllFunction.java",
                    "startLine": 57,
                    "endLine": 61,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpExtractAllFunction.java",
                    "startLine": 59,
                    "endLine": 61,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 479,
                    "endLine": 492,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getRegexpMatcher(str StringData, regex StringData) : Matcher"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 490,
                    "endLine": 490,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 488,
                    "endLine": 488,
                    "startColumn": 13,
                    "endColumn": 87,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 487,
                    "endLine": 491,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 489,
                    "endLine": 491,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpExtractAllFunction.java",
                    "startLine": 49,
                    "endLine": 70,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public eval(str StringData, regex StringData, extractIndex Number) : ArrayData"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpExtractAllFunction.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 27,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "getRegexpMatcher(str,regex)"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 485,
                    "endLine": 485,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 484,
                    "endLine": 486,
                    "startColumn": 43,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 484,
                    "endLine": 486,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 57,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/flink.git",
        "sha1": "e8c1d1b9d411e17130a57851c0bbaecb2e816048",
        "url": "https://github.com/apache/flink/commit/e8c1d1b9d411e17130a57851c0bbaecb2e816048",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getRegexpMatcher(str StringData, regex StringData) : Matcher extracted from public eval(str StringData, regex StringData) : Integer in class org.apache.flink.table.runtime.functions.scalar.RegexpInstrFunction & moved to class org.apache.flink.table.runtime.functions.SqlFunctionUtils",
            "leftSideLocations": [
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpInstrFunction.java",
                    "startLine": 41,
                    "endLine": 54,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public eval(str StringData, regex StringData) : Integer"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpInstrFunction.java",
                    "startLine": 50,
                    "endLine": 50,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpInstrFunction.java",
                    "startLine": 48,
                    "endLine": 48,
                    "startColumn": 13,
                    "endColumn": 90,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpInstrFunction.java",
                    "startLine": 47,
                    "endLine": 51,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpInstrFunction.java",
                    "startLine": 49,
                    "endLine": 51,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpInstrFunction.java",
                    "startLine": 42,
                    "endLine": 44,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpInstrFunction.java",
                    "startLine": 42,
                    "endLine": 44,
                    "startColumn": 43,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 479,
                    "endLine": 492,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getRegexpMatcher(str StringData, regex StringData) : Matcher"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 490,
                    "endLine": 490,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 488,
                    "endLine": 488,
                    "startColumn": 13,
                    "endColumn": 87,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 487,
                    "endLine": 491,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 489,
                    "endLine": 491,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 484,
                    "endLine": 486,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 484,
                    "endLine": 486,
                    "startColumn": 43,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpInstrFunction.java",
                    "startLine": 40,
                    "endLine": 46,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public eval(str StringData, regex StringData) : Integer"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/scalar/RegexpInstrFunction.java",
                    "startLine": 41,
                    "endLine": 41,
                    "startColumn": 27,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "getRegexpMatcher(str,regex)"
                },
                {
                    "filePath": "flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java",
                    "startLine": 485,
                    "endLine": 485,
                    "startColumn": 13,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 58,
        "extraction_results": {
            "success": true,
            "newCommitHash": "404454f2a40f80ae1753aeff1e5e3da8fc45420a",
            "newBranchName": "extract-getRegexpMatcher-eval-cbbb1cd"
        }
    }
]