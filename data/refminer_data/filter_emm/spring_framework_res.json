[
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "ad7c090f4cbc948eb178a5d7d7b283302b8b7cba",
        "url": "https://github.com/spring-projects/spring-framework/commit/ad7c090f4cbc948eb178a5d7d7b283302b8b7cba",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public appendTo(stringBuilder StringBuilder, item String) : void extracted from public createInsertString(generatedKeyNames String...) : String in class org.springframework.jdbc.core.metadata.TableMetaDataContext & moved to class org.springframework.jdbc.core.metadata.TableMetaDataContext.QuoteHandler",
            "leftSideLocations": [
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 294,
                    "endLine": 373,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public createInsertString(generatedKeyNames String...) : String"
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 326,
                    "endLine": 326,
                    "startColumn": 4,
                    "endColumn": 50,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 325,
                    "endLine": 332,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 325,
                    "endLine": 329,
                    "startColumn": 16,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 330,
                    "endLine": 332,
                    "startColumn": 8,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 440,
                    "endLine": 448,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public appendTo(stringBuilder StringBuilder, item String) : void"
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 446,
                    "endLine": 446,
                    "startColumn": 5,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 441,
                    "endLine": 447,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 441,
                    "endLine": 444,
                    "startColumn": 22,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 445,
                    "endLine": 447,
                    "startColumn": 9,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 294,
                    "endLine": 358,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public createInsertString(generatedKeyNames String...) : String"
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 313,
                    "endLine": 313,
                    "startColumn": 4,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "quoteHandler.appendTo(insertStatement,catalogName)"
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 319,
                    "endLine": 319,
                    "startColumn": 4,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "quoteHandler.appendTo(insertStatement,schemaName)"
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 324,
                    "endLine": 324,
                    "startColumn": 3,
                    "endColumn": 52,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "quoteHandler.appendTo(insertStatement,tableName)"
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 334,
                    "endLine": 334,
                    "startColumn": 5,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "quoteHandler.appendTo(insertStatement,columnName)"
                },
                {
                    "filePath": "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                    "startLine": 442,
                    "endLine": 443,
                    "startColumn": 5,
                    "endColumn": 56,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "067638ae6ebae9dc5990902e9d8d6543e7f3cd27",
        "url": "https://github.com/spring-projects/spring-framework/commit/067638ae6ebae9dc5990902e9d8d6543e7f3cd27",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isVoidType(type Class<?>) : boolean extracted from private encodeContent(content Object, returnType MethodParameter, bufferFactory DataBufferFactory, mimeType MimeType, hints Map<String,Object>) : Flux<DataBuffer> in class org.springframework.messaging.handler.invocation.reactive.AbstractEncoderMethodReturnValueHandler & moved to class org.springframework.util.ClassUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/reactive/AbstractEncoderMethodReturnValueHandler.java",
                    "startLine": 124,
                    "endLine": 154,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private encodeContent(content Object, returnType MethodParameter, bufferFactory DataBufferFactory, mimeType MimeType, hints Map<String,Object>) : Flux<DataBuffer>"
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/reactive/AbstractEncoderMethodReturnValueHandler.java",
                    "startLine": 147,
                    "endLine": 147,
                    "startColumn": 7,
                    "endColumn": 81,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 552,
                    "endLine": 562,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isVoidType(type Class<?>) : boolean"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 561,
                    "endLine": 561,
                    "startColumn": 3,
                    "endColumn": 53,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/reactive/AbstractEncoderMethodReturnValueHandler.java",
                    "startLine": 125,
                    "endLine": 155,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private encodeContent(content Object, returnType MethodParameter, bufferFactory DataBufferFactory, mimeType MimeType, hints Map<String,Object>) : Flux<DataBuffer>"
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/reactive/AbstractEncoderMethodReturnValueHandler.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 7,
                    "endColumn": 51,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ClassUtils.isVoidType(elementType.resolve())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "067638ae6ebae9dc5990902e9d8d6543e7f3cd27",
        "url": "https://github.com/spring-projects/spring-framework/commit/067638ae6ebae9dc5990902e9d8d6543e7f3cd27",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isVoidType(type Class<?>) : boolean extracted from protected writeBody(body Object, bodyParameter MethodParameter, actualParam MethodParameter, exchange ServerWebExchange) : Mono<Void> in class org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler & moved to class org.springframework.util.ClassUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java",
                    "startLine": 114,
                    "endLine": 211,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected writeBody(body Object, bodyParameter MethodParameter, actualParam MethodParameter, exchange ServerWebExchange) : Mono<Void>"
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java",
                    "startLine": 158,
                    "endLine": 158,
                    "startColumn": 7,
                    "endColumn": 81,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 552,
                    "endLine": 562,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isVoidType(type Class<?>) : boolean"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 561,
                    "endLine": 561,
                    "startColumn": 3,
                    "endColumn": 53,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java",
                    "startLine": 115,
                    "endLine": 212,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected writeBody(body Object, bodyParameter MethodParameter, actualParam MethodParameter, exchange ServerWebExchange) : Mono<Void>"
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 7,
                    "endColumn": 51,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ClassUtils.isVoidType(elementType.resolve())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newHashSet(expectedSize int) : HashSet<E> extracted from protected beforePrototypeCreation(beanName String) : void in class org.springframework.beans.factory.support.AbstractBeanFactory & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                    "startLine": 1142,
                    "endLine": 1164,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected beforePrototypeCreation(beanName String) : void"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                    "startLine": 1155,
                    "endLine": 1155,
                    "startColumn": 4,
                    "endColumn": 47,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 110,
                    "endLine": 120,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newHashSet(expectedSize int) : HashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 119,
                    "endLine": 119,
                    "startColumn": 3,
                    "endColumn": 83,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                    "startLine": 1142,
                    "endLine": 1164,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected beforePrototypeCreation(beanName String) : void"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                    "startLine": 1155,
                    "endLine": 1155,
                    "startColumn": 30,
                    "endColumn": 59,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newHashSet(2)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newHashSet(expectedSize int) : HashSet<E> extracted from public setCustomEnumSetMismatch(customEnumSet Set<String>) : void in class org.springframework.beans.testfixture.beans.GenericBean & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-beans/src/testFixtures/java/org/springframework/beans/testfixture/beans/GenericBean.java",
                    "startLine": 268,
                    "endLine": 273,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public setCustomEnumSetMismatch(customEnumSet Set<String>) : void"
                },
                {
                    "filePath": "spring-beans/src/testFixtures/java/org/springframework/beans/testfixture/beans/GenericBean.java",
                    "startLine": 269,
                    "endLine": 269,
                    "startColumn": 3,
                    "endColumn": 60,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 110,
                    "endLine": 120,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newHashSet(expectedSize int) : HashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 119,
                    "endLine": 119,
                    "startColumn": 3,
                    "endColumn": 83,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/testFixtures/java/org/springframework/beans/testfixture/beans/GenericBean.java",
                    "startLine": 269,
                    "endLine": 274,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public setCustomEnumSetMismatch(customEnumSet Set<String>) : void"
                },
                {
                    "filePath": "spring-beans/src/testFixtures/java/org/springframework/beans/testfixture/beans/GenericBean.java",
                    "startLine": 270,
                    "endLine": 270,
                    "startColumn": 24,
                    "endColumn": 72,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newHashSet(customEnumSet.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newHashSet(expectedSize int) : HashSet<E> extracted from public processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void in class org.springframework.context.annotation.ConfigurationClassPostProcessor & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java",
                    "startLine": 357,
                    "endLine": 467,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java",
                    "startLine": 413,
                    "endLine": 413,
                    "startColumn": 3,
                    "endColumn": 82,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 110,
                    "endLine": 120,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newHashSet(expectedSize int) : HashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 119,
                    "endLine": 119,
                    "startColumn": 3,
                    "endColumn": 83,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java",
                    "startLine": 357,
                    "endLine": 467,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public processConfigBeanDefinitions(registry BeanDefinitionRegistry) : void"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java",
                    "startLine": 413,
                    "endLine": 413,
                    "startColumn": 43,
                    "endColumn": 94,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newHashSet(configCandidates.size())"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java",
                    "startLine": 436,
                    "endLine": 436,
                    "startColumn": 40,
                    "endColumn": 88,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newHashSet(alreadyParsed.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newHashSet(expectedSize int) : HashSet<E> extracted from private getSessionIdsByUser(userName String, sessionId String) : Set<String> in class org.springframework.messaging.simp.user.DefaultUserDestinationResolver & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java",
                    "startLine": 210,
                    "endLine": 229,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private getSessionIdsByUser(userName String, sessionId String) : Set<String>"
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java",
                    "startLine": 219,
                    "endLine": 219,
                    "startColumn": 5,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 110,
                    "endLine": 120,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newHashSet(expectedSize int) : HashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 119,
                    "endLine": 119,
                    "startColumn": 3,
                    "endColumn": 83,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java",
                    "startLine": 211,
                    "endLine": 230,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private getSessionIdsByUser(userName String, sessionId String) : Set<String>"
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java",
                    "startLine": 220,
                    "endLine": 220,
                    "startColumn": 18,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newHashSet(sessions.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newHashSet(expectedSize int) : HashSet<E> extracted from public TransferSimpSession(session SimpSession) in class org.springframework.messaging.simp.user.MultiServerUserRegistry.TransferSimpSession & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                    "startLine": 410,
                    "endLine": 421,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public TransferSimpSession(session SimpSession)"
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                    "startLine": 417,
                    "endLine": 417,
                    "startColumn": 4,
                    "endColumn": 61,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 110,
                    "endLine": 120,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newHashSet(expectedSize int) : HashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 119,
                    "endLine": 119,
                    "startColumn": 3,
                    "endColumn": 83,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                    "startLine": 410,
                    "endLine": 421,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public TransferSimpSession(session SimpSession)"
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                    "startLine": 417,
                    "endLine": 417,
                    "startColumn": 25,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newHashSet(subscriptions.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newHashSet(expectedSize int) : HashSet<E> extracted from public MappingMediaTypeFileExtensionResolver(mediaTypes Map<String,MediaType>) in class org.springframework.web.accept.MappingMediaTypeFileExtensionResolver & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                    "startLine": 53,
                    "endLine": 67,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public MappingMediaTypeFileExtensionResolver(mediaTypes Map<String,MediaType>)"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                    "startLine": 58,
                    "endLine": 58,
                    "startColumn": 4,
                    "endColumn": 69,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 110,
                    "endLine": 120,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newHashSet(expectedSize int) : HashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 119,
                    "endLine": 119,
                    "startColumn": 3,
                    "endColumn": 83,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                    "startLine": 53,
                    "endLine": 67,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public MappingMediaTypeFileExtensionResolver(mediaTypes Map<String,MediaType>)"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                    "startLine": 58,
                    "endLine": 58,
                    "startColumn": 36,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newHashSet(mediaTypes.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public checkInitDestroyMethods(beanDefinition RootBeanDefinition) : void in class org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.LifecycleMetadata & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java",
                    "startLine": 365,
                    "endLine": 390,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public checkInitDestroyMethods(beanDefinition RootBeanDefinition) : void"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java",
                    "startLine": 366,
                    "endLine": 366,
                    "startColumn": 4,
                    "endColumn": 91,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java",
                    "startLine": 365,
                    "endLine": 390,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public checkInitDestroyMethods(beanDefinition RootBeanDefinition) : void"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java",
                    "startLine": 366,
                    "endLine": 366,
                    "startColumn": 46,
                    "endColumn": 103,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(this.initMethods.size())"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java",
                    "startLine": 377,
                    "endLine": 377,
                    "startColumn": 49,
                    "endColumn": 109,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(this.destroyMethods.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public checkConfigMembers(beanDefinition RootBeanDefinition) : void in class org.springframework.beans.factory.annotation.InjectionMetadata & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InjectionMetadata.java",
                    "startLine": 122,
                    "endLine": 137,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public checkConfigMembers(beanDefinition RootBeanDefinition) : void"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InjectionMetadata.java",
                    "startLine": 127,
                    "endLine": 127,
                    "startColumn": 4,
                    "endColumn": 107,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InjectionMetadata.java",
                    "startLine": 122,
                    "endLine": 137,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public checkConfigMembers(beanDefinition RootBeanDefinition) : void"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InjectionMetadata.java",
                    "startLine": 127,
                    "endLine": 127,
                    "startColumn": 43,
                    "endColumn": 105,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(this.injectedElements.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private resolveArguments(registeredBean RegisteredBean, method Method) : AutowiredArguments in class org.springframework.beans.factory.aot.AutowiredMethodArgumentsResolver & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/AutowiredMethodArgumentsResolver.java",
                    "startLine": 157,
                    "endLine": 192,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private resolveArguments(registeredBean RegisteredBean, method Method) : AutowiredArguments"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/AutowiredMethodArgumentsResolver.java",
                    "startLine": 168,
                    "endLine": 168,
                    "startColumn": 3,
                    "endColumn": 71,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/AutowiredMethodArgumentsResolver.java",
                    "startLine": 157,
                    "endLine": 192,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private resolveArguments(registeredBean RegisteredBean, method Method) : AutowiredArguments"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/AutowiredMethodArgumentsResolver.java",
                    "startLine": 168,
                    "endLine": 168,
                    "startColumn": 36,
                    "endColumn": 83,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(argumentCount)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from protected createInstance() : Set<Object> in class org.springframework.beans.factory.config.SetFactoryBean & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/config/SetFactoryBean.java",
                    "startLine": 77,
                    "endLine": 104,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected createInstance() : Set<Object>"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/config/SetFactoryBean.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 4,
                    "endColumn": 56,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/config/SetFactoryBean.java",
                    "startLine": 77,
                    "endLine": 104,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected createInstance() : Set<Object>"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/config/SetFactoryBean.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 13,
                    "endColumn": 68,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(this.sourceSet.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private resolveManagedSet(argName Object, ms Set<?>) : Set<?> in class org.springframework.beans.factory.support.BeanDefinitionValueResolver & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionValueResolver.java",
                    "startLine": 465,
                    "endLine": 476,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private resolveManagedSet(argName Object, ms Set<?>) : Set<?>"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionValueResolver.java",
                    "startLine": 469,
                    "endLine": 469,
                    "startColumn": 3,
                    "endColumn": 57,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionValueResolver.java",
                    "startLine": 465,
                    "endLine": 476,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private resolveManagedSet(argName Object, ms Set<?>) : Set<?>"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionValueResolver.java",
                    "startLine": 469,
                    "endLine": 469,
                    "startColumn": 26,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(ms.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public initializeCaches() : void in class org.springframework.cache.support.AbstractCacheManager & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/support/AbstractCacheManager.java",
                    "startLine": 54,
                    "endLine": 75,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public initializeCaches() : void"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/support/AbstractCacheManager.java",
                    "startLine": 67,
                    "endLine": 67,
                    "startColumn": 4,
                    "endColumn": 64,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/support/AbstractCacheManager.java",
                    "startLine": 55,
                    "endLine": 76,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public initializeCaches() : void"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/support/AbstractCacheManager.java",
                    "startLine": 68,
                    "endLine": 68,
                    "startColumn": 29,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(caches.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public registerAnnotationConfigProcessors(registry BeanDefinitionRegistry, source Object) : Set<BeanDefinitionHolder> in class org.springframework.context.annotation.AnnotationConfigUtils & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                    "startLine": 136,
                    "endLine": 207,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public registerAnnotationConfigProcessors(registry BeanDefinitionRegistry, source Object) : Set<BeanDefinitionHolder>"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                    "startLine": 157,
                    "endLine": 157,
                    "startColumn": 3,
                    "endColumn": 63,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                    "startLine": 136,
                    "endLine": 207,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public registerAnnotationConfigProcessors(registry BeanDefinitionRegistry, source Object) : Set<BeanDefinitionHolder>"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                    "startLine": 157,
                    "endLine": 157,
                    "startColumn": 40,
                    "endColumn": 75,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(6)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private retrieveBeanMethodMetadata(sourceClass SourceClass) : Set<MethodMetadata> in class org.springframework.context.annotation.ConfigurationClassParser & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                    "startLine": 424,
                    "endLine": 463,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private retrieveBeanMethodMetadata(sourceClass SourceClass) : Set<MethodMetadata>"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                    "startLine": 440,
                    "endLine": 440,
                    "startColumn": 6,
                    "endColumn": 83,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                    "startLine": 424,
                    "endLine": 463,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private retrieveBeanMethodMetadata(sourceClass SourceClass) : Set<MethodMetadata>"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                    "startLine": 440,
                    "endLine": 440,
                    "startColumn": 44,
                    "endColumn": 95,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(asmMethods.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public AsyncAnnotationAdvisor(executor Supplier<Executor>, exceptionHandler Supplier<AsyncUncaughtExceptionHandler>) in class org.springframework.scheduling.annotation.AsyncAnnotationAdvisor & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-context/src/main/java/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.java",
                    "startLine": 84,
                    "endLine": 118,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public AsyncAnnotationAdvisor(executor Supplier<Executor>, exceptionHandler Supplier<AsyncUncaughtExceptionHandler>)"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 3,
                    "endColumn": 82,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.java",
                    "startLine": 84,
                    "endLine": 118,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public AsyncAnnotationAdvisor(executor Supplier<Executor>, exceptionHandler Supplier<AsyncUncaughtExceptionHandler>)"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.java",
                    "startLine": 97,
                    "endLine": 97,
                    "startColumn": 59,
                    "endColumn": 94,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(2)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public getConvertibleTypes() : Set<ConvertiblePair> in class org.springframework.core.convert.support.ObjectToOptionalConverter & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/core/convert/support/ObjectToOptionalConverter.java",
                    "startLine": 49,
                    "endLine": 56,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getConvertibleTypes() : Set<ConvertiblePair>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/core/convert/support/ObjectToOptionalConverter.java",
                    "startLine": 51,
                    "endLine": 51,
                    "startColumn": 3,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/core/convert/support/ObjectToOptionalConverter.java",
                    "startLine": 49,
                    "endLine": 56,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getConvertibleTypes() : Set<ConvertiblePair>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/core/convert/support/ObjectToOptionalConverter.java",
                    "startLine": 51,
                    "endLine": 51,
                    "startColumn": 43,
                    "endColumn": 78,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(3)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public getPropertyNames() : String[] in class org.springframework.core.env.CompositePropertySource & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/core/env/CompositePropertySource.java",
                    "startLine": 79,
                    "endLine": 95,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getPropertyNames() : String[]"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/core/env/CompositePropertySource.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 3,
                    "endColumn": 53,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/core/env/CompositePropertySource.java",
                    "startLine": 80,
                    "endLine": 96,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getPropertyNames() : String[]"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/core/env/CompositePropertySource.java",
                    "startLine": 93,
                    "endLine": 93,
                    "startColumn": 26,
                    "endColumn": 65,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(total)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private prependLeadingSlash(patterns String[], routeMatcher RouteMatcher) : Set<String> in class org.springframework.messaging.handler.DestinationPatternsMessageCondition & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java",
                    "startLine": 87,
                    "endLine": 97,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private prependLeadingSlash(patterns String[], routeMatcher RouteMatcher) : Set<String>"
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java",
                    "startLine": 89,
                    "endLine": 89,
                    "startColumn": 3,
                    "endColumn": 61,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java",
                    "startLine": 87,
                    "endLine": 97,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private prependLeadingSlash(patterns String[], routeMatcher RouteMatcher) : Set<String>"
                },
                {
                    "filePath": "spring-messaging/src/main/java/org/springframework/messaging/handler/DestinationPatternsMessageCondition.java",
                    "startLine": 89,
                    "endLine": 89,
                    "startColumn": 24,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(patterns.length)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public getResourcePaths(path String) : Set<String> in class org.springframework.mock.web.MockServletContext & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java",
                    "startLine": 293,
                    "endLine": 323,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getResourcePaths(path String) : Set<String>"
                },
                {
                    "filePath": "spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java",
                    "startLine": 306,
                    "endLine": 306,
                    "startColumn": 4,
                    "endColumn": 69,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java",
                    "startLine": 294,
                    "endLine": 324,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getResourcePaths(path String) : Set<String>"
                },
                {
                    "filePath": "spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java",
                    "startLine": 307,
                    "endLine": 307,
                    "startColumn": 32,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(fileList.length)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private getContextCustomizers(testClass Class<?>, configAttributes List<ContextConfigurationAttributes>) : Set<ContextCustomizer> in class org.springframework.test.context.support.AbstractTestContextBootstrapper & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java",
                    "startLine": 354,
                    "endLine": 374,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private getContextCustomizers(testClass Class<?>, configAttributes List<ContextConfigurationAttributes>) : Set<ContextCustomizer>"
                },
                {
                    "filePath": "spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java",
                    "startLine": 358,
                    "endLine": 358,
                    "startColumn": 3,
                    "endColumn": 78,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java",
                    "startLine": 354,
                    "endLine": 374,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private getContextCustomizers(testClass Class<?>, configAttributes List<ContextConfigurationAttributes>) : Set<ContextCustomizer>"
                },
                {
                    "filePath": "spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java",
                    "startLine": 358,
                    "endLine": 358,
                    "startColumn": 40,
                    "endColumn": 90,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(factories.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public AnnotationTransactionAttributeSource(publicMethodsOnly boolean) in class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.java",
                    "startLine": 83,
                    "endLine": 107,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public AnnotationTransactionAttributeSource(publicMethodsOnly boolean)"
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.java",
                    "startLine": 95,
                    "endLine": 95,
                    "startColumn": 4,
                    "endColumn": 52,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.java",
                    "startLine": 84,
                    "endLine": 108,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public AnnotationTransactionAttributeSource(publicMethodsOnly boolean)"
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.java",
                    "startLine": 96,
                    "endLine": 96,
                    "startColumn": 29,
                    "endColumn": 64,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(3)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public resolveAttributeStrings(resolver StringValueResolver) : void in class org.springframework.transaction.interceptor.DefaultTransactionAttribute & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/DefaultTransactionAttribute.java",
                    "startLine": 191,
                    "endLine": 225,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public resolveAttributeStrings(resolver StringValueResolver) : void"
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/DefaultTransactionAttribute.java",
                    "startLine": 219,
                    "endLine": 219,
                    "startColumn": 4,
                    "endColumn": 73,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/DefaultTransactionAttribute.java",
                    "startLine": 191,
                    "endLine": 225,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public resolveAttributeStrings(resolver StringValueResolver) : void"
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/DefaultTransactionAttribute.java",
                    "startLine": 219,
                    "endLine": 219,
                    "startColumn": 33,
                    "endColumn": 85,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(this.labels.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public getAllow() : Set<HttpMethod> in class org.springframework.http.HttpHeaders & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/http/HttpHeaders.java",
                    "startLine": 746,
                    "endLine": 765,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getAllow() : Set<HttpMethod>"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/http/HttpHeaders.java",
                    "startLine": 755,
                    "endLine": 755,
                    "startColumn": 4,
                    "endColumn": 64,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/http/HttpHeaders.java",
                    "startLine": 745,
                    "endLine": 764,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getAllow() : Set<HttpMethod>"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/http/HttpHeaders.java",
                    "startLine": 754,
                    "endLine": 754,
                    "startColumn": 29,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(tokens.length)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public keySet() : Set<String> in class org.springframework.http.support.HttpComponentsHeadersAdapter & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/http/support/HttpComponentsHeadersAdapter.java",
                    "startLine": 164,
                    "endLine": 171,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public keySet() : Set<String>"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/http/support/HttpComponentsHeadersAdapter.java",
                    "startLine": 166,
                    "endLine": 166,
                    "startColumn": 3,
                    "endColumn": 50,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/http/support/HttpComponentsHeadersAdapter.java",
                    "startLine": 163,
                    "endLine": 170,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public keySet() : Set<String>"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/http/support/HttpComponentsHeadersAdapter.java",
                    "startLine": 165,
                    "endLine": 165,
                    "startColumn": 22,
                    "endColumn": 62,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public getSupportedHttpMethods() : Set<HttpMethod> in class org.springframework.web.HttpRequestMethodNotSupportedException & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/HttpRequestMethodNotSupportedException.java",
                    "startLine": 100,
                    "endLine": 116,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getSupportedHttpMethods() : Set<HttpMethod>"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/HttpRequestMethodNotSupportedException.java",
                    "startLine": 110,
                    "endLine": 110,
                    "startColumn": 3,
                    "endColumn": 88,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/HttpRequestMethodNotSupportedException.java",
                    "startLine": 100,
                    "endLine": 116,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getSupportedHttpMethods() : Set<HttpMethod>"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/HttpRequestMethodNotSupportedException.java",
                    "startLine": 110,
                    "endLine": 110,
                    "startColumn": 38,
                    "endColumn": 100,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(this.supportedMethods.length)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private parseRequest(request HttpServletRequest) : void in class org.springframework.web.multipart.support.StandardMultipartHttpServletRequest & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                    "startLine": 91,
                    "endLine": 112,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseRequest(request HttpServletRequest) : void"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                    "startLine": 94,
                    "endLine": 94,
                    "startColumn": 4,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                    "startLine": 92,
                    "endLine": 113,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseRequest(request HttpServletRequest) : void"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                    "startLine": 95,
                    "endLine": 95,
                    "startColumn": 35,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(parts.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public getResourcePaths(path String) : Set<String> in class org.springframework.web.testfixture.servlet.MockServletContext & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/testFixtures/java/org/springframework/web/testfixture/servlet/MockServletContext.java",
                    "startLine": 293,
                    "endLine": 323,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public getResourcePaths(path String) : Set<String>"
                },
                {
                    "filePath": "spring-web/src/testFixtures/java/org/springframework/web/testfixture/servlet/MockServletContext.java",
                    "startLine": 306,
                    "endLine": 306,
                    "startColumn": 4,
                    "endColumn": 69,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/testFixtures/java/org/springframework/web/testfixture/servlet/MockServletContext.java",
                    "startLine": 294,
                    "endLine": 324,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public getResourcePaths(path String) : Set<String>"
                },
                {
                    "filePath": "spring-web/src/testFixtures/java/org/springframework/web/testfixture/servlet/MockServletContext.java",
                    "startLine": 307,
                    "endLine": 307,
                    "startColumn": 32,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(fileList.length)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private parseExpressions(params String...) : Set<ParamExpression> in class org.springframework.web.reactive.result.condition.ParamsRequestCondition & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ParamsRequestCondition.java",
                    "startLine": 50,
                    "endLine": 59,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseExpressions(params String...) : Set<ParamExpression>"
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ParamsRequestCondition.java",
                    "startLine": 54,
                    "endLine": 54,
                    "startColumn": 3,
                    "endColumn": 68,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ParamsRequestCondition.java",
                    "startLine": 51,
                    "endLine": 60,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseExpressions(params String...) : Set<ParamExpression>"
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ParamsRequestCondition.java",
                    "startLine": 55,
                    "endLine": 55,
                    "startColumn": 33,
                    "endColumn": 80,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(params.length)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private parseExpressions(params String...) : Set<ParamExpression> in class org.springframework.web.servlet.mvc.condition.ParamsRequestCondition & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ParamsRequestCondition.java",
                    "startLine": 54,
                    "endLine": 63,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private parseExpressions(params String...) : Set<ParamExpression>"
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ParamsRequestCondition.java",
                    "startLine": 58,
                    "endLine": 58,
                    "startColumn": 3,
                    "endColumn": 73,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ParamsRequestCondition.java",
                    "startLine": 55,
                    "endLine": 64,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private parseExpressions(params String...) : Set<ParamExpression>"
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ParamsRequestCondition.java",
                    "startLine": 59,
                    "endLine": 59,
                    "startColumn": 38,
                    "endColumn": 85,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(params.length)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private initPatterns(patterns String[]) : Set<String> in class org.springframework.web.servlet.mvc.condition.PatternsRequestCondition & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                    "startLine": 156,
                    "endLine": 166,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private initPatterns(patterns String[]) : Set<String>"
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                    "startLine": 160,
                    "endLine": 160,
                    "startColumn": 3,
                    "endColumn": 61,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                    "startLine": 157,
                    "endLine": 167,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private initPatterns(patterns String[]) : Set<String>"
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                    "startLine": 161,
                    "endLine": 161,
                    "startColumn": 24,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(patterns.length)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from private initAllowedHttpMethods(declaredMethods Set<String>) : Set<HttpMethod> in class org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.HttpOptionsHandler & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java",
                    "startLine": 514,
                    "endLine": 534,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private initAllowedHttpMethods(declaredMethods Set<String>) : Set<HttpMethod>"
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java",
                    "startLine": 515,
                    "endLine": 515,
                    "startColumn": 4,
                    "endColumn": 73,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java",
                    "startLine": 514,
                    "endLine": 534,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private initAllowedHttpMethods(declaredMethods Set<String>) : Set<HttpMethod>"
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java",
                    "startLine": 515,
                    "endLine": 515,
                    "startColumn": 29,
                    "endColumn": 85,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(declaredMethods.size())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "e1a32d4ba9cb88931a34172927a396fae2043133",
        "url": "https://github.com/spring-projects/spring-framework/commit/e1a32d4ba9cb88931a34172927a396fae2043133",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newLinkedHashSet(expectedSize int) : LinkedHashSet<E> extracted from public WebContentGenerator(restrictDefaultSupportedMethods boolean) in class org.springframework.web.servlet.support.WebContentGenerator & moved to class org.springframework.util.CollectionUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/support/WebContentGenerator.java",
                    "startLine": 125,
                    "endLine": 139,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public WebContentGenerator(restrictDefaultSupportedMethods boolean)"
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/support/WebContentGenerator.java",
                    "startLine": 133,
                    "endLine": 133,
                    "startColumn": 4,
                    "endColumn": 51,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 122,
                    "endLine": 132,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newLinkedHashSet(expectedSize int) : LinkedHashSet<E>"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/CollectionUtils.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 3,
                    "endColumn": 89,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/support/WebContentGenerator.java",
                    "startLine": 126,
                    "endLine": 140,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public WebContentGenerator(restrictDefaultSupportedMethods boolean)"
                },
                {
                    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/support/WebContentGenerator.java",
                    "startLine": 134,
                    "endLine": 134,
                    "startColumn": 28,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "CollectionUtils.newLinkedHashSet(3)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "3d7ef3ebfc5be645730e2e1d601ccf5799bdf7cd",
        "url": "https://github.com/spring-projects/spring-framework/commit/3d7ef3ebfc5be645730e2e1d601ccf5799bdf7cd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public hasCacheOperations(method Method, targetClass Class<?>) : boolean extracted from public matches(method Method, targetClass Class<?>) : boolean in class org.springframework.cache.interceptor.CacheOperationSourcePointcut & moved to class org.springframework.cache.interceptor.CacheOperationSource",
            "leftSideLocations": [
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationSourcePointcut.java",
                    "startLine": 54,
                    "endLine": 58,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public matches(method Method, targetClass Class<?>) : boolean"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationSourcePointcut.java",
                    "startLine": 56,
                    "endLine": 57,
                    "startColumn": 3,
                    "endColumn": 98,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationSource.java",
                    "startLine": 55,
                    "endLine": 65,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public hasCacheOperations(method Method, targetClass Class<?>) : boolean"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationSource.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 3,
                    "endColumn": 76,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationSourcePointcut.java",
                    "startLine": 53,
                    "endLine": 57,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public matches(method Method, targetClass Class<?>) : boolean"
                },
                {
                    "filePath": "spring-context/src/main/java/org/springframework/cache/interceptor/CacheOperationSourcePointcut.java",
                    "startLine": 56,
                    "endLine": 56,
                    "startColumn": 5,
                    "endColumn": 70,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "this.cacheOperationSource.hasCacheOperations(method,targetClass)"
                }
            ],
            "isStatic": false
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "3d7ef3ebfc5be645730e2e1d601ccf5799bdf7cd",
        "url": "https://github.com/spring-projects/spring-framework/commit/3d7ef3ebfc5be645730e2e1d601ccf5799bdf7cd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public hasTransactionAttribute(method Method, targetClass Class<?>) : boolean extracted from public matches(method Method, targetClass Class<?>) : boolean in class org.springframework.transaction.interceptor.TransactionAttributeSourcePointcut & moved to class org.springframework.transaction.interceptor.TransactionAttributeSource",
            "leftSideLocations": [
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAttributeSourcePointcut.java",
                    "startLine": 53,
                    "endLine": 57,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public matches(method Method, targetClass Class<?>) : boolean"
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAttributeSourcePointcut.java",
                    "startLine": 55,
                    "endLine": 56,
                    "startColumn": 3,
                    "endColumn": 91,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAttributeSource.java",
                    "startLine": 57,
                    "endLine": 67,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public hasTransactionAttribute(method Method, targetClass Class<?>) : boolean"
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAttributeSource.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 3,
                    "endColumn": 65,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAttributeSourcePointcut.java",
                    "startLine": 53,
                    "endLine": 57,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public matches(method Method, targetClass Class<?>) : boolean"
                },
                {
                    "filePath": "spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAttributeSourcePointcut.java",
                    "startLine": 56,
                    "endLine": 56,
                    "startColumn": 5,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "this.transactionAttributeSource.hasTransactionAttribute(method,targetClass)"
                }
            ],
            "isStatic": false
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "3d7ef3ebfc5be645730e2e1d601ccf5799bdf7cd",
        "url": "https://github.com/spring-projects/spring-framework/commit/3d7ef3ebfc5be645730e2e1d601ccf5799bdf7cd",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public hasCacheOperation(method Method, targetClass Class<?>) : boolean extracted from public matches(method Method, targetClass Class<?>) : boolean in class org.springframework.cache.jcache.interceptor.BeanFactoryJCacheOperationSourceAdvisor.JCacheOperationSourcePointcut & moved to class org.springframework.cache.jcache.interceptor.JCacheOperationSource",
            "leftSideLocations": [
                {
                    "filePath": "spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/BeanFactoryJCacheOperationSourceAdvisor.java",
                    "startLine": 77,
                    "endLine": 81,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public matches(method Method, targetClass Class<?>) : boolean"
                },
                {
                    "filePath": "spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/BeanFactoryJCacheOperationSourceAdvisor.java",
                    "startLine": 79,
                    "endLine": 80,
                    "startColumn": 4,
                    "endColumn": 80,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperationSource.java",
                    "startLine": 53,
                    "endLine": 63,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public hasCacheOperation(method Method, targetClass Class<?>) : boolean"
                },
                {
                    "filePath": "spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperationSource.java",
                    "startLine": 62,
                    "endLine": 62,
                    "startColumn": 3,
                    "endColumn": 59,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperationSourcePointcut.java",
                    "startLine": 51,
                    "endLine": 55,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public matches(method Method, targetClass Class<?>) : boolean"
                },
                {
                    "filePath": "spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/JCacheOperationSourcePointcut.java",
                    "startLine": 54,
                    "endLine": 54,
                    "startColumn": 5,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "this.cacheOperationSource.hasCacheOperation(method,targetClass)"
                }
            ],
            "isStatic": false
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "b44c31e9974e993646461a14e6ff1f45f8750ceb",
        "url": "https://github.com/spring-projects/spring-framework/commit/b44c31e9974e993646461a14e6ff1f45f8750ceb",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private assertNotPublic(clazz Class<?>) : void extracted from package rootVariableWithNonPublicType(spel String) : void in class org.springframework.expression.spel.SpelCompilationCoverageTests.VariableReferenceTests & moved to class org.springframework.expression.spel.SpelCompilationCoverageTests",
            "leftSideLocations": [
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 169,
                    "endLine": 186,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package rootVariableWithNonPublicType(spel String) : void"
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 178,
                    "endLine": 178,
                    "startColumn": 4,
                    "endColumn": 75,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 5480,
                    "endLine": 5482,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private assertNotPublic(clazz Class<?>) : void"
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 5481,
                    "endLine": 5481,
                    "startColumn": 3,
                    "endColumn": 107,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 169,
                    "endLine": 186,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package rootVariableWithNonPublicType(spel String) : void"
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 178,
                    "endLine": 178,
                    "startColumn": 4,
                    "endColumn": 35,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "assertNotPublic(map.getClass())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "b44c31e9974e993646461a14e6ff1f45f8750ceb",
        "url": "https://github.com/spring-projects/spring-framework/commit/b44c31e9974e993646461a14e6ff1f45f8750ceb",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private assertNotPublic(clazz Class<?>) : void extracted from package indexIntoMapOfPrimitiveIntArray() : void in class org.springframework.expression.spel.SpelCompilationCoverageTests.IndexingTests & moved to class org.springframework.expression.spel.SpelCompilationCoverageTests",
            "leftSideLocations": [
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 547,
                    "endLine": 583,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package indexIntoMapOfPrimitiveIntArray() : void"
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 552,
                    "endLine": 552,
                    "startColumn": 4,
                    "endColumn": 75,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 5480,
                    "endLine": 5482,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private assertNotPublic(clazz Class<?>) : void"
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 5481,
                    "endLine": 5481,
                    "startColumn": 3,
                    "endColumn": 107,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 547,
                    "endLine": 583,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package indexIntoMapOfPrimitiveIntArray() : void"
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 552,
                    "endLine": 552,
                    "startColumn": 4,
                    "endColumn": 35,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "assertNotPublic(map.getClass())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "b44c31e9974e993646461a14e6ff1f45f8750ceb",
        "url": "https://github.com/spring-projects/spring-framework/commit/b44c31e9974e993646461a14e6ff1f45f8750ceb",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private assertNotPublic(clazz Class<?>) : void extracted from package indexIntoMapOfPrimitiveIntArrayWithCompilableMapAccessor() : void in class org.springframework.expression.spel.SpelCompilationCoverageTests.IndexingTests & moved to class org.springframework.expression.spel.SpelCompilationCoverageTests",
            "leftSideLocations": [
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 585,
                    "endLine": 631,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package indexIntoMapOfPrimitiveIntArrayWithCompilableMapAccessor() : void"
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 593,
                    "endLine": 593,
                    "startColumn": 4,
                    "endColumn": 75,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 5480,
                    "endLine": 5482,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private assertNotPublic(clazz Class<?>) : void"
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 5481,
                    "endLine": 5481,
                    "startColumn": 3,
                    "endColumn": 107,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 585,
                    "endLine": 631,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package indexIntoMapOfPrimitiveIntArrayWithCompilableMapAccessor() : void"
                },
                {
                    "filePath": "spring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java",
                    "startLine": 593,
                    "endLine": 593,
                    "startColumn": 4,
                    "endColumn": 35,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "assertNotPublic(map.getClass())"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "c1424acb940d0a23ed90628b24c8668dca649032",
        "url": "https://github.com/spring-projects/spring-framework/commit/c1424acb940d0a23ed90628b24c8668dca649032",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public onError(context JmsProcessObservationContext) : void extracted from package shouldHaveObservationErrorWhenRethrown(listenerContainer AbstractMessageListenerContainer) : void in class org.springframework.jms.listener.MessageListenerContainerObservationTests & moved to class org.springframework.jms.listener.MessageListenerContainerObservationTests.ErrorHandlerObservationHandler",
            "leftSideLocations": [
                {
                    "filePath": "spring-jms/src/test/java/org/springframework/jms/listener/MessageListenerContainerObservationTests.java",
                    "startLine": 114,
                    "endLine": 140,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package shouldHaveObservationErrorWhenRethrown(listenerContainer AbstractMessageListenerContainer) : void"
                },
                {
                    "filePath": "spring-jms/src/test/java/org/springframework/jms/listener/MessageListenerContainerObservationTests.java",
                    "startLine": 127,
                    "endLine": 127,
                    "startColumn": 4,
                    "endColumn": 22,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-jms/src/test/java/org/springframework/jms/listener/MessageListenerContainerObservationTests.java",
                    "startLine": 157,
                    "endLine": 160,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public onError(context JmsProcessObservationContext) : void"
                },
                {
                    "filePath": "spring-jms/src/test/java/org/springframework/jms/listener/MessageListenerContainerObservationTests.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 4,
                    "endColumn": 27,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-jms/src/test/java/org/springframework/jms/listener/MessageListenerContainerObservationTests.java",
                    "startLine": 116,
                    "endLine": 142,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package shouldHaveObservationErrorWhenRethrown(listenerContainer AbstractMessageListenerContainer) : void"
                },
                {
                    "filePath": "spring-jms/src/test/java/org/springframework/jms/listener/MessageListenerContainerObservationTests.java",
                    "startLine": 122,
                    "endLine": 122,
                    "startColumn": 3,
                    "endColumn": 93,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "registry.observationConfig().observationHandler(new ErrorHandlerObservationHandler(latch))"
                }
            ],
            "isStatic": false
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "521cda009b851f0f46985953f6f9e98599db776d",
        "url": "https://github.com/spring-projects/spring-framework/commit/521cda009b851f0f46985953f6f9e98599db776d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getSchedulerFor(handlerMethod HandlerMethod) : Scheduler extracted from public handle(exchange ServerWebExchange, handler Object) : Mono<HandlerResult> in class org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter & moved to class org.springframework.web.reactive.result.method.annotation.ControllerMethodResolver",
            "leftSideLocations": [
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java",
                    "startLine": 239,
                    "endLine": 271,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public handle(exchange ServerWebExchange, handler Object) : Mono<HandlerResult>"
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java",
                    "startLine": 264,
                    "endLine": 264,
                    "startColumn": 4,
                    "endColumn": 91,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java",
                    "startLine": 265,
                    "endLine": 267,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java",
                    "startLine": 263,
                    "endLine": 268,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java",
                    "startLine": 265,
                    "endLine": 267,
                    "startColumn": 58,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java",
                    "startLine": 263,
                    "endLine": 268,
                    "startColumn": 31,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java",
                    "startLine": 301,
                    "endLine": 315,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getSchedulerFor(handlerMethod HandlerMethod) : Scheduler"
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java",
                    "startLine": 309,
                    "endLine": 309,
                    "startColumn": 4,
                    "endColumn": 91,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java",
                    "startLine": 310,
                    "endLine": 312,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java",
                    "startLine": 308,
                    "endLine": 313,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java",
                    "startLine": 310,
                    "endLine": 312,
                    "startColumn": 58,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java",
                    "startLine": 308,
                    "endLine": 313,
                    "startColumn": 41,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java",
                    "startLine": 240,
                    "endLine": 270,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public handle(exchange ServerWebExchange, handler Object) : Mono<HandlerResult>"
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java",
                    "startLine": 264,
                    "endLine": 264,
                    "startColumn": 33,
                    "endColumn": 83,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "this.methodResolver.getSchedulerFor(handlerMethod)"
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java",
                    "startLine": 311,
                    "endLine": 311,
                    "startColumn": 5,
                    "endColumn": 37,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java",
                    "startLine": 314,
                    "endLine": 314,
                    "startColumn": 3,
                    "endColumn": 15,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "d91277095a3eee690f3e6766257cec6e1c2510f8",
        "url": "https://github.com/spring-projects/spring-framework/commit/d91277095a3eee690f3e6766257cec6e1c2510f8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getAccessorsToTry(targetType Class<?>, accessors List<T>) : List<T> extracted from private getIndexAccessorsToTry(contextObject Object, propertyAccessors List<IndexAccessor>) : List<IndexAccessor> in class org.springframework.expression.spel.ast.Indexer & moved to class org.springframework.expression.spel.ast.AstUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 282,
                    "endLine": 317,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private getIndexAccessorsToTry(contextObject Object, propertyAccessors List<IndexAccessor>) : List<IndexAccessor>"
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 293,
                    "endLine": 293,
                    "startColumn": 3,
                    "endColumn": 61,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 294,
                    "endLine": 294,
                    "startColumn": 3,
                    "endColumn": 60,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 4,
                    "endColumn": 61,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 299,
                    "endLine": 299,
                    "startColumn": 5,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 304,
                    "endLine": 304,
                    "startColumn": 7,
                    "endColumn": 39,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 313,
                    "endLine": 313,
                    "startColumn": 3,
                    "endColumn": 70,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 315,
                    "endLine": 315,
                    "startColumn": 3,
                    "endColumn": 38,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 316,
                    "endLine": 316,
                    "startColumn": 3,
                    "endColumn": 20,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 307,
                    "endLine": 309,
                    "startColumn": 11,
                    "endColumn": 7,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 303,
                    "endLine": 309,
                    "startColumn": 6,
                    "endColumn": 7,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 302,
                    "endLine": 310,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 301,
                    "endLine": 311,
                    "startColumn": 9,
                    "endColumn": 5,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 297,
                    "endLine": 311,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 295,
                    "endLine": 312,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 307,
                    "endLine": 309,
                    "startColumn": 51,
                    "endColumn": 7,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 303,
                    "endLine": 306,
                    "startColumn": 31,
                    "endColumn": 7,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 302,
                    "endLine": 310,
                    "startColumn": 36,
                    "endColumn": 6,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 301,
                    "endLine": 311,
                    "startColumn": 33,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 297,
                    "endLine": 300,
                    "startColumn": 25,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 295,
                    "endLine": 312,
                    "startColumn": 52,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 37,
                    "endLine": 94,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getAccessorsToTry(targetType Class<?>, accessors List<T>) : List<T>"
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 62,
                    "endLine": 62,
                    "startColumn": 3,
                    "endColumn": 44,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 3,
                    "endColumn": 46,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 66,
                    "endLine": 66,
                    "startColumn": 4,
                    "endColumn": 61,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 69,
                    "endLine": 69,
                    "startColumn": 5,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 74,
                    "endLine": 74,
                    "startColumn": 7,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 63,
                    "endLine": 63,
                    "startColumn": 3,
                    "endColumn": 46,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 91,
                    "endLine": 91,
                    "startColumn": 4,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 4,
                    "endColumn": 18,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 76,
                    "endLine": 78,
                    "startColumn": 11,
                    "endColumn": 7,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 73,
                    "endLine": 78,
                    "startColumn": 6,
                    "endColumn": 7,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 72,
                    "endLine": 79,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 71,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 5,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 67,
                    "endLine": 80,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 65,
                    "endLine": 81,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 76,
                    "endLine": 78,
                    "startColumn": 51,
                    "endColumn": 7,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 73,
                    "endLine": 75,
                    "startColumn": 31,
                    "endColumn": 7,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 72,
                    "endLine": 79,
                    "startColumn": 36,
                    "endColumn": 6,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 71,
                    "endLine": 80,
                    "startColumn": 33,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 67,
                    "endLine": 70,
                    "startColumn": 38,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 65,
                    "endLine": 81,
                    "startColumn": 32,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 405,
                    "endLine": 419,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private getIndexAccessorsToTry(targetObject Object, indexAccessors List<IndexAccessor>) : List<IndexAccessor>"
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                    "startLine": 418,
                    "endLine": 418,
                    "startColumn": 10,
                    "endColumn": 64,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "AstUtils.getAccessorsToTry(targetType,indexAccessors)"
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 59,
                    "endLine": 59,
                    "startColumn": 4,
                    "endColumn": 35,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 77,
                    "endLine": 77,
                    "startColumn": 7,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 83,
                    "endLine": 83,
                    "startColumn": 3,
                    "endColumn": 82,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 4,
                    "endColumn": 35,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 4,
                    "endColumn": 43,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 89,
                    "endLine": 89,
                    "startColumn": 4,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 90,
                    "endLine": 90,
                    "startColumn": 4,
                    "endColumn": 34,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 58,
                    "endLine": 60,
                    "startColumn": 28,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 58,
                    "endLine": 60,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 84,
                    "endLine": 86,
                    "startColumn": 18,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 87,
                    "endLine": 93,
                    "startColumn": 8,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/AstUtils.java",
                    "startLine": 84,
                    "endLine": 93,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "af23cc233ec819be15ea33a914b06bc06d69f6b6",
        "url": "https://github.com/spring-projects/spring-framework/commit/af23cc233ec819be15ea33a914b06bc06d69f6b6",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private isSpecialScheme(scheme String) : boolean extracted from public isSpecial() : boolean in class org.springframework.web.util.UrlParser.UrlRecord & moved to class org.springframework.web.util.UrlParser",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 1363,
                    "endLine": 1373,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public isSpecial() : boolean"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 1367,
                    "endLine": 1372,
                    "startColumn": 4,
                    "endColumn": 32,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 337,
                    "endLine": 344,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private isSpecialScheme(scheme String) : boolean"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 338,
                    "endLine": 343,
                    "startColumn": 3,
                    "endColumn": 26,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 1443,
                    "endLine": 1448,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public isSpecial() : boolean"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 1447,
                    "endLine": 1447,
                    "startColumn": 11,
                    "endColumn": 39,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "isSpecialScheme(this.scheme)"
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "0b5800ae39f4d6e1731c0ca57c2bef6bc960f8a8",
        "url": "https://github.com/spring-projects/spring-framework/commit/0b5800ae39f4d6e1731c0ca57c2bef6bc960f8a8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public generateCodeForArgument(methodVisitor MethodVisitor, argument SpelNode, requiredTypeDesc String) : void extracted from protected generateCodeForArgument(mv MethodVisitor, cf CodeFlow, argument SpelNodeImpl, paramDesc String) : void in class org.springframework.expression.spel.ast.SpelNodeImpl & moved to class org.springframework.expression.spel.CodeFlow",
            "leftSideLocations": [
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 273,
                    "endLine": 295,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "protected generateCodeForArgument(mv MethodVisitor, cf CodeFlow, argument SpelNodeImpl, paramDesc String) : void"
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 278,
                    "endLine": 278,
                    "startColumn": 3,
                    "endColumn": 30,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 280,
                    "endLine": 280,
                    "startColumn": 3,
                    "endColumn": 41,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 281,
                    "endLine": 281,
                    "startColumn": 3,
                    "endColumn": 56,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 294,
                    "endLine": 294,
                    "startColumn": 3,
                    "endColumn": 29,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 279,
                    "endLine": 279,
                    "startColumn": 3,
                    "endColumn": 33,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 282,
                    "endLine": 282,
                    "startColumn": 3,
                    "endColumn": 61,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 285,
                    "endLine": 285,
                    "startColumn": 4,
                    "endColumn": 58,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 292,
                    "endLine": 292,
                    "startColumn": 4,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 287,
                    "endLine": 293,
                    "startColumn": 8,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 284,
                    "endLine": 293,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 290,
                    "endLine": 293,
                    "startColumn": 8,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 287,
                    "endLine": 289,
                    "startColumn": 58,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 284,
                    "endLine": 286,
                    "startColumn": 55,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 290,
                    "endLine": 293,
                    "startColumn": 41,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 274,
                    "endLine": 314,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public generateCodeForArgument(methodVisitor MethodVisitor, argument SpelNode, requiredTypeDesc String) : void"
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 295,
                    "endLine": 295,
                    "startColumn": 3,
                    "endColumn": 27,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 297,
                    "endLine": 297,
                    "startColumn": 3,
                    "endColumn": 38,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 298,
                    "endLine": 298,
                    "startColumn": 3,
                    "endColumn": 56,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 313,
                    "endLine": 313,
                    "startColumn": 3,
                    "endColumn": 26,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 3,
                    "endColumn": 46,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 299,
                    "endLine": 299,
                    "startColumn": 3,
                    "endColumn": 52,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 302,
                    "endLine": 302,
                    "startColumn": 4,
                    "endColumn": 60,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 311,
                    "endLine": 311,
                    "startColumn": 4,
                    "endColumn": 53,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 305,
                    "endLine": 312,
                    "startColumn": 8,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 301,
                    "endLine": 312,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 309,
                    "endLine": 312,
                    "startColumn": 8,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 305,
                    "endLine": 307,
                    "startColumn": 65,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 301,
                    "endLine": 303,
                    "startColumn": 62,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 309,
                    "endLine": 312,
                    "startColumn": 48,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 273,
                    "endLine": 282,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "protected generateCodeForArgument(mv MethodVisitor, cf CodeFlow, argument SpelNodeImpl, paramDesc String) : void"
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/ast/SpelNodeImpl.java",
                    "startLine": 281,
                    "endLine": 281,
                    "startColumn": 3,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "cf.generateCodeForArgument(mv,argument,paramDesc)"
                },
                {
                    "filePath": "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                    "startLine": 306,
                    "endLine": 306,
                    "startColumn": 4,
                    "endColumn": 74,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "3cfa4ed4f77e4ead5b8a2dba8b4b1e122b94ccfb",
        "url": "https://github.com/spring-projects/spring-framework/commit/3cfa4ed4f77e4ead5b8a2dba8b4b1e122b94ccfb",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private percentDecode(input String) : String extracted from public parse(input String, isOpaque boolean, validationErrorHandler Consumer<String>) : Host in class org.springframework.web.util.UrlParser.Host & moved to class org.springframework.web.util.UrlParser",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 1645,
                    "endLine": 1689,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public parse(input String, isOpaque boolean, validationErrorHandler Consumer<String>) : Host"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 1669,
                    "endLine": 1669,
                    "startColumn": 4,
                    "endColumn": 67,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 510,
                    "endLine": 517,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private percentDecode(input String) : String"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 512,
                    "endLine": 512,
                    "startColumn": 4,
                    "endColumn": 58,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 1986,
                    "endLine": 2030,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public parse(input String, isOpaque boolean, p UrlParser) : Host"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 2010,
                    "endLine": 2010,
                    "startColumn": 20,
                    "endColumn": 40,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "percentDecode(input)"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 515,
                    "endLine": 515,
                    "startColumn": 4,
                    "endColumn": 96,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 511,
                    "endLine": 516,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/UrlParser.java",
                    "startLine": 514,
                    "endLine": 516,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "6de624d537065562beb50ac6437ae33e413311c9",
        "url": "https://github.com/spring-projects/spring-framework/commit/6de624d537065562beb50ac6437ae33e413311c9",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public instantiateWithFactoryMethod(method Method, instanceSupplier ThrowingSupplier<T>) : T extracted from private invokeBeanSupplier(executable Executable, beanSupplier ThrowingSupplier<T>) : T in class org.springframework.beans.factory.aot.BeanInstanceSupplier & moved to class org.springframework.beans.factory.support.SimpleInstantiationStrategy",
            "leftSideLocations": [
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanInstanceSupplier.java",
                    "startLine": 212,
                    "endLine": 224,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private invokeBeanSupplier(executable Executable, beanSupplier ThrowingSupplier<T>) : T"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanInstanceSupplier.java",
                    "startLine": 216,
                    "endLine": 216,
                    "startColumn": 3,
                    "endColumn": 101,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanInstanceSupplier.java",
                    "startLine": 219,
                    "endLine": 219,
                    "startColumn": 4,
                    "endColumn": 30,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanInstanceSupplier.java",
                    "startLine": 217,
                    "endLine": 223,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanInstanceSupplier.java",
                    "startLine": 221,
                    "endLine": 223,
                    "startColumn": 11,
                    "endColumn": 4,
                    "codeElementType": "FINALLY_BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 75,
                    "endLine": 98,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public instantiateWithFactoryMethod(method Method, instanceSupplier ThrowingSupplier<T>) : T"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 85,
                    "endLine": 85,
                    "startColumn": 3,
                    "endColumn": 74,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 4,
                    "endColumn": 34,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 86,
                    "endLine": 97,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 90,
                    "endLine": 97,
                    "startColumn": 11,
                    "endColumn": 4,
                    "codeElementType": "FINALLY_BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanInstanceSupplier.java",
                    "startLine": 212,
                    "endLine": 217,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private invokeBeanSupplier(executable Executable, beanSupplier ThrowingSupplier<T>) : T"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanInstanceSupplier.java",
                    "startLine": 216,
                    "endLine": 216,
                    "startColumn": 10,
                    "endColumn": 93,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "SimpleInstantiationStrategy.instantiateWithFactoryMethod(method,beanSupplier::get)"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 4,
                    "endColumn": 46,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 92,
                    "endLine": 92,
                    "startColumn": 5,
                    "endColumn": 66,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 95,
                    "endLine": 95,
                    "startColumn": 5,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 91,
                    "endLine": 93,
                    "startColumn": 43,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 94,
                    "endLine": 96,
                    "startColumn": 9,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/support/SimpleInstantiationStrategy.java",
                    "startLine": 91,
                    "endLine": 96,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "76b2d13b2cd2adc9b0ccf6461bbe7e15532cd04d",
        "url": "https://github.com/spring-projects/spring-framework/commit/76b2d13b2cd2adc9b0ccf6461bbe7e15532cd04d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private createRequestPath() : RequestPath extracted from private ServletRequestPath(rawPath String, contextPath String, servletPathPrefix String) in class org.springframework.web.util.ServletRequestPathUtils.ServletRequestPath & moved to class org.springframework.web.util.ServletRequestPathUtils.ServletRequestPath.PathElements",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 193,
                    "endLine": 197,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private ServletRequestPath(rawPath String, contextPath String, servletPathPrefix String)"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 195,
                    "endLine": 195,
                    "startColumn": 4,
                    "endColumn": 83,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 278,
                    "endLine": 280,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private createRequestPath() : RequestPath"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 279,
                    "endLine": 279,
                    "startColumn": 5,
                    "endColumn": 87,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 196,
                    "endLine": 200,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private ServletRequestPath(pathElements PathElements)"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 198,
                    "endLine": 198,
                    "startColumn": 23,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "pathElements.createRequestPath()"
                }
            ],
            "isStatic": false
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "76b2d13b2cd2adc9b0ccf6461bbe7e15532cd04d",
        "url": "https://github.com/spring-projects/spring-framework/commit/76b2d13b2cd2adc9b0ccf6461bbe7e15532cd04d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private createContextPath() : PathContainer extracted from private ServletRequestPath(rawPath String, contextPath String, servletPathPrefix String) in class org.springframework.web.util.ServletRequestPathUtils.ServletRequestPath & moved to class org.springframework.web.util.ServletRequestPathUtils.ServletRequestPath.PathElements",
            "leftSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 193,
                    "endLine": 197,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private ServletRequestPath(rawPath String, contextPath String, servletPathPrefix String)"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 196,
                    "endLine": 196,
                    "startColumn": 4,
                    "endColumn": 100,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 282,
                    "endLine": 284,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private createContextPath() : PathContainer"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 283,
                    "endLine": 283,
                    "startColumn": 5,
                    "endColumn": 99,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 196,
                    "endLine": 200,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private ServletRequestPath(pathElements PathElements)"
                },
                {
                    "filePath": "spring-web/src/main/java/org/springframework/web/util/ServletRequestPathUtils.java",
                    "startLine": 199,
                    "endLine": 199,
                    "startColumn": 23,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "pathElements.createContextPath()"
                }
            ],
            "isStatic": false
        }
    },
    {
        "repository": "https://github.com/spring-projects/spring-framework.git",
        "sha1": "47f88e123f8bdbf94f4eae068f19307967e867e2",
        "url": "https://github.com/spring-projects/spring-framework/commit/47f88e123f8bdbf94f4eae068f19307967e867e2",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getPubliclyAccessibleMethodIfPossible(method Method, targetClass Class<?>) : Method extracted from private addInitDestroyHint(beanUserClass Class<?>, methodName String) : void in class org.springframework.beans.factory.aot.BeanDefinitionPropertiesCodeGenerator & moved to class org.springframework.util.ClassUtils",
            "leftSideLocations": [
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanDefinitionPropertiesCodeGenerator.java",
                    "startLine": 157,
                    "endLine": 184,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private addInitDestroyHint(beanUserClass Class<?>, methodName String) : void"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanDefinitionPropertiesCodeGenerator.java",
                    "startLine": 179,
                    "endLine": 179,
                    "startColumn": 4,
                    "endColumn": 92,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanDefinitionPropertiesCodeGenerator.java",
                    "startLine": 180,
                    "endLine": 182,
                    "startColumn": 4,
                    "endColumn": 5,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanDefinitionPropertiesCodeGenerator.java",
                    "startLine": 180,
                    "endLine": 182,
                    "startColumn": 41,
                    "endColumn": 5,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1466,
                    "endLine": 1510,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getPubliclyAccessibleMethodIfPossible(method Method, targetClass Class<?>) : Method"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1501,
                    "endLine": 1501,
                    "startColumn": 3,
                    "endColumn": 78,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1503,
                    "endLine": 1505,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1503,
                    "endLine": 1505,
                    "startColumn": 40,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanDefinitionPropertiesCodeGenerator.java",
                    "startLine": 157,
                    "endLine": 184,
                    "startColumn": 2,
                    "endColumn": 3,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private addInitDestroyHint(beanUserClass Class<?>, methodName String) : void"
                },
                {
                    "filePath": "spring-beans/src/main/java/org/springframework/beans/factory/aot/BeanDefinitionPropertiesCodeGenerator.java",
                    "startLine": 179,
                    "endLine": 179,
                    "startColumn": 38,
                    "endColumn": 109,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ClassUtils.getPubliclyAccessibleMethodIfPossible(method,beanUserClass)"
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1494,
                    "endLine": 1494,
                    "startColumn": 3,
                    "endColumn": 56,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1507,
                    "endLine": 1508,
                    "startColumn": 3,
                    "endColumn": 108,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1509,
                    "endLine": 1509,
                    "startColumn": 3,
                    "endColumn": 45,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1498,
                    "endLine": 1498,
                    "startColumn": 4,
                    "endColumn": 18,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1504,
                    "endLine": 1504,
                    "startColumn": 4,
                    "endColumn": 27,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1497,
                    "endLine": 1499,
                    "startColumn": 102,
                    "endColumn": 4,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                    "startLine": 1497,
                    "endLine": 1499,
                    "startColumn": 3,
                    "endColumn": 4,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        }
    }
]