[
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "5bc3aa428067dff1f2b9075ff5d1351fb05d4b10",
        "url": "https://github.com/apache/kafka/commit/5bc3aa428067dff1f2b9075ff5d1351fb05d4b10",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public flush(accessor DBAccessor) : void extracted from public flush() : void in class org.apache.kafka.streams.state.internals.RocksDBStore & moved to class org.apache.kafka.streams.state.internals.RocksDBStore.SingleColumnFamilyAccessor",
            "leftSideLocations": [
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java",
                    "startLine": 643,
                    "endLine": 653,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public flush() : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java",
                    "startLine": 649,
                    "endLine": 649,
                    "startColumn": 13,
                    "endColumn": 32,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java",
                    "startLine": 961,
                    "endLine": 964,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public flush(accessor DBAccessor) : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java",
                    "startLine": 963,
                    "endLine": 963,
                    "startColumn": 13,
                    "endColumn": 42,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java",
                    "startLine": 645,
                    "endLine": 655,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public flush() : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java",
                    "startLine": 651,
                    "endLine": 651,
                    "startColumn": 13,
                    "endColumn": 41,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "cfAccessor.flush(dbAccessor)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 566,
        "extraction_results": {
            "success": true,
            "newCommitHash": "5d9207c097766bead70cfb2f4160323d9a750cfc",
            "newBranchName": "extract-flush-flush-c078e51"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "e45e032b8d90435de2f338f77a732c88f8cca66e",
        "url": "https://github.com/apache/kafka/commit/e45e032b8d90435de2f338f77a732c88f8cca66e",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeThrowAsyncError() : void extracted from private deliverMessages() : void in class org.apache.kafka.connect.runtime.WorkerSinkTask & moved to class org.apache.kafka.connect.runtime.errors.WorkerErrantRecordReporter",
            "leftSideLocations": [
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
                    "startLine": 595,
                    "endLine": 634,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private deliverMessages() : void"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
                    "startLine": 605,
                    "endLine": 606,
                    "startColumn": 17,
                    "endColumn": 57,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
                    "startLine": 604,
                    "endLine": 607,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
                    "startLine": 604,
                    "endLine": 607,
                    "startColumn": 109,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/WorkerErrantRecordReporter.java",
                    "startLine": 162,
                    "endLine": 166,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeThrowAsyncError() : void"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/WorkerErrantRecordReporter.java",
                    "startLine": 164,
                    "endLine": 164,
                    "startColumn": 13,
                    "endColumn": 103,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/WorkerErrantRecordReporter.java",
                    "startLine": 163,
                    "endLine": 165,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/WorkerErrantRecordReporter.java",
                    "startLine": 163,
                    "endLine": 165,
                    "startColumn": 100,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
                    "startLine": 595,
                    "endLine": 633,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private deliverMessages() : void"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
                    "startLine": 605,
                    "endLine": 605,
                    "startColumn": 17,
                    "endColumn": 66,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "workerErrantRecordReporter.maybeThrowAsyncError()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 567,
        "extraction_results": {
            "success": true,
            "newCommitHash": "1f1c194190a2c0be33606d4db7188eb04925d32a",
            "newBranchName": "extract-maybeThrowAsyncError-deliverMessages-72b7028"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "e7fa0edd6351c0949b9082c626597046e9def854",
        "url": "https://github.com/apache/kafka/commit/e7fa0edd6351c0949b9082c626597046e9def854",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public getOrMaybeCreateGroup(groupType Group.GroupType, groupId String) : Group extracted from public testDeleteGroupAllOffsets(groupType Group.GroupType) : void in class org.apache.kafka.coordinator.group.OffsetMetadataManagerTest & moved to class org.apache.kafka.coordinator.group.OffsetMetadataManagerTest.OffsetMetadataManagerTestContext",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2345,
                    "endLine": 2380,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testDeleteGroupAllOffsets(groupType Group.GroupType) : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2350,
                    "endLine": 2350,
                    "startColumn": 13,
                    "endColumn": 26,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2356,
                    "endLine": 2356,
                    "startColumn": 13,
                    "endColumn": 27,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2362,
                    "endLine": 2362,
                    "startColumn": 13,
                    "endColumn": 21,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2363,
                    "endLine": 2363,
                    "startColumn": 17,
                    "endColumn": 88,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2351,
                    "endLine": 2354,
                    "startColumn": 17,
                    "endColumn": 19,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2357,
                    "endLine": 2360,
                    "startColumn": 17,
                    "endColumn": 19,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2349,
                    "endLine": 2364,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "SWITCH_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 184,
                    "endLine": 202,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public getOrMaybeCreateGroup(groupType Group.GroupType, groupId String) : Group"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 189,
                    "endLine": 189,
                    "startColumn": 17,
                    "endColumn": 30,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 194,
                    "endLine": 194,
                    "startColumn": 17,
                    "endColumn": 31,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 199,
                    "endLine": 199,
                    "startColumn": 17,
                    "endColumn": 25,
                    "codeElementType": "SWITCH_CASE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 200,
                    "endLine": 200,
                    "startColumn": 21,
                    "endColumn": 92,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 190,
                    "endLine": 193,
                    "startColumn": 21,
                    "endColumn": 23,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 195,
                    "endLine": 198,
                    "startColumn": 21,
                    "endColumn": 23,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 188,
                    "endLine": 201,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "SWITCH_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2391,
                    "endLine": 2412,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testDeleteGroupAllOffsets(groupType Group.GroupType) : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 2395,
                    "endLine": 2395,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "context.getOrMaybeCreateGroup(groupType,\"foo\")"
                }
            ],
            "isStatic": false
        },
        "ref_id": 568,
        "extraction_results": {
            "success": true,
            "newCommitHash": "fd74defe96b3f3fc1d3616cb408a0bfdb81ca73a",
            "newBranchName": "extract-getOrMaybeCreateGroup-testDeleteGroupAllOffsets-6ccc19c"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "0472db2cd39d4f53c3855063117bdae15f4d0d86",
        "url": "https://github.com/apache/kafka/commit/0472db2cd39d4f53c3855063117bdae15f4d0d86",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public combineFutures(futures List<CompletableFuture<T>>, init Supplier<T>, add BiConsumer<T,T>) : CompletableFuture<T> extracted from public consumerGroupDescribe(context RequestContext, groupIds List<String>) : CompletableFuture<List<ConsumerGroupDescribeResponseData.DescribedGroup>> in class org.apache.kafka.coordinator.group.GroupCoordinatorService & moved to class org.apache.kafka.server.util.FutureUtils",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 560,
                    "endLine": 619,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public consumerGroupDescribe(context RequestContext, groupIds List<String>) : CompletableFuture<List<ConsumerGroupDescribeResponseData.DescribedGroup>>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 613,
                    "endLine": 613,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 617,
                    "endLine": 617,
                    "startColumn": 13,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 616,
                    "endLine": 616,
                    "startColumn": 13,
                    "endColumn": 66,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 614,
                    "endLine": 618,
                    "startColumn": 42,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 614,
                    "endLine": 618,
                    "startColumn": 9,
                    "endColumn": 12,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 106,
                    "endLine": 127,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public combineFutures(futures List<CompletableFuture<T>>, init Supplier<T>, add BiConsumer<T,T>) : CompletableFuture<T>"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 121,
                    "endLine": 121,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 125,
                    "endLine": 125,
                    "startColumn": 13,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 124,
                    "endLine": 124,
                    "startColumn": 13,
                    "endColumn": 71,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 122,
                    "endLine": 126,
                    "startColumn": 42,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 122,
                    "endLine": 126,
                    "startColumn": 9,
                    "endColumn": 12,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 534,
                    "endLine": 583,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public consumerGroupDescribe(context RequestContext, groupIds List<String>) : CompletableFuture<List<ConsumerGroupDescribeResponseData.DescribedGroup>>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 582,
                    "endLine": 582,
                    "startColumn": 16,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FutureUtils.combineFutures(futures,ArrayList::new,List::addAll)"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 123,
                    "endLine": 123,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 569,
        "extraction_results": {
            "success": true,
            "newCommitHash": "194327a1030ebdb592a03af369090178521cf665",
            "newBranchName": "extract-combineFutures-consumerGroupDescribe-016bd68"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "0472db2cd39d4f53c3855063117bdae15f4d0d86",
        "url": "https://github.com/apache/kafka/commit/0472db2cd39d4f53c3855063117bdae15f4d0d86",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public combineFutures(futures List<CompletableFuture<T>>, init Supplier<T>, add BiConsumer<T,T>) : CompletableFuture<T> extracted from public describeGroups(context RequestContext, groupIds List<String>) : CompletableFuture<List<DescribeGroupsResponseData.DescribedGroup>> in class org.apache.kafka.coordinator.group.GroupCoordinatorService & moved to class org.apache.kafka.server.util.FutureUtils",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 621,
                    "endLine": 682,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public describeGroups(context RequestContext, groupIds List<String>) : CompletableFuture<List<DescribeGroupsResponseData.DescribedGroup>>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 676,
                    "endLine": 676,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 680,
                    "endLine": 680,
                    "startColumn": 13,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 679,
                    "endLine": 679,
                    "startColumn": 13,
                    "endColumn": 66,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 677,
                    "endLine": 681,
                    "startColumn": 42,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 677,
                    "endLine": 681,
                    "startColumn": 9,
                    "endColumn": 12,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 106,
                    "endLine": 127,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public combineFutures(futures List<CompletableFuture<T>>, init Supplier<T>, add BiConsumer<T,T>) : CompletableFuture<T>"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 121,
                    "endLine": 121,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 125,
                    "endLine": 125,
                    "startColumn": 13,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 124,
                    "endLine": 124,
                    "startColumn": 13,
                    "endColumn": 71,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 122,
                    "endLine": 126,
                    "startColumn": 42,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 122,
                    "endLine": 126,
                    "startColumn": 9,
                    "endColumn": 12,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 585,
                    "endLine": 636,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public describeGroups(context RequestContext, groupIds List<String>) : CompletableFuture<List<DescribeGroupsResponseData.DescribedGroup>>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 635,
                    "endLine": 635,
                    "startColumn": 16,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FutureUtils.combineFutures(futures,ArrayList::new,List::addAll)"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 123,
                    "endLine": 123,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 570,
        "extraction_results": {
            "success": true,
            "newCommitHash": "4188c4e8760841b9d5334cfe509818e000a01ad0",
            "newBranchName": "extract-combineFutures-describeGroups-016bd68"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "0472db2cd39d4f53c3855063117bdae15f4d0d86",
        "url": "https://github.com/apache/kafka/commit/0472db2cd39d4f53c3855063117bdae15f4d0d86",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public combineFutures(futures List<CompletableFuture<T>>, init Supplier<T>, add BiConsumer<T,T>) : CompletableFuture<T> extracted from public deleteGroups(context RequestContext, groupIds List<String>, bufferSupplier BufferSupplier) : CompletableFuture<DeleteGroupsResponseData.DeletableGroupResultCollection> in class org.apache.kafka.coordinator.group.GroupCoordinatorService & moved to class org.apache.kafka.server.util.FutureUtils",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 684,
                    "endLine": 745,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public deleteGroups(context RequestContext, groupIds List<String>, bufferSupplier BufferSupplier) : CompletableFuture<DeleteGroupsResponseData.DeletableGroupResultCollection>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 733,
                    "endLine": 733,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 743,
                    "endLine": 743,
                    "startColumn": 13,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 736,
                    "endLine": 742,
                    "startColumn": 13,
                    "endColumn": 15,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 734,
                    "endLine": 744,
                    "startColumn": 43,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 734,
                    "endLine": 744,
                    "startColumn": 9,
                    "endColumn": 12,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 106,
                    "endLine": 127,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public combineFutures(futures List<CompletableFuture<T>>, init Supplier<T>, add BiConsumer<T,T>) : CompletableFuture<T>"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 121,
                    "endLine": 121,
                    "startColumn": 9,
                    "endColumn": 119,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 125,
                    "endLine": 125,
                    "startColumn": 13,
                    "endColumn": 24,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 124,
                    "endLine": 124,
                    "startColumn": 13,
                    "endColumn": 71,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 122,
                    "endLine": 126,
                    "startColumn": 42,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 122,
                    "endLine": 126,
                    "startColumn": 9,
                    "endColumn": 12,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 638,
                    "endLine": 694,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public deleteGroups(context RequestContext, groupIds List<String>, bufferSupplier BufferSupplier) : CompletableFuture<DeleteGroupsResponseData.DeletableGroupResultCollection>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
                    "startLine": 690,
                    "endLine": 693,
                    "startColumn": 16,
                    "endColumn": 108,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "FutureUtils.combineFutures(futures,DeleteGroupsResponseData.DeletableGroupResultCollection::new,(accumulator,newResults) -> newResults.forEach(result -> accumulator.add(result.duplicate())))"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
                    "startLine": 123,
                    "endLine": 123,
                    "startColumn": 13,
                    "endColumn": 38,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 571,
        "extraction_results": {
            "success": true,
            "newCommitHash": "05e534aa47ab77057acd03014cfa4c015157adbd",
            "newBranchName": "extract-combineFutures-deleteGroups-016bd68"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4f0a40590833a141c78341ce95ffc782747c5ac8",
        "url": "https://github.com/apache/kafka/commit/4f0a40590833a141c78341ce95ffc782747c5ac8",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public tasksMax() : int extracted from public connectorTaskConfigs(connName String, connConfig ConnectorConfig) : List<Map<String,String>> in class org.apache.kafka.connect.runtime.Worker & moved to class org.apache.kafka.connect.runtime.ConnectorConfig",
            "leftSideLocations": [
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
                    "startLine": 377,
                    "endLine": 414,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public connectorTaskConfigs(connName String, connConfig ConnectorConfig) : List<Map<String,String>>"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
                    "startLine": 392,
                    "endLine": 392,
                    "startColumn": 13,
                    "endColumn": 80,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java",
                    "startLine": 295,
                    "endLine": 297,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public tasksMax() : int"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java",
                    "startLine": 296,
                    "endLine": 296,
                    "startColumn": 9,
                    "endColumn": 41,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
                    "startLine": 377,
                    "endLine": 422,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public connectorTaskConfigs(connName String, connConfig ConnectorConfig) : List<Map<String,String>>"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
                    "startLine": 392,
                    "endLine": 392,
                    "startColumn": 28,
                    "endColumn": 49,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "connConfig.tasksMax()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 572,
        "extraction_results": {
            "success": true,
            "newCommitHash": "617c4dda13dda70600b65f8dc16964d46f996a68",
            "newBranchName": "extract-tasksMax-connectorTaskConfigs-8da6508"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "d24abe0edebad37e554adea47408c3063037f744",
        "url": "https://github.com/apache/kafka/commit/d24abe0edebad37e554adea47408c3063037f744",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public assertNoOrEmptyResult(timeouts List<MockCoordinatorTimer.ExpiredTimeout<Void,Record>>) : void extracted from public testLastJoiningMembersAreKickedOutWhenRejoiningGroupWithMaxSize() : void in class org.apache.kafka.coordinator.group.GroupMetadataManagerTest & moved to class org.apache.kafka.coordinator.group.GroupMetadataManagerTestContext",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
                    "startLine": 5158,
                    "endLine": 5217,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testLastJoiningMembersAreKickedOutWhenRejoiningGroupWithMaxSize() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
                    "startLine": 10901,
                    "endLine": 10901,
                    "startColumn": 9,
                    "endColumn": 42,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
                    "startLine": 10902,
                    "endLine": 10902,
                    "startColumn": 9,
                    "endColumn": 81,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
                    "startLine": 10902,
                    "endLine": 10902,
                    "startColumn": 37,
                    "endColumn": 79,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 106,
                    "endLine": 109,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public assertNoOrEmptyResult(timeouts List<MockCoordinatorTimer.ExpiredTimeout<Void,Record>>) : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 107,
                    "endLine": 107,
                    "startColumn": 9,
                    "endColumn": 42,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 108,
                    "endLine": 108,
                    "startColumn": 9,
                    "endColumn": 81,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 108,
                    "endLine": 108,
                    "startColumn": 37,
                    "endColumn": 79,
                    "codeElementType": "LAMBDA_EXPRESSION_BODY",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
                    "startLine": 4040,
                    "endLine": 4097,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testLastJoiningMembersAreKickedOutWhenRejoiningGroupWithMaxSize() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
                    "startLine": 4085,
                    "endLine": 4085,
                    "startColumn": 9,
                    "endColumn": 84,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "GroupMetadataManagerTestContext.assertNoOrEmptyResult(context.sleep(10000))"
                }
            ],
            "isStatic": true
        },
        "ref_id": 573,
        "extraction_results": {
            "success": true,
            "newCommitHash": "d67ed1ff166294681b2b562d9437a2ba61f11db9",
            "newBranchName": "extract-assertNoOrEmptyResult-testLastJoiningMembersAreKickedOutWhenRejoiningGroupWithMaxSize-be6653c"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "7dbdc15c668dfb5a4a91c79f339c22fb7178c368",
        "url": "https://github.com/apache/kafka/commit/7dbdc15c668dfb5a4a91c79f339c22fb7178c368",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public maybeCheckpoint() : void extracted from package pollAndUpdate() : void in class org.apache.kafka.streams.processor.internals.GlobalStreamThread.StateConsumer & moved to class org.apache.kafka.streams.processor.internals.GlobalStateUpdateTask",
            "leftSideLocations": [
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java",
                    "startLine": 265,
                    "endLine": 275,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package pollAndUpdate() : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java",
                    "startLine": 270,
                    "endLine": 270,
                    "startColumn": 13,
                    "endColumn": 50,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java",
                    "startLine": 273,
                    "endLine": 273,
                    "startColumn": 17,
                    "endColumn": 33,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java",
                    "startLine": 272,
                    "endLine": 272,
                    "startColumn": 17,
                    "endColumn": 46,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java",
                    "startLine": 271,
                    "endLine": 274,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java",
                    "startLine": 271,
                    "endLine": 271,
                    "startColumn": 17,
                    "endColumn": 49,
                    "codeElementType": "INFIX_EXPRESSION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java",
                    "startLine": 271,
                    "endLine": 274,
                    "startColumn": 51,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java",
                    "startLine": 163,
                    "endLine": 170,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public maybeCheckpoint() : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java",
                    "startLine": 165,
                    "endLine": 165,
                    "startColumn": 9,
                    "endColumn": 46,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java",
                    "startLine": 168,
                    "endLine": 168,
                    "startColumn": 13,
                    "endColumn": 29,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java",
                    "startLine": 167,
                    "endLine": 167,
                    "startColumn": 13,
                    "endColumn": 26,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java",
                    "startLine": 166,
                    "endLine": 169,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java",
                    "startLine": 166,
                    "endLine": 166,
                    "startColumn": 13,
                    "endColumn": 45,
                    "codeElementType": "INFIX_EXPRESSION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java",
                    "startLine": 166,
                    "endLine": 169,
                    "startColumn": 129,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java",
                    "startLine": 256,
                    "endLine": 262,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package pollAndUpdate() : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java",
                    "startLine": 261,
                    "endLine": 261,
                    "startColumn": 13,
                    "endColumn": 46,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "stateMaintainer.maybeCheckpoint()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 574,
        "extraction_results": {
            "success": true,
            "newCommitHash": "1d75be12be5762c23b7a31c0b37559f1ba8a719b",
            "newBranchName": "extract-maybeCheckpoint-pollAndUpdate-2c0cab3"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "b6183a41342c765daec9c88f9d2723a221131960",
        "url": "https://github.com/apache/kafka/commit/b6183a41342c765daec9c88f9d2723a221131960",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public fromArgs(args String[]) : ConsumerGroupCommandOptions extracted from public testDescribeGroupCliWithGroupDescribe(quorum String) : void in class org.apache.kafka.tools.consumer.group.AuthorizerIntegrationTest & moved to class org.apache.kafka.tools.consumer.group.ConsumerGroupCommandOptions",
            "leftSideLocations": [
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/AuthorizerIntegrationTest.java",
                    "startLine": 36,
                    "endLine": 46,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testDescribeGroupCliWithGroupDescribe(quorum String) : void"
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/AuthorizerIntegrationTest.java",
                    "startLine": 42,
                    "endLine": 42,
                    "startColumn": 9,
                    "endColumn": 127,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 120,
                    "endLine": 124,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public fromArgs(args String[]) : ConsumerGroupCommandOptions"
                },
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 121,
                    "endLine": 121,
                    "startColumn": 9,
                    "endColumn": 82,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/AuthorizerIntegrationTest.java",
                    "startLine": 33,
                    "endLine": 44,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testDescribeGroupCliWithGroupDescribe(quorum String) : void"
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/AuthorizerIntegrationTest.java",
                    "startLine": 40,
                    "endLine": 40,
                    "startColumn": 44,
                    "endColumn": 89,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ConsumerGroupCommandOptions.fromArgs(cgcArgs)"
                },
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 122,
                    "endLine": 122,
                    "startColumn": 9,
                    "endColumn": 26,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 123,
                    "endLine": 123,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 575,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a7fa737b2cc8ece8e16aef27445f356bd1a14c8e",
            "newBranchName": "extract-fromArgs-testDescribeGroupCliWithGroupDescribe-34d365f"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "b6183a41342c765daec9c88f9d2723a221131960",
        "url": "https://github.com/apache/kafka/commit/b6183a41342c765daec9c88f9d2723a221131960",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public fromArgs(args String[]) : ConsumerGroupCommandOptions extracted from package getConsumerGroupService(args String[]) : ConsumerGroupCommand.ConsumerGroupService in class org.apache.kafka.tools.consumer.group.ConsumerGroupCommandTest & moved to class org.apache.kafka.tools.consumer.group.ConsumerGroupCommandOptions",
            "leftSideLocations": [
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandTest.java",
                    "startLine": 132,
                    "endLine": 141,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package getConsumerGroupService(args String[]) : ConsumerGroupCommand.ConsumerGroupService"
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandTest.java",
                    "startLine": 134,
                    "endLine": 137,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandTest.java",
                    "startLine": 133,
                    "endLine": 133,
                    "startColumn": 9,
                    "endColumn": 124,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 120,
                    "endLine": 124,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public fromArgs(args String[]) : ConsumerGroupCommandOptions"
                },
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 123,
                    "endLine": 123,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 121,
                    "endLine": 121,
                    "startColumn": 9,
                    "endColumn": 82,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandTest.java",
                    "startLine": 130,
                    "endLine": 139,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package getConsumerGroupService(args String[]) : ConsumerGroupCommand.ConsumerGroupService"
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandTest.java",
                    "startLine": 131,
                    "endLine": 131,
                    "startColumn": 44,
                    "endColumn": 86,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ConsumerGroupCommandOptions.fromArgs(args)"
                },
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 122,
                    "endLine": 122,
                    "startColumn": 9,
                    "endColumn": 26,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 576,
        "extraction_results": {
            "success": true,
            "newCommitHash": "7af27c6d699e8995dba400666005069a2daa5be0",
            "newBranchName": "extract-fromArgs-getConsumerGroupService-34d365f"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "b6183a41342c765daec9c88f9d2723a221131960",
        "url": "https://github.com/apache/kafka/commit/b6183a41342c765daec9c88f9d2723a221131960",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public fromArgs(args String[]) : ConsumerGroupCommandOptions extracted from private prepareConsumerGroupService() : ConsumerGroupCommand.ConsumerGroupService in class org.apache.kafka.tools.consumer.group.SaslClientsWithInvalidCredentialsTest & moved to class org.apache.kafka.tools.consumer.group.ConsumerGroupCommandOptions",
            "leftSideLocations": [
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/SaslClientsWithInvalidCredentialsTest.java",
                    "startLine": 158,
                    "endLine": 169,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private prepareConsumerGroupService() : ConsumerGroupCommand.ConsumerGroupService"
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/SaslClientsWithInvalidCredentialsTest.java",
                    "startLine": 167,
                    "endLine": 167,
                    "startColumn": 9,
                    "endColumn": 127,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 120,
                    "endLine": 124,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public fromArgs(args String[]) : ConsumerGroupCommandOptions"
                },
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 121,
                    "endLine": 121,
                    "startColumn": 9,
                    "endColumn": 82,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/SaslClientsWithInvalidCredentialsTest.java",
                    "startLine": 156,
                    "endLine": 167,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private prepareConsumerGroupService() : ConsumerGroupCommand.ConsumerGroupService"
                },
                {
                    "filePath": "tools/src/test/java/org/apache/kafka/tools/consumer/group/SaslClientsWithInvalidCredentialsTest.java",
                    "startLine": 165,
                    "endLine": 165,
                    "startColumn": 44,
                    "endColumn": 89,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ConsumerGroupCommandOptions.fromArgs(cgcArgs)"
                },
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 122,
                    "endLine": 122,
                    "startColumn": 9,
                    "endColumn": 26,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "tools/src/main/java/org/apache/kafka/tools/consumer/group/ConsumerGroupCommandOptions.java",
                    "startLine": 123,
                    "endLine": 123,
                    "startColumn": 9,
                    "endColumn": 21,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 577,
        "extraction_results": {
            "success": true,
            "newCommitHash": "1b78c84f6d0cc6ae9d5dad0f09e845a861e84805",
            "newBranchName": "extract-fromArgs-prepareConsumerGroupService-34d365f"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "71bcac3b6ada9872dcdec48f72372d6c5b041c0a",
        "url": "https://github.com/apache/kafka/commit/71bcac3b6ada9872dcdec48f72372d6c5b041c0a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public castToStringObjectMap(inputMap Map<?,?>) : Map<String,Object> extracted from public AbstractConfig(definition ConfigDef, originals Map<?,?>, configProviderProps Map<String,?>, doLog boolean) in class org.apache.kafka.common.config.AbstractConfig & moved to class org.apache.kafka.common.utils.Utils",
            "leftSideLocations": [
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
                    "startLine": 65,
                    "endLine": 121,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public AbstractConfig(definition ConfigDef, originals Map<?,?>, configProviderProps Map<String,?>, doLog boolean)"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
                    "startLine": 109,
                    "endLine": 109,
                    "startColumn": 17,
                    "endColumn": 113,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
                    "startLine": 107,
                    "endLine": 109,
                    "startColumn": 9,
                    "endColumn": 113,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
                    "startLine": 108,
                    "endLine": 109,
                    "startColumn": 13,
                    "endColumn": 113,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1508,
                    "endLine": 1525,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public castToStringObjectMap(inputMap Map<?,?>) : Map<String,Object>"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1521,
                    "endLine": 1521,
                    "startColumn": 17,
                    "endColumn": 118,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1516,
                    "endLine": 1523,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1517,
                    "endLine": 1522,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
                    "startLine": 70,
                    "endLine": 123,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public AbstractConfig(definition ConfigDef, originals Map<?,?>, configProviderProps Map<String,?>, doLog boolean)"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
                    "startLine": 111,
                    "endLine": 111,
                    "startColumn": 43,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "Utils.castToStringObjectMap(originals)"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1515,
                    "endLine": 1515,
                    "startColumn": 9,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1518,
                    "endLine": 1518,
                    "startColumn": 17,
                    "endColumn": 52,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1519,
                    "endLine": 1519,
                    "startColumn": 17,
                    "endColumn": 46,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1524,
                    "endLine": 1524,
                    "startColumn": 9,
                    "endColumn": 20,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1517,
                    "endLine": 1520,
                    "startColumn": 51,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1520,
                    "endLine": 1522,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
                    "startLine": 1516,
                    "endLine": 1523,
                    "startColumn": 59,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 578,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "a1ca788c993e3b217a0904c3f4768f0682dc840b",
        "url": "https://github.com/apache/kafka/commit/a1ca788c993e3b217a0904c3f4768f0682dc840b",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method package adminCall(callable Callable<T>, errMsg Supplier<String>) : T extracted from private listTopicAclBindings() : Optional<Collection<AclBinding>> in class org.apache.kafka.connect.mirror.MirrorSourceConnector & moved to class org.apache.kafka.connect.mirror.MirrorUtils",
            "leftSideLocations": [
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
                    "startLine": 525,
                    "endLine": 546,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private listTopicAclBindings() : Optional<Collection<AclBinding>>"
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
                    "startLine": 542,
                    "endLine": 542,
                    "startColumn": 17,
                    "endColumn": 25,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
                    "startLine": 540,
                    "endLine": 540,
                    "startColumn": 17,
                    "endColumn": 41,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 327,
                    "endLine": 342,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "package adminCall(callable Callable<T>, errMsg Supplier<String>) : T"
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 338,
                    "endLine": 338,
                    "startColumn": 13,
                    "endColumn": 21,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 330,
                    "endLine": 330,
                    "startColumn": 13,
                    "endColumn": 36,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
                    "startLine": 543,
                    "endLine": 569,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private listTopicAclBindings() : Optional<Collection<AclBinding>>"
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
                    "startLine": 545,
                    "endLine": 568,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "adminCall(() -> {\n  Collection<AclBinding> bindings;\n  try {\n    bindings=sourceAdminClient.describeAcls(ANY_TOPIC_ACL).values().get();\n  }\n catch (  ExecutionException e) {\n    if (e.getCause() instanceof SecurityDisabledException) {\n      if (noAclAuthorizer.compareAndSet(false,true)) {\n        log.info(\"No ACL authorizer is configured on the source Kafka cluster, so no topic ACL syncing will take place. \" + \"Consider disabling topic ACL syncing by setting \" + SYNC_TOPIC_ACLS_ENABLED + \" to 'false'.\");\n      }\n else {\n        log.debug(\"Source-side ACL authorizer still not found; skipping topic ACL sync\");\n      }\n      return Optional.empty();\n    }\n else {\n      throw e;\n    }\n  }\n  return Optional.of(bindings);\n}\n,() -> \"describe ACLs on \" + config.sourceClusterAlias() + \" cluster\")"
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 332,
                    "endLine": 332,
                    "startColumn": 13,
                    "endColumn": 44,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 336,
                    "endLine": 336,
                    "startColumn": 17,
                    "endColumn": 109,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 340,
                    "endLine": 340,
                    "startColumn": 13,
                    "endColumn": 43,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 329,
                    "endLine": 341,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 335,
                    "endLine": 337,
                    "startColumn": 67,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 333,
                    "endLine": 337,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 331,
                    "endLine": 339,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
                    "startLine": 339,
                    "endLine": 341,
                    "startColumn": 11,
                    "endColumn": 10,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 579,
        "extraction_results": {
            "success": true,
            "newCommitHash": "edafad4bfaf5f07b8323dc99a2100711712341ed",
            "newBranchName": "extract-adminCall-listTopicAclBindings-f7eb962"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "ebeef4eb64a36d46565629d2a370eeb1635a7293",
        "url": "https://github.com/apache/kafka/commit/ebeef4eb64a36d46565629d2a370eeb1635a7293",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private shouldInitialize() : boolean extracted from public resetInitializingPositions() : void in class org.apache.kafka.clients.consumer.internals.SubscriptionState & moved to class org.apache.kafka.clients.consumer.internals.SubscriptionState.TopicPartitionState",
            "leftSideLocations": [
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java",
                    "startLine": 763,
                    "endLine": 776,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public resetInitializingPositions() : void"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java",
                    "startLine": 766,
                    "endLine": 766,
                    "startColumn": 17,
                    "endColumn": 75,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java",
                    "startLine": 1102,
                    "endLine": 1110,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private shouldInitialize() : boolean"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java",
                    "startLine": 1109,
                    "endLine": 1109,
                    "startColumn": 13,
                    "endColumn": 94,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java",
                    "startLine": 764,
                    "endLine": 789,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public resetInitializingPositions() : void"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java",
                    "startLine": 779,
                    "endLine": 779,
                    "startColumn": 17,
                    "endColumn": 50,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "partitionState.shouldInitialize()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 580,
        "extraction_results": {
            "success": true,
            "newCommitHash": "fa9a5d390256649011d80f3a1cd77fecfe7dda76",
            "newBranchName": "extract-shouldInitialize-resetInitializingPositions-a1ca788"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "459da4795a511f6933e940fcf105a824bd9e589c",
        "url": "https://github.com/apache/kafka/commit/459da4795a511f6933e940fcf105a824bd9e589c",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public hasAnyInflightRequest(currentTimeMs long) : boolean extracted from private pollFollowerAsObserver(state FollowerState, currentTimeMs long) : long in class org.apache.kafka.raft.KafkaRaftClient & moved to class org.apache.kafka.raft.RequestManager",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 2157,
                    "endLine": 2178,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private pollFollowerAsObserver(state FollowerState, currentTimeMs long) : long"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 2166,
                    "endLine": 2166,
                    "startColumn": 13,
                    "endColumn": 87,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 63,
                    "endLine": 94,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public hasAnyInflightRequest(currentTimeMs long) : boolean"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 78,
                    "endLine": 78,
                    "startColumn": 13,
                    "endColumn": 58,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 2220,
                    "endLine": 2243,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private pollFollowerAsObserver(state FollowerState, currentTimeMs long) : long"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 2235,
                    "endLine": 2235,
                    "startColumn": 25,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "requestManager.hasAnyInflightRequest(currentTimeMs)"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 74,
                    "endLine": 74,
                    "startColumn": 9,
                    "endColumn": 32,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 76,
                    "endLine": 76,
                    "startColumn": 9,
                    "endColumn": 78,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 81,
                    "endLine": 81,
                    "startColumn": 17,
                    "endColumn": 35,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 84,
                    "endLine": 84,
                    "startColumn": 17,
                    "endColumn": 35,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 88,
                    "endLine": 88,
                    "startColumn": 17,
                    "endColumn": 31,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 89,
                    "endLine": 89,
                    "startColumn": 17,
                    "endColumn": 23,
                    "codeElementType": "BREAK_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 93,
                    "endLine": 93,
                    "startColumn": 9,
                    "endColumn": 23,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 79,
                    "endLine": 82,
                    "startColumn": 63,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 82,
                    "endLine": 85,
                    "startColumn": 69,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 85,
                    "endLine": 90,
                    "startColumn": 70,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 85,
                    "endLine": 90,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 82,
                    "endLine": 90,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 77,
                    "endLine": 91,
                    "startColumn": 36,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 77,
                    "endLine": 91,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "WHILE_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 79,
                    "endLine": 90,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 581,
        "extraction_results": {
            "success": true,
            "newCommitHash": "f62b73b6006f87b0004fd8ae26fec3980db04ca8",
            "newBranchName": "extract-hasAnyInflightRequest-pollFollowerAsObserver-8a882a7"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "459da4795a511f6933e940fcf105a824bd9e589c",
        "url": "https://github.com/apache/kafka/commit/459da4795a511f6933e940fcf105a824bd9e589c",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public onResponseResult(node Node, correlationId long, success boolean, timeMs long) : void extracted from private handleResponse(response RaftResponse.Inbound, currentTimeMs long) : void in class org.apache.kafka.raft.KafkaRaftClient & moved to class org.apache.kafka.raft.RequestManager",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 1675,
                    "endLine": 1711,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private handleResponse(response RaftResponse.Inbound, currentTimeMs long) : void"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 1709,
                    "endLine": 1709,
                    "startColumn": 13,
                    "endColumn": 79,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 1706,
                    "endLine": 1710,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 1706,
                    "endLine": 1708,
                    "startColumn": 34,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 1708,
                    "endLine": 1710,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 234,
                    "endLine": 252,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public onResponseResult(node Node, correlationId long, success boolean, timeMs long) : void"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 249,
                    "endLine": 249,
                    "startColumn": 17,
                    "endColumn": 89,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 244,
                    "endLine": 250,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 244,
                    "endLine": 247,
                    "startColumn": 26,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 247,
                    "endLine": 250,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 1736,
                    "endLine": 1772,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private handleResponse(response RaftResponse.Inbound, currentTimeMs long) : void"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 1766,
                    "endLine": 1771,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "requestManager.onResponseResult(response.source(),response.correlationId(),handledSuccessfully,currentTimeMs)"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 246,
                    "endLine": 246,
                    "startColumn": 17,
                    "endColumn": 29,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 243,
                    "endLine": 251,
                    "startColumn": 54,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/RequestManager.java",
                    "startLine": 243,
                    "endLine": 251,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 582,
        "extraction_results": {
            "success": true,
            "newCommitHash": "c1a446eb827fb6a57b6199f41beca07a2b229185",
            "newBranchName": "extract-onResponseResult-handleResponse-8a882a7"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "638844f833b165d6f9ca52c173858d26b7254fac",
        "url": "https://github.com/apache/kafka/commit/638844f833b165d6f9ca52c173858d26b7254fac",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private append(producerId long, producerEpoch short, verificationGuard VerificationGuard, records List<U>, replay boolean, event DeferredEvent) : void extracted from public run() : void in class org.apache.kafka.coordinator.group.runtime.CoordinatorRuntime.CoordinatorWriteEvent & moved to class org.apache.kafka.coordinator.group.runtime.CoordinatorRuntime.CoordinatorContext",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 773,
                    "endLine": 883,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public run() : void"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 788,
                    "endLine": 788,
                    "startColumn": 25,
                    "endColumn": 104,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 790,
                    "endLine": 790,
                    "startColumn": 29,
                    "endColumn": 93,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 792,
                    "endLine": 792,
                    "startColumn": 29,
                    "endColumn": 44,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 802,
                    "endLine": 802,
                    "startColumn": 25,
                    "endColumn": 66,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 849,
                    "endLine": 851,
                    "startColumn": 37,
                    "endColumn": 85,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 830,
                    "endLine": 835,
                    "startColumn": 37,
                    "endColumn": 39,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 789,
                    "endLine": 793,
                    "startColumn": 25,
                    "endColumn": 26,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 826,
                    "endLine": 836,
                    "startColumn": 33,
                    "endColumn": 34,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 823,
                    "endLine": 853,
                    "startColumn": 29,
                    "endColumn": 30,
                    "codeElementType": "FOR_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 805,
                    "endLine": 877,
                    "startColumn": 25,
                    "endColumn": 26,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 872,
                    "endLine": 875,
                    "startColumn": 27,
                    "endColumn": 26,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 784,
                    "endLine": 878,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 789,
                    "endLine": 791,
                    "startColumn": 56,
                    "endColumn": 26,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 791,
                    "endLine": 793,
                    "startColumn": 32,
                    "endColumn": 26,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 826,
                    "endLine": 836,
                    "startColumn": 61,
                    "endColumn": 34,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 823,
                    "endLine": 853,
                    "startColumn": 79,
                    "endColumn": 30,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 784,
                    "endLine": 794,
                    "startColumn": 53,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 794,
                    "endLine": 878,
                    "startColumn": 28,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 848,
                    "endLine": 852,
                    "startColumn": 40,
                    "endColumn": 34,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 869,
                    "endLine": 871,
                    "startColumn": 36,
                    "endColumn": 30,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 871,
                    "endLine": 1008,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private append(producerId long, producerEpoch short, verificationGuard VerificationGuard, records List<U>, replay boolean, event DeferredEvent) : void"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 902,
                    "endLine": 902,
                    "startColumn": 21,
                    "endColumn": 92,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 904,
                    "endLine": 904,
                    "startColumn": 25,
                    "endColumn": 82,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 906,
                    "endLine": 906,
                    "startColumn": 25,
                    "endColumn": 46,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 912,
                    "endLine": 912,
                    "startColumn": 17,
                    "endColumn": 58,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 951,
                    "endLine": 953,
                    "startColumn": 21,
                    "endColumn": 82,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 980,
                    "endLine": 985,
                    "startColumn": 29,
                    "endColumn": 31,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 903,
                    "endLine": 907,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 975,
                    "endLine": 987,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 976,
                    "endLine": 986,
                    "startColumn": 25,
                    "endColumn": 26,
                    "codeElementType": "FOR_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 973,
                    "endLine": 1000,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 994,
                    "endLine": 1000,
                    "startColumn": 19,
                    "endColumn": 18,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 895,
                    "endLine": 1007,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 903,
                    "endLine": 905,
                    "startColumn": 52,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 905,
                    "endLine": 907,
                    "startColumn": 28,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 975,
                    "endLine": 987,
                    "startColumn": 33,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 976,
                    "endLine": 986,
                    "startColumn": 66,
                    "endColumn": 26,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 895,
                    "endLine": 909,
                    "startColumn": 36,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 909,
                    "endLine": 1007,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 950,
                    "endLine": 954,
                    "startColumn": 77,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 956,
                    "endLine": 968,
                    "startColumn": 70,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1246,
                    "endLine": 1276,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public run() : void"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1258,
                    "endLine": 1265,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "context.append(producerId,producerEpoch,verificationGuard,result.records(),result.replayRecords(),this)"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 892,
                    "endLine": 892,
                    "startColumn": 17,
                    "endColumn": 97,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 919,
                    "endLine": 919,
                    "startColumn": 21,
                    "endColumn": 41,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 923,
                    "endLine": 928,
                    "startColumn": 17,
                    "endColumn": 19,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 931,
                    "endLine": 931,
                    "startColumn": 17,
                    "endColumn": 86,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 933,
                    "endLine": 937,
                    "startColumn": 21,
                    "endColumn": 24,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 941,
                    "endLine": 945,
                    "startColumn": 17,
                    "endColumn": 19,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 961,
                    "endLine": 961,
                    "startColumn": 21,
                    "endColumn": 41,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 962,
                    "endLine": 967,
                    "startColumn": 21,
                    "endColumn": 23,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 971,
                    "endLine": 971,
                    "startColumn": 17,
                    "endColumn": 56,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 991,
                    "endLine": 991,
                    "startColumn": 25,
                    "endColumn": 61,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 992,
                    "endLine": 992,
                    "startColumn": 25,
                    "endColumn": 51,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 995,
                    "endLine": 995,
                    "startColumn": 21,
                    "endColumn": 97,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 999,
                    "endLine": 999,
                    "startColumn": 21,
                    "endColumn": 41,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1006,
                    "endLine": 1006,
                    "startColumn": 17,
                    "endColumn": 55,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 900,
                    "endLine": 900,
                    "startColumn": 21,
                    "endColumn": 60,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 891,
                    "endLine": 893,
                    "startColumn": 51,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 891,
                    "endLine": 893,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 899,
                    "endLine": 908,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 916,
                    "endLine": 920,
                    "startColumn": 63,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 916,
                    "endLine": 920,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 932,
                    "endLine": 938,
                    "startColumn": 42,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 932,
                    "endLine": 938,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 950,
                    "endLine": 954,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 990,
                    "endLine": 993,
                    "startColumn": 65,
                    "endColumn": 22,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 990,
                    "endLine": 993,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "ENHANCED_FOR_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 956,
                    "endLine": 968,
                    "startColumn": 17,
                    "endColumn": 18,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 899,
                    "endLine": 901,
                    "startColumn": 43,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 901,
                    "endLine": 908,
                    "startColumn": 24,
                    "endColumn": 18,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 583,
        "extraction_results": {
            "success": true,
            "newCommitHash": "009fda06cd29dc3f6fa3a6a31a7b34eccf3695a2",
            "newBranchName": "extract-append-run-39ffdea"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "638844f833b165d6f9ca52c173858d26b7254fac",
        "url": "https://github.com/apache/kafka/commit/638844f833b165d6f9ca52c173858d26b7254fac",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private completeTransaction(producerId long, producerEpoch short, coordinatorEpoch int, result TransactionResult, event DeferredEvent) : void extracted from public run() : void in class org.apache.kafka.coordinator.group.runtime.CoordinatorRuntime.CoordinatorCompleteTransactionEvent & moved to class org.apache.kafka.coordinator.group.runtime.CoordinatorRuntime.CoordinatorContext",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1138,
                    "endLine": 1184,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public run() : void"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1145,
                    "endLine": 1145,
                    "startColumn": 21,
                    "endColumn": 90,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1148,
                    "endLine": 1152,
                    "startColumn": 25,
                    "endColumn": 27,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1154,
                    "endLine": 1166,
                    "startColumn": 25,
                    "endColumn": 27,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1167,
                    "endLine": 1167,
                    "startColumn": 25,
                    "endColumn": 77,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1170,
                    "endLine": 1170,
                    "startColumn": 29,
                    "endColumn": 74,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1177,
                    "endLine": 1177,
                    "startColumn": 25,
                    "endColumn": 92,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1178,
                    "endLine": 1178,
                    "startColumn": 25,
                    "endColumn": 37,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1147,
                    "endLine": 1179,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1176,
                    "endLine": 1179,
                    "startColumn": 23,
                    "endColumn": 22,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1010,
                    "endLine": 1063,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private completeTransaction(producerId long, producerEpoch short, coordinatorEpoch int, result TransactionResult, event DeferredEvent) : void"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1035,
                    "endLine": 1035,
                    "startColumn": 13,
                    "endColumn": 74,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1037,
                    "endLine": 1041,
                    "startColumn": 17,
                    "endColumn": 19,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1043,
                    "endLine": 1055,
                    "startColumn": 17,
                    "endColumn": 19,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1056,
                    "endLine": 1056,
                    "startColumn": 17,
                    "endColumn": 61,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1058,
                    "endLine": 1058,
                    "startColumn": 17,
                    "endColumn": 55,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1060,
                    "endLine": 1060,
                    "startColumn": 17,
                    "endColumn": 76,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1061,
                    "endLine": 1061,
                    "startColumn": 17,
                    "endColumn": 35,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1036,
                    "endLine": 1062,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "TRY_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1059,
                    "endLine": 1062,
                    "startColumn": 15,
                    "endColumn": 14,
                    "codeElementType": "CATCH_CLAUSE",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1531,
                    "endLine": 1554,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public run() : void"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1538,
                    "endLine": 1544,
                    "startColumn": 21,
                    "endColumn": 22,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "context.completeTransaction(producerId,producerEpoch,coordinatorEpoch,result,this)"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1028,
                    "endLine": 1028,
                    "startColumn": 17,
                    "endColumn": 105,
                    "codeElementType": "THROW_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1033,
                    "endLine": 1033,
                    "startColumn": 13,
                    "endColumn": 33,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1027,
                    "endLine": 1029,
                    "startColumn": 51,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
                    "startLine": 1027,
                    "endLine": 1029,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 584,
        "extraction_results": {
            "success": true,
            "newCommitHash": "fe9c6822775e39d22c74b77d5df030ccc5b570b0",
            "newBranchName": "extract-completeTransaction-run-39ffdea"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "9a239c6142a8f2eb36f1600d1012224c31e58e71",
        "url": "https://github.com/apache/kafka/commit/9a239c6142a8f2eb36f1600d1012224c31e58e71",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method private registerStreamThread(streamThread StreamThread) : void extracted from private createAndAddStreamThread(cacheSizePerThread long, threadIdx int) : StreamThread in class org.apache.kafka.streams.KafkaStreams & moved to class org.apache.kafka.streams.KafkaStreams.StreamStateListener",
            "leftSideLocations": [
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
                    "startLine": 1068,
                    "endLine": 1092,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private createAndAddStreamThread(cacheSizePerThread long, threadIdx int) : StreamThread"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
                    "startLine": 1089,
                    "endLine": 1089,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
                    "startLine": 699,
                    "endLine": 701,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "private registerStreamThread(streamThread StreamThread) : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
                    "startLine": 700,
                    "endLine": 700,
                    "startColumn": 13,
                    "endColumn": 73,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
                    "startLine": 1064,
                    "endLine": 1088,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private createAndAddStreamThread(cacheSizePerThread long, threadIdx int) : StreamThread"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
                    "startLine": 1083,
                    "endLine": 1083,
                    "startColumn": 9,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "streamStateListener.registerStreamThread(streamThread)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 585,
        "extraction_results": {
            "success": true,
            "newCommitHash": "d737539bfd2a4db119995ea4d2d5e7126c5d9c02",
            "newBranchName": "extract-registerStreamThread-createAndAddStreamThread-fc6f8b6"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from private handleVoteRequest(requestMetadata RaftRequest.Inbound) : VoteResponseData in class org.apache.kafka.raft.KafkaRaftClient & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 634,
                    "endLine": 693,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private handleVoteRequest(requestMetadata RaftRequest.Inbound) : VoteResponseData"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 681,
                    "endLine": 681,
                    "startColumn": 9,
                    "endColumn": 80,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 681,
                    "endLine": 681,
                    "startColumn": 62,
                    "endColumn": 78,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 646,
                    "endLine": 740,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private handleVoteRequest(requestMetadata RaftRequest.Inbound) : VoteResponseData"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
                    "startLine": 720,
                    "endLine": 723,
                    "startColumn": 35,
                    "endColumn": 10,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(candidateId,partitionRequest.candidateDirectoryId())"
                }
            ],
            "isStatic": true
        },
        "ref_id": 586,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a1a79576cfdda1fadb6e45c03ef22dde5ee09052",
            "newBranchName": "extract-of-handleVoteRequest-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from public fromVotersRecord(voters VotersRecord) : VoterSet in class org.apache.kafka.raft.internals.VoterSet & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 338,
                    "endLine": 376,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public fromVotersRecord(voters VotersRecord) : VoterSet"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 351,
                    "endLine": 351,
                    "startColumn": 17,
                    "endColumn": 48,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 351,
                    "endLine": 351,
                    "startColumn": 31,
                    "endColumn": 47,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 368,
                    "endLine": 391,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public fromVotersRecord(voters VotersRecord) : VoterSet"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 380,
                    "endLine": 380,
                    "startColumn": 21,
                    "endColumn": 77,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(voter.voterId(),voter.voterDirectoryId())"
                }
            ],
            "isStatic": true
        },
        "ref_id": 587,
        "extraction_results": {
            "success": true,
            "newCommitHash": "07604225fbb2b54ae0e2274780d4869c6135d8c4",
            "newBranchName": "extract-of-fromVotersRecord-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from package testVotedCandidateWithoutVotedDirectoryId() : void in class org.apache.kafka.raft.ElectionStateTest & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/ElectionStateTest.java",
                    "startLine": 44,
                    "endLine": 55,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package testVotedCandidateWithoutVotedDirectoryId() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/ElectionStateTest.java",
                    "startLine": 46,
                    "endLine": 50,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/ElectionStateTest.java",
                    "startLine": 48,
                    "endLine": 48,
                    "startColumn": 30,
                    "endColumn": 46,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/ElectionStateTest.java",
                    "startLine": 43,
                    "endLine": 54,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package testVotedCandidateWithoutVotedDirectoryId() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/ElectionStateTest.java",
                    "startLine": 47,
                    "endLine": 47,
                    "startColumn": 13,
                    "endColumn": 57,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(1,ReplicaKey.NO_DIRECTORY_ID)"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/ElectionStateTest.java",
                    "startLine": 50,
                    "endLine": 50,
                    "startColumn": 51,
                    "endColumn": 95,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(1,ReplicaKey.NO_DIRECTORY_ID)"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/ElectionStateTest.java",
                    "startLine": 52,
                    "endLine": 52,
                    "startColumn": 44,
                    "endColumn": 79,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(1,Uuid.randomUuid())"
                }
            ],
            "isStatic": true
        },
        "ref_id": 588,
        "extraction_results": {
            "success": true,
            "newCommitHash": "1213ba4ab5900b98825d3181ce4aaaade032185b",
            "newBranchName": "extract-of-testVotedCandidateWithoutVotedDirectoryId-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from public testRejectVotesFromSameEpochAfterResigningCandidacy() : void in class org.apache.kafka.raft.KafkaRaftClientTest & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 133,
                    "endLine": 154,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testRejectVotesFromSameEpochAfterResigningCandidacy() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 140,
                    "endLine": 143,
                    "startColumn": 9,
                    "endColumn": 22,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 142,
                    "endLine": 142,
                    "startColumn": 63,
                    "endColumn": 79,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 140,
                    "endLine": 169,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testRejectVotesFromSameEpochAfterResigningCandidacy(withKip853Rpc boolean) : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 150,
                    "endLine": 150,
                    "startColumn": 40,
                    "endColumn": 90,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(localId,ReplicaKey.NO_DIRECTORY_ID)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 589,
        "extraction_results": {
            "success": true,
            "newCommitHash": "c09364c40b313e17967ae8aecd005823c6716904",
            "newBranchName": "extract-of-testRejectVotesFromSameEpochAfterResigningCandidacy-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from public testGrantVotesFromHigherEpochAfterResigningCandidacy() : void in class org.apache.kafka.raft.KafkaRaftClientTest & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 184,
                    "endLine": 210,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testGrantVotesFromHigherEpochAfterResigningCandidacy() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 191,
                    "endLine": 194,
                    "startColumn": 9,
                    "endColumn": 22,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 193,
                    "endLine": 193,
                    "startColumn": 63,
                    "endColumn": 79,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 207,
                    "endLine": 241,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testGrantVotesFromHigherEpochAfterResigningCandidacy(withKip853Rpc boolean) : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 40,
                    "endColumn": 90,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(localId,ReplicaKey.NO_DIRECTORY_ID)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 590,
        "extraction_results": {
            "success": true,
            "newCommitHash": "4a35ba7fa81b0d225add0b085934b0ac100d809c",
            "newBranchName": "extract-of-testGrantVotesFromHigherEpochAfterResigningCandidacy-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from public testCandidateIgnoreVoteRequestOnSameEpoch() : void in class org.apache.kafka.raft.KafkaRaftClientTest & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 1333,
                    "endLine": 1350,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testCandidateIgnoreVoteRequestOnSameEpoch() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 1340,
                    "endLine": 1342,
                    "startColumn": 9,
                    "endColumn": 22,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 1341,
                    "endLine": 1341,
                    "startColumn": 69,
                    "endColumn": 85,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 1465,
                    "endLine": 1484,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testCandidateIgnoreVoteRequestOnSameEpoch(withKip853Rpc boolean) : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
                    "startLine": 1474,
                    "endLine": 1474,
                    "startColumn": 46,
                    "endColumn": 96,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(localId,ReplicaKey.NO_DIRECTORY_ID)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 591,
        "extraction_results": {
            "success": true,
            "newCommitHash": "69922171830e9631f9ae21792260660ce528b49b",
            "newBranchName": "extract-of-testCandidateIgnoreVoteRequestOnSameEpoch-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from private voterNode(id int, directoryId Uuid) : VoterSet.VoterNode in class org.apache.kafka.raft.LeaderStateTest & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/LeaderStateTest.java",
                    "startLine": 924,
                    "endLine": 926,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private voterNode(id int, directoryId Uuid) : VoterSet.VoterNode"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/LeaderStateTest.java",
                    "startLine": 925,
                    "endLine": 925,
                    "startColumn": 9,
                    "endColumn": 96,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/LeaderStateTest.java",
                    "startLine": 925,
                    "endLine": 925,
                    "startColumn": 57,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 70,
                    "endColumn": 94,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/LeaderStateTest.java",
                    "startLine": 1152,
                    "endLine": 1155,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private replicaKey(id int, withDirectoryId boolean) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/LeaderStateTest.java",
                    "startLine": 1154,
                    "endLine": 1154,
                    "startColumn": 16,
                    "endColumn": 46,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(id,directoryId)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 592,
        "extraction_results": {
            "success": true,
            "newCommitHash": "921989f3bae571a01a8168533f4a097f8463c251",
            "newBranchName": "extract-of-voterNode-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from package assertVotedCandidate(epoch int, candidateId int) : void in class org.apache.kafka.raft.RaftClientTestContext & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
                    "startLine": 471,
                    "endLine": 480,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package assertVotedCandidate(epoch int, candidateId int) : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
                    "startLine": 472,
                    "endLine": 479,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
                    "startLine": 475,
                    "endLine": 475,
                    "startColumn": 44,
                    "endColumn": 60,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
                    "startLine": 504,
                    "endLine": 513,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package assertVotedCandidate(epoch int, candidateId int) : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
                    "startLine": 508,
                    "endLine": 508,
                    "startColumn": 17,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(candidateId,ReplicaKey.NO_DIRECTORY_ID)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 593,
        "extraction_results": {
            "success": true,
            "newCommitHash": "1010b38457f76212ac13126d380b383dd5a07816",
            "newBranchName": "extract-of-assertVotedCandidate-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from public testCanGrantVoteWithoutDirectoryId(isLogUpToDate boolean) : void in class org.apache.kafka.raft.VotedStateTest & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 81,
                    "endLine": 99,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testCanGrantVoteWithoutDirectoryId(isLogUpToDate boolean) : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 86,
                    "endLine": 88,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 87,
                    "endLine": 87,
                    "startColumn": 55,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 80,
                    "endLine": 98,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testCanGrantVoteWithoutDirectoryId(isLogUpToDate boolean) : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 86,
                    "endLine": 86,
                    "startColumn": 32,
                    "endColumn": 82,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(votedId,ReplicaKey.NO_DIRECTORY_ID)"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 90,
                    "endLine": 90,
                    "startColumn": 17,
                    "endColumn": 58,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(votedId,Uuid.randomUuid())"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 96,
                    "endLine": 96,
                    "startColumn": 32,
                    "endColumn": 86,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(votedId + 1,ReplicaKey.NO_DIRECTORY_ID)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 594,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a3dcbc8e1113d76e79c62cdfefc1178927822949",
            "newBranchName": "extract-of-testCanGrantVoteWithoutDirectoryId-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from package testCanGrantVoteWithDirectoryId() : void in class org.apache.kafka.raft.VotedStateTest & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 101,
                    "endLine": 115,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package testCanGrantVoteWithDirectoryId() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 111,
                    "endLine": 111,
                    "startColumn": 9,
                    "endColumn": 90,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 111,
                    "endLine": 111,
                    "startColumn": 63,
                    "endColumn": 79,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 100,
                    "endLine": 114,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package testCanGrantVoteWithDirectoryId() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 108,
                    "endLine": 108,
                    "startColumn": 32,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(votedId,Uuid.randomUuid())"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 110,
                    "endLine": 110,
                    "startColumn": 40,
                    "endColumn": 90,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(votedId,ReplicaKey.NO_DIRECTORY_ID)"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 113,
                    "endLine": 113,
                    "startColumn": 40,
                    "endColumn": 94,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(votedId + 1,ReplicaKey.NO_DIRECTORY_ID)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 595,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a37b52583af45c77835ce95b947b845eb8ca5b72",
            "newBranchName": "extract-of-testCanGrantVoteWithDirectoryId-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from package testRemoveVoter() : void in class org.apache.kafka.raft.internals.VoterSetTest & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 99,
                    "endLine": 112,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package testRemoveVoter() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 104,
                    "endLine": 104,
                    "startColumn": 9,
                    "endColumn": 98,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 103,
                    "endLine": 116,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package testRemoveVoter() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 108,
                    "endLine": 108,
                    "startColumn": 61,
                    "endColumn": 105,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(4,ReplicaKey.NO_DIRECTORY_ID)"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 109,
                    "endLine": 109,
                    "startColumn": 61,
                    "endColumn": 96,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(4,Uuid.randomUuid())"
                }
            ],
            "isStatic": true
        },
        "ref_id": 596,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a067ca529f03eb9895605805a5db023875822a95",
            "newBranchName": "extract-of-testRemoveVoter-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public of(id int, directoryId Uuid) : ReplicaKey extracted from package testIsVoterWithoutDirectoryId() : void in class org.apache.kafka.raft.internals.VoterSetTest & moved to class org.apache.kafka.raft.internals.ReplicaKey",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 131,
                    "endLine": 140,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package testIsVoterWithoutDirectoryId() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 136,
                    "endLine": 136,
                    "startColumn": 9,
                    "endColumn": 74,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 136,
                    "endLine": 136,
                    "startColumn": 54,
                    "endColumn": 70,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 76,
                    "endLine": 81,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public of(id int, directoryId Uuid) : ReplicaKey"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 77,
                    "endLine": 80,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/ReplicaKey.java",
                    "startLine": 79,
                    "endLine": 79,
                    "startColumn": 51,
                    "endColumn": 67,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 135,
                    "endLine": 144,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package testIsVoterWithoutDirectoryId() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 140,
                    "endLine": 140,
                    "startColumn": 37,
                    "endColumn": 81,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(1,ReplicaKey.NO_DIRECTORY_ID)"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 141,
                    "endLine": 141,
                    "startColumn": 37,
                    "endColumn": 72,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(1,Uuid.randomUuid())"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 142,
                    "endLine": 142,
                    "startColumn": 38,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(4,Uuid.randomUuid())"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/internals/VoterSetTest.java",
                    "startLine": 143,
                    "endLine": 143,
                    "startColumn": 38,
                    "endColumn": 82,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ReplicaKey.of(4,ReplicaKey.NO_DIRECTORY_ID)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 597,
        "extraction_results": {
            "success": true,
            "newCommitHash": "2a5f8c1975fbb531ec70cf01da080908a94bf7ce",
            "newBranchName": "extract-of-testIsVoterWithoutDirectoryId-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public isVoter(replicaKey ReplicaKey) : boolean extracted from public isVoter(nodeKey ReplicaKey) : boolean in class org.apache.kafka.raft.internals.VoterSet & moved to class org.apache.kafka.raft.internals.VoterSet.VoterNode",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 97,
                    "endLine": 122,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public isVoter(nodeKey ReplicaKey) : boolean"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 117,
                    "endLine": 117,
                    "startColumn": 17,
                    "endColumn": 29,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 113,
                    "endLine": 113,
                    "startColumn": 17,
                    "endColumn": 84,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 112,
                    "endLine": 118,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 112,
                    "endLine": 114,
                    "startColumn": 60,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 114,
                    "endLine": 118,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 303,
                    "endLine": 325,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public isVoter(replicaKey ReplicaKey) : boolean"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 323,
                    "endLine": 323,
                    "startColumn": 17,
                    "endColumn": 29,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 319,
                    "endLine": 319,
                    "startColumn": 17,
                    "endColumn": 80,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 318,
                    "endLine": 324,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 318,
                    "endLine": 320,
                    "startColumn": 53,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 320,
                    "endLine": 324,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 98,
                    "endLine": 114,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public isVoter(replicaKey ReplicaKey) : boolean"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 112,
                    "endLine": 112,
                    "startColumn": 26,
                    "endColumn": 50,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "node.isVoter(replicaKey)"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 316,
                    "endLine": 316,
                    "startColumn": 51,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 316,
                    "endLine": 316,
                    "startColumn": 13,
                    "endColumn": 64,
                    "codeElementType": "IF_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 598,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a59dce86eeab4914e3eae243b556d5c0ee07379a",
            "newBranchName": "extract-isVoter-isVoter-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "url": "https://github.com/apache/kafka/commit/adee6f0cc11c37edaf7b47c1f77457d66e80ebe4",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public voterKeys() : Set<ReplicaKey> extracted from public advanceLocalLeaderHighWatermarkToLogEndOffset() : void in class org.apache.kafka.raft.RaftClientTestContext & moved to class org.apache.kafka.raft.internals.VoterSet",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
                    "startLine": 1156,
                    "endLine": 1171,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public advanceLocalLeaderHighWatermarkToLogEndOffset() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
                    "startLine": 1159,
                    "endLine": 1159,
                    "startColumn": 9,
                    "endColumn": 123,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 133,
                    "endLine": 142,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public voterKeys() : Set<ReplicaKey>"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/internals/VoterSet.java",
                    "startLine": 137,
                    "endLine": 141,
                    "startColumn": 9,
                    "endColumn": 42,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
                    "startLine": 1466,
                    "endLine": 1487,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public advanceLocalLeaderHighWatermarkToLogEndOffset() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
                    "startLine": 1470,
                    "endLine": 1471,
                    "startColumn": 48,
                    "endColumn": 25,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "voters.voterKeys()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 599,
        "extraction_results": {
            "success": true,
            "newCommitHash": "62284eacd3fc8ac2c2d1c96aec657cfc93a1434c",
            "newBranchName": "extract-voterKeys-advanceLocalLeaderHighWatermarkToLogEndOffset-5b0e96d"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "9a78122fb0b1b37961139d5c62e49fa758dc08ac",
        "url": "https://github.com/apache/kafka/commit/9a78122fb0b1b37961139d5c62e49fa758dc08ac",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public requiresKnownMemberId(request JoinGroupRequestData, apiVersion short) : boolean extracted from private classicGroupJoinToConsumerGroup(group ConsumerGroup, context RequestContext, request JoinGroupRequestData, responseFuture CompletableFuture<JoinGroupResponseData>) : CoordinatorResult<Void,CoordinatorRecord> in class org.apache.kafka.coordinator.group.GroupMetadataManager & moved to class org.apache.kafka.common.requests.JoinGroupRequest",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 1528,
                    "endLine": 1729,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private classicGroupJoinToConsumerGroup(group ConsumerGroup, context RequestContext, request JoinGroupRequestData, responseFuture CompletableFuture<JoinGroupResponseData>) : CoordinatorResult<Void,CoordinatorRecord>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 1564,
                    "endLine": 1564,
                    "startColumn": 17,
                    "endColumn": 96,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/requests/JoinGroupRequest.java",
                    "startLine": 105,
                    "endLine": 126,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public requiresKnownMemberId(request JoinGroupRequestData, apiVersion short) : boolean"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/requests/JoinGroupRequest.java",
                    "startLine": 123,
                    "endLine": 125,
                    "startColumn": 9,
                    "endColumn": 50,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 1513,
                    "endLine": 1702,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private classicGroupJoinToConsumerGroup(group ConsumerGroup, context RequestContext, request JoinGroupRequestData, responseFuture CompletableFuture<JoinGroupResponseData>) : CoordinatorResult<Void,CoordinatorRecord>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 1543,
                    "endLine": 1543,
                    "startColumn": 13,
                    "endColumn": 82,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "JoinGroupRequest.requiresKnownMemberId(request,context.apiVersion())"
                }
            ],
            "isStatic": true
        },
        "ref_id": 600,
        "extraction_results": {
            "success": true,
            "newCommitHash": "63c8e0264cfb6509f0c869bbaa1b5fe682252576",
            "newBranchName": "extract-requiresKnownMemberId-classicGroupJoinToConsumerGroup-15a4501"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "27220d146c5d043da4adc3d636036bd6e7b112d2",
        "url": "https://github.com/apache/kafka/commit/27220d146c5d043da4adc3d636036bd6e7b112d2",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public summarize() : String extracted from public completeRequest(cb FutureCallback<T>) : T in class org.apache.kafka.connect.runtime.rest.HerderRequestHandler & moved to class org.apache.kafka.connect.util.Stage",
            "leftSideLocations": [
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 54,
                    "endLine": 89,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public completeRequest(cb FutureCallback<T>) : T"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 70,
                    "endLine": 73,
                    "startColumn": 17,
                    "endColumn": 67,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 71,
                    "endLine": 71,
                    "startColumn": 49,
                    "endColumn": 68,
                    "codeElementType": "STRING_LITERAL",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 72,
                    "endLine": 72,
                    "startColumn": 67,
                    "endColumn": 87,
                    "codeElementType": "STRING_LITERAL",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 75,
                    "endLine": 77,
                    "startColumn": 17,
                    "endColumn": 65,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 76,
                    "endLine": 76,
                    "startColumn": 49,
                    "endColumn": 68,
                    "codeElementType": "STRING_LITERAL",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 69,
                    "endLine": 78,
                    "startColumn": 13,
                    "endColumn": 14,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 69,
                    "endLine": 74,
                    "startColumn": 44,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 74,
                    "endLine": 78,
                    "startColumn": 20,
                    "endColumn": 14,
                    "codeElementType": "BLOCK",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 64,
                    "endLine": 76,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public summarize() : String"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 67,
                    "endLine": 70,
                    "startColumn": 13,
                    "endColumn": 63,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 68,
                    "endLine": 68,
                    "startColumn": 39,
                    "endColumn": 58,
                    "codeElementType": "STRING_LITERAL",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 69,
                    "endLine": 69,
                    "startColumn": 57,
                    "endColumn": 77,
                    "codeElementType": "STRING_LITERAL",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 72,
                    "endLine": 74,
                    "startColumn": 13,
                    "endColumn": 61,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 73,
                    "endLine": 73,
                    "startColumn": 39,
                    "endColumn": 58,
                    "codeElementType": "STRING_LITERAL",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 66,
                    "endLine": 75,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "IF_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 66,
                    "endLine": 71,
                    "startColumn": 32,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 71,
                    "endLine": 75,
                    "startColumn": 16,
                    "endColumn": 10,
                    "codeElementType": "BLOCK",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 53,
                    "endLine": 78,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public completeRequest(cb FutureCallback<T>) : T"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
                    "startLine": 67,
                    "endLine": 67,
                    "startColumn": 54,
                    "endColumn": 71,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "stage.summarize()"
                },
                {
                    "filePath": "connect/runtime/src/main/java/org/apache/kafka/connect/util/Stage.java",
                    "startLine": 65,
                    "endLine": 65,
                    "startColumn": 9,
                    "endColumn": 41,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 601,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a0c65163f3c3b5006b942822829c4c7c4acf3987",
            "newBranchName": "extract-summarize-completeRequest-4550550"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4de83d38c926bd991ce3e2d2804537a392ae6691",
        "url": "https://github.com/apache/kafka/commit/4de83d38c926bd991ce3e2d2804537a392ae6691",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public init(context InternalProcessorContext<KOut,VOut>, processingExceptionHandler ProcessingExceptionHandler) : void extracted from private initializeTopology() : void in class org.apache.kafka.streams.processor.internals.StreamTask & moved to class org.apache.kafka.streams.processor.internals.ProcessorNode",
            "leftSideLocations": [
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
                    "startLine": 1016,
                    "endLine": 1028,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private initializeTopology() : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
                    "startLine": 1023,
                    "endLine": 1023,
                    "startColumn": 17,
                    "endColumn": 45,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorNode.java",
                    "startLine": 139,
                    "endLine": 142,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public init(context InternalProcessorContext<KOut,VOut>, processingExceptionHandler ProcessingExceptionHandler) : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorNode.java",
                    "startLine": 140,
                    "endLine": 140,
                    "startColumn": 9,
                    "endColumn": 23,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
                    "startLine": 1025,
                    "endLine": 1037,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private initializeTopology() : void"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
                    "startLine": 1032,
                    "endLine": 1032,
                    "startColumn": 17,
                    "endColumn": 72,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "node.init(processorContext,processingExceptionHandler)"
                },
                {
                    "filePath": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorNode.java",
                    "startLine": 141,
                    "endLine": 141,
                    "startColumn": 9,
                    "endColumn": 70,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": false
        },
        "ref_id": 602,
        "extraction_results": {
            "success": true,
            "newCommitHash": "fa2cb0ebdf44479f6bad42bdb0f0cb5bc1cc37a7",
            "newBranchName": "extract-init-initializeTopology-931bb62"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from package SnapshottableCoordinator(logContext LogContext, snapshotRegistry SnapshotRegistry, coordinator S, tp TopicPartition) in class org.apache.kafka.coordinator.group.runtime.SnapshottableCoordinator & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/SnapshottableCoordinator.java",
                    "startLine": 65,
                    "endLine": 78,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package SnapshottableCoordinator(logContext LogContext, snapshotRegistry SnapshotRegistry, coordinator S, tp TopicPartition)"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/SnapshottableCoordinator.java",
                    "startLine": 77,
                    "endLine": 77,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/SnapshottableCoordinator.java",
                    "startLine": 65,
                    "endLine": 78,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package SnapshottableCoordinator(logContext LogContext, snapshotRegistry SnapshotRegistry, coordinator S, tp TopicPartition)"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/SnapshottableCoordinator.java",
                    "startLine": 77,
                    "endLine": 77,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(0)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 603,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public updateLastWrittenOffset(offset Long) : void in class org.apache.kafka.coordinator.group.runtime.SnapshottableCoordinator & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/SnapshottableCoordinator.java",
                    "startLine": 134,
                    "endLine": 150,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public updateLastWrittenOffset(offset Long) : void"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/SnapshottableCoordinator.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 9,
                    "endColumn": 54,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/SnapshottableCoordinator.java",
                    "startLine": 134,
                    "endLine": 150,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public updateLastWrittenOffset(offset Long) : void"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/SnapshottableCoordinator.java",
                    "startLine": 148,
                    "endLine": 148,
                    "startColumn": 9,
                    "endColumn": 58,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(offset)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 604,
        "extraction_results": {
            "success": true,
            "newCommitHash": "c20cab42e1d9996007ecc6fa1defd949297eb8be",
            "newBranchName": "extract-idempotentCreateSnapshot-updateLastWrittenOffset-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public GroupMetadataManagerTestContext(time MockTime, timer MockCoordinatorTimer<Void,CoordinatorRecord>, snapshotRegistry SnapshotRegistry, metrics GroupCoordinatorMetricsShard, groupMetadataManager GroupMetadataManager, classicGroupInitialRebalanceDelayMs int, classicGroupNewMemberJoinTimeoutMs int) in class org.apache.kafka.coordinator.group.GroupMetadataManagerTestContext & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 519,
                    "endLine": 536,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public GroupMetadataManagerTestContext(time MockTime, timer MockCoordinatorTimer<Void,CoordinatorRecord>, snapshotRegistry SnapshotRegistry, metrics GroupCoordinatorMetricsShard, groupMetadataManager GroupMetadataManager, classicGroupInitialRebalanceDelayMs int, classicGroupNewMemberJoinTimeoutMs int)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 535,
                    "endLine": 535,
                    "startColumn": 9,
                    "endColumn": 65,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 519,
                    "endLine": 536,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public GroupMetadataManagerTestContext(time MockTime, timer MockCoordinatorTimer<Void,CoordinatorRecord>, snapshotRegistry SnapshotRegistry, metrics GroupCoordinatorMetricsShard, groupMetadataManager GroupMetadataManager, classicGroupInitialRebalanceDelayMs int, classicGroupNewMemberJoinTimeoutMs int)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 535,
                    "endLine": 535,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(lastWrittenOffset)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 605,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public replay(record CoordinatorRecord, groupType GroupType) : void in class org.apache.kafka.coordinator.group.GroupMetadataManagerTestContext & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 1430,
                    "endLine": 1516,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public replay(record CoordinatorRecord, groupType GroupType) : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 1515,
                    "endLine": 1515,
                    "startColumn": 9,
                    "endColumn": 65,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 1430,
                    "endLine": 1516,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public replay(record CoordinatorRecord, groupType GroupType) : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTestContext.java",
                    "startLine": 1515,
                    "endLine": 1515,
                    "startColumn": 9,
                    "endColumn": 69,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(lastWrittenOffset)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 606,
        "extraction_results": {
            "success": true,
            "newCommitHash": "2fcf6a3cc81b951b12e3a2d1b90d4149720c9bce",
            "newBranchName": "extract-idempotentCreateSnapshot-replay-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from private replay(producerId long, record CoordinatorRecord) : void in class org.apache.kafka.coordinator.group.OffsetMetadataManagerTest.OffsetMetadataManagerTestContext & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 480,
                    "endLine": 509,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private replay(producerId long, record CoordinatorRecord) : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 484,
                    "endLine": 484,
                    "startColumn": 13,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 480,
                    "endLine": 509,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private replay(producerId long, record CoordinatorRecord) : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 484,
                    "endLine": 484,
                    "startColumn": 13,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(lastWrittenOffset)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 607,
        "extraction_results": {
            "success": true,
            "newCommitHash": "e62eecd5e8915b6e6f83df0729e7ecd1b5103dce",
            "newBranchName": "extract-idempotentCreateSnapshot-replay-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from private replayEndTransactionMarker(producerId long, result TransactionResult) : void in class org.apache.kafka.coordinator.group.OffsetMetadataManagerTest.OffsetMetadataManagerTestContext & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 511,
                    "endLine": 518,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private replayEndTransactionMarker(producerId long, result TransactionResult) : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 515,
                    "endLine": 515,
                    "startColumn": 13,
                    "endColumn": 69,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 511,
                    "endLine": 518,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private replayEndTransactionMarker(producerId long, result TransactionResult) : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
                    "startLine": 515,
                    "endLine": 515,
                    "startColumn": 13,
                    "endColumn": 73,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(lastWrittenOffset)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 608,
        "extraction_results": {
            "success": true,
            "newCommitHash": "2d5adc292dd053243e3ad49fb9e5ee75e20fd598",
            "newBranchName": "extract-idempotentCreateSnapshot-replayEndTransactionMarker-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testTimelineGaugeCounters() : void in class org.apache.kafka.coordinator.group.metrics.GroupCoordinatorMetricsShardTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 48,
                    "endLine": 99,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testTimelineGaugeCounters() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 9,
                    "endColumn": 52,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 48,
                    "endLine": 99,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testTimelineGaugeCounters() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 64,
                    "endLine": 64,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(1000)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 90,
                    "endLine": 90,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(2000)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 609,
        "extraction_results": {
            "success": true,
            "newCommitHash": "a90c2d6088f885dc16d184ed13771ee9623b805d",
            "newBranchName": "extract-idempotentCreateSnapshot-testTimelineGaugeCounters-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testConsumerGroupStateTransitionMetrics() : void in class org.apache.kafka.coordinator.group.metrics.GroupCoordinatorMetricsShardTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 154,
                    "endLine": 241,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testConsumerGroupStateTransitionMetrics() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 187,
                    "endLine": 187,
                    "startColumn": 9,
                    "endColumn": 52,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 154,
                    "endLine": 241,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testConsumerGroupStateTransitionMetrics() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 187,
                    "endLine": 187,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(1000)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 201,
                    "endLine": 201,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(2000)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 209,
                    "endLine": 209,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(3000)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
                    "startLine": 222,
                    "endLine": 222,
                    "startColumn": 9,
                    "endColumn": 56,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(4000)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 610,
        "extraction_results": {
            "success": true,
            "newCommitHash": "e118294a728c0c6eae034ce5820762d2b6315112",
            "newBranchName": "extract-idempotentCreateSnapshot-testConsumerGroupStateTransitionMetrics-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public aggregateShards() : void in class org.apache.kafka.coordinator.group.metrics.GroupCoordinatorMetricsTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsTest.java",
                    "startLine": 120,
                    "endLine": 172,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public aggregateShards() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsTest.java",
                    "startLine": 157,
                    "endLine": 157,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsTest.java",
                    "startLine": 120,
                    "endLine": 172,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public aggregateShards() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsTest.java",
                    "startLine": 157,
                    "endLine": 157,
                    "startColumn": 9,
                    "endColumn": 57,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry0.idempotentCreateSnapshot(1000)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsTest.java",
                    "startLine": 158,
                    "endLine": 158,
                    "startColumn": 9,
                    "endColumn": 57,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry1.idempotentCreateSnapshot(1500)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 611,
        "extraction_results": {
            "success": true,
            "newCommitHash": "f76c771f07e85852f1fca4bd5e7c2e881fe59b87",
            "newBranchName": "extract-idempotentCreateSnapshot-aggregateShards-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testAsListedGroup() : void in class org.apache.kafka.coordinator.group.modern.consumer.ConsumerGroupTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1104,
                    "endLine": 1121,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testAsListedGroup() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1113,
                    "endLine": 1113,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1104,
                    "endLine": 1121,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testAsListedGroup() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1113,
                    "endLine": 1113,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(0)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1118,
                    "endLine": 1118,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(1)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 612,
        "extraction_results": {
            "success": true,
            "newCommitHash": "8703298f378f5767ab7c5b8e0740c9b6b94fce07",
            "newBranchName": "extract-idempotentCreateSnapshot-testAsListedGroup-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testValidateOffsetFetch() : void in class org.apache.kafka.coordinator.group.modern.consumer.ConsumerGroupTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1123,
                    "endLine": 1153,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testValidateOffsetFetch() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1140,
                    "endLine": 1140,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1123,
                    "endLine": 1153,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testValidateOffsetFetch() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1140,
                    "endLine": 1140,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(0)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 613,
        "extraction_results": {
            "success": true,
            "newCommitHash": "34bebf3af2ff8ca4a4ac8a279765fc681c4b95ea",
            "newBranchName": "extract-idempotentCreateSnapshot-testValidateOffsetFetch-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testAsDescribedGroup() : void in class org.apache.kafka.coordinator.group.modern.consumer.ConsumerGroupTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1243,
                    "endLine": 1276,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testAsDescribedGroup() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1247,
                    "endLine": 1247,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1243,
                    "endLine": 1276,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testAsDescribedGroup() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1247,
                    "endLine": 1247,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(0)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1256,
                    "endLine": 1256,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(1)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 614,
        "extraction_results": {
            "success": true,
            "newCommitHash": "7226b58c84508faac4518b8bf061266c17e4bdf7",
            "newBranchName": "extract-idempotentCreateSnapshot-testAsDescribedGroup-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testIsInStatesCaseInsensitive() : void in class org.apache.kafka.coordinator.group.modern.consumer.ConsumerGroupTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1318,
                    "endLine": 1338,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testIsInStatesCaseInsensitive() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1327,
                    "endLine": 1327,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1318,
                    "endLine": 1338,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testIsInStatesCaseInsensitive() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1327,
                    "endLine": 1327,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(0)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/consumer/ConsumerGroupTest.java",
                    "startLine": 1334,
                    "endLine": 1334,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(1)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 615,
        "extraction_results": {
            "success": true,
            "newCommitHash": "2afeb4dfa4330fb206a36754f2ee15817ba410df",
            "newBranchName": "extract-idempotentCreateSnapshot-testIsInStatesCaseInsensitive-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testAsListedGroup() : void in class org.apache.kafka.coordinator.group.modern.share.ShareGroupTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 677,
                    "endLine": 692,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testAsListedGroup() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 681,
                    "endLine": 681,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 677,
                    "endLine": 692,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testAsListedGroup() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 681,
                    "endLine": 681,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(0)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 687,
                    "endLine": 687,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(1)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 616,
        "extraction_results": {
            "success": true,
            "newCommitHash": "615b67dc17c192240f1a481c9167bb8eb032c9f8",
            "newBranchName": "extract-idempotentCreateSnapshot-testAsListedGroup-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testAsDescribedGroup() : void in class org.apache.kafka.coordinator.group.modern.share.ShareGroupTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 785,
                    "endLine": 815,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testAsDescribedGroup() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 789,
                    "endLine": 789,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 785,
                    "endLine": 815,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testAsDescribedGroup() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 789,
                    "endLine": 789,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(0)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 797,
                    "endLine": 797,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(1)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 617,
        "extraction_results": {
            "success": true,
            "newCommitHash": "6763e67eb5b4151e73ba5a9ed1ee0dd90c71759f",
            "newBranchName": "extract-idempotentCreateSnapshot-testAsDescribedGroup-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testIsInStatesCaseInsensitive() : void in class org.apache.kafka.coordinator.group.modern.share.ShareGroupTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 817,
                    "endLine": 832,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testIsInStatesCaseInsensitive() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 821,
                    "endLine": 821,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 817,
                    "endLine": 832,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testIsInStatesCaseInsensitive() : void"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 821,
                    "endLine": 821,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(0)"
                },
                {
                    "filePath": "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/modern/share/ShareGroupTest.java",
                    "startLine": 828,
                    "endLine": 828,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(1)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 618,
        "extraction_results": {
            "success": true,
            "newCommitHash": "7e477e8eadf30c6142f19bbb76cff3b1bf7d8587",
            "newBranchName": "extract-idempotentCreateSnapshot-testIsInStatesCaseInsensitive-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testAddEntriesWithSnapshots() : Map<Integer,String> in class org.apache.kafka.jmh.timeline.TimelineHashMapBenchmark & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/timeline/TimelineHashMapBenchmark.java",
                    "startLine": 70,
                    "endLine": 90,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testAddEntriesWithSnapshots() : Map<Integer,String>"
                },
                {
                    "filePath": "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/timeline/TimelineHashMapBenchmark.java",
                    "startLine": 81,
                    "endLine": 81,
                    "startColumn": 17,
                    "endColumn": 61,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/timeline/TimelineHashMapBenchmark.java",
                    "startLine": 70,
                    "endLine": 90,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testAddEntriesWithSnapshots() : Map<Integer,String>"
                },
                {
                    "filePath": "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/timeline/TimelineHashMapBenchmark.java",
                    "startLine": 81,
                    "endLine": 81,
                    "startColumn": 17,
                    "endColumn": 65,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(epoch)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 619,
        "extraction_results": {
            "success": true,
            "newCommitHash": "ebceb5d1219775a9e83c01195bca606578cff305",
            "newBranchName": "extract-idempotentCreateSnapshot-testAddEntriesWithSnapshots-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from private OffsetControlManager(logContext LogContext, snapshotRegistry SnapshotRegistry, metrics QuorumControllerMetrics, time Time) in class org.apache.kafka.controller.OffsetControlManager & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 142,
                    "endLine": 164,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private OffsetControlManager(logContext LogContext, snapshotRegistry SnapshotRegistry, metrics QuorumControllerMetrics, time Time)"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 9,
                    "endColumn": 51,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 142,
                    "endLine": 164,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private OffsetControlManager(logContext LogContext, snapshotRegistry SnapshotRegistry, metrics QuorumControllerMetrics, time Time)"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 159,
                    "endLine": 159,
                    "startColumn": 9,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(-1L)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 620,
        "extraction_results": {
            "success": false
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from package activate(newNextWriteOffset long) : void in class org.apache.kafka.controller.OffsetControlManager & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 236,
                    "endLine": 255,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package activate(newNextWriteOffset long) : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 252,
                    "endLine": 252,
                    "startColumn": 9,
                    "endColumn": 64,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 236,
                    "endLine": 255,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package activate(newNextWriteOffset long) : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 252,
                    "endLine": 252,
                    "startColumn": 9,
                    "endColumn": 68,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(lastStableOffset)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 621,
        "extraction_results": {
            "success": true,
            "newCommitHash": "9eea6895d62aec7465dfbc4811e8b0bc61445662",
            "newBranchName": "extract-idempotentCreateSnapshot-activate-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from package handleScheduleAtomicAppend(endOffset long) : void in class org.apache.kafka.controller.OffsetControlManager & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 292,
                    "endLine": 310,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package handleScheduleAtomicAppend(endOffset long) : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 301,
                    "endLine": 301,
                    "startColumn": 9,
                    "endColumn": 57,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 292,
                    "endLine": 310,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package handleScheduleAtomicAppend(endOffset long) : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 301,
                    "endLine": 301,
                    "startColumn": 9,
                    "endColumn": 61,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(endOffset)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 622,
        "extraction_results": {
            "success": true,
            "newCommitHash": "2e8ab6ec5591a47e6a5217eac0b790aacf3695fb",
            "newBranchName": "extract-idempotentCreateSnapshot-handleScheduleAtomicAppend-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from package maybeAdvanceLastStableOffset() : void in class org.apache.kafka.controller.OffsetControlManager & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 312,
                    "endLine": 329,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package maybeAdvanceLastStableOffset() : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 326,
                    "endLine": 326,
                    "startColumn": 17,
                    "endColumn": 72,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 312,
                    "endLine": 329,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package maybeAdvanceLastStableOffset() : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 326,
                    "endLine": 326,
                    "startColumn": 17,
                    "endColumn": 76,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(lastStableOffset)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 623,
        "extraction_results": {
            "success": true,
            "newCommitHash": "f02c9361287ce0b3d5874fb1da2a212cf97ae04f",
            "newBranchName": "extract-idempotentCreateSnapshot-maybeAdvanceLastStableOffset-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from package endLoadSnapshot(timestamp long) : void in class org.apache.kafka.controller.OffsetControlManager & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 354,
                    "endLine": 376,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "package endLoadSnapshot(timestamp long) : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 365,
                    "endLine": 365,
                    "startColumn": 9,
                    "endColumn": 79,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 354,
                    "endLine": 376,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "package endLoadSnapshot(timestamp long) : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 365,
                    "endLine": 365,
                    "startColumn": 9,
                    "endColumn": 83,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "this.snapshotRegistry.idempotentCreateSnapshot(currentSnapshotId.offset())"
                }
            ],
            "isStatic": false
        },
        "ref_id": 624,
        "extraction_results": {
            "success": true,
            "newCommitHash": "e4bf466a438e0f393135b84ed4b5611c7608ac3e",
            "newBranchName": "extract-idempotentCreateSnapshot-endLoadSnapshot-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public replay(message BeginTransactionRecord, offset long) : void in class org.apache.kafka.controller.OffsetControlManager & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 378,
                    "endLine": 389,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public replay(message BeginTransactionRecord, offset long) : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 386,
                    "endLine": 386,
                    "startColumn": 9,
                    "endColumn": 58,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 378,
                    "endLine": 389,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public replay(message BeginTransactionRecord, offset long) : void"
                },
                {
                    "filePath": "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
                    "startLine": 386,
                    "endLine": 386,
                    "startColumn": 9,
                    "endColumn": 62,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(offset - 1)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 625,
        "extraction_results": {
            "success": true,
            "newCommitHash": "d0d1ef2e01ed6532f34cdbb087e241a4f6880007",
            "newBranchName": "extract-idempotentCreateSnapshot-replay-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testLoadSnapshot() : void in class org.apache.kafka.controller.AclControlManagerTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/AclControlManagerTest.java",
                    "startLine": 203,
                    "endLine": 238,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testLoadSnapshot() : void"
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/AclControlManagerTest.java",
                    "startLine": 206,
                    "endLine": 206,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/AclControlManagerTest.java",
                    "startLine": 203,
                    "endLine": 238,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testLoadSnapshot() : void"
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/AclControlManagerTest.java",
                    "startLine": 206,
                    "endLine": 206,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(0)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 626,
        "extraction_results": {
            "success": true,
            "newCommitHash": "41521201e2c0ea4f6a97d434a4a1b58e6b71b232",
            "newBranchName": "extract-idempotentCreateSnapshot-testLoadSnapshot-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testUpdateFeatures() : void in class org.apache.kafka.controller.FeatureControlManagerTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 95,
                    "endLine": 125,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testUpdateFeatures() : void"
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 103,
                    "endLine": 103,
                    "startColumn": 9,
                    "endColumn": 50,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 94,
                    "endLine": 124,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testUpdateFeatures() : void"
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 102,
                    "endLine": 102,
                    "startColumn": 9,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(-1)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 627,
        "extraction_results": {
            "success": true,
            "newCommitHash": "37798d9b1c134ab3b36c3c31004ba933de6687bd",
            "newBranchName": "extract-idempotentCreateSnapshot-testUpdateFeatures-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testReplay() : void in class org.apache.kafka.controller.FeatureControlManagerTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 127,
                    "endLine": 145,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testReplay() : void"
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 134,
                    "endLine": 134,
                    "startColumn": 9,
                    "endColumn": 50,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 126,
                    "endLine": 144,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testReplay() : void"
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 133,
                    "endLine": 133,
                    "startColumn": 9,
                    "endColumn": 54,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(-1)"
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 141,
                    "endLine": 141,
                    "startColumn": 9,
                    "endColumn": 55,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(123)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 628,
        "extraction_results": {
            "success": true,
            "newCommitHash": "8f45b80fb602932dd6473cbc2a55946fd956e4b5",
            "newBranchName": "extract-idempotentCreateSnapshot-testReplay-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "4e862c0903195eb11a715271c29304d28036273d",
        "url": "https://github.com/apache/kafka/commit/4e862c0903195eb11a715271c29304d28036273d",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public idempotentCreateSnapshot(epoch long) : void extracted from public testUpdateFeaturesErrorCases() : void in class org.apache.kafka.controller.FeatureControlManagerTest & moved to class org.apache.kafka.timeline.SnapshotRegistry",
            "leftSideLocations": [
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 164,
                    "endLine": 213,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testUpdateFeaturesErrorCases() : void"
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 188,
                    "endLine": 188,
                    "startColumn": 9,
                    "endColumn": 49,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 208,
                    "endLine": 218,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public idempotentCreateSnapshot(epoch long) : void"
                },
                {
                    "filePath": "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
                    "startLine": 217,
                    "endLine": 217,
                    "startColumn": 9,
                    "endColumn": 36,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 163,
                    "endLine": 212,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testUpdateFeaturesErrorCases() : void"
                },
                {
                    "filePath": "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
                    "startLine": 187,
                    "endLine": 187,
                    "startColumn": 9,
                    "endColumn": 53,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "snapshotRegistry.idempotentCreateSnapshot(3)"
                }
            ],
            "isStatic": false
        },
        "ref_id": 629,
        "extraction_results": {
            "success": true,
            "newCommitHash": "bed236d73c831ae8aa19c7bdaed32680482e4f73",
            "newBranchName": "extract-idempotentCreateSnapshot-testUpdateFeaturesErrorCases-130af38"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "b4d5f163a9c5a480efe0a1de3bebf12e35be2a7f",
        "url": "https://github.com/apache/kafka/commit/b4d5f163a9c5a480efe0a1de3bebf12e35be2a7f",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public votedKey() : Optional<ReplicaKey> extracted from public testElectionTimeout() : void in class org.apache.kafka.raft.VotedStateTest & moved to class org.apache.kafka.raft.UnattachedState",
            "leftSideLocations": [
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 57,
                    "endLine": 78,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public testElectionTimeout() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/VotedStateTest.java",
                    "startLine": 63,
                    "endLine": 63,
                    "startColumn": 9,
                    "endColumn": 50,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/UnattachedState.java",
                    "startLine": 99,
                    "endLine": 101,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public votedKey() : Optional<ReplicaKey>"
                },
                {
                    "filePath": "raft/src/main/java/org/apache/kafka/raft/UnattachedState.java",
                    "startLine": 100,
                    "endLine": 100,
                    "startColumn": 9,
                    "endColumn": 25,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/UnattachedStateWithVoteTest.java",
                    "startLine": 59,
                    "endLine": 80,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public testElectionTimeout() : void"
                },
                {
                    "filePath": "raft/src/test/java/org/apache/kafka/raft/UnattachedStateWithVoteTest.java",
                    "startLine": 65,
                    "endLine": 65,
                    "startColumn": 32,
                    "endColumn": 48,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "state.votedKey()"
                }
            ],
            "isStatic": false
        },
        "ref_id": 630,
        "extraction_results": {
            "success": true,
            "newCommitHash": "0545041c57c66aa4d42a43367f40b0139da63df4",
            "newBranchName": "extract-votedKey-testElectionTimeout-e1b2ade"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "8d29bc1fa8ce75b6807b957ea35ad39e8dd9e04a",
        "url": "https://github.com/apache/kafka/commit/8d29bc1fa8ce75b6807b957ea35ad39e8dd9e04a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newShareGroupSubscriptionMetadataRecord(groupId String, newSubscriptionMetadata Map<String,TopicMetadata>) : CoordinatorRecord extracted from private shareGroupHeartbeat(groupId String, memberId String, memberEpoch int, rackId String, clientId String, clientHost String, subscribedTopicNames List<String>) : CoordinatorResult<ShareGroupHeartbeatResponseData,CoordinatorRecord> in class org.apache.kafka.coordinator.group.GroupMetadataManager & moved to class org.apache.kafka.coordinator.group.CoordinatorRecordHelpers",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2062,
                    "endLine": 2213,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private shareGroupHeartbeat(groupId String, memberId String, memberEpoch int, rackId String, clientId String, clientHost String, subscribedTopicNames List<String>) : CoordinatorResult<ShareGroupHeartbeatResponseData,CoordinatorRecord>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2089,
                    "endLine": 2089,
                    "startColumn": 9,
                    "endColumn": 73,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2211,
                    "endLine": 2211,
                    "startColumn": 9,
                    "endColumn": 45,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 646,
                    "endLine": 688,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newShareGroupSubscriptionMetadataRecord(groupId String, newSubscriptionMetadata Map<String,TopicMetadata>) : CoordinatorRecord"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 659,
                    "endLine": 659,
                    "startColumn": 13,
                    "endColumn": 108,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 662,
                    "endLine": 667,
                    "startColumn": 17,
                    "endColumn": 19,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2055,
                    "endLine": 2201,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private shareGroupHeartbeat(groupId String, memberId String, memberEpoch int, rackId String, clientId String, clientHost String, subscribedTopicNames List<String>) : CoordinatorResult<ShareGroupHeartbeatResponseData,CoordinatorRecord>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2143,
                    "endLine": 2143,
                    "startColumn": 29,
                    "endColumn": 99,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "newShareGroupSubscriptionMetadataRecord(groupId,subscriptionMetadata)"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 657,
                    "endLine": 657,
                    "startColumn": 9,
                    "endColumn": 89,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 658,
                    "endLine": 675,
                    "startColumn": 9,
                    "endColumn": 12,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 677,
                    "endLine": 687,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 631,
        "extraction_results": {
            "success": true,
            "newCommitHash": "66511a520a3e8ea05d6531fa7fe6989099db9164",
            "newBranchName": "extract-newShareGroupSubscriptionMetadataRecord-shareGroupHeartbeat-ad08ec6"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "8d29bc1fa8ce75b6807b957ea35ad39e8dd9e04a",
        "url": "https://github.com/apache/kafka/commit/8d29bc1fa8ce75b6807b957ea35ad39e8dd9e04a",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public newShareGroupSubscriptionMetadataRecord(groupId String, newSubscriptionMetadata Map<String,TopicMetadata>) : CoordinatorRecord extracted from private shareGroupFenceMember(group ShareGroup, member ShareGroupMember, response T) : CoordinatorResult<T,CoordinatorRecord> in class org.apache.kafka.coordinator.group.GroupMetadataManager & moved to class org.apache.kafka.coordinator.group.CoordinatorRecordHelpers",
            "leftSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2766,
                    "endLine": 2813,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private shareGroupFenceMember(group ShareGroup, member ShareGroupMember, response T) : CoordinatorResult<T,CoordinatorRecord>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2780,
                    "endLine": 2780,
                    "startColumn": 9,
                    "endColumn": 67,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2810,
                    "endLine": 2810,
                    "startColumn": 9,
                    "endColumn": 45,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 646,
                    "endLine": 688,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public newShareGroupSubscriptionMetadataRecord(groupId String, newSubscriptionMetadata Map<String,TopicMetadata>) : CoordinatorRecord"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 659,
                    "endLine": 659,
                    "startColumn": 13,
                    "endColumn": 108,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 662,
                    "endLine": 667,
                    "startColumn": 17,
                    "endColumn": 19,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2756,
                    "endLine": 2794,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private shareGroupFenceMember(group ShareGroup, member ShareGroupMember, response T) : CoordinatorResult<T,CoordinatorRecord>"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
                    "startLine": 2784,
                    "endLine": 2784,
                    "startColumn": 25,
                    "endColumn": 103,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "newShareGroupSubscriptionMetadataRecord(group.groupId(),subscriptionMetadata)"
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 657,
                    "endLine": 657,
                    "startColumn": 9,
                    "endColumn": 89,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 658,
                    "endLine": 675,
                    "startColumn": 9,
                    "endColumn": 12,
                    "codeElementType": "EXPRESSION_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/CoordinatorRecordHelpers.java",
                    "startLine": 677,
                    "endLine": 687,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "added statement in extracted method declaration",
                    "codeElement": null
                }
            ],
            "isStatic": true
        },
        "ref_id": 632,
        "extraction_results": {
            "success": true,
            "newCommitHash": "24a13d857757026051ebda38f04cfbee3cf54b2e",
            "newBranchName": "extract-newShareGroupSubscriptionMetadataRecord-shareGroupFenceMember-ad08ec6"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "932e84096a96e199c0772c81bddf3ea3789377ba",
        "url": "https://github.com/apache/kafka/commit/932e84096a96e199c0772c81bddf3ea3789377ba",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public onClose() : boolean extracted from public acknowledgeOnClose(acknowledgementsMap Map<TopicIdPartition,Acknowledgements>, deadlineMs long) : CompletableFuture<Void> in class org.apache.kafka.clients.consumer.internals.ShareConsumeRequestManager & moved to class org.apache.kafka.clients.consumer.internals.ShareConsumeRequestManager.AcknowledgeRequestState",
            "leftSideLocations": [
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ShareConsumeRequestManager.java",
                    "startLine": 433,
                    "endLine": 496,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "public acknowledgeOnClose(acknowledgementsMap Map<TopicIdPartition,Acknowledgements>, deadlineMs long) : CompletableFuture<Void>"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ShareConsumeRequestManager.java",
                    "startLine": 457,
                    "endLine": 457,
                    "startColumn": 25,
                    "endColumn": 49,
                    "codeElementType": "IF_STATEMENT_CONDITION",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ShareConsumeRequestManager.java",
                    "startLine": 990,
                    "endLine": 992,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public onClose() : boolean"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ShareConsumeRequestManager.java",
                    "startLine": 991,
                    "endLine": 991,
                    "startColumn": 13,
                    "endColumn": 64,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ShareConsumeRequestManager.java",
                    "startLine": 434,
                    "endLine": 502,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "public acknowledgeOnClose(acknowledgementsMap Map<TopicIdPartition,Acknowledgements>, deadlineMs long) : CompletableFuture<Void>"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ShareConsumeRequestManager.java",
                    "startLine": 452,
                    "endLine": 498,
                    "startColumn": 9,
                    "endColumn": 11,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "sessionHandlers.forEach((nodeId,sessionHandler) -> {\n  Node node=cluster.nodeById(nodeId);\n  if (node != null) {\n    Map<TopicIdPartition,Acknowledgements> acknowledgementsMapForNode=new HashMap<>();\n    for (    TopicIdPartition tip : sessionHandler.sessionPartitions()) {\n      Acknowledgements acknowledgements=acknowledgementsMap.getOrDefault(tip,Acknowledgements.empty());\n      if (fetchAcknowledgementsMap.get(tip) != null) {\n        acknowledgements.merge(fetchAcknowledgementsMap.remove(tip));\n      }\n      if (acknowledgements != null && !acknowledgements.isEmpty()) {\n        acknowledgementsMapForNode.put(tip,acknowledgements);\n        metricsManager.recordAcknowledgementSent(acknowledgements.size());\n        log.debug(\"Added closing acknowledge request for partition {} to node {}\",tip.topicPartition(),node.id());\n        resultCount.incrementAndGet();\n      }\n    }\n    acknowledgeRequestStates.putIfAbsent(nodeId,new Pair<>(null,null));\n    if (acknowledgeRequestStates.get(nodeId).getSyncRequest() != null && !acknowledgeRequestStates.get(nodeId).getSyncRequest().isEmpty()) {\n      log.error(\"Attempt to call close() when there is an existing sync request for node {}-{}\",node.id(),acknowledgeRequestStates.get(nodeId).getSyncRequest());\n      closeFuture.completeExceptionally(new IllegalStateException(\"Attempt to call close() when there is an existing sync request for node : \" + node.id()));\n    }\n else {\n      acknowledgeRequestStates.get(nodeId).setSyncRequest(new AcknowledgeRequestState(logContext,ShareConsumeRequestManager.class.getSimpleName() + \":3\",deadlineMs,retryBackoffMs,retryBackoffMaxMs,sessionHandler,nodeId,acknowledgementsMapForNode,this::handleShareAcknowledgeCloseSuccess,this::handleShareAcknowledgeCloseFailure,resultHandler,AcknowledgeRequestType.CLOSE));\n    }\n  }\n}\n)"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ShareConsumeRequestManager.java",
                    "startLine": 482,
                    "endLine": 494,
                    "startColumn": 21,
                    "endColumn": 23,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "acknowledgeRequestStates.get(nodeId).setSyncRequest(new AcknowledgeRequestState(logContext,ShareConsumeRequestManager.class.getSimpleName() + \":3\",deadlineMs,retryBackoffMs,retryBackoffMaxMs,sessionHandler,nodeId,acknowledgementsMapForNode,this::handleShareAcknowledgeCloseSuccess,this::handleShareAcknowledgeCloseFailure,resultHandler,AcknowledgeRequestType.CLOSE))"
                }
            ],
            "isStatic": false
        },
        "ref_id": 633,
        "extraction_results": {
            "success": true,
            "newCommitHash": "9194b45995ef8c7fbbc4b94df1922f14be6036c8",
            "newBranchName": "extract-onClose-acknowledgeOnClose-f6bfa94"
        }
    },
    {
        "repository": "https://github.com/apache/kafka.git",
        "sha1": "d67c18b4aec66fec5d145c9ee737c7a469b8635c",
        "url": "https://github.com/apache/kafka/commit/d67c18b4aec66fec5d145c9ee737c7a469b8635c",
        "move_method_refactoring": {
            "type": "Extract And Move Method",
            "description": "Extract And Move Method public forConsumer(requireTimestamp boolean, isolationLevel IsolationLevel) : Builder extracted from private sendListOffsetRequest(node Node, timestampsToSearch Map<TopicPartition,ListOffsetsPartition>, requireTimestamp boolean) : RequestFuture<ListOffsetResult> in class org.apache.kafka.clients.consumer.internals.OffsetFetcher & moved to class org.apache.kafka.common.requests.ListOffsetsRequest.Builder",
            "leftSideLocations": [
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
                    "startLine": 382,
                    "endLine": 407,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration before extraction",
                    "codeElement": "private sendListOffsetRequest(node Node, timestampsToSearch Map<TopicPartition,ListOffsetsPartition>, requireTimestamp boolean) : RequestFuture<ListOffsetResult>"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
                    "startLine": 393,
                    "endLine": 395,
                    "startColumn": 9,
                    "endColumn": 93,
                    "codeElementType": "VARIABLE_DECLARATION_STATEMENT",
                    "description": "extracted code from source method declaration",
                    "codeElement": null
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/requests/ListOffsetsRequest.java",
                    "startLine": 61,
                    "endLine": 64,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "extracted method declaration",
                    "codeElement": "public forConsumer(requireTimestamp boolean, isolationLevel IsolationLevel) : Builder"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/common/requests/ListOffsetsRequest.java",
                    "startLine": 63,
                    "endLine": 63,
                    "startColumn": 13,
                    "endColumn": 87,
                    "codeElementType": "RETURN_STATEMENT",
                    "description": "extracted code to extracted method declaration",
                    "codeElement": null
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
                    "startLine": 382,
                    "endLine": 407,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "source method declaration after extraction",
                    "codeElement": "private sendListOffsetRequest(node Node, timestampsToSearch Map<TopicPartition,ListOffsetsPartition>, requireTimestamp boolean) : RequestFuture<ListOffsetResult>"
                },
                {
                    "filePath": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
                    "startLine": 393,
                    "endLine": 394,
                    "startColumn": 46,
                    "endColumn": 63,
                    "codeElementType": "METHOD_INVOCATION",
                    "description": "extracted method invocation",
                    "codeElement": "ListOffsetsRequest.Builder.forConsumer(requireTimestamp,isolationLevel)"
                }
            ],
            "isStatic": true
        },
        "ref_id": 634,
        "extraction_results": {
            "success": true,
            "newCommitHash": "f843a212e5cfdf88c76494ff4f3dae817d2545f0",
            "newBranchName": "extract-forConsumer-sendListOffsetRequest-3d436f5"
        }
    }
]