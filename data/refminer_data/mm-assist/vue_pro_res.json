[
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "3e91ac73c4fd1bcebe2c608675324d6cf2df5c5a",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/3e91ac73c4fd1bcebe2c608675324d6cf2df5c5a",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method private getAdminUserApi() : AdminUserApi from class cn.iocoder.yudao.module.crm.util.CrmQueryWrapperUtils to public getAdminUserApi() : AdminUserApi from class cn.iocoder.yudao.module.crm.util.CrmQueryWrapperUtils.SingletonManager",
            "leftSideLocations": [
                {
                    "filePath": "yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmQueryWrapperUtils.java",
                    "startLine": 96,
                    "endLine": 98,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "private getAdminUserApi() : AdminUserApi"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmQueryWrapperUtils.java",
                    "startLine": 115,
                    "endLine": 117,
                    "startColumn": 9,
                    "endColumn": 10,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public getAdminUserApi() : AdminUserApi"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "1d41e795-e2eb-4b2f-8e8d-e282caca5c71",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 112,
                "lineStart": 20,
                "lineEnd": 131,
                "bodyLineStart": 20,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmQueryWrapperUtils.java",
                "sourceCode": "/**\n * CRM \u67e5\u8be2\u5de5\u5177\u7c7b\n *\n * @author HUIHUI\n */\npublic class CrmQueryWrapperUtils {\n\n    /**\n     * \u6784\u9020 CRM \u6570\u636e\u7c7b\u578b\u6570\u636e\u5206\u9875\u67e5\u8be2\u6761\u4ef6\n     *\n     * @param query     \u8fde\u8868\u67e5\u8be2\u5bf9\u8c61\n     * @param bizType   \u6570\u636e\u7c7b\u578b {@link CrmBizTypeEnum}\n     * @param bizId     \u6570\u636e\u7f16\u53f7\n     * @param userId    \u7528\u6237\u7f16\u53f7\n     * @param sceneType \u573a\u666f\u7c7b\u578b\n     * @param pool      \u516c\u6d77\n     * @return \u662f\u5426 \uff08\u662f\uff1a\u9700\u8981\u6267\u884c\u67e5\u8be2\uff0c\u5426\uff1a\u4e0d\u9700\u8981\u67e5\u8be2\u8c03\u7528\u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u7a7a\uff09\n     */\n    // TODO @puhui999\uff1abizId \u76f4\u63a5\u4f20\u9012\u4f1a\u4e0d\u4f1a\u7b80\u5355\u70b9 \u56de\u590d\uff1a\u8fd8\u662f\u9700\u8981 SFunction \u56e0\u4e3a\u5206\u9875\u8fde\u8868\u65f6\u4e0d\u77e5\u9053 bizId \u662f\u591a\u5c11\uff1b\u662f\u4e0d\u662f\u628a bizId \u4f20\u5165\u5c31\u597d\u5566\uff1f\n    public static <T extends MPJLambdaWrapper<?>, S> boolean appendPermissionCondition(T query, Integer bizType, SFunction<S, ?> bizId,\n                                                                                       Long userId, Integer sceneType, Boolean pool) {\n        // 1. \u6784\u5efa\u6570\u636e\u6743\u9650\u8fde\u8868\u6761\u4ef6\n        if (ObjUtil.notEqual(validateAdminUser(userId), Boolean.TRUE)) { // \u7ba1\u7406\u5458\u4e0d\u9700\u8981\u6570\u636e\u6743\u9650\n            query.innerJoin(CrmPermissionDO.class, on -> on.eq(CrmPermissionDO::getBizType, bizType)\n                    .eq(CrmPermissionDO::getBizId, bizId)\n                    .eq(CrmPermissionDO::getUserId, userId));\n        }\n        // 2.1 \u573a\u666f\u4e00\uff1a\u6211\u8d1f\u8d23\u7684\u6570\u636e\n        if (CrmSceneTypeEnum.isOwner(sceneType)) {\n            query.eq(\"owner_user_id\", userId);\n        }\n        // 2.2 \u573a\u666f\u4e8c\uff1a\u6211\u53c2\u4e0e\u7684\u6570\u636e\n        if (CrmSceneTypeEnum.isInvolved(sceneType)) {\n            query.ne(\"owner_user_id\", userId)\n                    // TODO @puhui999\uff1aIN \u662f\u4e0d\u662f\u66f4\u5408\u9002\u54c8\uff1b\n                    .and(q -> q.eq(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.READ.getLevel())\n                            .or()\n                            .eq(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.WRITE.getLevel()));\n        }\n        // 2.3 \u573a\u666f\u4e09\uff1a\u4e0b\u5c5e\u8d1f\u8d23\u7684\u6570\u636e\n        if (CrmSceneTypeEnum.isSubordinate(sceneType)) {\n            // TODO @puhui999\uff1a\u8981\u4e0d\u5982\u679c\u6ca1\u6709\u4e0b\u5c5e\uff0c\u62fc\u4e00\u4e2a owner_user_id in null\uff0c\u4e0d\u8fd4\u56de\u7ed3\u679c\u5c31\u597d\u5566\uff1b\n            List<AdminUserRespDTO> subordinateUsers = getAdminUserApi().getUserListBySubordinate(userId);\n            if (CollUtil.isEmpty(subordinateUsers)) {\n                return false;\n            }\n            query.in(\"owner_user_id\", convertSet(subordinateUsers, AdminUserRespDTO::getId));\n        }\n\n        // 3. \u62fc\u63a5\u516c\u6d77\u7684\u67e5\u8be2\u6761\u4ef6\n        if (ObjUtil.equal(pool, Boolean.TRUE)) { // \u60c5\u51b5\u4e00\uff1a\u516c\u6d77\n            query.isNull(\"owner_user_id\");\n        } else { // \u60c5\u51b5\u4e8c\uff1a\u4e0d\u662f\u516c\u6d77\n            query.isNotNull(\"owner_user_id\");\n        }\n        return true;\n    }\n\n    /**\n     * \u6784\u9020 CRM \u6570\u636e\u7c7b\u578b\u6279\u91cf\u6570\u636e\u67e5\u8be2\u6761\u4ef6\n     *\n     * @param query   \u8fde\u8868\u67e5\u8be2\u5bf9\u8c61\n     * @param bizType \u6570\u636e\u7c7b\u578b {@link CrmBizTypeEnum}\n     * @param bizIds  \u6570\u636e\u7f16\u53f7\n     * @param userId  \u7528\u6237\u7f16\u53f7\n     */\n    public static <T extends MPJLambdaWrapper<?>> void appendPermissionCondition(T query, Integer bizType, Collection<Long> bizIds, Long userId) {\n        if (ObjUtil.equal(validateAdminUser(userId), Boolean.TRUE)) {// \u7ba1\u7406\u5458\u4e0d\u9700\u8981\u6570\u636e\u6743\u9650\n            return;\n        }\n\n        query.innerJoin(CrmPermissionDO.class, on ->\n                on.eq(CrmPermissionDO::getBizType, bizType).in(CrmPermissionDO::getBizId, bizIds)\n                        .in(CollUtil.isNotEmpty(bizIds), CrmPermissionDO::getUserId, userId));\n    }\n\n    private static AdminUserApi getAdminUserApi() {\n        return AdminUserApiHolder.ADMIN_USER_API;\n    }\n\n    /**\n     * \u6821\u9a8c\u7528\u6237\u662f\u5426\u662f\u7ba1\u7406\u5458\n     *\n     * @param userId \u7528\u6237\u7f16\u53f7\n     * @return \u662f/\u5426\n     */\n    private static boolean validateAdminUser(Long userId) {\n        // TODO \u67e5\u8be2\u6743\u9650\u914d\u7f6e\u8868\u7528\u6237\u7684\u89d2\u8272\u4fe1\u606f\n        // TODO @puhui999\uff1a\u67e5\u8be2\u7528\u6237\u7684\u89d2\u8272;CRM_ADMIN(\"crm_admin\", \"CRM \u7ba1\u7406\u5458\"),\n        //CrmPermissionConfig permissionConfig = crmPermissionConfigService.getPermissionConfigByUserId(userId);\n        //if (permissionConfig == null) {\n        //    return false;\n        //}\n        //// \u6821\u9a8c\u662f\u5426\u4e3a\u7ba1\u7406\u5458\n        //if (permissionConfig.getIsAdmin()){\n        //    return true;\n        //}\n        return false;\n    }\n\n    /**\n     * \u9759\u6001\u5185\u90e8\u7c7b\u5b9e\u73b0 AdminUserApi \u5355\u4f8b\u83b7\u53d6\n     *\n     * @author HUIHUI\n     */\n    private static class AdminUserApiHolder {\n\n        private static final AdminUserApi ADMIN_USER_API = SpringUtil.getBean(AdminUserApi.class);\n\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 0,
                "candidates": []
            },
            "processingTime": {
                "llmResponseTime": -1,
                "pluginProcessingTime": -1,
                "totalTime": 197
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "getAdminUserApi",
                            "method_signature": "private static AdminUserApi getAdminUserApi()",
                            "target_class": "AdminUserApi",
                            "rationale": "The method getAdminUserApi() is responsible for retrieving an instance of AdminUserApi, which suggests that it belongs in the AdminUserApi class rather than being a utility method in CrmQueryWrapperUtils."
                        },
                        {
                            "method_name": "validateAdminUser",
                            "method_signature": "private static boolean validateAdminUser(Long userId)",
                            "target_class": "UserService",
                            "rationale": "The method validateAdminUser() checks if a user is an admin, which is a user-related operation. It would be more appropriate in a UserService class that handles user-related logic."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "getAdminUserApi",
                            "method_signature": "private static AdminUserApi getAdminUserApi()",
                            "target_class": "AdminUserApi",
                            "rationale": "The method getAdminUserApi() is responsible for retrieving an instance of AdminUserApi, which suggests that it belongs in the AdminUserApi class rather than being a utility method in CrmQueryWrapperUtils."
                        },
                        {
                            "method_name": "validateAdminUser",
                            "method_signature": "private static boolean validateAdminUser(Long userId)",
                            "target_class": "UserService",
                            "rationale": "The method validateAdminUser() checks if a user is an admin, which is a user-related operation. It would be more appropriate in a UserService class that handles user-related logic."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "getAdminUserApi",
                            "method_signature": "private static AdminUserApi getAdminUserApi()",
                            "target_class": "AdminUserApi",
                            "rationale": "The method getAdminUserApi() is responsible for retrieving an instance of AdminUserApi, which suggests that it belongs in the AdminUserApi class itself, rather than being a utility method in CrmQueryWrapperUtils."
                        },
                        {
                            "method_name": "validateAdminUser",
                            "method_signature": "private static boolean validateAdminUser(Long userId)",
                            "target_class": "UserService",
                            "rationale": "The method validateAdminUser() checks if a user is an admin, which is a user-related concern. It would be more appropriate to move this method to a UserService class that handles user-related operations."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "getAdminUserApi",
                            "method_signature": "private static AdminUserApi getAdminUserApi()",
                            "target_class": "AdminUserApi",
                            "rationale": "The method getAdminUserApi() is responsible for retrieving an instance of AdminUserApi, which suggests that it belongs in the AdminUserApi class rather than being a utility method in CrmQueryWrapperUtils."
                        },
                        {
                            "method_name": "validateAdminUser",
                            "method_signature": "private static boolean validateAdminUser(Long userId)",
                            "target_class": "UserService",
                            "rationale": "The method validateAdminUser() checks if a user is an admin, which is a user-related operation. It would be more appropriate in a UserService class that handles user-related logic."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "validateAdminUser",
                    "getAdminUserApi"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "validateAdminUser": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "getAdminUserApi": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "69503689912abe6e565fd71895bc0245bd72fc2c",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/69503689912abe6e565fd71895bc0245bd72fc2c",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method private setUserInfo(logList List<OperateLogV2DO>, userList List<AdminUserDO>) : List<OperateLogV2RespDTO> from class cn.iocoder.yudao.module.system.api.logger.OperateLogApiImpl to private setUserInfo(logList List<OperateLogV2DO>, userList List<AdminUserDO>) : List<OperateLogV2RespDTO> from class cn.iocoder.yudao.module.system.convert.logger.OperateLogConvert",
            "leftSideLocations": [
                {
                    "filePath": "yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/api/logger/OperateLogApiImpl.java",
                    "startLine": 63,
                    "endLine": 70,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "private setUserInfo(logList List<OperateLogV2DO>, userList List<AdminUserDO>) : List<OperateLogV2RespDTO>"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/convert/logger/OperateLogConvert.java",
                    "startLine": 38,
                    "endLine": 45,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "private setUserInfo(logList List<OperateLogV2DO>, userList List<AdminUserDO>) : List<OperateLogV2RespDTO>"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "704ed9e5-8f1b-4f6a-8e81-2eca15af8460",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 48,
                "lineStart": 25,
                "lineEnd": 72,
                "bodyLineStart": 25,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/api/logger/OperateLogApiImpl.java",
                "sourceCode": "/**\n * \u64cd\u4f5c\u65e5\u5fd7 API \u5b9e\u73b0\u7c7b\n *\n * @author \u828b\u9053\u6e90\u7801\n */\n@Service\n@Validated\npublic class OperateLogApiImpl implements OperateLogApi {\n\n    @Resource\n    private OperateLogService operateLogService;\n    @Resource\n    private AdminUserService adminUserService;\n\n    @Override\n    public void createOperateLog(OperateLogCreateReqDTO createReqDTO) {\n        operateLogService.createOperateLog(createReqDTO);\n    }\n\n    @Override\n    @Async\n    public void createOperateLogV2(OperateLogV2CreateReqDTO createReqDTO) {\n        operateLogService.createOperateLogV2(createReqDTO);\n    }\n\n    @Override\n    public PageResult<OperateLogV2RespDTO> getOperateLogPage(OperateLogV2PageReqDTO pageReqVO) {\n        PageResult<OperateLogV2DO> operateLogPage = operateLogService.getOperateLogPage(pageReqVO);\n        if (CollUtil.isEmpty(operateLogPage.getList())) {\n            return PageResult.empty();\n        }\n\n        // \u83b7\u53d6\u7528\u6237\n        List<AdminUserDO> userList = adminUserService.getUserList(convertSet(operateLogPage.getList(), OperateLogV2DO::getUserId));\n        return BeanUtils.toBean(operateLogPage, OperateLogV2RespDTO.class).setList(setUserInfo(operateLogPage.getList(), userList));\n    }\n\n    // TODO @puhui999\uff1a\u8fd9\u79cd convert \u8fd8\u662f\u653e\u5230 convert \u7c7b\u91cc\uff0c\n    private static List<OperateLogV2RespDTO> setUserInfo(List<OperateLogV2DO> logList, List<AdminUserDO> userList) {\n        Map<Long, AdminUserDO> userMap = convertMap(userList, AdminUserDO::getId);\n        return convertList(logList, item -> {\n            OperateLogV2RespDTO respDTO = BeanUtils.toBean(item, OperateLogV2RespDTO.class);\n            findAndThen(userMap, item.getUserId(), user -> respDTO.setUserName(user.getNickname()));\n            return respDTO;\n        });\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 1,
                "candidates": [
                    {
                        "lineStart": 61,
                        "lineEnd": 69,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method setUserInfo to class LoginLogApiImpl",
                        "description": "move method to cn.iocoder.yudao.module.system.api.logger.LoginLogApiImpl\nRationale: null",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    }
                ]
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "setUserInfo",
                            "method_signature": "private static List<OperateLogV2RespDTO> setUserInfo(List<OperateLogV2DO> logList, List<AdminUserDO> userList)",
                            "target_class": "OperateLogConverter",
                            "rationale": "The method setUserInfo is responsible for converting and mapping data between different object types, which is a conversion concern. Moving it to a dedicated converter class (e.g., OperateLogConverter) would adhere to the Single Responsibility Principle and improve code organization."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "setUserInfo",
                            "method_signature": "private static List<OperateLogV2RespDTO> setUserInfo(List<OperateLogV2DO> logList, List<AdminUserDO> userList)",
                            "target_class": "ConvertUtil",
                            "rationale": "The method setUserInfo performs a conversion operation that is more appropriate for a utility class dedicated to conversion logic, such as ConvertUtil."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "setUserInfo",
                            "method_signature": "private static List<OperateLogV2RespDTO> setUserInfo(List<OperateLogV2DO> logList, List<AdminUserDO> userList)",
                            "target_class": "OperateLogConverter",
                            "rationale": "The method setUserInfo is responsible for converting and mapping data between different object types, which is a conversion concern. Moving it to a dedicated converter class (e.g., OperateLogConverter) would adhere to the Single Responsibility Principle and improve code organization."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "setUserInfo",
                            "method_signature": "private static List<OperateLogV2RespDTO> setUserInfo(List<OperateLogV2DO> logList, List<AdminUserDO> userList)",
                            "target_class": "OperateLogConverter",
                            "rationale": "The method setUserInfo is responsible for converting and mapping data between different object types, which is a conversion concern. Moving it to a dedicated converter class (e.g., OperateLogConverter) would adhere to the Single Responsibility Principle and improve code organization."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "setUserInfo"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "setUserInfo": {
                    "target_classes": [
                        {
                            "class_name": "LoginLogApiImpl",
                            "similarity_score": 0.15096588248481377
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "LoginLogApiImpl"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 1953,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "bbba83ef61527b3bd0a094bb5381d6cce1558f61",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/bbba83ef61527b3bd0a094bb5381d6cce1558f61",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method public buildSortingField(func Func1<T,?>) : SortingField from class cn.iocoder.yudao.framework.mybatis.core.util.MyBatisUtils to public buildSortingField(func Func1<T,?>) : SortingField from class cn.iocoder.yudao.framework.common.util.object.PageUtils",
            "leftSideLocations": [
                {
                    "filePath": "yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java",
                    "startLine": 95,
                    "endLine": 104,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "public buildSortingField(func Func1<T,?>) : SortingField"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/object/PageUtils.java",
                    "startLine": 27,
                    "endLine": 36,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public buildSortingField(func Func1<T,?>) : SortingField"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "0c829a18-a0a9-4393-800d-f7d5aca6a81a",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 111,
                "lineStart": 26,
                "lineEnd": 136,
                "bodyLineStart": 26,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java",
                "sourceCode": "/**\n * MyBatis \u5de5\u5177\u7c7b\n */\npublic class MyBatisUtils {\n\n    private static final String MYSQL_ESCAPE_CHARACTER = \"`\";\n\n    public static <T> Page<T> buildPage(PageParam pageParam) {\n        return buildPage(pageParam, null);\n    }\n\n    public static <T> Page<T> buildPage(PageParam pageParam, Collection<SortingField> sortingFields) {\n        // \u9875\u7801 + \u6570\u91cf\n        Page<T> page = new Page<>(pageParam.getPageNo(), pageParam.getPageSize());\n        // \u6392\u5e8f\u5b57\u6bb5\n        if (!CollectionUtil.isEmpty(sortingFields)) {\n            page.addOrder(sortingFields.stream().map(sortingField -> SortingField.ORDER_ASC.equals(sortingField.getOrder()) ?\n                    OrderItem.asc(sortingField.getField()) : OrderItem.desc(sortingField.getField()))\n                    .collect(Collectors.toList()));\n        }\n        return page;\n    }\n\n    /**\n     * \u5c06\u62e6\u622a\u5668\u6dfb\u52a0\u5230\u94fe\u4e2d\n     * \u7531\u4e8e MybatisPlusInterceptor \u4e0d\u652f\u6301\u6dfb\u52a0\u62e6\u622a\u5668\uff0c\u6240\u4ee5\u53ea\u80fd\u5168\u91cf\u8bbe\u7f6e\n     *\n     * @param interceptor \u94fe\n     * @param inner       \u62e6\u622a\u5668\n     * @param index       \u4f4d\u7f6e\n     */\n    public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index) {\n        List<InnerInterceptor> inners = new ArrayList<>(interceptor.getInterceptors());\n        inners.add(index, inner);\n        interceptor.setInterceptors(inners);\n    }\n\n    /**\n     * \u83b7\u5f97 Table \u5bf9\u5e94\u7684\u8868\u540d\n     *\n     * \u517c\u5bb9 MySQL \u8f6c\u4e49\u8868\u540d `t_xxx`\n     *\n     * @param table \u8868\n     * @return \u53bb\u9664\u8f6c\u79fb\u5b57\u7b26\u540e\u7684\u8868\u540d\n     */\n    public static String getTableName(Table table) {\n        String tableName = table.getName();\n        if (tableName.startsWith(MYSQL_ESCAPE_CHARACTER) && tableName.endsWith(MYSQL_ESCAPE_CHARACTER)) {\n            tableName = tableName.substring(1, tableName.length() - 1);\n        }\n        return tableName;\n    }\n\n    /**\n     * \u6784\u5efa Column \u5bf9\u8c61\n     *\n     * @param tableName  \u8868\u540d\n     * @param tableAlias \u522b\u540d\n     * @param column     \u5b57\u6bb5\u540d\n     * @return Column \u5bf9\u8c61\n     */\n    public static Column buildColumn(String tableName, Alias tableAlias, String column) {\n        if (tableAlias != null) {\n            tableName = tableAlias.getName();\n        }\n        return new Column(tableName + StringPool.DOT + column);\n    }\n\n\n    /**\n     * \u6784\u5efa\u6392\u5e8f\u5b57\u6bb5\uff08\u9ed8\u8ba4\u5012\u5e8f\uff09\n     *\n     * @param func \u6392\u5e8f\u5b57\u6bb5\u7684 Lambda \u8868\u8fbe\u5f0f\n     * @param <T>  \u6392\u5e8f\u5b57\u6bb5\u6240\u5c5e\u7684\u7c7b\u578b\n     * @return \u6392\u5e8f\u5b57\u6bb5\n     */\n    public static <T> SortingField buildSortingField(Func1<T, ?> func) {\n        return buildSortingField(func, SortingField.ORDER_DESC);\n    }\n\n    /**\n     * \u6784\u5efa\u6392\u5e8f\u5b57\u6bb5\n     *\n     * @param func  \u6392\u5e8f\u5b57\u6bb5\u7684 Lambda \u8868\u8fbe\u5f0f\n     * @param order \u6392\u5e8f\u7c7b\u578b {@link SortingField#ORDER_ASC} {@link SortingField#ORDER_DESC}\n     * @param <T>   \u6392\u5e8f\u5b57\u6bb5\u6240\u5c5e\u7684\u7c7b\u578b\n     * @return \u6392\u5e8f\u5b57\u6bb5\n     */\n    public static <T> SortingField buildSortingField(Func1<T, ?> func, String order) {\n        Object[] orderTypes = {SortingField.ORDER_ASC, SortingField.ORDER_DESC};\n        Assert.isTrue(ArrayUtil.contains(orderTypes, order), String.format(\"\u5b57\u6bb5\u7684\u6392\u5e8f\u7c7b\u578b\u53ea\u80fd\u662f%s/%s\", orderTypes));\n\n        String fieldName = LambdaUtil.getFieldName(func);\n        return new SortingField(fieldName, order);\n    }\n\n    /**\n     * \u6784\u5efa\u9ed8\u8ba4\u7684\u6392\u5e8f\u5b57\u6bb5\n     * \u5982\u679c\u6392\u5e8f\u5b57\u6bb5\u4e3a\u7a7a\uff0c\u5219\u8bbe\u7f6e\u6392\u5e8f\u5b57\u6bb5\uff1b\u5426\u5219\u5ffd\u7565\n     *\n     * @param sortablePageParam \u6392\u5e8f\u5206\u9875\u67e5\u8be2\u53c2\u6570\n     * @param func              \u6392\u5e8f\u5b57\u6bb5\u7684 Lambda \u8868\u8fbe\u5f0f\n     * @param <T>               \u6392\u5e8f\u5b57\u6bb5\u6240\u5c5e\u7684\u7c7b\u578b\n     */\n    public static <T> void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1<T, ?> func) {\n        if (sortablePageParam != null && CollUtil.isEmpty(sortablePageParam.getSortingFields())) {\n            sortablePageParam.setSortingFields(List.of(buildSortingField(func)));\n        }\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 4,
                "candidates": [
                    {
                        "lineStart": 78,
                        "lineEnd": 91,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method buildColumn to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: The buildColumn method is responsible for constructing a Column object based on table information, which aligns with utility functions typically found in JdbcUtils related to database operations.",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    },
                    {
                        "lineStart": 105,
                        "lineEnd": 119,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method buildSortingField to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: While 'JdbcUtils' may handle database-related utilities, the method's functionality is more aligned with sorting logic rather than database operations.",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    },
                    {
                        "lineStart": 121,
                        "lineEnd": 133,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method buildDefaultSortingField to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: null",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    },
                    {
                        "lineStart": 48,
                        "lineEnd": 60,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method addInterceptor to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: null",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    }
                ]
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "ColumnBuilder",
                            "rationale": "The method buildColumn is responsible for creating a Column object, which suggests that it should belong to a dedicated class that handles the construction of column-related objects."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "TableUtils",
                            "rationale": "The method getTableName is focused on retrieving the table name from a Table object, which is more aligned with utility functions related to table operations, thus it should be moved to a TableUtils class."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingFieldBuilder",
                            "rationale": "The method buildSortingField is specifically for creating SortingField objects, which indicates that it should be part of a dedicated class that handles the construction of sorting-related objects."
                        },
                        {
                            "method_name": "addInterceptor",
                            "method_signature": "public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)",
                            "target_class": "InterceptorManager",
                            "rationale": "The method addInterceptor manages the addition of interceptors, which is a responsibility that fits better in a class dedicated to managing interceptors, such as InterceptorManager."
                        },
                        {
                            "method_name": "buildDefaultSortingField",
                            "method_signature": "public static <T> void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1<T, ?> func)",
                            "target_class": "SortingFieldManager",
                            "rationale": "The method buildDefaultSortingField is responsible for setting default sorting fields, which suggests it should be part of a class that manages sorting fields, such as SortingFieldManager."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "Column",
                            "rationale": "The method buildColumn is responsible for creating a Column object, which suggests that it belongs in the Column class itself, promoting better encapsulation and separation of concerns."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "Table",
                            "rationale": "The getTableName method operates directly on the Table object and is concerned with its properties, making it more appropriate for the Table class."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingField",
                            "rationale": "The method buildSortingField is focused on creating SortingField instances, which indicates that it should reside within the SortingField class to enhance cohesion."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func, String order)",
                            "target_class": "SortingField",
                            "rationale": "Similar to the previous method, this method is also responsible for creating SortingField instances and should be moved to the SortingField class for better organization."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "ColumnBuilder",
                            "rationale": "The method buildColumn is responsible for creating Column objects, which suggests that it should belong to a dedicated class focused on building or managing Column instances."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "TableUtils",
                            "rationale": "The method getTableName is specifically related to the Table class and its properties, making it more appropriate for a utility class that handles operations related to Table objects."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingFieldBuilder",
                            "rationale": "The method buildSortingField is focused on creating SortingField instances, which indicates it should be part of a dedicated class that handles the construction and management of SortingField objects."
                        },
                        {
                            "method_name": "addInterceptor",
                            "method_signature": "public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)",
                            "target_class": "InterceptorManager",
                            "rationale": "The method addInterceptor deals with managing interceptors, which suggests it would be better suited in a class dedicated to managing interceptor logic."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "ColumnBuilder",
                            "rationale": "The method buildColumn is responsible for creating a Column object, which suggests that it should belong to a dedicated class that handles the construction of column-related objects."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "TableUtils",
                            "rationale": "The method getTableName is focused on retrieving the table name from a Table object, which is more aligned with utility functions related to table operations, thus it should be moved to a TableUtils class."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingFieldBuilder",
                            "rationale": "The method buildSortingField is specifically for creating SortingField objects, which indicates that it should be part of a dedicated class that handles the construction of sorting-related objects."
                        },
                        {
                            "method_name": "addInterceptor",
                            "method_signature": "public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)",
                            "target_class": "InterceptorManager",
                            "rationale": "The method addInterceptor manages the addition of interceptors, which is a responsibility that fits better in a class dedicated to managing interceptors, such as InterceptorManager."
                        },
                        {
                            "method_name": "buildDefaultSortingField",
                            "method_signature": "public static <T> void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1<T, ?> func)",
                            "target_class": "SortingFieldManager",
                            "rationale": "The method buildDefaultSortingField is responsible for setting default sorting fields, which suggests it should be part of a class that manages sorting fields, such as SortingFieldManager."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "buildColumn",
                    "getTableName",
                    "buildSortingField",
                    "buildDefaultSortingField",
                    "addInterceptor"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "buildColumn": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.6680891503202975
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 2,
                    "similarity_metric": "cosine"
                },
                "getTableName": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "buildSortingField": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.6745785200962754
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 1007,
                    "similarity_metric": "cosine"
                },
                "buildDefaultSortingField": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.7039167914817092
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 1,
                    "similarity_metric": "cosine"
                },
                "addInterceptor": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.6869840411086889
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "bbba83ef61527b3bd0a094bb5381d6cce1558f61",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/bbba83ef61527b3bd0a094bb5381d6cce1558f61",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method public buildSortingField(func Func1<T,?>, order String) : SortingField from class cn.iocoder.yudao.framework.mybatis.core.util.MyBatisUtils to public buildSortingField(func Func1<T,?>, order String) : SortingField from class cn.iocoder.yudao.framework.common.util.object.PageUtils",
            "leftSideLocations": [
                {
                    "filePath": "yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java",
                    "startLine": 106,
                    "endLine": 120,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "public buildSortingField(func Func1<T,?>, order String) : SortingField"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/object/PageUtils.java",
                    "startLine": 38,
                    "endLine": 51,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public buildSortingField(func Func1<T,?>, order String) : SortingField"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "0c829a18-a0a9-4393-800d-f7d5aca6a81a",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 111,
                "lineStart": 26,
                "lineEnd": 136,
                "bodyLineStart": 26,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java",
                "sourceCode": "/**\n * MyBatis \u5de5\u5177\u7c7b\n */\npublic class MyBatisUtils {\n\n    private static final String MYSQL_ESCAPE_CHARACTER = \"`\";\n\n    public static <T> Page<T> buildPage(PageParam pageParam) {\n        return buildPage(pageParam, null);\n    }\n\n    public static <T> Page<T> buildPage(PageParam pageParam, Collection<SortingField> sortingFields) {\n        // \u9875\u7801 + \u6570\u91cf\n        Page<T> page = new Page<>(pageParam.getPageNo(), pageParam.getPageSize());\n        // \u6392\u5e8f\u5b57\u6bb5\n        if (!CollectionUtil.isEmpty(sortingFields)) {\n            page.addOrder(sortingFields.stream().map(sortingField -> SortingField.ORDER_ASC.equals(sortingField.getOrder()) ?\n                    OrderItem.asc(sortingField.getField()) : OrderItem.desc(sortingField.getField()))\n                    .collect(Collectors.toList()));\n        }\n        return page;\n    }\n\n    /**\n     * \u5c06\u62e6\u622a\u5668\u6dfb\u52a0\u5230\u94fe\u4e2d\n     * \u7531\u4e8e MybatisPlusInterceptor \u4e0d\u652f\u6301\u6dfb\u52a0\u62e6\u622a\u5668\uff0c\u6240\u4ee5\u53ea\u80fd\u5168\u91cf\u8bbe\u7f6e\n     *\n     * @param interceptor \u94fe\n     * @param inner       \u62e6\u622a\u5668\n     * @param index       \u4f4d\u7f6e\n     */\n    public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index) {\n        List<InnerInterceptor> inners = new ArrayList<>(interceptor.getInterceptors());\n        inners.add(index, inner);\n        interceptor.setInterceptors(inners);\n    }\n\n    /**\n     * \u83b7\u5f97 Table \u5bf9\u5e94\u7684\u8868\u540d\n     *\n     * \u517c\u5bb9 MySQL \u8f6c\u4e49\u8868\u540d `t_xxx`\n     *\n     * @param table \u8868\n     * @return \u53bb\u9664\u8f6c\u79fb\u5b57\u7b26\u540e\u7684\u8868\u540d\n     */\n    public static String getTableName(Table table) {\n        String tableName = table.getName();\n        if (tableName.startsWith(MYSQL_ESCAPE_CHARACTER) && tableName.endsWith(MYSQL_ESCAPE_CHARACTER)) {\n            tableName = tableName.substring(1, tableName.length() - 1);\n        }\n        return tableName;\n    }\n\n    /**\n     * \u6784\u5efa Column \u5bf9\u8c61\n     *\n     * @param tableName  \u8868\u540d\n     * @param tableAlias \u522b\u540d\n     * @param column     \u5b57\u6bb5\u540d\n     * @return Column \u5bf9\u8c61\n     */\n    public static Column buildColumn(String tableName, Alias tableAlias, String column) {\n        if (tableAlias != null) {\n            tableName = tableAlias.getName();\n        }\n        return new Column(tableName + StringPool.DOT + column);\n    }\n\n\n    /**\n     * \u6784\u5efa\u6392\u5e8f\u5b57\u6bb5\uff08\u9ed8\u8ba4\u5012\u5e8f\uff09\n     *\n     * @param func \u6392\u5e8f\u5b57\u6bb5\u7684 Lambda \u8868\u8fbe\u5f0f\n     * @param <T>  \u6392\u5e8f\u5b57\u6bb5\u6240\u5c5e\u7684\u7c7b\u578b\n     * @return \u6392\u5e8f\u5b57\u6bb5\n     */\n    public static <T> SortingField buildSortingField(Func1<T, ?> func) {\n        return buildSortingField(func, SortingField.ORDER_DESC);\n    }\n\n    /**\n     * \u6784\u5efa\u6392\u5e8f\u5b57\u6bb5\n     *\n     * @param func  \u6392\u5e8f\u5b57\u6bb5\u7684 Lambda \u8868\u8fbe\u5f0f\n     * @param order \u6392\u5e8f\u7c7b\u578b {@link SortingField#ORDER_ASC} {@link SortingField#ORDER_DESC}\n     * @param <T>   \u6392\u5e8f\u5b57\u6bb5\u6240\u5c5e\u7684\u7c7b\u578b\n     * @return \u6392\u5e8f\u5b57\u6bb5\n     */\n    public static <T> SortingField buildSortingField(Func1<T, ?> func, String order) {\n        Object[] orderTypes = {SortingField.ORDER_ASC, SortingField.ORDER_DESC};\n        Assert.isTrue(ArrayUtil.contains(orderTypes, order), String.format(\"\u5b57\u6bb5\u7684\u6392\u5e8f\u7c7b\u578b\u53ea\u80fd\u662f%s/%s\", orderTypes));\n\n        String fieldName = LambdaUtil.getFieldName(func);\n        return new SortingField(fieldName, order);\n    }\n\n    /**\n     * \u6784\u5efa\u9ed8\u8ba4\u7684\u6392\u5e8f\u5b57\u6bb5\n     * \u5982\u679c\u6392\u5e8f\u5b57\u6bb5\u4e3a\u7a7a\uff0c\u5219\u8bbe\u7f6e\u6392\u5e8f\u5b57\u6bb5\uff1b\u5426\u5219\u5ffd\u7565\n     *\n     * @param sortablePageParam \u6392\u5e8f\u5206\u9875\u67e5\u8be2\u53c2\u6570\n     * @param func              \u6392\u5e8f\u5b57\u6bb5\u7684 Lambda \u8868\u8fbe\u5f0f\n     * @param <T>               \u6392\u5e8f\u5b57\u6bb5\u6240\u5c5e\u7684\u7c7b\u578b\n     */\n    public static <T> void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1<T, ?> func) {\n        if (sortablePageParam != null && CollUtil.isEmpty(sortablePageParam.getSortingFields())) {\n            sortablePageParam.setSortingFields(List.of(buildSortingField(func)));\n        }\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 4,
                "candidates": [
                    {
                        "lineStart": 78,
                        "lineEnd": 91,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method buildColumn to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: The buildColumn method is responsible for constructing a Column object based on table information, which aligns with utility functions typically found in JdbcUtils related to database operations.",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    },
                    {
                        "lineStart": 105,
                        "lineEnd": 119,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method buildSortingField to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: While 'JdbcUtils' may handle database-related utilities, the method's functionality is more aligned with sorting logic rather than database operations.",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    },
                    {
                        "lineStart": 121,
                        "lineEnd": 133,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method buildDefaultSortingField to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: null",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    },
                    {
                        "lineStart": 48,
                        "lineEnd": 60,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method addInterceptor to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: null",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    }
                ]
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "ColumnBuilder",
                            "rationale": "The method buildColumn is responsible for creating a Column object, which suggests that it should belong to a dedicated class that handles the construction of column-related objects."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "TableUtils",
                            "rationale": "The method getTableName is focused on retrieving the table name from a Table object, which is more aligned with utility functions related to table operations, thus it should be moved to a TableUtils class."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingFieldBuilder",
                            "rationale": "The method buildSortingField is specifically for creating SortingField objects, which indicates that it should be part of a dedicated class that handles the construction of sorting-related objects."
                        },
                        {
                            "method_name": "addInterceptor",
                            "method_signature": "public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)",
                            "target_class": "InterceptorManager",
                            "rationale": "The method addInterceptor manages the addition of interceptors, which is a responsibility that fits better in a class dedicated to managing interceptors, such as InterceptorManager."
                        },
                        {
                            "method_name": "buildDefaultSortingField",
                            "method_signature": "public static <T> void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1<T, ?> func)",
                            "target_class": "SortingFieldManager",
                            "rationale": "The method buildDefaultSortingField is responsible for setting default sorting fields, which suggests it should be part of a class that manages sorting fields, such as SortingFieldManager."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "Column",
                            "rationale": "The method buildColumn is responsible for creating a Column object, which suggests that it belongs in the Column class itself, promoting better encapsulation and separation of concerns."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "Table",
                            "rationale": "The getTableName method operates directly on the Table object and is concerned with its properties, making it more appropriate for the Table class."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingField",
                            "rationale": "The method buildSortingField is focused on creating SortingField instances, which indicates that it should reside within the SortingField class to enhance cohesion."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func, String order)",
                            "target_class": "SortingField",
                            "rationale": "Similar to the previous method, this method is also responsible for creating SortingField instances and should be moved to the SortingField class for better organization."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "ColumnBuilder",
                            "rationale": "The method buildColumn is responsible for creating Column objects, which suggests that it should belong to a dedicated class focused on building or managing Column instances."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "TableUtils",
                            "rationale": "The method getTableName is specifically related to the Table class and its properties, making it more appropriate for a utility class that handles operations related to Table objects."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingFieldBuilder",
                            "rationale": "The method buildSortingField is focused on creating SortingField instances, which indicates it should be part of a dedicated class that handles the construction and management of SortingField objects."
                        },
                        {
                            "method_name": "addInterceptor",
                            "method_signature": "public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)",
                            "target_class": "InterceptorManager",
                            "rationale": "The method addInterceptor deals with managing interceptors, which suggests it would be better suited in a class dedicated to managing interceptor logic."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "ColumnBuilder",
                            "rationale": "The method buildColumn is responsible for creating a Column object, which suggests that it should belong to a dedicated class that handles the construction of column-related objects."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "TableUtils",
                            "rationale": "The method getTableName is focused on retrieving the table name from a Table object, which is more aligned with utility functions related to table operations, thus it should be moved to a TableUtils class."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingFieldBuilder",
                            "rationale": "The method buildSortingField is specifically for creating SortingField objects, which indicates that it should be part of a dedicated class that handles the construction of sorting-related objects."
                        },
                        {
                            "method_name": "addInterceptor",
                            "method_signature": "public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)",
                            "target_class": "InterceptorManager",
                            "rationale": "The method addInterceptor manages the addition of interceptors, which is a responsibility that fits better in a class dedicated to managing interceptors, such as InterceptorManager."
                        },
                        {
                            "method_name": "buildDefaultSortingField",
                            "method_signature": "public static <T> void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1<T, ?> func)",
                            "target_class": "SortingFieldManager",
                            "rationale": "The method buildDefaultSortingField is responsible for setting default sorting fields, which suggests it should be part of a class that manages sorting fields, such as SortingFieldManager."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "buildColumn",
                    "getTableName",
                    "buildSortingField",
                    "buildDefaultSortingField",
                    "addInterceptor"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "buildColumn": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.6680891503202975
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 2,
                    "similarity_metric": "cosine"
                },
                "getTableName": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "buildSortingField": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.6745785200962754
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 1007,
                    "similarity_metric": "cosine"
                },
                "buildDefaultSortingField": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.7039167914817092
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 1,
                    "similarity_metric": "cosine"
                },
                "addInterceptor": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.6869840411086889
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "bbba83ef61527b3bd0a094bb5381d6cce1558f61",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/bbba83ef61527b3bd0a094bb5381d6cce1558f61",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method public buildDefaultSortingField(sortablePageParam SortablePageParam, func Func1<T,?>) : void from class cn.iocoder.yudao.framework.mybatis.core.util.MyBatisUtils to public buildDefaultSortingField(sortablePageParam SortablePageParam, func Func1<T,?>) : void from class cn.iocoder.yudao.framework.common.util.object.PageUtils",
            "leftSideLocations": [
                {
                    "filePath": "yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java",
                    "startLine": 122,
                    "endLine": 134,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "public buildDefaultSortingField(sortablePageParam SortablePageParam, func Func1<T,?>) : void"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/object/PageUtils.java",
                    "startLine": 53,
                    "endLine": 65,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public buildDefaultSortingField(sortablePageParam SortablePageParam, func Func1<T,?>) : void"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "0c829a18-a0a9-4393-800d-f7d5aca6a81a",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 111,
                "lineStart": 26,
                "lineEnd": 136,
                "bodyLineStart": 26,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java",
                "sourceCode": "/**\n * MyBatis \u5de5\u5177\u7c7b\n */\npublic class MyBatisUtils {\n\n    private static final String MYSQL_ESCAPE_CHARACTER = \"`\";\n\n    public static <T> Page<T> buildPage(PageParam pageParam) {\n        return buildPage(pageParam, null);\n    }\n\n    public static <T> Page<T> buildPage(PageParam pageParam, Collection<SortingField> sortingFields) {\n        // \u9875\u7801 + \u6570\u91cf\n        Page<T> page = new Page<>(pageParam.getPageNo(), pageParam.getPageSize());\n        // \u6392\u5e8f\u5b57\u6bb5\n        if (!CollectionUtil.isEmpty(sortingFields)) {\n            page.addOrder(sortingFields.stream().map(sortingField -> SortingField.ORDER_ASC.equals(sortingField.getOrder()) ?\n                    OrderItem.asc(sortingField.getField()) : OrderItem.desc(sortingField.getField()))\n                    .collect(Collectors.toList()));\n        }\n        return page;\n    }\n\n    /**\n     * \u5c06\u62e6\u622a\u5668\u6dfb\u52a0\u5230\u94fe\u4e2d\n     * \u7531\u4e8e MybatisPlusInterceptor \u4e0d\u652f\u6301\u6dfb\u52a0\u62e6\u622a\u5668\uff0c\u6240\u4ee5\u53ea\u80fd\u5168\u91cf\u8bbe\u7f6e\n     *\n     * @param interceptor \u94fe\n     * @param inner       \u62e6\u622a\u5668\n     * @param index       \u4f4d\u7f6e\n     */\n    public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index) {\n        List<InnerInterceptor> inners = new ArrayList<>(interceptor.getInterceptors());\n        inners.add(index, inner);\n        interceptor.setInterceptors(inners);\n    }\n\n    /**\n     * \u83b7\u5f97 Table \u5bf9\u5e94\u7684\u8868\u540d\n     *\n     * \u517c\u5bb9 MySQL \u8f6c\u4e49\u8868\u540d `t_xxx`\n     *\n     * @param table \u8868\n     * @return \u53bb\u9664\u8f6c\u79fb\u5b57\u7b26\u540e\u7684\u8868\u540d\n     */\n    public static String getTableName(Table table) {\n        String tableName = table.getName();\n        if (tableName.startsWith(MYSQL_ESCAPE_CHARACTER) && tableName.endsWith(MYSQL_ESCAPE_CHARACTER)) {\n            tableName = tableName.substring(1, tableName.length() - 1);\n        }\n        return tableName;\n    }\n\n    /**\n     * \u6784\u5efa Column \u5bf9\u8c61\n     *\n     * @param tableName  \u8868\u540d\n     * @param tableAlias \u522b\u540d\n     * @param column     \u5b57\u6bb5\u540d\n     * @return Column \u5bf9\u8c61\n     */\n    public static Column buildColumn(String tableName, Alias tableAlias, String column) {\n        if (tableAlias != null) {\n            tableName = tableAlias.getName();\n        }\n        return new Column(tableName + StringPool.DOT + column);\n    }\n\n\n    /**\n     * \u6784\u5efa\u6392\u5e8f\u5b57\u6bb5\uff08\u9ed8\u8ba4\u5012\u5e8f\uff09\n     *\n     * @param func \u6392\u5e8f\u5b57\u6bb5\u7684 Lambda \u8868\u8fbe\u5f0f\n     * @param <T>  \u6392\u5e8f\u5b57\u6bb5\u6240\u5c5e\u7684\u7c7b\u578b\n     * @return \u6392\u5e8f\u5b57\u6bb5\n     */\n    public static <T> SortingField buildSortingField(Func1<T, ?> func) {\n        return buildSortingField(func, SortingField.ORDER_DESC);\n    }\n\n    /**\n     * \u6784\u5efa\u6392\u5e8f\u5b57\u6bb5\n     *\n     * @param func  \u6392\u5e8f\u5b57\u6bb5\u7684 Lambda \u8868\u8fbe\u5f0f\n     * @param order \u6392\u5e8f\u7c7b\u578b {@link SortingField#ORDER_ASC} {@link SortingField#ORDER_DESC}\n     * @param <T>   \u6392\u5e8f\u5b57\u6bb5\u6240\u5c5e\u7684\u7c7b\u578b\n     * @return \u6392\u5e8f\u5b57\u6bb5\n     */\n    public static <T> SortingField buildSortingField(Func1<T, ?> func, String order) {\n        Object[] orderTypes = {SortingField.ORDER_ASC, SortingField.ORDER_DESC};\n        Assert.isTrue(ArrayUtil.contains(orderTypes, order), String.format(\"\u5b57\u6bb5\u7684\u6392\u5e8f\u7c7b\u578b\u53ea\u80fd\u662f%s/%s\", orderTypes));\n\n        String fieldName = LambdaUtil.getFieldName(func);\n        return new SortingField(fieldName, order);\n    }\n\n    /**\n     * \u6784\u5efa\u9ed8\u8ba4\u7684\u6392\u5e8f\u5b57\u6bb5\n     * \u5982\u679c\u6392\u5e8f\u5b57\u6bb5\u4e3a\u7a7a\uff0c\u5219\u8bbe\u7f6e\u6392\u5e8f\u5b57\u6bb5\uff1b\u5426\u5219\u5ffd\u7565\n     *\n     * @param sortablePageParam \u6392\u5e8f\u5206\u9875\u67e5\u8be2\u53c2\u6570\n     * @param func              \u6392\u5e8f\u5b57\u6bb5\u7684 Lambda \u8868\u8fbe\u5f0f\n     * @param <T>               \u6392\u5e8f\u5b57\u6bb5\u6240\u5c5e\u7684\u7c7b\u578b\n     */\n    public static <T> void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1<T, ?> func) {\n        if (sortablePageParam != null && CollUtil.isEmpty(sortablePageParam.getSortingFields())) {\n            sortablePageParam.setSortingFields(List.of(buildSortingField(func)));\n        }\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 4,
                "candidates": [
                    {
                        "lineStart": 78,
                        "lineEnd": 91,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method buildColumn to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: The buildColumn method is responsible for constructing a Column object based on table information, which aligns with utility functions typically found in JdbcUtils related to database operations.",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    },
                    {
                        "lineStart": 105,
                        "lineEnd": 119,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method buildSortingField to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: While 'JdbcUtils' may handle database-related utilities, the method's functionality is more aligned with sorting logic rather than database operations.",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    },
                    {
                        "lineStart": 121,
                        "lineEnd": 133,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method buildDefaultSortingField to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: null",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    },
                    {
                        "lineStart": 48,
                        "lineEnd": 60,
                        "refactoringType": "MyMoveStaticMethodRefactoring",
                        "refactoringInfo": "Move Static method addInterceptor to class JdbcUtils",
                        "description": "move method to cn.iocoder.yudao.framework.mybatis.core.util.JdbcUtils\nRationale: null",
                        "couldCreateRefObject": true,
                        "applied": false,
                        "undone": false
                    }
                ]
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "ColumnBuilder",
                            "rationale": "The method buildColumn is responsible for creating a Column object, which suggests that it should belong to a dedicated class that handles the construction of column-related objects."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "TableUtils",
                            "rationale": "The method getTableName is focused on retrieving the table name from a Table object, which is more aligned with utility functions related to table operations, thus it should be moved to a TableUtils class."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingFieldBuilder",
                            "rationale": "The method buildSortingField is specifically for creating SortingField objects, which indicates that it should be part of a dedicated class that handles the construction of sorting-related objects."
                        },
                        {
                            "method_name": "addInterceptor",
                            "method_signature": "public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)",
                            "target_class": "InterceptorManager",
                            "rationale": "The method addInterceptor manages the addition of interceptors, which is a responsibility that fits better in a class dedicated to managing interceptors, such as InterceptorManager."
                        },
                        {
                            "method_name": "buildDefaultSortingField",
                            "method_signature": "public static <T> void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1<T, ?> func)",
                            "target_class": "SortingFieldManager",
                            "rationale": "The method buildDefaultSortingField is responsible for setting default sorting fields, which suggests it should be part of a class that manages sorting fields, such as SortingFieldManager."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "Column",
                            "rationale": "The method buildColumn is responsible for creating a Column object, which suggests that it belongs in the Column class itself, promoting better encapsulation and separation of concerns."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "Table",
                            "rationale": "The getTableName method operates directly on the Table object and is concerned with its properties, making it more appropriate for the Table class."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingField",
                            "rationale": "The method buildSortingField is focused on creating SortingField instances, which indicates that it should reside within the SortingField class to enhance cohesion."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func, String order)",
                            "target_class": "SortingField",
                            "rationale": "Similar to the previous method, this method is also responsible for creating SortingField instances and should be moved to the SortingField class for better organization."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "ColumnBuilder",
                            "rationale": "The method buildColumn is responsible for creating Column objects, which suggests that it should belong to a dedicated class focused on building or managing Column instances."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "TableUtils",
                            "rationale": "The method getTableName is specifically related to the Table class and its properties, making it more appropriate for a utility class that handles operations related to Table objects."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingFieldBuilder",
                            "rationale": "The method buildSortingField is focused on creating SortingField instances, which indicates it should be part of a dedicated class that handles the construction and management of SortingField objects."
                        },
                        {
                            "method_name": "addInterceptor",
                            "method_signature": "public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)",
                            "target_class": "InterceptorManager",
                            "rationale": "The method addInterceptor deals with managing interceptors, which suggests it would be better suited in a class dedicated to managing interceptor logic."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "buildColumn",
                            "method_signature": "public static Column buildColumn(String tableName, Alias tableAlias, String column)",
                            "target_class": "ColumnBuilder",
                            "rationale": "The method buildColumn is responsible for creating a Column object, which suggests that it should belong to a dedicated class that handles the construction of column-related objects."
                        },
                        {
                            "method_name": "getTableName",
                            "method_signature": "public static String getTableName(Table table)",
                            "target_class": "TableUtils",
                            "rationale": "The method getTableName is focused on retrieving the table name from a Table object, which is more aligned with utility functions related to table operations, thus it should be moved to a TableUtils class."
                        },
                        {
                            "method_name": "buildSortingField",
                            "method_signature": "public static <T> SortingField buildSortingField(Func1<T, ?> func)",
                            "target_class": "SortingFieldBuilder",
                            "rationale": "The method buildSortingField is specifically for creating SortingField objects, which indicates that it should be part of a dedicated class that handles the construction of sorting-related objects."
                        },
                        {
                            "method_name": "addInterceptor",
                            "method_signature": "public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index)",
                            "target_class": "InterceptorManager",
                            "rationale": "The method addInterceptor manages the addition of interceptors, which is a responsibility that fits better in a class dedicated to managing interceptors, such as InterceptorManager."
                        },
                        {
                            "method_name": "buildDefaultSortingField",
                            "method_signature": "public static <T> void buildDefaultSortingField(SortablePageParam sortablePageParam, Func1<T, ?> func)",
                            "target_class": "SortingFieldManager",
                            "rationale": "The method buildDefaultSortingField is responsible for setting default sorting fields, which suggests it should be part of a class that manages sorting fields, such as SortingFieldManager."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "buildColumn",
                    "getTableName",
                    "buildSortingField",
                    "buildDefaultSortingField",
                    "addInterceptor"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "buildColumn": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.6680891503202975
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 2,
                    "similarity_metric": "cosine"
                },
                "getTableName": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "buildSortingField": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.6745785200962754
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 1007,
                    "similarity_metric": "cosine"
                },
                "buildDefaultSortingField": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.7039167914817092
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 1,
                    "similarity_metric": "cosine"
                },
                "addInterceptor": {
                    "target_classes": [
                        {
                            "class_name": "JdbcUtils",
                            "similarity_score": 0.6869840411086889
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "JdbcUtils"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "5622ba8acf82e0a9246317ede1b58c7119fe7fc7",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/5622ba8acf82e0a9246317ede1b58c7119fe7fc7",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method public getTaskNameByTaskIds(taskIds Collection<String>) : Map<String,String> from class cn.iocoder.yudao.module.bpm.util.FlowableUtils to public getTaskNameByTaskIds(taskIds Collection<String>) : Map<String,String> from class cn.iocoder.yudao.module.bpm.service.task.BpmTaskServiceImpl",
            "leftSideLocations": [
                {
                    "filePath": "yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/util/FlowableUtils.java",
                    "startLine": 92,
                    "endLine": 103,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "public getTaskNameByTaskIds(taskIds Collection<String>) : Map<String,String>"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmTaskServiceImpl.java",
                    "startLine": 974,
                    "endLine": 985,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public getTaskNameByTaskIds(taskIds Collection<String>) : Map<String,String>"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "956f3aed-7d3d-473b-a2ad-d0c6337014c0",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 108,
                "lineStart": 20,
                "lineEnd": 127,
                "bodyLineStart": 20,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/util/FlowableUtils.java",
                "sourceCode": "/**\n * \u6d41\u7a0b\u5f15\u64ce\u5de5\u5177\u7c7b\u5c01\u88c5\n *\n * @author: linjinp\n * @create: 2019-12-24 13:51\n **/\npublic class FlowableUtils {\n\n    /**\n     * \u83b7\u53d6\u6d41\u7a0b\u540d\u79f0\n     *\n     * @param processDefinitionId\n     * @return\n     */\n    public static String getProcessDefinitionName(String processDefinitionId) {\n        RepositoryService repositoryService = SpringUtil.getBean(RepositoryService.class);\n        ProcessDefinition processDefinition = repositoryService.getProcessDefinition(processDefinitionId);\n        return processDefinition.getName();\n    }\n\n    public static ProcessDefinition getProcessDefinition(String processDefinitionId) {\n        RepositoryService repositoryService = SpringUtil.getBean(RepositoryService.class);\n        return repositoryService.getProcessDefinition(processDefinitionId);\n    }\n\n    /**\n     * \u83b7\u53d6\u8282\u70b9\u6570\u636e\n     *\n     * @param processInstanceId\n     * @param nodeId\n     * @return\n     */\n    public static FlowNode getFlowNode(String processInstanceId, String nodeId) {\n\n        RuntimeService runtimeService = SpringUtil.getBean(RuntimeService.class);\n        RepositoryService repositoryService = SpringUtil.getBean(RepositoryService.class);\n\n        String definitionld = runtimeService.createProcessInstanceQuery().processInstanceId(processInstanceId).singleResult().getProcessDefinitionId();        // \u83b7\u53d6bpm\uff08\u6a21\u578b\uff09\u5bf9\u8c61\n        BpmnModel bpmnModel = repositoryService.getBpmnModel(definitionld);\n        // \u4f20\u8282\u70b9\u5b9a\u4e49key\u83b7\u53d6\u5f53\u524d\u8282\u70b9\n        FlowNode flowNode = (FlowNode) bpmnModel.getFlowElement(nodeId);\n        return flowNode;\n    }\n\n    public static ExtensionElement generateFlowNodeIdExtension(String nodeId) {\n        ExtensionElement extensionElement = new ExtensionElement();\n        extensionElement.setElementText(nodeId);\n        extensionElement.setName(\"nodeId\");\n        extensionElement.setNamespacePrefix(\"flowable\");\n        extensionElement.setNamespace(\"nodeId\");\n        return extensionElement;\n    }\n\n    public static String getNodeIdFromExtension(FlowElement flowElement) {\n        Map<String, List<ExtensionElement>> extensionElements = flowElement.getExtensionElements();\n        return extensionElements.get(\"nodeId\").get(0).getElementText();\n    }\n\n    public static Long getStartUserIdFromProcessInstance(ProcessInstance instance) {\n        if (null == instance) {\n            return null;\n        }\n        return NumberUtils.parseLong(instance.getStartUserId());\n    }\n\n    public static String getTaskNameByTaskId(String taskId) {\n        TaskService taskService = SpringUtil.getBean(TaskService.class);\n        Task task = taskService.createTaskQuery().taskId(taskId).singleResult();\n        return task.getName();\n    }\n\n    // TODO @kyle\uff1aUtils \u91cc\u4e0d\u505a\u67e5\u8be2\uff1b\u53ef\u4ee5\u5c01\u88c5\u5230 bpmTaskService \u91cc\n    public static Map<String/* taskId */, String/* taskName */> getTaskNameByTaskIds(Collection<String> taskIds) {\n        TaskService taskService = SpringUtil.getBean(TaskService.class);\n        List<Task> tasks = taskService.createTaskQuery().taskIds(taskIds).list();\n        if (CollUtil.isNotEmpty(tasks)) {\n            Map<String/* taskId */, String/* taskName */> taskMap = new HashMap<>(tasks.size());\n            for (Task task : tasks) {\n                taskMap.putIfAbsent(task.getId(), task.getName());\n            }\n            return taskMap;\n        }\n        return Collections.emptyMap();\n    }\n\n    public static String getProcessInstanceNameByTaskId(String processInstanceId) {\n        RuntimeService runtimeService = SpringUtil.getBean(RuntimeService.class);\n        ProcessInstance processInstance = runtimeService.createProcessInstanceQuery()\n                .processInstanceId(processInstanceId)\n                .singleResult();\n        return processInstance.getName();\n    }\n\n    // TODO @kyle\uff1aUtils \u91cc\u4e0d\u505a\u67e5\u8be2\uff1b\u53ef\u4ee5\u5c01\u88c5\u5230 bpmTaskService \u91cc\n    public static Map<String/* processInstaneId */, String/* processInstaneName */> getProcessInstanceNameByTaskIds(Set<String> taskIds) {\n        RuntimeService runtimeService = SpringUtil.getBean(RuntimeService.class);\n        List<ProcessInstance> processInstances = runtimeService.createProcessInstanceQuery().processInstanceIds(taskIds).list();\n        if (CollUtil.isNotEmpty(processInstances)) {\n            Map<String/* processInstaneId */, String/* processInstaneName */> processInstaneMap = new HashMap<>(processInstances.size());\n            for (ProcessInstance processInstance : processInstances) {\n                processInstaneMap.putIfAbsent(processInstance.getId(), processInstance.getName());\n            }\n            return processInstaneMap;\n        }\n        return Collections.emptyMap();\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 0,
                "candidates": []
            },
            "processingTime": {
                "llmResponseTime": -1,
                "pluginProcessingTime": -1,
                "totalTime": 11842
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "getTaskNameByTaskId",
                            "method_signature": "public static String getTaskNameByTaskId(String taskId)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method performs a query to retrieve a task name by task ID, which is more appropriate for a service class that handles task-related operations."
                        },
                        {
                            "method_name": "getTaskNameByTaskIds",
                            "method_signature": "public static Map<String, String> getTaskNameByTaskIds(Collection<String> taskIds)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method performs a batch query to retrieve task names by task IDs, which should be encapsulated in a service class dedicated to task management."
                        },
                        {
                            "method_name": "getProcessInstanceNameByTaskId",
                            "method_signature": "public static String getProcessInstanceNameByTaskId(String processInstanceId)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method queries for a process instance name based on a task ID, which is better suited for a service class that manages process instances and tasks."
                        },
                        {
                            "method_name": "getProcessInstanceNameByTaskIds",
                            "method_signature": "public static Map<String, String> getProcessInstanceNameByTaskIds(Set<String> taskIds)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method retrieves process instance names based on a collection of task IDs, and should be part of a service class that handles process instance queries."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "getTaskNameByTaskId",
                            "method_signature": "public static String getTaskNameByTaskId(String taskId)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method performs a query to retrieve a task name by task ID, which is more appropriate for a service class that handles task-related operations."
                        },
                        {
                            "method_name": "getTaskNameByTaskIds",
                            "method_signature": "public static Map<String, String> getTaskNameByTaskIds(Collection<String> taskIds)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method performs a batch query to retrieve task names by task IDs, which should be encapsulated in a service class dedicated to task management."
                        },
                        {
                            "method_name": "getProcessInstanceNameByTaskId",
                            "method_signature": "public static String getProcessInstanceNameByTaskId(String processInstanceId)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method queries for a process instance name based on a task ID, which is more aligned with the responsibilities of a service class that manages process instances."
                        },
                        {
                            "method_name": "getProcessInstanceNameByTaskIds",
                            "method_signature": "public static Map<String, String> getProcessInstanceNameByTaskIds(Set<String> taskIds)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method retrieves process instance names based on a collection of task IDs, which should be handled by a service class focused on process instance management."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "getTaskNameByTaskId",
                            "method_signature": "public static String getTaskNameByTaskId(String taskId)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method performs a query to retrieve a task name by task ID, which is more aligned with task management functionality and should be encapsulated within a dedicated service class."
                        },
                        {
                            "method_name": "getTaskNameByTaskIds",
                            "method_signature": "public static Map<String, String> getTaskNameByTaskIds(Collection<String> taskIds)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method also performs a query to retrieve task names by a collection of task IDs, which should be handled by a task service class for better separation of concerns."
                        },
                        {
                            "method_name": "getProcessInstanceNameByTaskId",
                            "method_signature": "public static String getProcessInstanceNameByTaskId(String processInstanceId)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method queries for a process instance name based on a task ID, which is related to task management and should be moved to a task service class."
                        },
                        {
                            "method_name": "getProcessInstanceNameByTaskIds",
                            "method_signature": "public static Map<String, String> getProcessInstanceNameByTaskIds(Set<String> taskIds)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method retrieves process instance names based on a set of task IDs, which is a task-related operation and should be encapsulated within a task service class."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "getTaskNameByTaskId",
                            "method_signature": "public static String getTaskNameByTaskId(String taskId)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method performs a query to retrieve a task name by task ID, which is more appropriate for a service class that handles task-related operations."
                        },
                        {
                            "method_name": "getTaskNameByTaskIds",
                            "method_signature": "public static Map<String, String> getTaskNameByTaskIds(Collection<String> taskIds)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method performs a batch query to retrieve task names by task IDs, which should be encapsulated in a service class dedicated to task management."
                        },
                        {
                            "method_name": "getProcessInstanceNameByTaskId",
                            "method_signature": "public static String getProcessInstanceNameByTaskId(String processInstanceId)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method queries for a process instance name based on a task ID, which is better suited for a service class that manages process instances and tasks."
                        },
                        {
                            "method_name": "getProcessInstanceNameByTaskIds",
                            "method_signature": "public static Map<String, String> getProcessInstanceNameByTaskIds(Set<String> taskIds)",
                            "target_class": "BpmTaskService",
                            "rationale": "This method retrieves process instance names based on a collection of task IDs, and should be part of a service class that handles process instance queries."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "getTaskNameByTaskId",
                    "getTaskNameByTaskIds",
                    "getProcessInstanceNameByTaskId",
                    "getProcessInstanceNameByTaskIds"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "getTaskNameByTaskId": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "getTaskNameByTaskIds": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "getProcessInstanceNameByTaskId": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "getProcessInstanceNameByTaskIds": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "d8b2da8eed232143f04f90c43472bf51fb9e4e02",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/d8b2da8eed232143f04f90c43472bf51fb9e4e02",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method public hasPermission(bizType Integer, bizId Long, userId Long, levelEnum CrmPermissionLevelEnum) : boolean from class cn.iocoder.yudao.module.crm.framework.permission.core.util.CrmPermissionUtils to public hasPermission(bizType Integer, bizId Long, userId Long, levelEnum CrmPermissionLevelEnum) : boolean from class cn.iocoder.yudao.module.crm.service.permission.CrmPermissionServiceImpl",
            "leftSideLocations": [
                {
                    "filePath": "yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/permission/core/util/CrmPermissionUtils.java",
                    "startLine": 34,
                    "endLine": 47,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "public hasPermission(bizType Integer, bizId Long, userId Long, levelEnum CrmPermissionLevelEnum) : boolean"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/permission/CrmPermissionServiceImpl.java",
                    "startLine": 215,
                    "endLine": 220,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public hasPermission(bizType Integer, bizId Long, userId Long, levelEnum CrmPermissionLevelEnum) : boolean"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "faeccc0c-8a9d-44d0-b019-4411f04f7813",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 53,
                "lineStart": 17,
                "lineEnd": 69,
                "bodyLineStart": 17,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/permission/core/util/CrmPermissionUtils.java",
                "sourceCode": "/**\n * \u6570\u636e\u6743\u9650\u5de5\u5177\u7c7b\n *\n * @author HUIHUI\n */\npublic class CrmPermissionUtils {\n\n    /**\n     * \u6821\u9a8c\u7528\u6237\u662f\u5426\u662f CRM \u7ba1\u7406\u5458\n     *\n     * @return \u662f/\u5426\n     */\n    public static boolean isCrmAdmin() {\n        return SingletonManager.getPermissionApi().hasAnyRoles(getLoginUserId(), CrmPermissionRoleCodeEnum.CRM_ADMIN.getCode());\n    }\n\n    // TODO @puhui999\uff1a\u8fd9\u4e2a\u8c8c\u4f3c\u76f4\u63a5\u653e\u5230 CrmPermissionService \u4f1a\u66f4\u597d\uff1f\n    /**\n     * \u6821\u9a8c\u6743\u9650\n     *\n     * @param bizType   \u6570\u636e\u7c7b\u578b\uff0c\u5173\u8054 {@link CrmBizTypeEnum}\n     * @param bizId     \u6570\u636e\u7f16\u53f7\uff0c\u5173\u8054 {@link CrmBizTypeEnum} \u5bf9\u5e94\u6a21\u5757 DO#getId()\n     * @param userId    \u7528\u6237\u7f16\u53f7\n     * @param levelEnum \u6743\u9650\u7ea7\u522b\n     * @return boolean\n     */\n    public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum) {\n        List<CrmPermissionDO> permissionList = SingletonManager.getCrmPermissionService().getPermissionListByBiz(bizType, bizId);\n        return anyMatch(permissionList, permission ->\n                ObjUtil.equal(permission.getUserId(), userId) && ObjUtil.equal(permission.getLevel(), levelEnum.getLevel()));\n    }\n\n    /**\n     * \u9759\u6001\u5185\u90e8\u7c7b\u5b9e\u73b0\u5355\u4f8b\u83b7\u53d6\n     *\n     * @author HUIHUI\n     */\n    private static class SingletonManager {\n\n        private static final PermissionApi PERMISSION_API = SpringUtil.getBean(PermissionApi.class);\n        private static final CrmPermissionService CRM_PERMISSION_SERVICE = SpringUtil.getBean(CrmPermissionService.class);\n\n        public static PermissionApi getPermissionApi() {\n            return PERMISSION_API;\n        }\n\n        public static CrmPermissionService getCrmPermissionService() {\n            return CRM_PERMISSION_SERVICE;\n        }\n\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 0,
                "candidates": []
            },
            "processingTime": {
                "llmResponseTime": -1,
                "pluginProcessingTime": -1,
                "totalTime": 3851
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "isCrmAdmin",
                            "method_signature": "public static boolean isCrmAdmin()",
                            "target_class": "CrmPermissionService",
                            "rationale": "The isCrmAdmin() method checks if a user has the CRM admin role, which is a specific permission check that logically belongs in the CrmPermissionService class, as it deals directly with user permissions."
                        },
                        {
                            "method_name": "hasPermission",
                            "method_signature": "public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)",
                            "target_class": "CrmPermissionService",
                            "rationale": "The hasPermission() method is responsible for checking user permissions against business data, which is a core responsibility of the CrmPermissionService class. Moving it there would enhance cohesion."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "isCrmAdmin",
                            "method_signature": "public static boolean isCrmAdmin()",
                            "target_class": "CrmPermissionService",
                            "rationale": "The isCrmAdmin() method checks if a user has the CRM admin role, which is a specific permission check that logically belongs in the CrmPermissionService class, as it deals directly with user permissions."
                        },
                        {
                            "method_name": "hasPermission",
                            "method_signature": "public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)",
                            "target_class": "CrmPermissionService",
                            "rationale": "The hasPermission() method is responsible for checking user permissions against business data, which is a core responsibility of the CrmPermissionService class. Moving it there would enhance cohesion."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "isCrmAdmin",
                            "method_signature": "public static boolean isCrmAdmin()",
                            "target_class": "CrmPermissionService",
                            "rationale": "The isCrmAdmin() method checks if a user has the CRM admin role, which is a specific permission check that logically belongs in the CrmPermissionService class, as it deals directly with user permissions."
                        },
                        {
                            "method_name": "hasPermission",
                            "method_signature": "public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)",
                            "target_class": "CrmPermissionService",
                            "rationale": "The hasPermission() method is responsible for checking user permissions against business data, which is a core responsibility of the CrmPermissionService class. Moving it there would enhance cohesion."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "isCrmAdmin",
                            "method_signature": "public static boolean isCrmAdmin()",
                            "target_class": "CrmPermissionService",
                            "rationale": "The isCrmAdmin() method checks if a user has the CRM admin role, which is a specific permission check that logically belongs in the CrmPermissionService class, as it deals directly with user permissions."
                        },
                        {
                            "method_name": "hasPermission",
                            "method_signature": "public static boolean hasPermission(Integer bizType, Long bizId, Long userId, CrmPermissionLevelEnum levelEnum)",
                            "target_class": "CrmPermissionService",
                            "rationale": "The hasPermission() method is responsible for checking user permissions against business data, which is a core responsibility of the CrmPermissionService class. Moving it there would enhance cohesion."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "hasPermission",
                    "isCrmAdmin"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "hasPermission": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "isCrmAdmin": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "9caaa96e5b3678365d11f23b15861070f1d8f259",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/9caaa96e5b3678365d11f23b15861070f1d8f259",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method public isEndResult(result Integer) : boolean from class cn.iocoder.yudao.module.crm.service.contract.listener.CrmContractResultListener to public isEndResult(result Integer) : boolean from class cn.iocoder.yudao.module.crm.service.contract.CrmContractServiceImpl",
            "leftSideLocations": [
                {
                    "filePath": "yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/contract/listener/CrmContractResultListener.java",
                    "startLine": 49,
                    "endLine": 58,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "public isEndResult(result Integer) : boolean"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/contract/CrmContractServiceImpl.java",
                    "startLine": 302,
                    "endLine": 311,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public isEndResult(result Integer) : boolean"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "7f2a80e9-8cf0-40a3-88b1-5222b18bea48",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 46,
                "lineStart": 15,
                "lineEnd": 60,
                "bodyLineStart": 15,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/contract/listener/CrmContractResultListener.java",
                "sourceCode": "/**\n * \u5408\u540c\u5ba1\u6279\u7684\u7ed3\u679c\u7684\u76d1\u542c\u5668\u5b9e\u73b0\u7c7b\n *\n * @author HUIHUI\n */\n@Component\npublic class CrmContractResultListener implements BpmResultListenerApi {\n\n    @Resource\n    private CrmContractService contractService;\n\n    @Override\n    public String getProcessDefinitionKey() {\n        return CrmContractServiceImpl.CONTRACT_APPROVE;\n    }\n\n    @Override\n    public void onEvent(BpmResultListenerRespDTO event) {\n        boolean currentTaskFinish = isEndResult(event.getResult());\n        if (!currentTaskFinish) {\n            return;\n        }\n        if (ObjUtil.equal(event.getResult(), BpmProcessInstanceResultEnum.APPROVE.getResult())) {\n            event.setResult(CrmAuditStatusEnum.APPROVE.getStatus());\n        }\n        if (ObjUtil.equal(event.getResult(), BpmProcessInstanceResultEnum.REJECT.getResult())) {\n            event.setResult(CrmAuditStatusEnum.REJECT.getStatus());\n        }\n        if (ObjUtil.equal(event.getResult(), BpmProcessInstanceResultEnum.CANCEL.getResult())) {\n            event.setResult(CrmAuditStatusEnum.CANCEL.getStatus());\n        }\n        contractService.updateContractAuditStatus(event);\n    }\n\n    /**\n     * \u5224\u65ad\u8be5\u7ed3\u679c\u662f\u5426\u5904\u4e8e End \u6700\u7ec8\u7ed3\u679c\n     *\n     * @param result \u7ed3\u679c\n     * @return \u662f\u5426\n     */\n    public static boolean isEndResult(Integer result) {\n        return ObjectUtils.equalsAny(result, BpmProcessInstanceResultEnum.APPROVE.getResult(),\n                BpmProcessInstanceResultEnum.REJECT.getResult(), BpmProcessInstanceResultEnum.CANCEL.getResult());\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 0,
                "candidates": []
            },
            "processingTime": {
                "llmResponseTime": -1,
                "pluginProcessingTime": -1,
                "totalTime": 2372
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "isEndResult",
                            "method_signature": "public static boolean isEndResult(Integer result)",
                            "target_class": "BpmProcessInstanceResultEnum",
                            "rationale": "The isEndResult method checks if a result is one of the defined end results in the BpmProcessInstanceResultEnum. It would be more appropriate for this method to reside in the BpmProcessInstanceResultEnum class, as it directly relates to the enumeration of process results."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "isEndResult",
                            "method_signature": "public static boolean isEndResult(Integer result)",
                            "target_class": "BpmProcessInstanceResultEnum",
                            "rationale": "The method isEndResult() checks if a result is one of the defined end results, which is closely related to the BpmProcessInstanceResultEnum. Moving it to that class would encapsulate the logic related to process instance results."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "isEndResult",
                            "method_signature": "public static boolean isEndResult(Integer result)",
                            "target_class": "BpmProcessInstanceResultEnum",
                            "rationale": "The isEndResult method checks if a result is one of the defined end results in the BpmProcessInstanceResultEnum. It would be more appropriate for this method to reside in the BpmProcessInstanceResultEnum class, as it directly relates to the enumeration of process results."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "isEndResult",
                            "method_signature": "public static boolean isEndResult(Integer result)",
                            "target_class": "BpmProcessInstanceResultEnum",
                            "rationale": "The isEndResult method checks if a result is one of the defined end results in the BpmProcessInstanceResultEnum. It would be more appropriate for this method to reside in the BpmProcessInstanceResultEnum class, as it directly relates to the enumeration of process results."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "isEndResult"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "isEndResult": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "528a321f0aa178b4b36b764075371ca1d3ada7e0",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/528a321f0aa178b4b36b764075371ca1d3ada7e0",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method private parseCandidateStrategy(userTask FlowElement) : Integer from class cn.iocoder.yudao.module.bpm.framework.flowable.core.candidate.BpmTaskCandidateInvoker to public parseCandidateStrategy(userTask FlowElement) : Integer from class cn.iocoder.yudao.module.bpm.framework.flowable.core.util.BpmnModelUtils",
            "leftSideLocations": [
                {
                    "filePath": "yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/candidate/BpmTaskCandidateInvoker.java",
                    "startLine": 116,
                    "endLine": 119,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "private parseCandidateStrategy(userTask FlowElement) : Integer"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/util/BpmnModelUtils.java",
                    "startLine": 19,
                    "endLine": 22,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public parseCandidateStrategy(userTask FlowElement) : Integer"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "4fb9c782-5312-4d23-90a3-9e39f286d75c",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 106,
                "lineStart": 29,
                "lineEnd": 134,
                "bodyLineStart": 29,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/candidate/BpmTaskCandidateInvoker.java",
                "sourceCode": "/**\n * {@link BpmTaskCandidateStrategy} \u7684\u8c03\u7528\u8005\uff0c\u7528\u4e8e\u8c03\u7528\u5bf9\u5e94\u7684\u7b56\u7565\uff0c\u5b9e\u73b0\u4efb\u52a1\u7684\u5019\u9009\u4eba\u7684\u8ba1\u7b97\n *\n * @author \u828b\u9053\u6e90\u7801\n */\n@Slf4j\npublic class BpmTaskCandidateInvoker {\n\n    private final Map<BpmTaskCandidateStrategyEnum, BpmTaskCandidateStrategy> strategyMap = new HashMap<>();\n\n    private final AdminUserApi adminUserApi;\n\n    public BpmTaskCandidateInvoker(List<BpmTaskCandidateStrategy> strategyList,\n                                   AdminUserApi adminUserApi) {\n        strategyList.forEach(strategy -> {\n            BpmTaskCandidateStrategy oldStrategy = strategyMap.put(strategy.getStrategy(), strategy);\n            Assert.isNull(oldStrategy, \"\u7b56\u7565(%s) \u91cd\u590d\", strategy.getStrategy());\n        });\n        this.adminUserApi = adminUserApi;\n    }\n\n    /**\n     * \u6821\u9a8c\u6d41\u7a0b\u6a21\u578b\u7684\u4efb\u52a1\u5206\u914d\u89c4\u5219\u5168\u90e8\u90fd\u914d\u7f6e\u4e86\n     * \u76ee\u7684\uff1a\u5982\u679c\u6709\u89c4\u5219\u672a\u914d\u7f6e\uff0c\u4f1a\u5bfc\u81f4\u6d41\u7a0b\u4efb\u52a1\u627e\u4e0d\u5230\u8d1f\u8d23\u4eba\uff0c\u8fdb\u800c\u6d41\u7a0b\u65e0\u6cd5\u8fdb\u884c\u4e0b\u53bb\uff01\n     *\n     * @param bpmnBytes BPMN XML\n     */\n    public void validateBpmnConfig(byte[] bpmnBytes) {\n        BpmnModel bpmnModel = BpmnModelUtils.getBpmnModel(bpmnBytes);\n        assert bpmnModel != null;\n        List<UserTask> userTaskList = BpmnModelUtils.getBpmnModelElements(bpmnModel, UserTask.class);\n        // \u904d\u5386\u6240\u6709\u7684 UserTask\uff0c\u6821\u9a8c\u5ba1\u6279\u4eba\u914d\u7f6e\n        userTaskList.forEach(userTask -> {\n            // 1. \u975e\u7a7a\u6821\u9a8c\n            Integer strategy = parseCandidateStrategy(userTask);\n            String param = parseCandidateParam(userTask);\n            if (strategy == null || StrUtil.isBlank(param)) {\n                throw exception(MODEL_DEPLOY_FAIL_TASK_CANDIDATE_NOT_CONFIG, userTask.getName());\n            }\n            // 2. \u5177\u4f53\u7b56\u7565\u6821\u9a8c\n            getCandidateStrategy(strategy).validateParam(param);\n        });\n    }\n\n    /**\n     * \u8ba1\u7b97\u4efb\u52a1\u7684\u5019\u9009\u4eba\n     *\n     * @param execution \u6267\u884c\u4efb\u52a1\n     * @return \u7528\u6237\u7f16\u53f7\u96c6\u5408\n     */\n    public Set<Long> calculateUsers(DelegateExecution execution) {\n        // TODO \u828b\u827f\uff1a\u8fd9\u91cc\u9700\u8981\u91cd\u6784\n//        // 1. \u5148\u4ece\u63d0\u524d\u9009\u597d\u7684\u5ba1\u6279\u4eba\u4e2d\u83b7\u53d6\n//        List<Long> assignee = processInstanceService.getAssigneeByProcessInstanceIdAndTaskDefinitionKey(\n//                execution.getProcessInstanceId(), execution.getCurrentActivityId());\n//        if (CollUtil.isNotEmpty(assignee)) {\n//            // TODO @hai\uff1anew HashSet \u5373\u53ef\n//            return convertSet(assignee, Function.identity());\n//        }\n        Integer strategy = parseCandidateStrategy(execution.getCurrentFlowElement());\n        String param = parseCandidateParam(execution.getCurrentFlowElement());\n        // 1.1 \u8ba1\u7b97\u4efb\u52a1\u7684\u5019\u9009\u4eba\n        Set<Long> userIds = getCandidateStrategy(strategy).calculateUsers(execution, param);\n        // 1.2 \u79fb\u9664\u88ab\u7981\u7528\u7684\u7528\u6237\n        removeDisableUsers(userIds);\n\n        // 2. \u6821\u9a8c\u662f\u5426\u6709\u5019\u9009\u4eba\n        if (CollUtil.isEmpty(userIds)) {\n            log.error(\"[calculateUsers][\u6d41\u7a0b\u4efb\u52a1({}/{}/{}) \u4efb\u52a1\u89c4\u5219({}/{}) \u627e\u4e0d\u5230\u5019\u9009\u4eba]\", execution.getId(),\n                    execution.getProcessDefinitionId(), execution.getCurrentActivityId(), strategy, param);\n            throw exception(TASK_CREATE_FAIL_NO_CANDIDATE_USER);\n        }\n        return userIds;\n    }\n\n    @VisibleForTesting\n    void removeDisableUsers(Set<Long> assigneeUserIds) {\n        if (CollUtil.isEmpty(assigneeUserIds)) {\n            return;\n        }\n        Map<Long, AdminUserRespDTO> userMap = adminUserApi.getUserMap(assigneeUserIds);\n        assigneeUserIds.removeIf(id -> {\n            AdminUserRespDTO user = userMap.get(id);\n            return user == null || !CommonStatusEnum.ENABLE.getStatus().equals(user.getStatus());\n        });\n    }\n\n    private static Integer parseCandidateStrategy(FlowElement userTask) {\n        return NumberUtils.parseInt(userTask.getAttributeValue(\n                BpmnModelConstants.NAMESPACE, BpmnModelConstants.USER_TASK_CANDIDATE_STRATEGY));\n    }\n\n    private static String parseCandidateParam(FlowElement userTask) {\n        return userTask.getAttributeValue(\n                BpmnModelConstants.NAMESPACE, BpmnModelConstants.USER_TASK_CANDIDATE_PARAM);\n    }\n\n    private BpmTaskCandidateStrategy getCandidateStrategy(Integer strategy) {\n        BpmTaskCandidateStrategyEnum strategyEnum = BpmTaskCandidateStrategyEnum.valueOf(strategy);\n        Assert.notNull(strategyEnum, \"\u7b56\u7565(%s) \u4e0d\u5b58\u5728\", strategy);\n        BpmTaskCandidateStrategy strategyObj = strategyMap.get(strategyEnum);\n        Assert.notNull(strategyObj, \"\u7b56\u7565(%s) \u4e0d\u5b58\u5728\", strategy);\n        return strategyObj;\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 0,
                "candidates": []
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "removeDisableUsers",
                            "method_signature": "void removeDisableUsers(Set<Long> assigneeUserIds)",
                            "target_class": "UserService",
                            "rationale": "The method removeDisableUsers() is responsible for filtering out disabled users, which is more related to user management. Moving it to a UserService class would better encapsulate user-related operations."
                        },
                        {
                            "method_name": "parseCandidateStrategy",
                            "method_signature": "private static Integer parseCandidateStrategy(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "The method parseCandidateStrategy() is a utility function that parses attributes from a BPMN model. It should be moved to a utility class like BpmnUtils to separate concerns and improve code organization."
                        },
                        {
                            "method_name": "parseCandidateParam",
                            "method_signature": "private static String parseCandidateParam(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "Similar to parseCandidateStrategy(), the method parseCandidateParam() is also a utility function for parsing BPMN attributes. It should be moved to BpmnUtils for better organization and separation of concerns."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "removeDisableUsers",
                            "method_signature": "void removeDisableUsers(Set<Long> assigneeUserIds)",
                            "target_class": "UserService",
                            "rationale": "The method removeDisableUsers() is responsible for filtering out disabled users, which is more related to user management. Moving it to a UserService class would better encapsulate user-related operations."
                        },
                        {
                            "method_name": "parseCandidateStrategy",
                            "method_signature": "private static Integer parseCandidateStrategy(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "The method parseCandidateStrategy() is a utility function that parses attributes from a BPMN model. It should be moved to a utility class like BpmnUtils to separate concerns and improve code organization."
                        },
                        {
                            "method_name": "parseCandidateParam",
                            "method_signature": "private static String parseCandidateParam(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "Similar to parseCandidateStrategy(), the method parseCandidateParam() is also a utility function for parsing BPMN attributes. It should be moved to BpmnUtils for better organization and separation of concerns."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "removeDisableUsers",
                            "method_signature": "void removeDisableUsers(Set<Long> assigneeUserIds)",
                            "target_class": "UserService",
                            "rationale": "The method removeDisableUsers() is responsible for filtering out disabled users, which is more related to user management. Moving it to a UserService class would better encapsulate user-related operations."
                        },
                        {
                            "method_name": "parseCandidateStrategy",
                            "method_signature": "private static Integer parseCandidateStrategy(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "The method parseCandidateStrategy() is a utility function that parses attributes from a BPMN model. It should be moved to a utility class like BpmnUtils to separate concerns and improve code organization."
                        },
                        {
                            "method_name": "parseCandidateParam",
                            "method_signature": "private static String parseCandidateParam(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "Similar to parseCandidateStrategy(), the parseCandidateParam() method is also a utility function for parsing BPMN attributes. It should be moved to a utility class like BpmnUtils for better organization."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "removeDisableUsers",
                            "method_signature": "void removeDisableUsers(Set<Long> assigneeUserIds)",
                            "target_class": "UserService",
                            "rationale": "The method removeDisableUsers() is responsible for filtering out disabled users, which is more related to user management. Moving it to a UserService class would better encapsulate user-related operations."
                        },
                        {
                            "method_name": "parseCandidateStrategy",
                            "method_signature": "private static Integer parseCandidateStrategy(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "The method parseCandidateStrategy() is a utility function that parses attributes from a BPMN model. It should be moved to a utility class like BpmnUtils to separate concerns and improve code organization."
                        },
                        {
                            "method_name": "parseCandidateParam",
                            "method_signature": "private static String parseCandidateParam(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "Similar to parseCandidateStrategy(), the method parseCandidateParam() is also a utility function for parsing BPMN attributes. It should be moved to BpmnUtils for better organization and separation of concerns."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "parseCandidateStrategy",
                    "parseCandidateParam",
                    "removeDisableUsers"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "parseCandidateStrategy": {
                    "target_classes": [
                        {
                            "class_name": "BpmTaskCandidateStrategy",
                            "similarity_score": 0.03504998186163908
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "BpmTaskCandidateStrategy"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 87,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "528a321f0aa178b4b36b764075371ca1d3ada7e0",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/528a321f0aa178b4b36b764075371ca1d3ada7e0",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method private parseCandidateParam(userTask FlowElement) : String from class cn.iocoder.yudao.module.bpm.framework.flowable.core.candidate.BpmTaskCandidateInvoker to public parseCandidateParam(userTask FlowElement) : String from class cn.iocoder.yudao.module.bpm.framework.flowable.core.util.BpmnModelUtils",
            "leftSideLocations": [
                {
                    "filePath": "yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/candidate/BpmTaskCandidateInvoker.java",
                    "startLine": 121,
                    "endLine": 124,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "private parseCandidateParam(userTask FlowElement) : String"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/util/BpmnModelUtils.java",
                    "startLine": 24,
                    "endLine": 27,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public parseCandidateParam(userTask FlowElement) : String"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "4fb9c782-5312-4d23-90a3-9e39f286d75c",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 106,
                "lineStart": 29,
                "lineEnd": 134,
                "bodyLineStart": 29,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/candidate/BpmTaskCandidateInvoker.java",
                "sourceCode": "/**\n * {@link BpmTaskCandidateStrategy} \u7684\u8c03\u7528\u8005\uff0c\u7528\u4e8e\u8c03\u7528\u5bf9\u5e94\u7684\u7b56\u7565\uff0c\u5b9e\u73b0\u4efb\u52a1\u7684\u5019\u9009\u4eba\u7684\u8ba1\u7b97\n *\n * @author \u828b\u9053\u6e90\u7801\n */\n@Slf4j\npublic class BpmTaskCandidateInvoker {\n\n    private final Map<BpmTaskCandidateStrategyEnum, BpmTaskCandidateStrategy> strategyMap = new HashMap<>();\n\n    private final AdminUserApi adminUserApi;\n\n    public BpmTaskCandidateInvoker(List<BpmTaskCandidateStrategy> strategyList,\n                                   AdminUserApi adminUserApi) {\n        strategyList.forEach(strategy -> {\n            BpmTaskCandidateStrategy oldStrategy = strategyMap.put(strategy.getStrategy(), strategy);\n            Assert.isNull(oldStrategy, \"\u7b56\u7565(%s) \u91cd\u590d\", strategy.getStrategy());\n        });\n        this.adminUserApi = adminUserApi;\n    }\n\n    /**\n     * \u6821\u9a8c\u6d41\u7a0b\u6a21\u578b\u7684\u4efb\u52a1\u5206\u914d\u89c4\u5219\u5168\u90e8\u90fd\u914d\u7f6e\u4e86\n     * \u76ee\u7684\uff1a\u5982\u679c\u6709\u89c4\u5219\u672a\u914d\u7f6e\uff0c\u4f1a\u5bfc\u81f4\u6d41\u7a0b\u4efb\u52a1\u627e\u4e0d\u5230\u8d1f\u8d23\u4eba\uff0c\u8fdb\u800c\u6d41\u7a0b\u65e0\u6cd5\u8fdb\u884c\u4e0b\u53bb\uff01\n     *\n     * @param bpmnBytes BPMN XML\n     */\n    public void validateBpmnConfig(byte[] bpmnBytes) {\n        BpmnModel bpmnModel = BpmnModelUtils.getBpmnModel(bpmnBytes);\n        assert bpmnModel != null;\n        List<UserTask> userTaskList = BpmnModelUtils.getBpmnModelElements(bpmnModel, UserTask.class);\n        // \u904d\u5386\u6240\u6709\u7684 UserTask\uff0c\u6821\u9a8c\u5ba1\u6279\u4eba\u914d\u7f6e\n        userTaskList.forEach(userTask -> {\n            // 1. \u975e\u7a7a\u6821\u9a8c\n            Integer strategy = parseCandidateStrategy(userTask);\n            String param = parseCandidateParam(userTask);\n            if (strategy == null || StrUtil.isBlank(param)) {\n                throw exception(MODEL_DEPLOY_FAIL_TASK_CANDIDATE_NOT_CONFIG, userTask.getName());\n            }\n            // 2. \u5177\u4f53\u7b56\u7565\u6821\u9a8c\n            getCandidateStrategy(strategy).validateParam(param);\n        });\n    }\n\n    /**\n     * \u8ba1\u7b97\u4efb\u52a1\u7684\u5019\u9009\u4eba\n     *\n     * @param execution \u6267\u884c\u4efb\u52a1\n     * @return \u7528\u6237\u7f16\u53f7\u96c6\u5408\n     */\n    public Set<Long> calculateUsers(DelegateExecution execution) {\n        // TODO \u828b\u827f\uff1a\u8fd9\u91cc\u9700\u8981\u91cd\u6784\n//        // 1. \u5148\u4ece\u63d0\u524d\u9009\u597d\u7684\u5ba1\u6279\u4eba\u4e2d\u83b7\u53d6\n//        List<Long> assignee = processInstanceService.getAssigneeByProcessInstanceIdAndTaskDefinitionKey(\n//                execution.getProcessInstanceId(), execution.getCurrentActivityId());\n//        if (CollUtil.isNotEmpty(assignee)) {\n//            // TODO @hai\uff1anew HashSet \u5373\u53ef\n//            return convertSet(assignee, Function.identity());\n//        }\n        Integer strategy = parseCandidateStrategy(execution.getCurrentFlowElement());\n        String param = parseCandidateParam(execution.getCurrentFlowElement());\n        // 1.1 \u8ba1\u7b97\u4efb\u52a1\u7684\u5019\u9009\u4eba\n        Set<Long> userIds = getCandidateStrategy(strategy).calculateUsers(execution, param);\n        // 1.2 \u79fb\u9664\u88ab\u7981\u7528\u7684\u7528\u6237\n        removeDisableUsers(userIds);\n\n        // 2. \u6821\u9a8c\u662f\u5426\u6709\u5019\u9009\u4eba\n        if (CollUtil.isEmpty(userIds)) {\n            log.error(\"[calculateUsers][\u6d41\u7a0b\u4efb\u52a1({}/{}/{}) \u4efb\u52a1\u89c4\u5219({}/{}) \u627e\u4e0d\u5230\u5019\u9009\u4eba]\", execution.getId(),\n                    execution.getProcessDefinitionId(), execution.getCurrentActivityId(), strategy, param);\n            throw exception(TASK_CREATE_FAIL_NO_CANDIDATE_USER);\n        }\n        return userIds;\n    }\n\n    @VisibleForTesting\n    void removeDisableUsers(Set<Long> assigneeUserIds) {\n        if (CollUtil.isEmpty(assigneeUserIds)) {\n            return;\n        }\n        Map<Long, AdminUserRespDTO> userMap = adminUserApi.getUserMap(assigneeUserIds);\n        assigneeUserIds.removeIf(id -> {\n            AdminUserRespDTO user = userMap.get(id);\n            return user == null || !CommonStatusEnum.ENABLE.getStatus().equals(user.getStatus());\n        });\n    }\n\n    private static Integer parseCandidateStrategy(FlowElement userTask) {\n        return NumberUtils.parseInt(userTask.getAttributeValue(\n                BpmnModelConstants.NAMESPACE, BpmnModelConstants.USER_TASK_CANDIDATE_STRATEGY));\n    }\n\n    private static String parseCandidateParam(FlowElement userTask) {\n        return userTask.getAttributeValue(\n                BpmnModelConstants.NAMESPACE, BpmnModelConstants.USER_TASK_CANDIDATE_PARAM);\n    }\n\n    private BpmTaskCandidateStrategy getCandidateStrategy(Integer strategy) {\n        BpmTaskCandidateStrategyEnum strategyEnum = BpmTaskCandidateStrategyEnum.valueOf(strategy);\n        Assert.notNull(strategyEnum, \"\u7b56\u7565(%s) \u4e0d\u5b58\u5728\", strategy);\n        BpmTaskCandidateStrategy strategyObj = strategyMap.get(strategyEnum);\n        Assert.notNull(strategyObj, \"\u7b56\u7565(%s) \u4e0d\u5b58\u5728\", strategy);\n        return strategyObj;\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 0,
                "candidates": []
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "removeDisableUsers",
                            "method_signature": "void removeDisableUsers(Set<Long> assigneeUserIds)",
                            "target_class": "UserService",
                            "rationale": "The method removeDisableUsers() is responsible for filtering out disabled users, which is more related to user management. Moving it to a UserService class would better encapsulate user-related operations."
                        },
                        {
                            "method_name": "parseCandidateStrategy",
                            "method_signature": "private static Integer parseCandidateStrategy(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "The method parseCandidateStrategy() is a utility function that parses attributes from a BPMN model. It should be moved to a utility class like BpmnUtils to separate concerns and improve code organization."
                        },
                        {
                            "method_name": "parseCandidateParam",
                            "method_signature": "private static String parseCandidateParam(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "Similar to parseCandidateStrategy(), the method parseCandidateParam() is also a utility function for parsing BPMN attributes. It should be moved to BpmnUtils for better organization and separation of concerns."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "removeDisableUsers",
                            "method_signature": "void removeDisableUsers(Set<Long> assigneeUserIds)",
                            "target_class": "UserService",
                            "rationale": "The method removeDisableUsers() is responsible for filtering out disabled users, which is more related to user management. Moving it to a UserService class would better encapsulate user-related operations."
                        },
                        {
                            "method_name": "parseCandidateStrategy",
                            "method_signature": "private static Integer parseCandidateStrategy(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "The method parseCandidateStrategy() is a utility function that parses attributes from a BPMN model. It should be moved to a utility class like BpmnUtils to separate concerns and improve code organization."
                        },
                        {
                            "method_name": "parseCandidateParam",
                            "method_signature": "private static String parseCandidateParam(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "Similar to parseCandidateStrategy(), the method parseCandidateParam() is also a utility function for parsing BPMN attributes. It should be moved to BpmnUtils for better organization and separation of concerns."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "removeDisableUsers",
                            "method_signature": "void removeDisableUsers(Set<Long> assigneeUserIds)",
                            "target_class": "UserService",
                            "rationale": "The method removeDisableUsers() is responsible for filtering out disabled users, which is more related to user management. Moving it to a UserService class would better encapsulate user-related operations."
                        },
                        {
                            "method_name": "parseCandidateStrategy",
                            "method_signature": "private static Integer parseCandidateStrategy(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "The method parseCandidateStrategy() is a utility function that parses attributes from a BPMN model. It should be moved to a utility class like BpmnUtils to separate concerns and improve code organization."
                        },
                        {
                            "method_name": "parseCandidateParam",
                            "method_signature": "private static String parseCandidateParam(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "Similar to parseCandidateStrategy(), the parseCandidateParam() method is also a utility function for parsing BPMN attributes. It should be moved to a utility class like BpmnUtils for better organization."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "removeDisableUsers",
                            "method_signature": "void removeDisableUsers(Set<Long> assigneeUserIds)",
                            "target_class": "UserService",
                            "rationale": "The method removeDisableUsers() is responsible for filtering out disabled users, which is more related to user management. Moving it to a UserService class would better encapsulate user-related operations."
                        },
                        {
                            "method_name": "parseCandidateStrategy",
                            "method_signature": "private static Integer parseCandidateStrategy(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "The method parseCandidateStrategy() is a utility function that parses attributes from a BPMN model. It should be moved to a utility class like BpmnUtils to separate concerns and improve code organization."
                        },
                        {
                            "method_name": "parseCandidateParam",
                            "method_signature": "private static String parseCandidateParam(FlowElement userTask)",
                            "target_class": "BpmnUtils",
                            "rationale": "Similar to parseCandidateStrategy(), the method parseCandidateParam() is also a utility function for parsing BPMN attributes. It should be moved to BpmnUtils for better organization and separation of concerns."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "parseCandidateStrategy",
                    "parseCandidateParam",
                    "removeDisableUsers"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "parseCandidateStrategy": {
                    "target_classes": [
                        {
                            "class_name": "BpmTaskCandidateStrategy",
                            "similarity_score": 0.03504998186163908
                        }
                    ],
                    "target_classes_sorted_by_llm": [
                        "BpmTaskCandidateStrategy"
                    ],
                    "llm_response_time": 0,
                    "similarity_computation_time": 87,
                    "similarity_metric": "cosine"
                }
            }
        }
    },
    {
        "repository": "https://github.com/YunaiV/ruoyi-vue-pro.git",
        "sha1": "7f0485e872ca78e6b98e8bbfa1a9af39da475611",
        "url": "https://github.com/YunaiV/ruoyi-vue-pro/commit/7f0485e872ca78e6b98e8bbfa1a9af39da475611",
        "move_method_refactoring": {
            "type": "Move Method",
            "description": "Move Method public writeAttachment(response HttpServletResponse, filename String, content byte[]) : void from class cn.iocoder.yudao.framework.common.util.servlet.ServletUtils to public writeAttachment(response HttpServletResponse, filename String, content byte[]) : void from class cn.iocoder.yudao.module.infra.framework.file.core.utils.FileTypeUtils",
            "leftSideLocations": [
                {
                    "filePath": "yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/servlet/ServletUtils.java",
                    "startLine": 38,
                    "endLine": 51,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "original method declaration",
                    "codeElement": "public writeAttachment(response HttpServletResponse, filename String, content byte[]) : void"
                }
            ],
            "rightSideLocations": [
                {
                    "filePath": "yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/framework/file/core/utils/FileTypeUtils.java",
                    "startLine": 54,
                    "endLine": 74,
                    "startColumn": 5,
                    "endColumn": 6,
                    "codeElementType": "METHOD_DECLARATION",
                    "description": "moved method declaration",
                    "codeElement": "public writeAttachment(response HttpServletResponse, filename String, content byte[]) : void"
                }
            ],
            "isStatic": true
        },
        "telemetry": {
            "id": "b6951f10-a84c-4222-8ae3-e46f874983e3",
            "hostFunctionTelemetryData": {
                "hostFunctionSize": 101,
                "lineStart": 19,
                "lineEnd": 119,
                "bodyLineStart": 19,
                "language": "java",
                "filePath": "/Users/abhiram/Documents/TBE/evaluation_projects/ruoyi-vue-pro/yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/servlet/ServletUtils.java",
                "sourceCode": "/**\n * \u5ba2\u6237\u7aef\u5de5\u5177\u7c7b\n *\n * @author \u828b\u9053\u6e90\u7801\n */\npublic class ServletUtils {\n\n    /**\n     * \u8fd4\u56de JSON \u5b57\u7b26\u4e32\n     *\n     * @param response \u54cd\u5e94\n     * @param object   \u5bf9\u8c61\uff0c\u4f1a\u5e8f\u5217\u5316\u6210 JSON \u5b57\u7b26\u4e32\n     */\n    @SuppressWarnings(\"deprecation\") // \u5fc5\u987b\u4f7f\u7528 APPLICATION_JSON_UTF8_VALUE\uff0c\u5426\u5219\u4f1a\u4e71\u7801\n    public static void writeJSON(HttpServletResponse response, Object object) {\n        String content = JsonUtils.toJsonString(object);\n        JakartaServletUtil.write(response, content, MediaType.APPLICATION_JSON_UTF8_VALUE);\n    }\n\n    /**\n     * \u8fd4\u56de\u9644\u4ef6\n     *\n     * @param response \u54cd\u5e94\n     * @param filename \u6587\u4ef6\u540d\n     * @param content  \u9644\u4ef6\u5185\u5bb9\n     */\n    public static void writeAttachment(HttpServletResponse response, String filename, byte[] content) throws IOException {\n        // \u8bbe\u7f6e header \u548c contentType\n        response.setHeader(\"Content-Disposition\", \"attachment;filename=\" + URLEncoder.encode(filename, \"UTF-8\"));\n        response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n        // \u8f93\u51fa\u9644\u4ef6\n        IoUtil.write(response.getOutputStream(), false, content);\n    }\n\n    /**\n     * @param request \u8bf7\u6c42\n     * @return ua\n     */\n    public static String getUserAgent(HttpServletRequest request) {\n        String ua = request.getHeader(\"User-Agent\");\n        return ua != null ? ua : \"\";\n    }\n\n    /**\n     * \u83b7\u5f97\u8bf7\u6c42\n     *\n     * @return HttpServletRequest\n     */\n    public static HttpServletRequest getRequest() {\n        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();\n        if (!(requestAttributes instanceof ServletRequestAttributes)) {\n            return null;\n        }\n        return ((ServletRequestAttributes) requestAttributes).getRequest();\n    }\n\n    public static String getUserAgent() {\n        HttpServletRequest request = getRequest();\n        if (request == null) {\n            return null;\n        }\n        return getUserAgent(request);\n    }\n\n    public static String getClientIP() {\n        HttpServletRequest request = getRequest();\n        if (request == null) {\n            return null;\n        }\n        return JakartaServletUtil.getClientIP(request);\n    }\n\n    public static boolean isJsonRequest(ServletRequest request) {\n        return StrUtil.startWithIgnoreCase(request.getContentType(), MediaType.APPLICATION_JSON_VALUE);\n    }\n\n    public static String getBody(HttpServletRequest request) {\n        // \u53ea\u6709\u5728 json \u8bf7\u6c42\u5728\u8bfb\u53d6\uff0c\u56e0\u4e3a\u53ea\u6709 CacheRequestBodyFilter \u624d\u4f1a\u8fdb\u884c\u7f13\u5b58\uff0c\u652f\u6301\u91cd\u590d\u8bfb\u53d6\n        if (isJsonRequest(request)) {\n            return JakartaServletUtil.getBody(request);\n        }\n        return null;\n    }\n\n    public static byte[] getBodyBytes(HttpServletRequest request) {\n        // \u53ea\u6709\u5728 json \u8bf7\u6c42\u5728\u8bfb\u53d6\uff0c\u56e0\u4e3a\u53ea\u6709 CacheRequestBodyFilter \u624d\u4f1a\u8fdb\u884c\u7f13\u5b58\uff0c\u652f\u6301\u91cd\u590d\u8bfb\u53d6\n        if (isJsonRequest(request)) {\n            return JakartaServletUtil.getBodyBytes(request);\n        }\n        return null;\n    }\n\n    public static String getClientIP(HttpServletRequest request) {\n        return JakartaServletUtil.getClientIP(request);\n    }\n\n    public static Map<String, String> getParamMap(HttpServletRequest request) {\n        return JakartaServletUtil.getParamMap(request);\n    }\n\n}"
            },
            "candidatesTelemetryData": {
                "numberOfSuggestions": 0,
                "candidates": []
            },
            "processingTime": {
                "llmResponseTime": -1,
                "pluginProcessingTime": -1,
                "totalTime": 3111
            },
            "iterationData": [
                {
                    "iteration_num": 1,
                    "suggested_move_methods": [
                        {
                            "method_name": "getUserAgent",
                            "method_signature": "public static String getUserAgent(HttpServletRequest request)",
                            "target_class": "UserAgentUtil",
                            "rationale": "The method getUserAgent() is primarily concerned with extracting the User-Agent header from the request. Moving it to a dedicated UserAgentUtil class would improve separation of concerns and enhance code organization."
                        },
                        {
                            "method_name": "getClientIP",
                            "method_signature": "public static String getClientIP(HttpServletRequest request)",
                            "target_class": "ClientIPUtil",
                            "rationale": "The method getClientIP() is focused on retrieving the client's IP address from the request. It would be more appropriate to move this method to a ClientIPUtil class to encapsulate related functionality."
                        },
                        {
                            "method_name": "getParamMap",
                            "method_signature": "public static Map<String, String> getParamMap(HttpServletRequest request)",
                            "target_class": "RequestParamUtil",
                            "rationale": "The method getParamMap() deals with extracting parameters from the request. Moving it to a RequestParamUtil class would enhance clarity and maintainability by grouping request parameter handling methods together."
                        },
                        {
                            "method_name": "writeAttachment",
                            "method_signature": "public static void writeAttachment(HttpServletResponse response, String filename, byte[] content)",
                            "target_class": "AttachmentUtil",
                            "rationale": "The method writeAttachment() is specifically for handling file attachments in HTTP responses. Moving it to an AttachmentUtil class would better encapsulate file handling logic."
                        },
                        {
                            "method_name": "writeJSON",
                            "method_signature": "public static void writeJSON(HttpServletResponse response, Object object)",
                            "target_class": "JsonResponseUtil",
                            "rationale": "The method writeJSON() is focused on writing JSON responses. Moving it to a JsonResponseUtil class would improve the organization of response handling methods related to JSON."
                        },
                        {
                            "method_name": "getBody",
                            "method_signature": "public static String getBody(HttpServletRequest request)",
                            "target_class": "RequestBodyUtil",
                            "rationale": "The method getBody() is responsible for reading the body of the request. Moving it to a RequestBodyUtil class would centralize request body handling functionality."
                        },
                        {
                            "method_name": "getBodyBytes",
                            "method_signature": "public static byte[] getBodyBytes(HttpServletRequest request)",
                            "target_class": "RequestBodyUtil",
                            "rationale": "Similar to getBody(), the getBodyBytes() method is also focused on reading the request body. It should be moved to the RequestBodyUtil class to maintain consistency and organization."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 2,
                    "suggested_move_methods": [
                        {
                            "method_name": "getUserAgent",
                            "method_signature": "public static String getUserAgent(HttpServletRequest request)",
                            "target_class": "UserAgentUtil",
                            "rationale": "The method getUserAgent() is primarily concerned with extracting the User-Agent header from the request. Moving it to a dedicated UserAgentUtil class would improve separation of concerns and enhance code organization."
                        },
                        {
                            "method_name": "getClientIP",
                            "method_signature": "public static String getClientIP(HttpServletRequest request)",
                            "target_class": "ClientIPUtil",
                            "rationale": "The method getClientIP() is focused on retrieving the client's IP address from the request. It would be more appropriate to move this method to a ClientIPUtil class, which can handle all client IP-related functionalities."
                        },
                        {
                            "method_name": "getParamMap",
                            "method_signature": "public static Map<String, String> getParamMap(HttpServletRequest request)",
                            "target_class": "RequestParamUtil",
                            "rationale": "The method getParamMap() deals with extracting parameters from the request. Moving it to a RequestParamUtil class would enhance clarity and maintainability by grouping all request parameter handling methods together."
                        },
                        {
                            "method_name": "writeAttachment",
                            "method_signature": "public static void writeAttachment(HttpServletResponse response, String filename, byte[] content)",
                            "target_class": "AttachmentUtil",
                            "rationale": "The method writeAttachment() is specifically for handling file attachments in HTTP responses. It should be moved to an AttachmentUtil class to better encapsulate attachment-related functionalities."
                        },
                        {
                            "method_name": "writeJSON",
                            "method_signature": "public static void writeJSON(HttpServletResponse response, Object object)",
                            "target_class": "JsonResponseUtil",
                            "rationale": "The method writeJSON() is responsible for writing JSON responses. Moving it to a JsonResponseUtil class would improve the organization of code related to JSON handling and response formatting."
                        }
                    ],
                    "llm_response_time": 0
                },
                {
                    "iteration_num": 3,
                    "suggested_move_methods": [
                        {
                            "method_name": "getUserAgent",
                            "method_signature": "public static String getUserAgent(HttpServletRequest request)",
                            "target_class": "UserAgentUtil",
                            "rationale": "The method getUserAgent() is primarily concerned with extracting the User-Agent header from the request. Moving it to a dedicated UserAgentUtil class would enhance separation of concerns and improve code organization."
                        },
                        {
                            "method_name": "getClientIP",
                            "method_signature": "public static String getClientIP(HttpServletRequest request)",
                            "target_class": "ClientIPUtil",
                            "rationale": "The method getClientIP() is focused on retrieving the client's IP address from the request. It would be more appropriate to move this method to a ClientIPUtil class, which can handle all client IP-related functionalities."
                        },
                        {
                            "method_name": "getParamMap",
                            "method_signature": "public static Map<String, String> getParamMap(HttpServletRequest request)",
                            "target_class": "RequestParamUtil",
                            "rationale": "The method getParamMap() deals with extracting parameters from the request. Moving it to a RequestParamUtil class would help in organizing request-related utility methods in one place."
                        },
                        {
                            "method_name": "writeAttachment",
                            "method_signature": "public static void writeAttachment(HttpServletResponse response, String filename, byte[] content)",
                            "target_class": "AttachmentUtil",
                            "rationale": "The method writeAttachment() is specifically for handling file attachments in HTTP responses. It should be moved to an AttachmentUtil class to better encapsulate attachment-related functionalities."
                        },
                        {
                            "method_name": "writeJSON",
                            "method_signature": "public static void writeJSON(HttpServletResponse response, Object object)",
                            "target_class": "JsonResponseUtil",
                            "rationale": "The method writeJSON() is responsible for writing JSON responses. Moving it to a JsonResponseUtil class would improve clarity and organization by grouping all JSON-related response utilities together."
                        },
                        {
                            "method_name": "getBody",
                            "method_signature": "public static String getBody(HttpServletRequest request)",
                            "target_class": "RequestBodyUtil",
                            "rationale": "The method getBody() is focused on reading the body of the request. It would be more appropriate to move this method to a RequestBodyUtil class, which can handle all request body-related functionalities."
                        },
                        {
                            "method_name": "getBodyBytes",
                            "method_signature": "public static byte[] getBodyBytes(HttpServletRequest request)",
                            "target_class": "RequestBodyUtil",
                            "rationale": "Similar to getBody(), the getBodyBytes() method is also concerned with reading the request body. Moving it to the RequestBodyUtil class would maintain consistency and organization."
                        }
                    ],
                    "llm_response_time": 1
                },
                {
                    "iteration_num": -1,
                    "suggested_move_methods": [
                        {
                            "method_name": "getUserAgent",
                            "method_signature": "public static String getUserAgent(HttpServletRequest request)",
                            "target_class": "UserAgentUtil",
                            "rationale": "The method getUserAgent() is primarily concerned with extracting the User-Agent header from the request. Moving it to a dedicated UserAgentUtil class would improve separation of concerns and enhance code organization."
                        },
                        {
                            "method_name": "getClientIP",
                            "method_signature": "public static String getClientIP(HttpServletRequest request)",
                            "target_class": "ClientIPUtil",
                            "rationale": "The method getClientIP() is focused on retrieving the client's IP address from the request. It would be more appropriate to move this method to a ClientIPUtil class to encapsulate related functionality."
                        },
                        {
                            "method_name": "getParamMap",
                            "method_signature": "public static Map<String, String> getParamMap(HttpServletRequest request)",
                            "target_class": "RequestParamUtil",
                            "rationale": "The method getParamMap() deals with extracting parameters from the request. Moving it to a RequestParamUtil class would enhance clarity and maintainability by grouping request parameter handling methods together."
                        },
                        {
                            "method_name": "writeAttachment",
                            "method_signature": "public static void writeAttachment(HttpServletResponse response, String filename, byte[] content)",
                            "target_class": "AttachmentUtil",
                            "rationale": "The method writeAttachment() is specifically for handling file attachments in HTTP responses. Moving it to an AttachmentUtil class would better encapsulate file handling logic."
                        },
                        {
                            "method_name": "writeJSON",
                            "method_signature": "public static void writeJSON(HttpServletResponse response, Object object)",
                            "target_class": "JsonResponseUtil",
                            "rationale": "The method writeJSON() is focused on writing JSON responses. Moving it to a JsonResponseUtil class would improve the organization of response handling methods related to JSON."
                        },
                        {
                            "method_name": "getBody",
                            "method_signature": "public static String getBody(HttpServletRequest request)",
                            "target_class": "RequestBodyUtil",
                            "rationale": "The method getBody() is responsible for reading the body of the request. Moving it to a RequestBodyUtil class would centralize request body handling functionality."
                        },
                        {
                            "method_name": "getBodyBytes",
                            "method_signature": "public static byte[] getBodyBytes(HttpServletRequest request)",
                            "target_class": "RequestBodyUtil",
                            "rationale": "Similar to getBody(), the getBodyBytes() method is also focused on reading the request body. It should be moved to the RequestBodyUtil class to maintain consistency and organization."
                        }
                    ],
                    "llm_response_time": 0
                }
            ],
            "llmMethodPriority": {
                "priority_method_names": [
                    "getUserAgent",
                    "getClientIP",
                    "getParamMap",
                    "getBody",
                    "getBodyBytes",
                    "writeJSON",
                    "writeAttachment"
                ],
                "llm_response_time": 0
            },
            "targetClassMap": {
                "getUserAgent": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "getClientIP": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "getParamMap": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "getBody": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "getBodyBytes": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "writeJSON": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                },
                "writeAttachment": {
                    "target_classes": [],
                    "target_classes_sorted_by_llm": [],
                    "llm_response_time": 0,
                    "similarity_computation_time": 0,
                    "similarity_metric": "cosine"
                }
            }
        }
    }
]